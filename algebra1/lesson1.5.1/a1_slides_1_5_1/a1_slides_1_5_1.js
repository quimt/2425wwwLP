/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3019902462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019901520 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019901807 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019900628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019900397 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019900738 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019899464 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019899883 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3003122207 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122116 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121716 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3003121717 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121706 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121711 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121701 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3003121702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121691 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121690 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121697 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121696 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019902813 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019903169 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019903466 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852129713 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3103785246 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103785629 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103785444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3170894195 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893922 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3170893923 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893912 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893918 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893917 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3170893888 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019898883 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852141977 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141881 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141747 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141651 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141421 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141287 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852141191 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852129727 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2852129728 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852129717 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852129723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852129722 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852140922 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852142378 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852142104 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852140688 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852140438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852140187 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852139936 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852139553 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852139311 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852139068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852138825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852138463 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852138213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852137962 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852137711 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852137327 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852137085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852136842 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852136599 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852136237 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852135987 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852135736 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852135485 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852135101 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852134859 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852134616 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852134373 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852134011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852133761 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852133510 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852133257 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852132873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852132631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852132388 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852132144 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2466250774 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852131688 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852131687 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852131519 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885683363 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885683275 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885683200 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885683126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885682866 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885683865 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885683796 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885683526 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852131533 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2852131534 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852131523 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2852131529 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852131528 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885684108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885682717 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885682523 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902460220 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902459897 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681984 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681722 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681500 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885682352 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885682083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902459763 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902459426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919236608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919236338 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919236339 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919236315 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919236334 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919236333 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2919236317 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902458764 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458371 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019903908 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019904593 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3019904959 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919236031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785021112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2801795108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235842 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235587 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785020420 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785018975 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785019395 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785019912 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785018683 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2986344814 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344695 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344477 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2986344478 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344451 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2986344473 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344472 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344453 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902459292 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458898 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017988 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2785017989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017862 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017861 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785017984 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017983 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785017976 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2835350260 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2835349978 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852129501 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572395 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2835349915 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2835349510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1996489761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1996489762 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1996489757 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489756 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852129170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852128539 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489789 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1996489790 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1996489785 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489784 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852128299 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852128826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852128623 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852129097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852128905 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852128160 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852127959 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852126997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126796 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852127357 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852127160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852127814 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489807 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1996489808 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI1996489803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489802 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1996489599 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1996489600 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1996489595 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489594 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852127608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2835350562 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2835350314 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1124073483 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124073498 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1124073495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1124073492 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420661 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1996489775 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1996489776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1996489771 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1996489770 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3103785060 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3036677258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3036676831 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3036676404 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3036676108 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316800 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3137339529 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121900 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121915 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1409286321 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529176 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI2516582404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1677721603 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1677721604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1677721605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1677721606 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI956301391 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103784965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265923 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1644169152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1644169149 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1644169146 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167180 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1644167178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1644167177 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644168037 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1644168034 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1644168031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1644167182 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1157627907 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1644167229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1644167226 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1644167223 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162205 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162204 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162203 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162202 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162201 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162200 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162199 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162198 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162197 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162196 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162195 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162194 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162193 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162192 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162191 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162190 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162189 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162188 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162187 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162186 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162185 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162184 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162183 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162182 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162142 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162301 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162298 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1795162297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162177 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162300 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162247 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162136 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162236 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162137 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162235 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162234 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162141 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162233 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162232 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162138 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162231 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162129 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162127 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1795162229 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162228 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162128 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162227 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162239 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162139 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162238 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162130 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162252 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162251 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162140 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1795162237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1694498821 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
NTI134217747.base = NTI134217746;
var NNI1694498821 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onlyChildren", len: 0, typ: NTI33554466, name: "onlyChildren", sons: null}, 
{kind: 1, offset: "lazyFunc", len: 0, typ: NTI1694498822, name: "lazyFunc", sons: null}, 
{kind: 1, offset: "lazy", len: 0, typ: NTI33554466, name: "lazy", sons: null}]};
NTI1694498821.node = NNI1694498821;
var NNI1795162223 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1795162223.node = NNI1795162223;
NTI1795162223.base = NTI33555173;
NTI1795162126.base = NTI1795162223;
NTI1795162130.base = NTI1795162237;
NTI1795162252.base = NTI1795162130;
var NNI1795162251 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1795162252, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1795162251.node = NNI1795162251;
NTI1795162251.base = NTI1795162237;
NTI1795162140.base = NTI1795162251;
var NNI1795162250 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1795162250.node = NNI1795162250;
NTI1795162250.base = NTI1795162237;
NTI1795162139.base = NTI1795162250;
NTI1795162238.base = NTI1795162139;
NTI1795162239.base = NTI1795162139;
var NNI1795162237 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1795162126, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1795162140, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1795162238, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1795162239, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1795162237.node = NNI1795162237;
NTI1795162128.base = NTI1795162226;
NTI1795162227.base = NTI1795162128;
NTI1795162228.base = NTI1795162128;
NTI1795162229.base = NTI1795162128;
var NNI1795162127 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1795162127, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1795162127, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1795162127, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1795162127, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1795162127, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1795162127, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1795162127, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1795162127, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1795162127, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1795162127, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1795162127, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1795162127, name: "NotationNode", len: 0, sons: null}}};
NTI1795162127.node = NNI1795162127;
var NNI1795162249 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1795162249.node = NNI1795162249;
NTI1795162249.base = NTI1795162237;
NTI1795162138.base = NTI1795162249;
NTI1795162231.base = NTI1795162138;
NTI1795162232.base = NTI1795162140;
var NNI1795162253 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1795162253.node = NNI1795162253;
NTI1795162253.base = NTI1795162237;
NTI1795162141.base = NTI1795162253;
NTI1795162233.base = NTI1795162141;
NTI1795162234.base = NTI1795162130;
var NNI1795162248 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1795162248.node = NNI1795162248;
NTI1795162248.base = NTI1795162237;
NTI1795162137.base = NTI1795162248;
NTI1795162235.base = NTI1795162137;
var NNI1795162247 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1795162247.node = NNI1795162247;
NTI1795162247.base = NTI1795162237;
NTI1795162136.base = NTI1795162247;
NTI1795162236.base = NTI1795162136;
var NNI1795162297 = {kind: 1, offset: "then", len: 0, typ: NTI1795162298, name: "then", sons: null};
NTI1795162297.node = NNI1795162297;
NTI1795162177.base = NTI1795162297;
var NNI1795162300 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1795162177, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1795162301, name: "onloadingdone", sons: null}]};
NTI1795162300.node = NNI1795162300;
NTI1795162178.base = NTI1795162300;
var NNI1795162230 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1795162130, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1795162130, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1795162130, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1795162130, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1795162231, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1795162232, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1795162233, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1795162234, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1795162235, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1795162236, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1795162178, name: "fonts", sons: null}]};
NTI1795162230.node = NNI1795162230;
NTI1795162230.base = NTI1795162226;
NTI1795162129.base = NTI1795162230;
var NNI1795162254 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1795162254.node = NNI1795162254;
NTI1795162254.base = NTI33555173;
NTI1795162142.base = NTI1795162254;
var NNI1795162226 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1795162227, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1795162228, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1795162229, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1795162128, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1795162128, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1795162128, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1795162127, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1795162128, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1795162128, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1795162128, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1795162129, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1795162142, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1795162130, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1795162226.node = NNI1795162226;
var NNI1795162181 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1795162182, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1795162183, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1795162184, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1795162185, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1795162186, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1795162187, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1795162188, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1795162189, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1795162190, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1795162191, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1795162192, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1795162193, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1795162194, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1795162195, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1795162196, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1795162197, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1795162198, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1795162199, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1795162200, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1795162201, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1795162202, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1795162203, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1795162204, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1795162205, name: "onloadend", sons: null}]};
NTI1795162181.node = NNI1795162181;
NTI1795162181.base = NTI33555173;
NTI1795162226.base = NTI1795162181;
NTI1795162237.base = NTI1795162226;
NTI1694498821.base = NTI1795162237;
var NNI1644167229 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1157627907, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1644167182, name: "Field2", sons: null}]};
NTI1644167229.node = NNI1644167229;
NTI1644167226.base = NTI1644167229;
var NNI1644167223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1644167226, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1644167223.node = NNI1644167223;
NTI1694498819.base = NTI1694498821;
var NNI1644167178 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "uniqCompId", len: 0, typ: NTI33554449, name: "uniqCompId", sons: null}, 
{kind: 1, offset: "isCreated", len: 0, typ: NTI33554466, name: "isCreated", sons: null}, 
{kind: 1, offset: "slot", len: 0, typ: NTI1644167180, name: "slot", sons: null}, 
{kind: 1, offset: "slotData", len: 0, typ: NTI1694498819, name: "slotData", sons: null}, 
{kind: 1, offset: "created", len: 0, typ: NTI1644167182, name: "created", sons: null}, 
{kind: 1, offset: "exited", len: 0, typ: NTI1644167182, name: "exited", sons: null}, 
{kind: 1, offset: "rendered", len: 0, typ: NTI1644167182, name: "rendered", sons: null}, 
{kind: 1, offset: "pageHide", len: 0, typ: NTI1644167182, name: "pageHide", sons: null}, 
{kind: 1, offset: "pageShow", len: 0, typ: NTI1644167182, name: "pageShow", sons: null}, 
{kind: 1, offset: "beforeUpdated", len: 0, typ: NTI1644167182, name: "beforeUpdated", sons: null}, 
{kind: 1, offset: "updated", len: 0, typ: NTI1644167182, name: "updated", sons: null}]};
NTI1644167178.node = NNI1644167178;
NTI1644167177.base = NTI1644167178;
var NNI1644168037 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1157627907, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554450, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1644167177, name: "Field2", sons: null}]};
NTI1644168037.node = NNI1644168037;
NTI1644168034.base = NTI1644168037;
var NNI1644168031 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1644168034, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1644168031.node = NNI1644168031;
var NNI1644169152 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1157627907, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554450, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI1644169152.node = NNI1644169152;
NTI1644169149.base = NTI1644169152;
var NNI1644169146 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1644169149, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1644169146.node = NNI1644169146;
var NNI2013265923 = {kind: 1, offset: "lang", len: 0, typ: NTI33554449, name: "lang", sons: null};
NTI2013265923.node = NNI2013265923;
var NNI3103784965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3103784965.node = NNI3103784965;
var NNI956301397 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI956301391, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI956301397.node = NNI956301397;
var NNI1677721604 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554466, name: "Field2", sons: null}]};
NTI1677721604.node = NNI1677721604;
NTI1677721605.base = NTI1677721604;
var NNI1677721603 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1677721603, name: "modeCaseSensitive", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1677721603, name: "modeCaseInsensitive", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1677721603, name: "modeStyleInsensitive", len: 0, sons: null}}};
NTI1677721603.node = NNI1677721603;
var NNI1677721606 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1677721605, name: "data", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI1677721603, name: "mode", sons: null}]};
NTI1677721606.node = NNI1677721606;
NTI1677721606.base = NTI33555173;
var NNI2516582404 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI2516582403, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI2516582403, name: "a1", sons: null}]};
NTI2516582404.node = NNI2516582404;
var NNI788529176 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI788529176.node = NNI788529176;
NTI1409286321.base = NTI33554435;
NTI3003121900.base = NTI33554449;
NTI3003121915.base = NTI3003121900;
NTI3137339529.base = NTI33554449;
NTI503316800.base = NTI33554449;
var NNI3036676108 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3036676108.node = NNI3036676108;
NTI3036676108.base = NTI1644167178;
var NNI3036676404 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3036676404.node = NNI3036676404;
NTI3036676404.base = NTI1644167178;
var NNI3036676831 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3036676831.node = NNI3036676831;
NTI3036676831.base = NTI1644167178;
var NNI3036677258 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3036677258.node = NNI3036677258;
NTI3036677258.base = NTI1644167178;
NTI1996489776.base = NTI1996489775;
var NNI1996489771 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI1996489776, name: "watchers", sons: null}]};
NTI1996489771.node = NNI1996489771;
NTI1996489770.base = NTI1996489771;
var NNI3103785060 = {kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null};
NTI3103785060.node = NNI3103785060;
NTI3103785060.base = NTI1644167178;
NTI721420661.base = NTI33554449;
NTI1124073483.base = NTI33554449;
var NNI1124073498 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1157627907, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1124073483, name: "Field2", sons: null}]};
NTI1124073498.node = NNI1124073498;
NTI1124073495.base = NTI1124073498;
var NNI1124073492 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1124073495, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1124073492.node = NNI1124073492;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555178;
var NNI2835350314 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "file", len: 0, typ: NTI1996489770, name: "file", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2835350314.node = NNI2835350314;
NTI2835350314.base = NTI1644167178;
var NNI2835350562 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2835350562.node = NNI2835350562;
NTI1996489600.base = NTI1996489599;
var NNI1996489595 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI1996489600, name: "watchers", sons: null}]};
NTI1996489595.node = NNI1996489595;
NTI1996489594.base = NTI1996489595;
NTI1996489808.base = NTI1996489807;
var NNI1996489803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554445, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI1996489808, name: "watchers", sons: null}]};
NTI1996489803.node = NNI1996489803;
NTI1996489802.base = NTI1996489803;
var NNI2852127608 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null}, 
{kind: 1, offset: "stretch", len: 0, typ: NTI1996489802, name: "stretch", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2852127608.node = NNI2852127608;
NTI2852127608.base = NTI1644167178;
var NNI2852127814 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852127814.node = NNI2852127814;
var NNI2852127160 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null}, 
{kind: 1, offset: "stretch", len: 0, typ: NTI1996489802, name: "stretch", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}]};
NTI2852127160.node = NNI2852127160;
NTI2852127160.base = NTI1644167178;
var NNI2852127357 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852127357.node = NNI2852127357;
var NNI2852126796 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2852126796.node = NNI2852126796;
NTI2852126796.base = NTI1644167178;
var NNI2852126997 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852126997.node = NNI2852126997;
var NNI2852127959 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "stretch", len: 0, typ: NTI1996489802, name: "stretch", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2852127959.node = NNI2852127959;
NTI2852127959.base = NTI1644167178;
var NNI2852128160 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852128160.node = NNI2852128160;
var NNI2852128905 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "scale", len: 0, typ: NTI1996489802, name: "scale", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}]};
NTI2852128905.node = NNI2852128905;
NTI2852128905.base = NTI1644167178;
var NNI2852129097 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852129097.node = NNI2852129097;
var NNI2852128623 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI1996489770, name: "height", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}]};
NTI2852128623.node = NNI2852128623;
NTI2852128623.base = NTI1644167178;
var NNI2852128826 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852128826.node = NNI2852128826;
NTI1996489790.base = NTI1996489789;
var NNI1996489785 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554450, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI1996489790, name: "watchers", sons: null}]};
NTI1996489785.node = NNI1996489785;
NTI1996489784.base = NTI1996489785;
var NNI2852128299 = {kind: 1, offset: "css", len: 0, typ: NTI1996489784, name: "css", sons: null};
NTI2852128299.node = NNI2852128299;
NTI2852128299.base = NTI1644167178;
var NNI2852128539 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852128539.node = NNI2852128539;
NTI1996489762.base = NTI1996489761;
var NNI1996489757 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554466, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI1996489762, name: "watchers", sons: null}]};
NTI1996489757.node = NNI1996489757;
NTI1996489756.base = NTI1996489757;
var NNI2852129170 = {kind: 1, offset: "p", len: 0, typ: NTI1996489756, name: "p", sons: null};
NTI2852129170.node = NNI2852129170;
NTI2852129170.base = NTI1644167178;
var NNI2835349510 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "stem", len: 0, typ: NTI1996489770, name: "stem", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI1996489802, name: "scale", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2835349510.node = NNI2835349510;
NTI2835349510.base = NTI1644167178;
var NNI2835349915 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2835349915.node = NNI2835349915;
var NNI2818572395 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "teacher", len: 0, typ: NTI1996489594, name: "teacher", sons: null}, 
{kind: 1, offset: "student", len: 0, typ: NTI1996489594, name: "student", sons: null}, 
{kind: 1, offset: "ell", len: 0, typ: NTI1996489594, name: "ell", sons: null}, 
{kind: 1, offset: "math", len: 0, typ: NTI1996489594, name: "math", sons: null}, 
{kind: 1, offset: "mono", len: 0, typ: NTI1996489594, name: "mono", sons: null}]};
NTI2818572395.node = NNI2818572395;
NTI2818572395.base = NTI1644167178;
var NNI2852129501 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2852129501.node = NNI2852129501;
NTI2852129501.base = NTI1644167178;
var NNI2835349978 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "stem", len: 0, typ: NTI1996489770, name: "stem", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2835349978.node = NNI2835349978;
NTI2835349978.base = NTI1644167178;
var NNI2835350260 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2835350260.node = NNI2835350260;
var NNI2785017862 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "prob", len: 0, typ: NTI33554435, name: "prob", sons: null}, 
{kind: 1, offset: "part", len: 0, typ: NTI33554435, name: "part", sons: null}, 
{kind: 1, offset: "subpart", len: 0, typ: NTI33554435, name: "subpart", sons: null}, 
{kind: 1, offset: "answerchoice", len: 0, typ: NTI33554435, name: "answerchoice", sons: null}]};
NTI2785017862.node = NNI2785017862;
NTI2785017861.base = NTI2785017862;
NTI2785017989.base = NTI2785017988;
var NNI2785017984 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2785017861, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI2785017989, name: "watchers", sons: null}]};
NTI2785017984.node = NNI2785017984;
NTI2785017983.base = NTI2785017984;
var NNI2785017976 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}]};
NTI2785017976.node = NNI2785017976;
NTI2785017976.base = NTI1644167178;
var NNI2902458898 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "boxWidth", len: 0, typ: NTI1996489770, name: "boxWidth", sons: null}, 
{kind: 1, offset: "dotWidth", len: 0, typ: NTI1996489770, name: "dotWidth", sons: null}, 
{kind: 1, offset: "n_x", len: 0, typ: NTI1996489802, name: "n_x", sons: null}, 
{kind: 1, offset: "n_y", len: 0, typ: NTI1996489802, name: "n_y", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489770, name: "height", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2902458898.node = NNI2902458898;
NTI2902458898.base = NTI1644167178;
var NNI2902459292 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2902459292.node = NNI2902459292;
var NNI2986344451 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2986344451, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2986344451, name: "border-radius: 2em; border: 0.2em solid var(--ts-color-body);", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2986344451, name: "border-radius: 1em 0em 1em 0em; border: 0.2em var(--ts-color-subtle); border-style: double double dashed dashed;", len: 0, sons: null}}};
NTI2986344451.node = NNI2986344451;
NTI2986344478.base = NTI2986344477;
var NNI2986344473 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2986344451, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI2986344478, name: "watchers", sons: null}]};
NTI2986344473.node = NNI2986344473;
NTI2986344472.base = NTI2986344473;
var NNI2986344453 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489784, name: "width", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489784, name: "class", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489784, name: "css", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI2986344472, name: "mode", sons: null}]};
NTI2986344453.node = NNI2986344453;
NTI2986344453.base = NTI1644167178;
var NNI2986344695 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2986344695.node = NNI2986344695;
var NNI2986344814 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2986344814.node = NNI2986344814;
var NNI2785018683 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}]};
NTI2785018683.node = NNI2785018683;
NTI2785018683.base = NTI1644167178;
var NNI2785019912 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}]};
NTI2785019912.node = NNI2785019912;
NTI2785019912.base = NTI1644167178;
var NNI2785019395 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}]};
NTI2785019395.node = NNI2785019395;
NTI2785019395.base = NTI1644167178;
var NNI2785018975 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489770, name: "text", sons: null}]};
NTI2785018975.node = NNI2785018975;
NTI2785018975.base = NTI1644167178;
var NNI2785020420 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}]};
NTI2785020420.node = NNI2785020420;
NTI2785020420.base = NTI1644167178;
var NNI2919235587 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "query", len: 0, typ: NTI1996489784, name: "query", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489784, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489784, name: "height", sons: null}]};
NTI2919235587.node = NNI2919235587;
NTI2919235587.base = NTI1644167178;
var NNI2919235842 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2919235842.node = NNI2919235842;
var NNI2801795108 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795108.node = NNI2801795108;
NTI2801795108.base = NTI1644167178;
var NNI2785021112 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI2785017983, name: "counter", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1996489594, name: "count", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}]};
NTI2785021112.node = NNI2785021112;
NTI2785021112.base = NTI1644167178;
var NNI2919236031 = {kind: 1, offset: "query", len: 0, typ: NTI1996489784, name: "query", sons: null};
NTI2919236031.node = NNI2919236031;
NTI2919236031.base = NTI1644167178;
var NNI3019904959 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019904959.node = NNI3019904959;
NTI3019904959.base = NTI1644167178;
var NNI3019904593 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019904593.node = NNI3019904593;
NTI3019904593.base = NTI1644167178;
var NNI3019903908 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019903908.node = NNI3019903908;
NTI3019903908.base = NTI1644167178;
var NNI2902458371 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "boxWidth", len: 0, typ: NTI1996489770, name: "boxWidth", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI1996489770, name: "lineWidth", sons: null}, 
{kind: 1, offset: "n_x", len: 0, typ: NTI1996489802, name: "n_x", sons: null}, 
{kind: 1, offset: "n_y", len: 0, typ: NTI1996489802, name: "n_y", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489770, name: "height", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2902458371.node = NNI2902458371;
NTI2902458371.base = NTI1644167178;
var NNI2902458764 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2902458764.node = NNI2902458764;
var NNI2919236315 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2919236315, name: "video", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919236315, name: "song", len: 0, sons: null}}};
NTI2919236315.node = NNI2919236315;
NTI2919236339.base = NTI2919236338;
var NNI2919236334 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2919236315, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI2919236339, name: "watchers", sons: null}]};
NTI2919236334.node = NNI2919236334;
NTI2919236333.base = NTI2919236334;
var NNI2919236317 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "url", len: 0, typ: NTI1996489784, name: "url", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489784, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489784, name: "height", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI2919236333, name: "mode", sons: null}]};
NTI2919236317.node = NNI2919236317;
NTI2919236317.base = NTI1644167178;
var NNI2919236608 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2919236608.node = NNI2919236608;
var NNI2902459426 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lineSpacing", len: 0, typ: NTI1996489770, name: "lineSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1996489770, name: "lineHeight", sons: null}, 
{kind: 1, offset: "nLines", len: 0, typ: NTI1996489802, name: "nLines", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489770, name: "height", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2902459426.node = NNI2902459426;
NTI2902459426.base = NTI1644167178;
var NNI2902459763 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2902459763.node = NNI2902459763;
var NNI2885682083 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "prompt", len: 0, typ: NTI1996489770, name: "prompt", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2885682083.node = NNI2885682083;
NTI2885682083.base = NTI1644167178;
var NNI2885682352 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885682352.node = NNI2885682352;
var NNI2885681500 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "prompt", len: 0, typ: NTI1996489770, name: "prompt", sons: null}, 
{kind: 1, offset: "prefix", len: 0, typ: NTI1996489770, name: "prefix", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2885681500.node = NNI2885681500;
NTI2885681500.base = NTI1644167178;
var NNI2885681722 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885681722.node = NNI2885681722;
var NNI2885681984 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885681984.node = NNI2885681984;
var NNI2902459897 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lineSpacing", len: 0, typ: NTI1996489770, name: "lineSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1996489770, name: "lineHeight", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489770, name: "height", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2902459897.node = NNI2902459897;
NTI2902459897.base = NTI1644167178;
var NNI2902460220 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2902460220.node = NNI2902460220;
var NNI2885682523 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2885682523.node = NNI2885682523;
NTI2885682523.base = NTI1644167178;
var NNI2885682717 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885682717.node = NNI2885682717;
NTI2852131523.base = NTI33554449;
NTI2852131534.base = NTI2852131533;
var NNI2852131529 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852131523, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI2852131534, name: "watchers", sons: null}]};
NTI2852131529.node = NNI2852131529;
NTI2852131528.base = NTI2852131529;
var NNI2885684108 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "words", len: 0, typ: NTI2852131528, name: "words", sons: null}, 
{kind: 1, offset: "letters", len: 0, typ: NTI1996489770, name: "letters", sons: null}, 
{kind: 1, offset: "sep", len: 0, typ: NTI1996489770, name: "sep", sons: null}]};
NTI2885684108.node = NNI2885684108;
NTI2885684108.base = NTI1644167178;
var NNI2885683526 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI1996489784, name: "text", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489784, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489784, name: "class", sons: null}]};
NTI2885683526.node = NNI2885683526;
NTI2885683526.base = NTI1644167178;
var NNI2885683796 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885683796.node = NNI2885683796;
var NNI2885683865 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885683865.node = NNI2885683865;
var NNI2885682866 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "word", len: 0, typ: NTI1996489770, name: "word", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI1996489802, name: "scale", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489784, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489784, name: "class", sons: null}]};
NTI2885682866.node = NNI2885682866;
NTI2885682866.base = NTI1644167178;
var NNI2885683126 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885683126.node = NNI2885683126;
var NNI2885683200 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885683200.node = NNI2885683200;
var NNI2885683275 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885683275.node = NNI2885683275;
var NNI2885683363 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2885683363.node = NNI2885683363;
var NNI2852131519 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defines", len: 0, typ: NTI2852131528, name: "defines", sons: null}, 
{kind: 1, offset: "perPage", len: 0, typ: NTI1996489594, name: "perPage", sons: null}]};
NTI2852131519.node = NNI2852131519;
NTI2852131519.base = NTI1644167178;
NTI2852131688.base = NTI33554449;
NTI2852131687.base = NTI2852131688;
NTI2466250774.base = NTI33554435;
var NNI2852132144 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852132144.node = NNI2852132144;
var NNI2852132388 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852132388.node = NNI2852132388;
var NNI2852132631 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852132631.node = NNI2852132631;
var NNI2852132873 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852132873.node = NNI2852132873;
var NNI2852133257 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852133257.node = NNI2852133257;
var NNI2852133510 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852133510.node = NNI2852133510;
var NNI2852133761 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852133761.node = NNI2852133761;
var NNI2852134011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852134011.node = NNI2852134011;
var NNI2852134373 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852134373.node = NNI2852134373;
var NNI2852134616 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852134616.node = NNI2852134616;
var NNI2852134859 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852134859.node = NNI2852134859;
var NNI2852135101 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852135101.node = NNI2852135101;
var NNI2852135485 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852135485.node = NNI2852135485;
var NNI2852135736 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852135736.node = NNI2852135736;
var NNI2852135987 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852135987.node = NNI2852135987;
var NNI2852136237 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852136237.node = NNI2852136237;
var NNI2852136599 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852136599.node = NNI2852136599;
var NNI2852136842 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852136842.node = NNI2852136842;
var NNI2852137085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852137085.node = NNI2852137085;
var NNI2852137327 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852137327.node = NNI2852137327;
var NNI2852137711 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852137711.node = NNI2852137711;
var NNI2852137962 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852137962.node = NNI2852137962;
var NNI2852138213 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852138213.node = NNI2852138213;
var NNI2852138463 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852138463.node = NNI2852138463;
var NNI2852138825 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852138825.node = NNI2852138825;
var NNI2852139068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852139068.node = NNI2852139068;
var NNI2852139311 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852139311.node = NNI2852139311;
var NNI2852139553 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852139553.node = NNI2852139553;
var NNI2852139936 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852139936.node = NNI2852139936;
var NNI2852140187 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852140187.node = NNI2852140187;
var NNI2852140438 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852140438.node = NNI2852140438;
var NNI2852140688 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852140688.node = NNI2852140688;
var NNI2852142104 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null}, 
{kind: 1, offset: "withinPage", len: 0, typ: NTI1996489756, name: "withinPage", sons: null}]};
NTI2852142104.node = NNI2852142104;
NTI2852142104.base = NTI1644167178;
var NNI2852142378 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852142378.node = NNI2852142378;
NTI2852129717.base = NTI1694498819;
NTI2852129728.base = NTI2852129727;
var NNI2852129723 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852129717, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI2852129728, name: "watchers", sons: null}]};
NTI2852129723.node = NNI2852129723;
NTI2852129722.base = NTI2852129723;
var NNI2852140922 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI2852129722, name: "content", sons: null}, 
{kind: 1, offset: "ncols", len: 0, typ: NTI1996489594, name: "ncols", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1996489770, name: "class", sons: null}]};
NTI2852140922.node = NNI2852140922;
NTI2852140922.base = NTI1644167178;
var NNI2852141191 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141191.node = NNI2852141191;
var NNI2852141287 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141287.node = NNI2852141287;
var NNI2852141421 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141421.node = NNI2852141421;
var NNI2852141517 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141517.node = NNI2852141517;
var NNI2852141651 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141651.node = NNI2852141651;
var NNI2852141747 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141747.node = NNI2852141747;
var NNI2852141881 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141881.node = NNI2852141881;
var NNI2852141977 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2852141977.node = NNI2852141977;
var NNI3019898883 = {kind: 1, offset: "title", len: 0, typ: NTI1996489784, name: "title", sons: null};
NTI3019898883.node = NNI3019898883;
NTI3019898883.base = NTI1644167178;
var NNI3170893912 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554445, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554445, name: "Field1", sons: null}]};
NTI3170893912.node = NNI3170893912;
NTI3170893923.base = NTI3170893922;
var NNI3170893918 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3170893912, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI3170893923, name: "watchers", sons: null}]};
NTI3170893918.node = NNI3170893918;
NTI3170893917.base = NTI3170893918;
var NNI3170893888 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseId", len: 0, typ: NTI1996489784, name: "baseId", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1996489784, name: "id", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI1996489594, name: "index", sons: null}, 
{kind: 1, offset: "boardWidth", len: 0, typ: NTI1996489770, name: "boardWidth", sons: null}, 
{kind: 1, offset: "boardHeight", len: 0, typ: NTI1996489770, name: "boardHeight", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1996489784, name: "commands", sons: null}, 
{kind: 1, offset: "center", len: 0, typ: NTI3170893917, name: "center", sons: null}, 
{kind: 1, offset: "coordRads", len: 0, typ: NTI3170893917, name: "coordRads", sons: null}]};
NTI3170893888.node = NNI3170893888;
NTI3170893888.base = NTI1644167178;
var NNI3170894195 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3170894195.node = NNI3170894195;
var NNI3103785444 = {kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null};
NTI3103785444.node = NNI3103785444;
NTI3103785444.base = NTI1644167178;
var NNI3103785629 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3103785629.node = NNI3103785629;
var NNI3103785246 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3103785246.node = NNI3103785246;
var NNI2852129713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI2852129722, name: "content", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}]};
NTI2852129713.node = NNI2852129713;
NTI2852129713.base = NTI1644167178;
var NNI3019903466 = {kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null};
NTI3019903466.node = NNI3019903466;
NTI3019903466.base = NTI1644167178;
var NNI3019903169 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019903169.node = NNI3019903169;
NTI3019903169.base = NTI1644167178;
var NNI3019902813 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019902813.node = NNI3019902813;
NTI3019902813.base = NTI1644167178;
NTI3003121691.base = NTI33554449;
NTI3003121690.base = NTI3003121691;
NTI3003121702.base = NTI3003121701;
var NNI3003121697 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3003121690, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI3003121702, name: "watchers", sons: null}]};
NTI3003121697.node = NNI3003121697;
NTI3003121696.base = NTI3003121697;
var NNI3003121667 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "i", len: 0, typ: NTI33554435, name: "i", sons: null}, 
{kind: 1, offset: "j", len: 0, typ: NTI33554435, name: "j", sons: null}, 
{kind: 1, offset: "shade", len: 0, typ: NTI33554449, name: "shade", sons: null}]};
NTI3003121667.node = NNI3003121667;
NTI3003121706.base = NTI3003121667;
NTI3003121717.base = NTI3003121716;
var NNI3003121712 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3003121706, name: "val", sons: null}, 
{kind: 1, offset: "watchers", len: 0, typ: NTI3003121717, name: "watchers", sons: null}]};
NTI3003121712.node = NNI3003121712;
NTI3003121711.base = NTI3003121712;
var NNI3003121668 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "width", len: 0, typ: NTI1996489770, name: "width", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1996489770, name: "height", sons: null}, 
{kind: 1, offset: "nx", len: 0, typ: NTI1996489802, name: "nx", sons: null}, 
{kind: 1, offset: "ny", len: 0, typ: NTI1996489802, name: "ny", sons: null}, 
{kind: 1, offset: "css", len: 0, typ: NTI1996489770, name: "css", sons: null}, 
{kind: 1, offset: "fill", len: 0, typ: NTI1996489770, name: "fill", sons: null}, 
{kind: 1, offset: "fills", len: 0, typ: NTI3003121696, name: "fills", sons: null}, 
{kind: 1, offset: "shades", len: 0, typ: NTI3003121711, name: "shades", sons: null}, 
{kind: 1, offset: "stroke", len: 0, typ: NTI1996489770, name: "stroke", sons: null}]};
NTI3003121668.node = NNI3003121668;
NTI3003121668.base = NTI1644167178;
var NNI3003122116 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3003122116.node = NNI3003122116;
var NNI3003122207 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3003122207.node = NNI3003122207;
var NNI3019899883 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "word", len: 0, typ: NTI1996489770, name: "word", sons: null}, 
{kind: 1, offset: "definition", len: 0, typ: NTI1996489770, name: "definition", sons: null}]};
NTI3019899883.node = NNI3019899883;
NTI3019899883.base = NTI1644167178;
var NNI3019899464 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019899464.node = NNI3019899464;
NTI3019899464.base = NTI1644167178;
var NNI3019900738 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3019900738.node = NNI3019900738;
NTI3019900738.base = NTI1644167178;
var NNI3019900397 = {kind: 1, offset: "prompt", len: 0, typ: NTI1996489784, name: "prompt", sons: null};
NTI3019900397.node = NNI3019900397;
NTI3019900397.base = NTI1644167178;
var NNI3019900628 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3019900628.node = NNI3019900628;
var NNI3019901807 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ncols", len: 0, typ: NTI1996489594, name: "ncols", sons: null}, 
{kind: 1, offset: "stretch", len: 0, typ: NTI1996489802, name: "stretch", sons: null}, 
{kind: 1, offset: "nrows", len: 0, typ: NTI1996489594, name: "nrows", sons: null}]};
NTI3019901807.node = NNI3019901807;
NTI3019901807.base = NTI1644167178;
var NNI3019901520 = {kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null};
NTI3019901520.node = NNI3019901520;
NTI3019901520.base = NTI1644167178;
var NNI3019902462 = {kind: 1, offset: "n", len: 0, typ: NTI1996489594, name: "n", sons: null};
NTI3019902462.node = NNI3019902462;
NTI3019902462.base = NTI1644167178;

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
      var SvgElements_1694498842 = [[97,110,105,109,97,116,101], [97,110,105,109,97,116,101,77,111,116,105,111,110], [97,110,105,109,97,116,101,84,114,97,110,115,102,111,114,109], [99,105,114,99,108,101], [99,108,105,112,80,97,116,104], [100,101,102,115], [100,101,115,99], [101,108,108,105,112,115,101], [102,101,66,108,101,110,100], [102,101,67,111,108,111,114,77,97,116,114,105,120], [102,101,67,111,109,112,111,110,101,110,116,84,114,97,110,115,102,101,114], [102,101,67,111,109,112,111,115,105,116,101], [102,101,67,111,110,118,111,108,118,101,77,97,116,114,105,120], [102,101,68,105,102,102,117,115,101,76,105,103,104,116,105,110,103], [102,101,68,105,115,112,108,97,99,101,109,101,110,116,77,97,112], [102,101,68,105,115,116,97,110,116,76,105,103,104,116], [102,101,68,114,111,112,83,104,97,100,111,119], [102,101,70,108,111,111,100], [102,101,70,117,110,99,65], [102,101,70,117,110,99,66], [102,101,70,117,110,99,71], [102,101,70,117,110,99,82], [102,101,71,97,117,115,115,105,97,110,66,108,117,114], [102,101,73,109,97,103,101], [102,101,77,101,114,103,101], [102,101,77,101,114,103,101,78,111,100,101], [102,101,77,111,114,112,104,111,108,111,103,121], [102,101,79,102,102,115,101,116], [102,101,80,111,105,110,116,76,105,103,104,116], [102,101,83,112,101,99,117,108,97,114,76,105,103,104,116,105,110,103], [102,101,83,112,111,116,76,105,103,104,116], [102,101,84,105,116,108,101], [102,101,84,117,114,98,117,108,101,110,99,101], [102,105,108,116,101,114], [102,111,114,101,105,103,110,79,98,106,101,99,116], [103], [105,109,97,103,101], [108,105,110,101], [108,105,110,101,97,114,71,114,97,100,105,101,110,116], [109,97,114,107,101,114], [109,97,115,107], [109,101,116,97,100,97,116,97], [109,112,97,116,104], [112,97,116,104], [112,97,116,116,101,114,110], [112,111,108,121,103,111,110], [112,111,108,121,108,105,110,101], [114,97,100,105,97,108,71,114,97,100,105,101,110,116], [114,101,99,116], [115,101,116], [115,116,111,112], [115,118,103], [115,119,105,116,99,104], [115,121,109,98,111,108], [116,101,120,116], [116,101,120,116,80,97,116,104], [117,115,101], [118,105,101,119]];

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
    var toLowerRanges_771752948 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, (-2508), 7357, 7359, (-2508), 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, (-10315), 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_771752949 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, (-7115), 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, (-7017), 8490, (-7883), 8491, (-7762), 8498, 528, 8579, 501, 11360, 501, 11362, (-10243), 11363, (-3314), 11364, (-10227), 11367, 501, 11369, 501, 11371, 501, 11373, (-10280), 11374, (-10249), 11375, (-10283), 11376, (-10282), 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, (-34832), 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, (-41780), 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, (-41808), 42923, (-41819), 42924, (-41815), 42925, (-41805), 42926, (-41808), 42928, (-41758), 42929, (-41782), 42930, (-41761), 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, (-41807), 42950, (-34884)]);

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr([65, 90]);

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
var ConstSet4 = setConstr([65, 90]);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(45, 43, 32);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([65, 90], [97, 122]);

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function genericReset(x_33557306, ti_33557307) {
  var result_33557308 = null;

    result_33557308 = null;
    switch (ti_33557307.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557259(ti_33557307)) {
              result_33557308 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557308 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557307.kind == 17)) {
      result_33557308 = {m_type: ti_33557307};
      }
      else {
        result_33557308 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557308 = [];
    
      break;
    case 4:
    case 16:
            result_33557308 = new Array(x_33557306.length);
      for (var i = 0; i < x_33557306.length; ++i) {
        result_33557308[i] = genericReset(x_33557306[i], ti_33557307.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557308;

}
                      var helper_2516582446 = new Uint32Array([3198944359, 3630892171]);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}
  var lessonJokeCsv_536871019 = [[[73,68], [74,111,107,101]], [[49], makeNimstrLit("What did the bartender say to the jumper cables? You better not try to start anything.")], [[50], [68,111,110,39,116,32,121,111,117,32,104,97,116,101,32,106,111,107,101,115,32,97,98,111,117,116,32,71,101,114,109,97,110,32,115,97,117,115,97,103,101,63,32,84,104,101,121,39,114,101,32,116,104,101,32,119,117,114,115,116,33]], [[51], [84,119,111,32,97,114,116,105,115,116,115,32,104,97,100,32,97,110,32,97,114,116,32,99,111,110,116,101,115,116,46,46,46,32,73,116,32,101,110,100,101,100,32,105,110,32,97,32,100,114,97,119]], [[52], makeNimstrLit("Why did the chicken cross the playground? To get to the other slide.")], [[53], [87,104,97,116,32,103,117,110,32,100,111,32,121,111,117,32,117,115,101,32,116,111,32,104,117,110,116,32,97,32,109,111,111,115,101,63,32,65,32,109,111,111,115,101,99,117,116,33]], [[54], [73,102,32,108,105,102,101,32,103,105,118,101,115,32,121,111,117,32,109,101,108,111,110,115,44,32,121,111,117,32,109,105,103,104,116,32,104,97,118,101,32,100,121,115,108,101,120,105,97,46]], [[55], [66,114,111,107,101,110,32,112,101,110,99,105,108,115,46,46,46,32,46,46,46,97,114,101,32,112,111,105,110,116,108,101,115,115,46]], [[56], makeNimstrLit("What did one snowman say to the other snowman? \'Do you smell carrots?\'")], [[57], makeNimstrLit("How many hipsters does it take to change a lightbulb? It\'s a really obscure number. You\'ve probably never heard of it.")], [[49,48], [87,104,101,114,101,32,100,111,32,115,105,99,107,32,98,111,97,116,115,32,103,111,63,32,84,104,101,32,100,111,99,107,33]], [[49,49], [73,32,108,105,107,101,32,109,121,32,115,108,97,118,101,115,32,108,105,107,101,32,73,32,108,105,107,101,32,109,121,32,99,111,102,102,101,101,58,32,70,114,101,101,46]], [[49,50], makeNimstrLit("My girlfriend told me she was leaving me because I keep pretending to be a Transformer... I said, No, wait! I can change!")], [[49,51], makeNimstrLit("Old Chinese proverb: Man who not shower in 7 days makes one reek.")], [[49,52], makeNimstrLit("What did the owner of a brownie factory say when his factory caught fire? \"I\'m getting the fudge outta here!\"")], [[49,53], [87,104,97,116,32,102,111,114,109,32,111,102,32,114,97,100,105,97,116,105,111,110,32,98,97,107,101,115,32,121,111,117,32,99,111,111,107,105,101,115,63,32,65,32,103,114,97,109,109,97,32,114,97,121]], [[49,54], makeNimstrLit("Bee jokes, courtesy of my niece (age 8). What did the bee use to dry off after swimming? A *bee*ch towel. What did the bee use to get out the tangles? A honeycomb.")], [[49,55], [87,104,97,116,39,115,32,116,104,101,32,108,111,117,100,101,115,116,32,101,99,111,110,111,109,105,99,32,115,121,115,116,101,109,63,32,67,65,80,73,84,65,76,73,83,77]], [[49,56], makeNimstrLit("I went for a job interview today... The interviewer said to me, What would you say your greatest weakness is? I said, I think Id have to say my listening skills are my greatest strength.")], [[49,57], makeNimstrLit("Who was the knight that invented the round table? Sir Cumference. (via friend who got this from a street performance group in the England area of Epcot)")], [[50,48], makeNimstrLit("What did the German air force eat for breakfast during WW2? Luftwaffles")], [[50,49], makeNimstrLit("I the shell off a snail yesterday... you\'d think it would move faster, but it was really kinda sluggish.")], [[50,50], [87,104,97,116,32,100,105,100,32,116,104,101,32,110,117,109,98,101,114,32,122,101,114,111,32,115,97,121,32,116,111,32,116,104,101,32,110,117,109,98,101,114,32,101,105,103,104,116,63,32,34,78,105,99,101,32,98,101,108,116,46,34]], [[50,51], makeNimstrLit("What\'s worse than a centipede with sore feet? A giraffe with a sore throat")], [[50,52], [87,104,97,116,39,115,32,114,101,100,32,97,110,100,32,98,97,100,32,102,111,114,32,121,111,117,114,32,116,101,101,116,104,63,32,65,32,98,114,105,99,107,46]], [[50,53], makeNimstrLit("Why did the Chicken cross the playground? To get to the other slide")], [[50,54], makeNimstrLit("Did you hear about the French chef who committed suicide? He lost the huile d\'olive")], [[50,55], makeNimstrLit("Wanna hear a joke about unemployed people? Nevermind, they don\'t work.")], [[50,56], makeNimstrLit("Knock Knock Who\'s there Boo!! Boo who? Don\'t cry, it\'s only a joke")], [[50,57], makeNimstrLit("How much did the skeleton charge for his excellent legal services? An arm and a leg.")], [[51,48], makeNimstrLit("Why do gorillas have such big nostrils? Cos they got big fingers.")], [[51,49], makeNimstrLit("What is the difference between a Siberian husky and an Alaskan husky? About 1500 miles.")], [[51,50], [87,104,97,116,32,100,111,32,118,101,103,97,110,32,122,111,109,98,105,101,115,32,101,97,116,63,32,71,82,65,65,65,73,73,73,78,83,83,83,33]], [[51,51], makeNimstrLit("What\'s the difference between a Thai man and a Thai woman? Pls help.")], [[51,52], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,97,114,32,116,104,97,116,32,101,97,116,115,32,111,116,104,101,114,32,99,97,114,115,63,32,65,32,99,97,114,110,105,118,111,114,101,46]], [[51,53], makeNimstrLit("Why did the golfer wear two pairs of pants In case he gets a hole in one")], [[51,54], [65,110,32,79,108,121,109,112,105,99,32,103,121,109,110,97,115,116,32,119,97,108,107,101,100,32,105,110,116,111,32,97,32,98,97,114,46,46,46,32,83,104,101,32,100,105,100,110,116,32,103,101,116,32,97,32,109,101,100,97,108,46,46,46]], [[51,55], [87,104,97,116,32,100,111,101,115,32,97,32,109,101,120,105,99,97,110,32,109,97,103,105,99,105,97,110,32,109,97,107,101,32,102,111,114,32,98,114,101,97,107,102,97,115,116,63,32,84,111,97,115,116,45,116,97,104,45,100,97,104,115,33]], [[51,56], makeNimstrLit("Why don\'t Bond villains feel cold in the winter? Because they dress in lairs.")], [[51,57], makeNimstrLit("What did the figurine say when the boot flew past her protective dome? \"That was a cloche call!\"")], [[52,48], [87,104,97,116,32,119,97,115,32,67,97,114,108,32,83,97,103,97,110,39,115,32,102,97,118,111,114,105,116,101,32,100,114,105,110,107,63,32,67,111,115,109,111,115,46]], [[52,49], makeNimstrLit("What is the medical term for owning too many dogs? [A Roverdose](http://i.imgur.com/BtyF5ys.jpg)")], [[52,50], [75,110,111,99,107,32,107,110,111,99,107,46,46,46,32,87,104,111,39,115,32,116,104,101,114,101,63,32,73,32,100,105,100,32,117,112,46,32,73,32,100,105,100,32,117,112,45,119,104,111,63]], [[52,51], [73,32,108,105,107,101,32,109,121,32,106,111,107,101,115,32,116,104,101,121,32,119,97,121,32,73,32,108,105,107,101,32,109,121,32,114,111,98,111,116,115,46,32,75,105,108,108,101,114,46]], [[52,52], [87,104,97,116,32,116,121,112,101,32,111,102,32,115,99,104,111,111,108,32,100,105,100,32,83,104,101,114,108,111,99,107,32,72,111,108,109,101,115,32,103,111,32,116,111,63,32,69,108,101,109,101,110,116,97,114,121,32,58,41]], [[52,53], makeNimstrLit("My friend told an out of place joke about police searches. But I don\'t think it was warranted.")], [[52,54], makeNimstrLit("The Dalai Lama walks into a pizza store... and says, \"Can you make me one with everything?\"")], [[52,55], [87,104,121,32,100,105,100,32,116,104,101,32,118,97,109,112,105,114,101,32,117,115,101,32,109,111,117,116,104,119,97,115,104,63,32,66,101,99,97,117,115,101,32,104,101,32,104,97,100,32,98,97,116,32,98,114,101,97,116,104]], [[52,56], [87,104,97,116,32,100,105,100,32,116,104,101,32,99,111,114,110,32,115,97,121,32,119,104,101,110,32,105,116,32,119,97,115,32,99,111,109,112,108,101,109,101,110,116,101,100,63,32,65,119,119,44,32,115,104,117,99,107,115,33]], [[52,57], makeNimstrLit("What did the green grape say to the purple grape? - \"Breathe, stupid!\"")], [[53,48], makeNimstrLit("Why did the Fall break off from all the other seasons? Because it wanted autumnomy")], [[53,49], makeNimstrLit("If I ever fire someone who is a Taylor Swift fan I\'ll say \"I knew you were trouble when you clocked in.\"")], [[53,50], makeNimstrLit("What do you do if a cow is in the middle of the road you\'re driving on? steer clear")], [[53,51], makeNimstrLit("What do you call a blind, legless buck? No eye-deer. EDIT: I totally messed this joke up. Please give me another chance with another joke?")], [[53,52], makeNimstrLit("What do you get for the women who has everything? A divorce, then she\'ll only have half of everything.")], [[53,53], makeNimstrLit("There was a depressed sausage... he thought his life was THE WURST.")], [[53,54], [87,104,97,116,39,115,32,97,32,100,111,103,39,115,32,102,97,118,111,114,105,116,101,32,109,111,100,101,32,111,102,32,116,114,97,110,115,112,111,114,116,97,116,105,111,110,63,32,65,32,119,97,103,103,105,110,39]], [[53,55], [87,104,121,32,100,105,100,32,116,104,101,32,115,97,110,100,32,100,117,110,101,32,98,108,117,115,104,63,32,66,101,99,97,117,115,101,32,116,104,101,32,115,101,97,32,119,101,101,100]], [[53,56], [87,104,97,116,32,104,97,112,112,101,110,101,100,32,116,111,32,116,104,101,32,116,121,114,97,110,110,105,99,97,108,32,112,101,97,99,104,63,32,72,101,32,103,111,116,32,105,109,112,101,97,99,104,101,100,33]], [[53,57], makeNimstrLit("Why do elephants paint their toenails red? So they can hide in cherry trees. You ever seen an elephant in a cherry tree? *Then it\'s working*.")], [[54,48], makeNimstrLit("what did the mexican firecheif name his kids... Hose A and Hose B")], [[54,49], makeNimstrLit("What did the German physicist use to drink his beer? Ein stein. - From Big Nate, as told by my kid.")], [[54,50], [87,104,97,116,32,100,105,100,32,101,97,114,116,104,32,115,97,121,32,116,111,32,116,104,101,32,111,116,104,101,114,32,112,108,97,110,101,116,115,63,32,89,111,117,32,103,117,121,115,32,104,97,118,101,32,110,111,32,108,105,102,101,33]], [[54,51], [79,110,101,32,116,105,109,101,32,119,101,32,114,97,110,32,111,117,116,32,111,102,32,115,111,97,112,45,32,45,115,111,32,119,101,32,104,97,100,32,116,111,32,117,115,101,32,104,97,110,100,32,115,97,110,105,116,105,122,101,114,33,33,33]], [[54,52], [87,97,110,110,97,32,104,101,97,114,32,97,32,100,105,114,116,121,32,106,111,107,101,63,32,84,119,111,32,119,104,105,116,101,32,115,116,97,108,108,105,111,110,115,32,102,101,108,108,32,105,110,32,116,104,101,32,109,117,100,46]], [[54,53], makeNimstrLit("What did one frog say to the other frog? Time\'s fun when you\'re having flies.")], [[54,54], makeNimstrLit("Why did the boy take a pencil and paper to bed? He was told to draw the curtains before going to sleep.")], [[54,55], makeNimstrLit("Clean joke about sorority girls Why do sorority girls only travel in odd numbered groups? Because they *can\'t even*!")], [[54,56], [87,104,97,116,32,100,105,100,32,116,104,101,32,56,32,115,97,121,32,116,111,32,116,104,101,32,48,63,32,72,101,121,44,32,102,97,116,116,121]], [[54,57], makeNimstrLit("KNOCK KNOCK! WHO\'S THERE! ***sombrero **** ^sombrero who,,,? *****SOMBRERO-VER THE RAINBOW****")], [[55,48], makeNimstrLit("I\'m reading a book about anti-gravity... ... It\'s impossible to put down")], [[55,49], [87,104,97,116,32,110,97,109,101,32,105,115,32,103,105,118,101,110,32,116,111,32,116,104,101,32,109,111,115,116,32,99,104,105,99,107,101,110,115,32,63,32,112,69,71,71,121]], [[55,50], makeNimstrLit("Why is Dr. Frankenstein never lonely? He\'s good at making friends.")], [[55,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,105,103,32,116,104,97,116,32,100,111,101,115,32,107,97,114,97,116,101,63,32,42,65,32,112,111,114,107,32,99,104,111,112,46,42]], [[55,52], [87,104,97,116,32,119,97,115,32,116,104,101,32,99,97,114,32,100,111,105,110,103,32,105,110,32,116,104,101,32,100,114,101,115,115,105,110,103,32,114,111,111,109,63,32,67,104,97,110,103,105,110,103,32,97,116,116,105,114,101,46]], [[55,53], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,105,108,101,32,111,102,32,100,111,103,115,63,32,65,32,114,117,102,102,32,116,101,114,114,97,105,110,46]], [[55,54], makeNimstrLit("How do you prepare for a party in space? You Planet Thanks u/BostonCentrist")], [[55,55], makeNimstrLit("What do you get when you cross an octopus with a cow? A stern rebuke from the Ethics Committee, and an immediate cessation of funding.")], [[55,56], [87,104,121,32,100,105,100,32,116,104,101,32,98,105,99,121,99,108,101,32,102,97,108,108,32,111,118,101,114,63,32,66,101,99,97,117,115,101,32,105,116,32,119,97,115,32,116,119,111,45,116,105,114,101,100]], [[55,57], makeNimstrLit("Two bookworms were having a dispute... ...across an open book until one bookworm moves closer to the other and says, \"well then, I\'m glad we\'re on the same page.\"")], [[56,48], makeNimstrLit("Which kitchen appliance tells the best jokes? The beater - he cracks everybody up!")], [[56,49], [87,104,121,32,100,105,100,32,116,104,101,32,106,101,108,108,121,114,111,108,108,63,32,72,101,32,115,97,119,32,116,104,101,32,97,112,112,108,101,32,116,117,114,110,111,118,101,114,46]], [[56,50], makeNimstrLit("Why did the chicken? Q: Why did the chicken cross the road naked? A: Because chickens don\'t wear clothes.")], [[56,51], makeNimstrLit("What do you call Protestants who want to save a dime? Econoclasts.")], [[56,52], [87,104,97,116,32,100,111,32,100,119,97,114,118,101,115,32,117,115,101,32,116,111,32,99,117,116,32,116,104,101,105,114,32,112,105,122,122,97,63,32,76,105,116,116,108,101,32,67,97,101,115,97,114,115]], [[56,53], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,105,115,104,32,115,97,121,32,119,104,101,110,32,105,116,32,104,105,116,32,116,104,101,32,119,97,108,108,63,32,68,97,109,46]], [[56,54], makeNimstrLit("What\'s that coffee drink with icecream? I used to know it, but... Affogato.")], [[56,55], [87,104,101,114,101,32,100,105,100,32,78,97,112,111,108,101,111,110,32,107,101,101,112,32,104,105,115,32,97,114,109,105,101,115,63,32,73,110,32,104,105,115,32,115,108,101,101,118,105,101,115,33]], [[56,56], makeNimstrLit("makeup beauty Omg = oh my girl so cute next morning without makeup Omg = ohh My God omg/omg = life without wife")], [[56,57], [84,105,109,101,32,102,108,105,101,115,32,108,105,107,101,32,116,104,101,32,119,105,110,100,46,32,70,114,117,105,116,32,102,108,105,101,115,32,108,105,107,101,46,46,46,32,98,97,110,97,110,97,115,33]], [[57,48], makeNimstrLit("What did Vincent van Gogh call himself when he joined the Justice League? The Starry Knight")], [[57,49], makeNimstrLit("Why did the boy take a ladder to school? He wanted to go to high school.")], [[57,50], [87,104,97,116,39,115,32,116,104,101,32,98,101,115,116,32,116,104,105,110,103,32,116,111,32,112,117,116,32,105,110,116,111,32,97,32,112,105,101,32,89,111,117,114,32,116,101,101,116,104,46]], [[57,51], makeNimstrLit("What kind of house does a stoned loaf of bread live in? A high rise")], [[57,52], makeNimstrLit("What do you get when you cross a firecracker and a duck? A firequacker.")], [[57,53], makeNimstrLit("What\'s a baker\'s biggest fear? Something going a-rye while they\'re raisin\' bread.")], [[57,54], makeNimstrLit("What\'s the best way to get a hold of Vin Diesel? IM Groot. : D Source: https://www.youtube.com/watch?v=Lvlj1u9S258")], [[57,55], makeNimstrLit("Why did everyone trust the marsupial? Everything he said was troo")], [[57,56], makeNimstrLit("This dermatologist waits a month to diagnose a skin disorder... She\'s reluctant to make a rash decision.")], [[57,57], [87,104,121,32,97,114,101,32,109,97,110,104,111,108,101,32,99,111,118,101,114,115,32,114,111,117,110,100,63,32,66,101,99,97,117,115,101,32,109,97,110,104,111,108,101,115,32,97,114,101,32,114,111,117,110,100,46]], [[49,48,48], [87,104,97,116,32,100,105,100,32,111,110,101,32,99,97,115,107,101,116,32,115,97,121,32,116,111,32,116,104,101,32,111,116,104,101,114,63,32,34,73,115,32,116,104,97,116,32,121,111,117,32,99,111,102,102,105,110,63,34]], [[49,48,49], makeNimstrLit("How does a hamburger introduce his girlfriend? Meat patty! Thought of you guys!")], [[49,48,50], [72,111,119,32,100,111,101,115,32,97,32,109,97,116,104,101,109,97,116,105,99,105,97,110,32,103,101,116,32,84,97,110,63,32,83,105,110,47,67,111,115]], [[49,48,51], [87,104,97,116,32,105,115,32,97,32,109,97,114,116,105,97,110,39,115,32,102,97,118,111,117,114,105,116,101,32,99,104,111,99,111,108,97,116,101,63,32,65,32,109,97,114,115,32,98,97,114]], [[49,48,52], [87,104,101,114,101,32,100,105,100,32,83,97,108,108,121,32,103,111,32,97,102,116,101,114,32,116,104,101,32,101,120,112,108,111,115,105,111,110,63,32,69,118,101,114,121,119,104,101,114,101,46]], [[49,48,53], makeNimstrLit("What did the cow say when it saw the farmer twice in one day? Deja Moo!")], [[49,48,54], makeNimstrLit("Congratulation on the new baby, from your family... except from me because I don\'t really care.")], [[49,48,55], [87,104,97,116,32,105,115,32,97,103,105,116,97,116,101,100,32,98,117,121,32,106,111,121,102,117,108,63,32,65,32,119,97,115,104,105,110,103,32,109,97,99,104,105,110,101]], [[49,48,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,115,108,101,101,112,105,110,103,32,100,105,110,111,115,97,117,114,63,32,65,32,100,105,110,111,45,115,110,111,114,101,46]], [[49,48,57], makeNimstrLit("Breaking news! Energizer Bunny arrested... ...charged with battery.")], [[49,49,48], makeNimstrLit("It\'s an emergency! I need underwear jokes. My baby sister needs underwear jokes for some mysterious reason. I need your guys help!")], [[49,49,49], makeNimstrLit("What did the butcher say when he handed his customer an empty pack of hotdogs on halloween? Happy halloweenie")], [[49,49,50], [67,97,110,32,70,101,98,114,117,97,114,121,32,77,97,114,99,104,63,32,78,111,44,32,98,117,116,32,65,112,114,105,108,32,77,97,121,46]], [[49,49,51], [87,104,97,116,39,115,32,116,104,101,32,105,110,116,101,114,110,97,108,32,116,101,109,112,101,114,97,116,117,114,101,32,111,102,32,97,32,84,97,117,110,45,84,97,117,110,63,32,76,117,107,101,119,97,114,109]], [[49,49,52], [87,104,97,116,39,115,32,105,116,32,99,97,108,108,101,100,32,119,104,101,110,32,97,32,112,108,97,110,101,116,32,111,114,98,105,116,115,32,105,116,115,32,115,117,110,32,56,32,116,105,109,101,115,63,32,65,110,32,111,114,98,121,116,101]], [[49,49,53], makeNimstrLit("Why are there only two hundred and thirty nine beans in a bowl of bean soup? Because just one more and it would be two-farty")], [[49,49,54], [87,104,97,116,32,100,111,101,115,32,97,32,110,111,115,101,121,32,112,101,112,112,101,114,32,100,111,63,32,73,116,32,103,101,116,115,32,106,97,108,97,112,101,110,111,32,98,117,115,105,110,101,115,115,46]], [[49,49,55], makeNimstrLit("Why don\'t blind people like to go skydiving? It scares their seeing-eye dog.")], [[49,49,56], [119,104,97,116,32,100,111,101,115,32,99,108,97,114,107,32,107,101,110,116,32,104,97,118,101,32,102,111,114,32,98,114,101,97,107,102,97,115,116,63,32,97,108,116,101,114,45,101,103,103,111,115]], [[49,49,57], makeNimstrLit("I met Phil Spector\'s brother Crispin the other day. He\'s head of quality control at Lays.")], [[49,50,48], makeNimstrLit("Who is William Shatner\'s mythical nemesis? The Lepre-khaaaaannnnn!!!!!")], [[49,50,49], [84,119,111,32,100,114,117,109,115,32,97,110,100,32,97,32,99,121,109,98,97,108,32,102,97,108,108,32,111,102,102,32,97,32,99,108,105,102,102,46,46,46,32,98,97,45,100,117,109,32,116,115,115]], [[49,50,50], [87,104,121,32,100,111,101,115,32,77,97,114,105,111,32,104,97,116,101,32,80,117,110,99,104,98,117,103,63,32,66,101,99,97,117,115,101,32,104,101,32,98,114,117,105,115,101,115,32,108,105,107,101,45,97,32,80,101,97,99,104,33]], [[49,50,51], [87,104,101,114,101,32,100,111,32,112,111,116,115,32,103,111,32,111,110,32,118,97,99,97,116,105,111,110,63,32,74,97,80,65,78,33,32,70,114,111,109,32,109,121,32,57,32,121,101,97,114,32,111,108,100,46]], [[49,50,52], makeNimstrLit("When German children play a game involving touching each other with bread... it\'s called gluten tag. I\'ll show myself out.")], [[49,50,53], makeNimstrLit("My laptop is so dumb. Every time it says \"Your password is incorrect\", I type in: \"incorrect\" and the silly thing still tells me the same thing.")], [[49,50,54], makeNimstrLit("Did you hear about the scarecrow who won the Nobel Prize? He was outstanding in his field. From: http://www.dadlaughs.com")], [[49,50,55], makeNimstrLit("A man was caught stealing in a supermarket today... ...while balanced on the shoulders of a couple of vampires. He was charged with shoplifting on two counts.")], [[49,50,56], [119,104,121,32,100,105,100,110,39,116,32,116,104,101,32,98,105,99,121,99,108,101,32,99,114,111,115,115,32,116,104,101,32,114,111,97,100,63,32,98,101,99,97,117,115,101,32,105,116,32,119,97,115,32,116,119,111,45,116,105,114,101,100,46]], [[49,50,57], makeNimstrLit("Every morning I run around the block 5 times... ...Then I slide the block back under the bed and go back to sleep")], [[49,51,48], [83,97,121,115,32,115,104,101,58,32,34,83,97,121,32,115,111,109,101,116,104,105,110,103,32,115,111,102,116,32,97,110,100,32,115,119,101,101,116,34,32,83,97,121,115,32,104,101,58,32,34,77,97,114,115,104,109,97,108,108,111,119,46,34]], [[49,51,49], makeNimstrLit("Why do cicadas stay up all night chirping irregularly, unable to sleep? Their cicadan rhythm is off")], [[49,51,50], makeNimstrLit("What do you call a monk that operates a door unlocking service? A monkey. (p.s. I have a wonderful, terrible love for bad jokes)")], [[49,51,51], makeNimstrLit("What do you call people who pretend to be Irish on St. Patrick\'s Day? Counterfitz")], [[49,51,52], [87,104,97,116,32,100,105,100,32,116,104,101,32,48,32,115,97,121,32,116,111,32,116,104,101,32,56,63,32,78,105,99,101,32,98,101,108,116,46]], [[49,51,53], makeNimstrLit("I love when I have dramatic realizations over my morning cereal... ... I call \'em \"breakfast epiphanies\"")], [[49,51,54], makeNimstrLit("Definitions Bigamist - An Italian fog. Myfunsalow - \"I am broke\" in Italian. Innuendo - Italian for suppository.")], [[49,51,55], [72,97,118,101,32,121,111,117,32,104,101,97,114,100,32,119,104,97,116,32,73,32,116,104,105,110,107,32,111,102,32,119,105,110,100,109,105,108,108,115,63,32,66,105,103,32,70,97,110,46]], [[49,51,56], makeNimstrLit("Max wondered why the ball was slowly growing larger... and then it hit him.")], [[49,51,57], [73,32,115,97,119,32,97,32,100,111,99,117,109,101,110,116,97,114,121,32,111,110,32,104,111,119,32,116,104,101,121,32,109,97,107,101,32,106,101,97,110,115,46,46,46,32,73,116,32,119,97,115,32,114,105,118,101,116,105,110,103,46]], [[49,52,48], [87,104,97,116,32,103,111,101,115,32,34,72,97,104,97,104,97,104,97,104,97,46,46,46,42,116,104,117,100,42,34,63,32,83,111,109,101,111,110,101,32,108,97,117,103,104,105,110,103,32,116,104,101,105,114,32,104,101,97,100,32,111,102,102]], [[49,52,49], makeNimstrLit("Did you hear about the homemade poison ivy remedy? You can make it from scratch.")], [[49,52,50], [87,104,97,116,32,100,105,100,32,116,104,101,32,97,112,112,108,101,32,115,97,121,32,116,111,32,116,104,101,32,112,101,97,114,63,32,91,77,97,110,44,32,103,111,93,32,97,119,97,121,33]], [[49,52,51], [87,104,101,110,32,100,111,32,101,108,101,112,104,97,110,116,115,32,104,97,118,101,32,101,105,103,104,116,32,102,101,101,116,63,32,87,104,101,110,32,116,104,101,114,101,32,97,114,101,32,116,119,111,32,111,102,32,116,104,101,109,46]], [[49,52,52], [73,32,98,111,117,103,104,116,32,97,32,100,117,99,107,100,111,111,32,121,101,115,116,101,114,100,97,121,33,32,39,87,104,97,116,39,115,32,97,32,100,117,99,107,100,111,111,63,39,32,34,113,117,97,99,107,44,32,113,117,97,99,107,34]], [[49,52,53], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,66,97,116,109,97,110,32,115,107,105,112,112,105,110,103,32,99,104,117,114,99,104,63,32,67,104,114,105,115,116,105,97,110,32,66,97,105,108,46]], [[49,52,54], makeNimstrLit("A man started to throw words beginning with \'th\' at me I dodge this, then and there but I didn\'t see that coming - Tim Vine")], [[49,52,55], makeNimstrLit("Why did the mobster buy a planner? So he could organize his crime")], [[49,52,56], makeNimstrLit("James Bond went to get a haircut. The barber asked him if he wanted to dye his hair as well. Bond replied \"Dye another day.\"")], [[49,52,57], [73,32,110,97,109,101,100,32,109,121,32,99,97,116,32,34,67,117,114,105,111,115,105,116,121,34,46,32,72,101,32,107,105,108,108,101,100,32,104,105,109,115,101,108,102,32,46,46,46,32,78,105,110,101,32,116,105,109,101,115,46]], [[49,53,48], makeNimstrLit("Why do they make Raisin Bran commercials? For raisin bran awareness.")], [[49,53,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,97,108,100,32,112,111,114,99,117,112,105,110,101,63,32,80,111,105,110,116,108,101,115,115,33]], [[49,53,50], makeNimstrLit("Where does the thumb meet its type? At the SPACE BAR! reddit is fun! I\'m staring at the keyboard tryin\' to think up a joke and voila\'!")], [[49,53,51], [87,104,97,116,39,115,32,66,101,101,116,104,111,118,101,110,39,115,32,102,97,118,111,114,105,116,101,32,102,114,117,105,116,63,32,65,32,98,97,45,110,97,45,110,97,45,110,97,97,97,97,97]], [[49,53,52], makeNimstrLit("I\'m getting mighty fed up with these sheep-human hybrids! What is with ewe people!?")], [[49,53,53], [87,104,97,116,32,116,104,101,32,112,108,97,116,101,32,115,97,121,32,116,111,32,116,104,101,32,111,116,104,101,114,32,112,108,97,116,101,63,32,68,105,110,110,101,114,115,32,111,110,32,109,101]], [[49,53,54], makeNimstrLit("My finger became really swollen after I jammed it Friday. And thats how I found out Im allergic to jam.")], [[49,53,55], makeNimstrLit("Sports: So how\'s the shoestring game goin\'? Right now, it\'s ***ALL TIED-UP!*** Oh my-oh-my! I couldn\'t find a cornylamejokes subreddit, so... ~Skip")], [[49,53,56], [73,32,119,97,110,116,101,100,32,116,111,32,112,117,116,32,97,32,112,105,122,122,97,32,106,111,107,101,32,104,101,114,101,32,46,46,46,98,117,116,32,105,116,32,119,97,115,32,116,111,111,32,115,97,117,99,121,46]], [[49,53,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,116,104,97,116,32,106,117,115,116,32,103,97,118,101,32,98,105,114,116,104,63,32,68,101,99,97,102,102,101,105,110,97,116,101,100]], [[49,54,48], [87,104,121,32,100,105,100,32,116,104,101,32,98,101,101,32,103,111,32,116,111,32,116,104,101,32,100,111,99,116,111,114,63,32,66,101,99,97,117,115,101,32,104,101,32,104,97,100,32,104,105,118,101,115,46]], [[49,54,49], makeNimstrLit("How many ears does Captain Picard have? A right ear. A left ear. And a final front ear.")], [[49,54,50], makeNimstrLit("What type of doctor prescribes Coke and 7-up for a living? A Poptometrist!")], [[49,54,51], [87,104,97,116,39,115,32,103,114,101,121,63,32,65,32,109,101,108,116,101,100,32,112,101,110,103,117,105,110,33]], [[49,54,52], makeNimstrLit("Why was the healthy potato not allowed on the plane? He was on the \"No Fry\" list.")], [[49,54,53], makeNimstrLit("I saw an all frog production of Frozen yesterday... It was toad-aly cool!")], [[49,54,54], makeNimstrLit("Just found this sub the other day and I\'ve come to this realization... Currently, this subreddit seems to be in quite the pickle.")], [[49,54,55], makeNimstrLit("If you ever get cold, just stand in the corner of a room for a while. *They\'re normally around 90 degrees.*")], [[49,54,56], makeNimstrLit("A farmer in (x-town) who rolled over a cart of horse manure... Is reported in \"stable condition.\"")], [[49,54,57], makeNimstrLit("What does a can of tuna say? Premium flaked tuna Best before dd/mm/yy")], [[49,55,48], makeNimstrLit("How many magazines did the racquetball footwear company make before going out of business? Tennis shoes (Also: can anyone think of a more succinct buildup? It seems kinda unwieldy to me)")], [[49,55,49], makeNimstrLit("Why was the actor detained by airport security? He said he was in town to shoot a pilot.")], [[49,55,50], [87,104,97,116,32,100,105,100,32,116,104,101,32,108,108,97,109,97,32,115,97,121,32,119,104,101,110,32,97,115,107,101,100,32,116,111,32,97,32,112,105,99,110,105,99,63,32,65,108,112,97,99,97,32,108,117,110,99,104,33]], [[49,55,51], [87,104,97,116,32,100,111,32,107,105,100,115,32,101,97,116,32,102,111,114,32,98,114,101,97,107,102,97,115,116,63,32,89,111,103,111,97,116,33]], [[49,55,52], makeNimstrLit("Did you hear about the casting for the new Batman movie? People have really Ben Affleckted by it.")], [[49,55,53], makeNimstrLit("What electronic device leaves behind a lot of broken glass? A PC, seeing how they typically run on Windows!")], [[49,55,54], makeNimstrLit("Why did the orange move to veggieland? So he could live in peas and hominy.")], [[49,55,55], makeNimstrLit("A blind man walks into a bar. And a table. And a door. And a staircase. I don\'t think hes alright now.")], [[49,55,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,98,101,101,102,32,116,104,97,116,39,115,32,98,101,101,110,32,98,117,114,110,101,100,63,32,65,32,109,105,115,45,115,116,101,97,107,46]], [[49,55,57], [72,111,119,32,100,111,32,99,111,119,115,32,103,101,116,32,116,104,101,105,114,32,103,111,115,115,105,112,63,32,84,104,101,121,32,104,101,114,100,32,105,116,32,116,104,114,111,117,103,104,32,116,104,101,32,98,111,118,105,110,101,46]], [[49,56,48], makeNimstrLit("[ This one from the great /u/KingOfRibbles ] \"My sink was a bit dirty-\" \"-but all it needed was a little ...wiping!!!\"")], [[49,56,49], makeNimstrLit("Why doesn\'t the Sun go to college? Because he has a million of degrees.")], [[49,56,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,115,104,101,101,112,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,65,32,99,108,111,117,100,46]], [[49,56,51], [74,75,76,77,78,79,80,81,82,83,84,32,84,104,97,116,39,115,32,97,108,108,32,116,104,97,116,32,115,116,97,110,100,115,32,98,101,116,119,101,101,110,32,85,32,97,110,100,32,73,32,58,41]], [[49,56,52], makeNimstrLit("Original physics joke. I\'m very proud. I was organizing my desk the other day and the Entropy Police gave me a ticket for disturbing the chaos.")], [[49,56,53], makeNimstrLit("There were two snowmen standing in a field, one says to the other... Can you smell Carrots?")], [[49,56,54], [87,104,97,116,32,107,105,110,100,32,111,102,32,106,97,99,107,101,116,115,32,100,111,32,65,117,100,105,111,112,104,105,108,101,115,32,119,101,97,114,63,32,70,76,65,67,32,106,97,99,107,101,116,115]], [[49,56,55], makeNimstrLit("Shall I tell you the joke about the body snatchers? Best not, you might get carried away.")], [[49,56,56], [71,114,97,118,105,116,121,32,109,97,107,101,115,32,97,32,116,101,114,114,105,98,108,101,32,102,114,105,101,110,100,46,32,73,116,39,115,32,97,108,119,97,121,115,32,104,111,108,100,105,110,103,32,121,111,117,32,100,111,119,110,46]], [[49,56,57], makeNimstrLit("What do Catholics and guitar players have in common? Neither of them practice.")], [[49,57,48], makeNimstrLit("Do you know why the bike couldnt stand by itself? It was TWO TIRED!!!")], [[49,57,49], makeNimstrLit("Just heard this on a PBS kids show... What did one wolf say to the other wolf? Howls it going?")], [[49,57,50], makeNimstrLit("A man enters a store and asks for a color printer, the cashier asks \"What color?\"")], [[49,57,51], makeNimstrLit("An oldie but goldie! *How do you stop a charging bull?* ***Take away its credit card!*** wa-waa-waaaa! ~Skip")], [[49,57,52], makeNimstrLit("Two antennas met on a roof . . . Two antennas met on a roof, they fell in love and got married, the ceremony was awful but the reception was brilliant.")], [[49,57,53], [73,115,32,105,116,32,106,117,115,116,32,109,101,46,46,46,32,46,46,46,111,114,32,97,114,101,32,99,105,114,99,108,101,115,32,112,111,105,110,116,108,101,115,115,63]], [[49,57,54], [87,104,121,32,100,111,32,99,111,119,115,32,119,101,97,114,32,98,101,108,108,115,63,32,66,101,99,97,117,115,101,32,116,104,101,105,114,32,104,111,114,110,115,32,100,111,110,39,116,32,119,111,114,107,46]], [[49,57,55], [87,104,97,116,39,115,32,98,114,111,119,110,32,97,110,100,32,114,104,121,109,101,115,32,119,105,116,104,32,83,110,111,111,112,63,32,68,114,46,32,68,114,101]], [[49,57,56], makeNimstrLit("What\'s the difference between a bird and a fly? A bird can fly, but a fly can\'t bird.")], [[49,57,57], makeNimstrLit("I\'ve won the war! My pants fit! **Congratulations, have you lost weight?** _Even better... I\'ve bought new pants!!!_")], [[50,48,48], [84,119,111,32,100,114,117,109,115,32,97,110,100,32,97,32,99,121,109,98,97,108,32,102,97,108,108,32,111,102,102,32,97,32,99,108,105,102,102,46,32,66,117,104,32,100,117,109,32,116,115,115,33]], [[50,48,49], [87,104,97,116,32,105,115,32,77,111,122,97,114,116,32,100,111,105,110,103,32,114,105,103,104,116,32,110,111,119,63,32,42,68,101,99,111,109,112,111,115,105,110,103,42]], [[50,48,50], makeNimstrLit("Whatever you do, always give 100%... Unless of course, you\'re donating blood.")], [[50,48,51], makeNimstrLit("What did papa butter say to troublesome son butter? You had *butter* behave now, alright son? I sure know you don\'t want to get *whipped*!")], [[50,48,52], [87,104,121,32,100,111,101,115,32,116,104,101,32,100,111,103,32,103,111,32,116,111,32,116,104,101,32,103,121,109,63,32,72,101,32,119,97,110,116,115,32,116,111,32,103,101,116,32,114,117,102,102]], [[50,48,53], [87,104,97,116,32,107,105,110,100,32,111,102,32,98,101,101,114,32,100,111,101,115,32,97,32,99,111,119,32,98,114,101,119,63,32,72,101,105,102,101,114,45,119,101,105,122,101,110,46]], [[50,48,54], [72,111,119,32,100,111,32,121,111,117,32,109,97,107,101,32,97,32,115,113,117,105,100,32,108,97,117,103,104,63,32,84,101,110,32,116,105,99,107,108,101,115,46]], [[50,48,55], [87,104,97,116,32,99,97,114,115,32,100,111,32,119,111,108,118,101,115,32,100,114,105,118,101,63,32,65,117,117,117,117,117,117,117,117,117,117,117,117,117,100,105,115,33]], [[50,48,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,116,104,97,116,32,100,111,101,115,110,39,116,32,103,105,118,101,32,109,105,108,107,63,32,65,32,77,105,108,107,32,68,117,100,46]], [[50,48,57], makeNimstrLit("What did the American call Karl Marx when a shrine was dedicated to him in Japan? A Kami.")], [[50,49,48], makeNimstrLit("Why are locomotive drivers so good at driving locomotives? Because they were trained.")], [[50,49,49], makeNimstrLit("What do you call a number that cant keep still? A roamin numeral.")], [[50,49,50], makeNimstrLit("Why did the redditor go to /r/zelda? To boost his link karma! (X-post from /r/Jokes)")], [[50,49,51], makeNimstrLit("What did the Tin Man say when he got run over by a steamroller? Curses! Foil again!")], [[50,49,52], makeNimstrLit("How can you tell that a straight pin is confused? Just look at it. It\'s headed in one direction and pointed in the other.")], [[50,49,53], [87,104,97,116,32,105,115,32,97,110,32,97,115,116,114,111,110,97,117,116,39,115,32,102,97,118,111,114,105,116,101,32,109,101,97,108,63,32,76,97,117,110,99,104]], [[50,49,54], [87,104,97,116,32,100,111,32,121,111,117,32,100,111,32,116,111,32,100,101,97,100,32,99,104,101,109,105,115,116,115,63,32,89,111,117,32,98,97,114,105,117,109,46]], [[50,49,55], [87,104,121,32,100,105,100,32,116,104,101,32,116,111,109,97,116,111,32,116,117,114,110,101,100,32,114,101,100,63,32,66,101,99,97,117,115,101,32,105,116,32,115,97,119,32,116,104,101,32,115,97,108,97,100,32,100,114,101,115,115,105,110,103]], [[50,49,56], makeNimstrLit("Why are contortionists always angry? Their work usually has them pretty bent out of shape.")], [[50,49,57], [73,32,110,101,118,101,114,32,98,117,121,32,86,101,108,99,114,111,32,73,116,39,115,32,115,117,99,104,32,97,32,114,105,112,32,111,102,102,46]], [[50,50,48], [72,111,119,32,100,111,32,121,111,117,32,117,110,108,111,99,107,32,97,32,109,111,110,97,115,116,101,114,121,32,100,111,111,114,63,32,87,105,116,104,32,97,32,109,111,110,107,32,107,101,121,46]], [[50,50,49], makeNimstrLit("What is the ardent task of searching for a new wallpaper called? Running a Backgroud Check.")], [[50,50,50], [87,104,101,110,32,100,111,101,115,32,111,110,101,32,112,108,97,121,32,97,32,99,111,114,110,121,32,103,97,109,101,63,32,89,111,117,32,112,108,97,121,32,105,116,32,98,121,32,101,97,114,46]], [[50,50,51], makeNimstrLit("The Great Yarn Race **Joe:** Did you hear about the great yarn race? **Jane:** No. Who won? **Joe:** Well, they had to weave their selves through the obstacles and in the end, it was a tie.")], [[50,50,52], makeNimstrLit("a red ship and a blue ship crashed on an island together the survivors were marooned.")], [[50,50,53], makeNimstrLit("Three tomatoes are walking down the street... A papa tomato, a mama tomato, and a baby tomato. The baby tomato starts falling behind so the papa tomato squishes him and says, Ketchup!")], [[50,50,54], [87,104,97,116,32,104,97,112,112,101,110,115,32,97,116,32,110,105,103,104,116,32,105,110,32,66,97,110,103,108,97,100,101,115,104,63,32,73,116,32,103,101,116,115,32,68,104,97,107,97]], [[50,50,55], makeNimstrLit("Why didn\'t the baby oyster share her little pearl? She was a little shellfish.")], [[50,50,56], makeNimstrLit("Why did Humpty Dumpty have a great fall? To make up for a lousy summer.")], [[50,50,57], [87,104,97,116,32,107,105,110,100,32,111,102,32,98,111,97,116,115,32,100,111,32,115,109,97,114,116,32,112,101,111,112,108,101,32,114,105,100,101,32,111,110,63,32,83,99,104,111,108,97,114,32,115,104,105,112,115,33]], [[50,51,48], [72,111,119,32,100,111,32,121,111,117,32,116,117,114,110,32,115,111,117,112,32,105,110,116,111,32,103,111,108,100,63,32,89,111,117,32,97,100,100,32,50,52,32,99,97,114,97,116,115,33]], [[50,51,49], makeNimstrLit("A photon checks into a hotel... The bellhop asks him if he has any luggage and the photon replies \"No. I\'m travelling light.\"")], [[50,51,50], makeNimstrLit("I farted on an elevator, it was wrong on so many levels. From /r/PeterL")], [[50,51,51], [87,104,97,116,32,108,97,110,103,117,97,103,101,32,100,111,32,116,104,101,121,32,115,112,101,97,107,32,105,110,32,72,111,108,108,97,110,100,63,32,72,111,108,108,97,110,100,97,105,115,101,46]], [[50,51,52], makeNimstrLit("Last night, I had a dream that I was walking on a white sandy beach... At least that explains the footprints I found in the cat litter box this morning...")], [[50,51,53], makeNimstrLit("Why should you always bring 2 pair of trousers when golfing? In case you get a hole in one.")], [[50,51,54], [84,111,100,97,121,32,73,39,109,32,52,53,46,32,66,117,116,32,119,105,116,104,32,116,104,101,32,119,105,110,100,32,99,104,105,108,108,32,73,32,102,101,101,108,32,108,105,107,101,32,51,50,46]], [[50,51,55], makeNimstrLit("/r/pickle welcomes it\'s newest ally. It\'s always good to have clean jokes. I due urge the mods to add us to your sidebar, due to the fact that you are on ours.")], [[50,51,56], [87,104,121,32,97,114,101,32,99,97,116,115,32,98,97,100,32,115,116,111,114,121,116,101,108,108,101,114,115,63,32,66,101,99,97,117,115,101,32,116,104,101,121,32,111,110,108,121,32,104,97,118,101,32,111,110,101,32,42,116,97,108,101,42]], [[50,51,57], [66,97,108,108,111,111,110,39,115,32,87,104,97,116,39,115,32,97,32,98,97,108,108,111,111,110,39,115,32,102,97,118,111,114,105,116,101,32,103,101,110,114,101,32,111,102,32,109,117,115,105,99,63,32,80,111,112,46]], [[50,52,48], makeNimstrLit("Why was the dolphin happy and the shark depressed? The sharks life lacked porpoise.")], [[50,52,49], makeNimstrLit("What Johnny Mercer song does December 21st remind you of? Autumn Leaves.")], [[50,52,50], [87,104,97,116,39,115,32,97,32,99,111,109,101,100,105,97,110,39,115,32,102,97,118,111,114,105,116,101,32,99,97,110,100,121,63,32,76,97,102,102,121,32,84,97,102,102,121,46]], [[50,52,51], makeNimstrLit("There\'s a guy at the office today wearing full camo. At least I think so... I haven\'t seen him in a while.")], [[50,52,52], [87,104,121,32,100,111,32,103,104,111,115,116,115,32,108,105,107,101,32,116,111,32,114,105,100,101,32,101,108,101,118,97,116,111,114,115,63,32,73,116,32,108,105,102,116,115,32,116,104,101,105,114,32,115,112,105,114,105,116,115,46]], [[50,52,53], [72,111,119,32,100,111,32,121,111,117,32,99,97,108,108,32,102,111,114,32,97,32,98,97,116,104,63,32,87,105,116,104,32,97,32,84,101,108,101,116,117,98,98,105,101,46]], [[50,52,54], [87,104,111,32,119,97,115,32,116,104,101,32,99,104,105,99,107,101,110,39,115,32,102,97,118,111,114,105,116,101,32,109,117,115,105,99,105,97,110,63,32,66,65,65,65,65,67,72,32,66,65,67,72,32,66,65,67,72,32,66,65,67,72]], [[50,52,55], makeNimstrLit("X-post from r/jokes: Mommy! I found a $10 bill today, but I threw it away, cus it was fake. \"Oh, how did you know it was fake?\" \"It had two zeroes instead of one.\"")], [[50,52,56], makeNimstrLit("How much does it cost a pirate to get his ear pierced? A buccaneer!")], [[50,52,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,116,104,101,32,103,104,111,115,116,32,111,102,32,97,32,99,104,105,99,107,101,110,63,32,65,32,112,111,117,108,116,114,121,103,101,105,115,116,33]], [[50,53,48], [87,104,97,116,39,115,32,105,110,118,105,115,105,98,108,101,32,97,110,100,32,115,109,101,108,108,115,32,108,105,107,101,32,99,97,114,114,111,116,115,63,32,66,117,110,110,121,32,102,97,114,116,115,46]], [[50,53,49], [87,104,97,116,32,100,105,100,32,102,105,115,104,32,115,97,121,32,119,104,101,110,32,115,104,101,32,104,105,116,32,116,104,101,32,119,97,108,108,32,63,32,68,97,109,40,110,41,32,33,33,33]], [[50,53,50], makeNimstrLit("Why are colds such bad robbers? Because they\'re so easy to catch!")], [[50,53,51], makeNimstrLit("A man walks into an apple store and...... farts every one is really angry and there all shouting so he says it\'s not my fault you don\'t have windows")], [[50,53,52], [87,104,121,32,97,114,101,32,112,105,114,97,116,101,115,32,115,111,32,109,101,97,110,63,32,73,32,100,111,110,116,32,107,110,111,119,44,32,116,104,101,121,32,106,117,115,116,32,97,114,114,114,114,114,114,114,114,114,33]], [[50,53,53], makeNimstrLit("As I watched the dog chasing his tail, I thought, Dogs sure are easily amused!... ...then I realized I was watching the dog chasing his tail.")], [[50,53,54], makeNimstrLit("What happened to the ghost who couldn\'t scare? He had to join a support group since he couldn\'t handle his boos.")], [[50,53,55], makeNimstrLit("Did you hear about the butcher who backed into the meat grinder? He got a little behind in his work.")], [[50,53,56], [87,104,97,116,32,100,111,32,118,101,103,101,116,97,114,105,97,110,32,122,111,109,98,105,101,115,32,101,97,116,63,32,71,114,97,97,97,97,97,97,105,105,105,105,110,115,46,46,46,46,46,46]], [[50,53,57], [87,104,121,32,100,105,100,32,116,104,101,32,108,105,111,110,32,115,112,105,116,32,111,117,116,32,116,104,101,32,99,108,111,119,110,63,32,66,101,99,97,117,115,101,32,104,101,32,116,97,115,116,101,100,32,102,117,110,110,121,46]], [[50,54,48], makeNimstrLit("What was Marie Curie\'s fitness program on the airwaves called? Radio-Activity")], [[50,54,49], makeNimstrLit("I went to the dermatologist about something on my neck- -and they said I just needed to scrub it!!!")], [[50,54,50], [87,104,121,32,119,97,115,32,116,104,101,32,109,97,116,104,32,98,111,111,107,32,115,97,100,63,32,73,116,32,104,97,100,32,97,32,108,111,116,32,111,102,32,112,114,111,98,108,101,109,115]], [[50,54,51], makeNimstrLit("What is the swamp-dwellers favorite form of extraterrestrial life? the Martians")], [[50,54,52], makeNimstrLit("Why do good farmers only excel when they are actually farming? (X-post from /r/jokes) Because they are out standing in their field.")], [[50,54,53], makeNimstrLit("The cheesiest joke ever. \"I don\'t feel grate.\" -- Block of Cheese before it got shredded.")], [[50,54,54], makeNimstrLit("Every single morning I get hit by the same bike... It\'s a vicious cycle.")], [[50,54,55], makeNimstrLit("What do get when you cross 50 female pigs with 50 male deer? One hundred sows and bucks?")], [[50,54,56], [89,111,117,32,107,110,111,119,32,121,111,117,114,101,32,103,101,116,116,105,110,103,32,111,108,100,32,119,104,101,110,32,83,97,110,116,97,32,115,116,97,114,116,115,32,108,111,111,107,105,110,103,32,121,111,117,110,103,101,114,46]], [[50,54,57], makeNimstrLit("I hate when you\'re trying to be cheesy but everyone is laughtose intolerant.")], [[50,55,48], makeNimstrLit("What is irony? Irony is when something has the chemical symbol Fe.")], [[50,55,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,71,114,111,117,110,100,32,98,101,101,102,33]], [[50,55,50], makeNimstrLit("was going to make a joke about science but I know for I wont get a reaction...")], [[50,55,51], makeNimstrLit("The other day, I sent my girlfriend a huge pile of snow... I called her up and asked, \'\'Did you get my drift?\'\'")], [[50,55,52], makeNimstrLit("What do you call... What do you call an Italian romance novel model who\'s let himself go? Flabio.")], [[50,55,53], makeNimstrLit("How many tickles does it take to make an octopus laugh? Ten tickles.")], [[50,55,54], makeNimstrLit("How did the geologist develop a career as an expert in sinkholes? He fell into it.")], [[50,55,55], makeNimstrLit("A bear and a rabbit are pooping in the woods The bear asks the rabbit - \"do you have a problem with poop sticking to your fur?\" \"Nope\" So the bear wipes his butt with the rabbit.")], [[50,55,56], makeNimstrLit("Overheated some milk in a lab experiment today... ...and asked the teacher if it would affect the result. Her response? \"To a degree.\"")], [[50,55,57], [87,104,97,116,39,115,32,98,114,111,119,110,32,97,110,100,32,115,116,105,99,107,121,63,32,65,32,115,116,105,99,107]], [[50,56,48], makeNimstrLit("I was gonna make a joke on Reddit.. .. but I guess you\'ve already Reddit somewhere.")], [[50,56,49], makeNimstrLit("Did you hear about the Antennas that got married? The wedding was lame, but the reception was great!")], [[50,56,50], [87,104,97,116,32,105,115,32,116,104,101,32,109,111,115,116,32,114,101,108,105,103,105,111,117,115,32,117,110,105,116,32,105,110,32,101,108,101,99,116,114,105,99,97,108,32,101,110,103,105,110,101,101,114,105,110,103,63,32,79,104,109,46]], [[50,56,51], makeNimstrLit("I was walking in the desert and saw a redwood tree. I knew this must be a mirage, so I ran into it. To my dismay, the tree and I collided. I guess it must have been an obstacle illusion.")], [[50,56,52], makeNimstrLit("A Bagpiper, a Kangeroo, an Irish poet, and Mother Theresa walk into a bar . . . . . . . the barman, who was drying a glass, lifted his head and asked, \"Is this some kind of joke?\"")], [[50,56,53], [72,111,119,32,109,97,110,121,32,99,97,116,104,111,108,105,99,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,99,104,97,110,103,101,32,97,32,108,105,103,104,116,98,117,108,98,63,32,67,72,65,78,71,69,63,33]], [[50,56,54], makeNimstrLit("Why don\'t you want a turkey at your thanksgiving dinner? Because it\'ll gobble up everything.")], [[50,56,55], [87,104,97,116,32,102,114,117,105,116,32,100,111,32,82,111,109,101,111,32,97,110,100,32,74,117,108,105,101,116,32,101,97,116,63,32,67,97,110,116,101,108,111,112,101]], [[50,56,56], [87,104,121,32,119,97,115,32,57,32,97,102,114,97,105,100,32,111,102,32,50,48,63,32,50,56,32,50,57,39,115]], [[50,56,57], [87,104,97,116,32,100,105,100,32,111,110,101,32,115,110,111,119,109,97,110,32,115,97,121,32,116,111,32,116,104,101,32,111,116,104,101,114,63,32,68,111,32,121,111,117,32,115,109,101,108,108,32,99,97,114,114,111,116,115,63]], [[50,57,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,114,97,99,101,32,114,117,110,32,98,121,32,98,97,114,105,115,116,97,115,63,32,65,32,42,42,100,101,99,97,102,42,42,97,108,111,110]], [[50,57,49], makeNimstrLit("What do you call a stegosaurus with carrots in its ears? Anything you want to - it can\'t here you!")], [[50,57,50], [87,104,97,116,32,98,105,114,100,32,99,97,110,32,119,114,105,116,101,32,117,110,100,101,114,119,97,116,101,114,63,32,65,32,98,97,108,108,45,112,111,105,110,116,32,80,101,110,103,117,105,110,33]], [[50,57,51], [87,104,97,116,32,100,105,100,32,116,104,101,32,104,111,114,115,101,32,111,114,100,101,114,32,97,116,32,116,104,101,32,98,97,114,63,32,67,104,97,114,100,97,110,101,105,105,105,105,105,105,103,103,103,104,104,104,104,104]], [[50,57,52], [87,104,97,116,32,119,97,115,32,66,101,101,116,104,111,118,101,110,39,115,32,102,97,118,111,114,105,116,101,32,102,114,117,105,116,63,32,66,65,45,78,65,45,78,65,45,78,65,33]], [[50,57,53], makeNimstrLit("Why did the tissue get up and dance? It had a little boogy in it.")], [[50,57,54], makeNimstrLit("Today a man knocked on my door and asked for a small donation towards the local swimming pool. I gave him a glass of water.")], [[50,57,55], [87,104,97,116,32,100,111,32,115,101,97,32,109,111,110,115,116,101,114,115,32,101,97,116,63,32,70,105,115,104,32,97,110,100,32,115,104,105,112,115,46]], [[50,57,56], makeNimstrLit("What did Virginia get when she walked into the pet shop? (state joke) A New Hampshire")], [[50,57,57], makeNimstrLit("The other day, I was looking through my socks, when I found one had a hole in it... \"darn it...\" I muttered.")], [[51,48,48], makeNimstrLit("What do you call the James Brown songs no one listens to? Defunct funk.")], [[51,48,49], [68,105,100,32,121,111,117,32,115,101,101,32,116,104,101,32,103,117,121,32,97,116,32,87,97,108,109,97,114,116,32,104,105,100,105,110,103,32,102,114,111,109,32,117,103,108,121,32,112,101,111,112,108,101,63]], [[51,48,50], makeNimstrLit("You know what I hate about fashion designers? They are so clothes-minded.")], [[51,48,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,115,112,105,100,101,114,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,65,32,114,97,105,115,105,110]], [[51,48,52], [65,32,109,97,110,32,119,97,108,107,115,32,105,110,116,111,32,97,32,98,97,114,46,46,46,32,72,101,32,115,97,121,115,32,34,79,119,34]], [[51,48,53], [87,104,105,99,104,32,105,115,32,116,104,101,32,109,111,115,116,32,115,105,108,107,121,32,112,108,97,110,101,116,63,32,83,97,116,105,110,33]], [[51,48,54], makeNimstrLit("What does a train full of grain\'s whistle sound like? \"COUS, COUS!!!\"")], [[51,48,55], makeNimstrLit("What do you say to someone who is making a cardboard belt? \"That\'s a waist of paper!\"")], [[51,48,56], makeNimstrLit("Why didn\'t the skeleton go to the party? He had no *body* to go with")], [[51,48,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,114,97,99,101,32,114,97,110,32,98,121,32,102,101,109,97,108,101,32,104,111,114,115,101,115,63,32,65,32,109,97,114,101,45,97,45,116,104,111,110,46]], [[51,49,48], makeNimstrLit("If April showers bring May flowers, what do May flowers bring? Pilgrims")], [[51,49,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,77,111,114,111,99,99,97,110,32,99,97,110,100,121,32,100,105,115,116,114,105,98,117,116,111,114,63,32,70,101,122,32,100,105,115,112,101,110,115,101,114,46]], [[51,49,50], makeNimstrLit("Did you hear about the production delays at that company that makes scales using lengthy pipes? They had really long weights.")], [[51,49,51], makeNimstrLit("We don\'t allow faster-than-light neutrinos in here, says the bartender. A neutrino walks into a bar.")], [[51,49,52], makeNimstrLit("Almonds on the tree; Amonds off the tree cause to get them off the tree you hafta shake the \"L\" out of them!")], [[51,49,53], makeNimstrLit("Did you hear the one about the constipated mathematician? He worked his problem out with a pencil.")], [[51,49,54], makeNimstrLit("How do crazy people go through the forest? They take the psycho-path.")], [[51,49,55], makeNimstrLit("What did the mama pig give her baby pig for its rash? ***OINKMENT!*** &gt; (This exchange that I found on /r/tumblr makes this joke even funnier to me: &gt; http://i.imgur.com/EzT0Bkd.jpg)")], [[51,49,56], makeNimstrLit("What do you call a one-eyed dinosaur? Doyouthinkhesarus (Credit goes to whoever submitted that to the Coffee News)")], [[51,49,57], makeNimstrLit("Why do bears hate shoes so much? They like to run around in their bear feet.")], [[51,50,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,71,114,111,117,110,100,32,98,101,101,102,46]], [[51,50,49], [72,111,119,32,100,111,32,121,111,117,32,116,104,105,110,107,32,116,104,101,32,117,110,116,104,105,110,107,97,98,108,101,63,32,87,105,116,104,32,97,110,32,105,116,104,101,98,117,114,103,46]], [[51,50,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,117,103,32,116,104,97,116,32,99,97,110,39,116,32,116,97,108,107,63,32,65,32,104,111,97,114,115,101,32,102,108,121,46]], [[51,50,51], makeNimstrLit("Always put sunglasses on your tree. Then, you\'ll get the proper shade.")], [[51,50,52], makeNimstrLit("Today I brought a computer back from the dead. I\'ve decided that this makes me a techromancer.")], [[51,50,53], [87,104,97,116,32,105,115,32,116,117,98,97,32,112,108,117,115,32,116,117,98,97,63,32,70,111,117,114,98,97,33]], [[51,50,54], makeNimstrLit("Two dogs are going on a walk down the street They walk past a few parking meters and one dog says to the other, \"Hey, check it out! Pay toilets!\"")], [[51,50,55], makeNimstrLit("Why couldn\'t Elsa hold on to a balloon? She would always let it go.")], [[51,50,56], makeNimstrLit("How can you tell if a hamburger was grilled in space? It\'s a little meteor.")], [[51,50,57], [87,104,97,116,32,100,105,100,32,116,104,101,32,97,109,97,122,101,100,32,75,97,122,97,107,104,115,116,97,110,105,32,115,97,121,63,32,84,104,97,116,39,115,32,65,115,116,97,110,97,45,115,104,105,110,103]], [[51,51,48], makeNimstrLit("Why don\'t blind people skydive? Because it scares their dogs too much!")], [[51,51,49], [87,104,101,110,32,105,115,32,97,32,100,111,111,114,32,110,111,116,32,97,32,100,111,111,114,63,32,87,104,101,110,32,105,116,39,115,32,97,32,106,97,114]], [[51,51,50], [87,104,97,116,39,115,32,77,101,100,117,115,97,39,115,32,102,97,118,111,114,105,116,101,32,107,105,110,100,32,111,102,32,99,104,101,101,115,101,63,32,71,111,114,103,111,110,122,111,108,97,46]], [[51,51,51], [87,104,121,32,68,111,101,115,32,83,110,111,111,112,32,68,111,103,103,32,110,101,101,100,32,97,110,32,117,109,98,114,101,108,108,97,63,32,70,111,114,32,100,114,105,122,122,108,101,44,32,109,121,32,110,105,122,122,108,101,46,32,58,68]], [[51,51,52], makeNimstrLit("My dental hygienist retired after working 55 years... All she got was a lousy plaque...")], [[51,51,53], makeNimstrLit("I\'ve just made a meeting site for retired chemists It\'s called Carbon Dating")], [[51,51,54], makeNimstrLit("What do you call a parade of rabbits hopping backwards? A receding hare-line.")], [[51,51,55], makeNimstrLit("Two wrongs don\'t make a right... but three lefts make a right. And two Wrights make a plane 6 lefts make a plane.")], [[51,51,56], makeNimstrLit("Why did the library book go to the doctor? It needed to be checked out; it had a bloated appendix.")], [[51,51,57], makeNimstrLit("A frog decided to trace his genealogy one day... He discovered he was a tad Polish.")], [[51,52,48], [84,119,111,32,97,114,116,105,115,116,115,32,104,97,100,32,97,110,32,97,114,116,32,99,111,110,116,101,115,116,46,46,46,32,73,116,32,101,110,100,101,100,32,105,110,32,97,32,100,114,97,119]], [[51,52,49], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,105,115,104,32,115,97,121,32,98,101,102,111,114,101,32,104,101,32,104,105,116,32,116,104,101,32,119,97,108,108,63,32,79,104,44,32,68,97,109,46]], [[51,52,50], makeNimstrLit("What\'s the smartest dinosaur? Thesaurus Rex! omg, I crack myself up! ~Skip")], [[51,52,51], [73,32,108,105,107,101,32,99,97,109,112,105,110,103,32,98,117,116,46,46,46,32,105,116,39,115,32,115,111,32,105,110,32,116,101,110,116,115]], [[51,52,52], makeNimstrLit("If the house is in the kitchen, and Diana\'s in the kitchen, what\'s in Diana? A state (Indiana)")], [[51,52,53], makeNimstrLit("A sentence and a phrase is arguing, what did the sentence say? I know where you\'re coming from this phrase, but I can\'t see your point.")], [[51,52,54], [87,104,97,116,39,115,32,98,114,111,119,110,32,97,110,100,32,115,111,117,110,100,115,32,108,105,107,101,32,97,32,98,101,108,108,63,32,68,117,110,103,46]], [[51,52,55], [87,104,97,116,39,115,32,97,32,98,97,108,108,111,111,110,39,115,32,102,97,118,111,114,105,116,101,32,103,101,110,114,101,32,111,102,32,109,117,115,105,99,63,32,80,111,112,46]], [[51,52,56], makeNimstrLit("Did you hear about what happened with the elk? It was really amoosing.")], [[51,52,57], makeNimstrLit("I got hit hard in the head with a can of 7up today... I\'m alright though, it was a soft drink.")], [[51,53,48], makeNimstrLit("What\'s so great about living in Switzerland? Well, the flag is a big plus.")], [[51,53,49], makeNimstrLit("Why did the girl quit her job at the donut factory? She was fed up with the hole business.")], [[51,53,50], makeNimstrLit("What colour T-shirt would win a race? Red, because it runs the most.")], [[51,53,51], [87,104,121,32,119,97,115,32,116,104,101,32,69,103,121,112,116,105,97,110,32,107,105,100,32,99,111,110,102,117,115,101,100,63,32,66,101,99,97,117,115,101,32,104,105,115,32,100,97,100,100,121,32,119,97,115,32,97,32,109,117,109,109,121]], [[51,53,52], makeNimstrLit("After watching a strongman competition... it amazed me to see how much the human body can lift without pooing itself.")], [[51,53,53], [87,104,97,116,32,100,105,100,32,116,104,101,32,79,32,115,97,121,32,116,111,32,116,104,101,32,56,63,32,78,105,99,101,32,98,101,108,116,46]], [[51,53,54], [87,104,121,32,119,97,115,32,116,104,101,32,98,117,114,114,105,116,111,32,101,109,98,97,114,114,97,115,115,101,100,63,32,73,116,32,115,97,119,32,116,104,101,32,115,97,108,97,100,32,100,114,101,115,115,105,110,103,46]], [[51,53,55], makeNimstrLit("How many tickles does it take to make an octopus laugh? Ten tickles")], [[51,53,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,117,110,99,104,32,111,102,32,65,115,105,97,110,32,98,101,97,114,115,32,114,111,97,114,105,110,103,63,32,80,97,110,100,97,45,109,111,110,105,117,109,46]], [[51,53,57], makeNimstrLit("What does a rock do all day? Nothing. (this joke was made by daughter when she was 5)")], [[51,54,48], [84,104,101,32,106,111,107,101,32,111,102,32,50,48,49,54,32,84,114,117,109,112]], [[51,54,49], [72,111,119,32,100,111,101,115,32,72,97,110,32,83,111,108,111,32,108,105,107,101,32,116,111,32,103,101,116,32,97,114,111,117,110,100,32,69,110,100,111,114,63,32,69,119,111,107,115]], [[51,54,50], [73,32,100,111,110,39,116,32,104,97,118,101,32,116,104,101,32,102,97,105,110,116,101,115,116,32,105,100,101,97,32,119,104,121,32,73,32,112,97,115,115,101,100,32,111,117,116,32,74,117,115,116,32,97,32,115,104,111,114,116,32,112,117,110]], [[51,54,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,118,101,103,101,116,97,114,105,97,110,63,32,65,32,104,111,112,101,108,101,115,115,32,114,111,109,97,105,110,101,45,116,105,99]], [[51,54,52], makeNimstrLit("I want to die peacefully in my sleep, like my grandfather... Unlike the passengers in his car who were screaming and yelling! http://www.thedailyenglishshow.com/friday-joke/98-how-to-die/")], [[51,54,53], makeNimstrLit("What do you call a chicken crossed with a cow? Cock-a-doodle-moo!")], [[51,54,54], makeNimstrLit("Kind of a kid joke What kind of cereal do zombies like? Kellog\'s All Brain")], [[51,54,55], makeNimstrLit("What did the farmer say when he lost his tractor? Where\'s my tractor?")], [[51,54,56], makeNimstrLit("What do you call a blind deer? No-eye deer. What do you call a blind deer with no legs? *Still* no-eye deer.")], [[51,54,57], makeNimstrLit("Why are proteins so cranky? Because they\'re made of a mean ol\' acids.")], [[51,55,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,97,99,104,121,100,101,114,109,32,116,104,97,116,32,100,111,101,115,110,39,116,32,109,97,116,116,101,114,63,32,73,114,114,101,108,101,112,104,97,110,116,46]], [[51,55,49], [87,104,97,116,32,97,114,101,32,99,97,116,101,114,112,105,108,108,97,114,115,32,97,102,114,97,105,100,32,111,102,63,32,68,79,71,101,114,112,105,108,108,97,114,115,33]], [[51,55,50], makeNimstrLit("Why should you never invite a boxer to a party? He always throws the punch.")], [[51,55,51], makeNimstrLit("How much does it cost for a pirate to get his ear pierced? A buccaneer.")], [[51,55,52], [73,32,119,97,115,32,97,100,100,105,99,116,101,100,32,116,111,32,116,104,101,32,104,111,107,101,121,32,112,111,107,101,121,32,98,117,116,32,73,32,116,117,114,110,101,100,32,109,121,115,101,108,102,32,97,114,111,117,110,100,46]], [[51,55,53], [87,104,121,32,100,105,100,110,39,116,32,116,104,101,32,98,105,99,121,99,108,101,32,99,114,111,115,115,32,116,104,101,32,114,111,97,100,63,32,46,46,46,104,101,32,119,97,115,32,116,119,111,45,116,105,114,101,100,46,46,46]], [[51,55,54], makeNimstrLit("Why did the Russians use peanuts for torture in the Cold War? Because in Soviet Russia, Nut Cracks You!")], [[51,55,55], [72,111,119,32,100,111,32,116,114,101,101,115,32,103,101,116,32,111,110,108,105,110,101,63,32,84,104,101,121,32,106,117,115,116,32,108,111,103,32,105,110,46,46,46]], [[51,55,56], makeNimstrLit("Apparently vegetables can hear when they\'re being eaten. So I always drown mine in salad dressing first. Because it\'s the Romaine thing to do.")], [[51,55,57], makeNimstrLit("Why were Wrigley, Doublemint, and Orbit watching CNN? To find out the latest on gum control legislation.")], [[51,56,48], [73,32,119,97,110,110,97,32,109,97,107,101,32,97,32,106,111,107,101,32,97,98,111,117,116,32,115,111,100,105,117,109,46,32,66,117,116,32,78,97,46]], [[51,56,49], makeNimstrLit("Why couldn\'t the melons be together? Everyone knows melons cantaloupe.")], [[51,56,50], makeNimstrLit("Why couldn\'t the alligator satisfy his lover? He had a reptile dysfunction.")], [[51,56,51], [87,104,97,116,39,115,32,97,32,98,108,105,110,100,32,112,101,114,115,111,110,39,115,32,102,97,118,111,114,105,116,101,32,102,97,115,116,32,102,111,111,100,32,106,111,105,110,116,63,32,84,97,99,111,32,66,114,97,105,108,108,101]], [[51,56,52], makeNimstrLit("The preacher today used Star Wars as a sermon illustration. I felt it was a little forced.")], [[51,56,53], makeNimstrLit("What did the grape say when it got stepped on? Nothing, it just gave a little wine")], [[51,56,54], makeNimstrLit("Why are giraffes\' necks so long? Because their heads are so far away from their bodies.")], [[51,56,55], [119,104,97,116,39,115,32,111,114,97,110,103,101,32,97,110,100,32,115,111,117,110,100,115,32,108,105,107,101,32,97,32,112,97,114,114,111,116,63,32,97,32,99,97,114,114,111,116,46]], [[51,56,56], makeNimstrLit("Why was the panda crying? He had a bambooboo. Aonther one from my 9 year old.")], [[51,56,57], [87,104,121,32,100,111,101,115,32,84,104,111,114,32,104,97,118,101,32,105,110,115,111,109,110,105,97,63,32,72,101,39,115,32,117,112,32,97,108,108,32,110,105,103,104,116,32,116,111,32,103,101,116,32,76,111,107,105,46]], [[51,57,48], [68,105,100,32,121,111,117,32,104,101,97,114,32,116,104,101,32,111,110,101,32,97,98,111,117,116,32,116,104,101,32,116,104,114,101,101,32,101,103,103,115,63,32,84,111,111,32,66,97,100,46]], [[51,57,49], makeNimstrLit("/r/askreddit thread \"What\'s the best clean joke you know\" with thousands of replies http://www.reddit.com/r/AskReddit/comments/zrotp/whats_the_best_clean_joke_you_know/")], [[51,57,50], makeNimstrLit("Chemistry Student I\'m a science teacher and once I asked one of my lazy students if he knew the chemical symbol for sodium. He replied, \'Na, I don\'t\'. Lucky sod, he\'s only ever right periodically.")], [[51,57,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,115,109,97,114,116,32,112,105,103,63,32,83,119,105,110,101,115,116,101,105,110,46]], [[51,57,52], makeNimstrLit("So, I have this new knock knock joke You start... (when you get it)")], [[51,57,53], makeNimstrLit("Captain Ahab\'s crew were highly efficient sailors In fact, they were running like a whale oiled machine.")], [[51,57,54], makeNimstrLit("What kind of fish would be good to tune a piano? Oh, you guessed it right ... the tuna fish!")], [[51,57,55], makeNimstrLit("Bulls from all over India sent a petition to SC asking it to classify them as \'Jallikatu Bulls\'.")], [[51,57,56], makeNimstrLit("Did you hear about NASA finding bones on the moon? Yeah,the cow didn\'t make it.")], [[51,57,57], makeNimstrLit("Some people have trouble sleeping... ...but I can do it with my eyes closed...")], [[52,48,48], makeNimstrLit("I think I want a job cleaning mirrors... ...it\'s just something I can see myself doing.")], [[52,48,49], makeNimstrLit("What did the eye say to the other eye? Something smells between us.")], [[52,48,50], makeNimstrLit("Did you hear about the kidnapping in Delaware? Don\'t worry, he eventually woke up.")], [[52,48,51], [87,104,97,116,32,97,110,105,109,97,108,32,105,115,32,98,101,115,116,32,97,116,32,104,105,116,116,105,110,103,32,97,32,98,97,115,101,98,97,108,108,63,32,65,32,98,97,116,33]], [[52,48,52], makeNimstrLit("Why did the octopus beat the shark in a fight? Because the octopus was well armed.")], [[52,48,53], makeNimstrLit("I\'ll always remember what my uncle said before he passed on up... \"Flying houses? Talking dogs? That movie looks dumb.\"")], [[52,48,54], [87,104,97,116,115,32,82,101,100,32,97,110,100,32,83,109,101,108,108,115,32,76,105,107,101,32,66,108,117,101,32,80,97,105,110,116,63,32,82,101,100,32,80,97,105,110,116]], [[52,48,55], makeNimstrLit("Why did Little Miss Muffet have GPS on her Tuffet? To keep her from losing her whey.")], [[52,48,56], makeNimstrLit("What do you call an obese psychic that works at a bank? A four chin teller")], [[52,48,57], makeNimstrLit("A man walked into a doctor\'s office . . . He said to the doctor: \"I\'ve hurt my arm in several places.\" The doctor said: \"Well don\'t go there any more.\"")], [[52,49,48], makeNimstrLit("Why did the chicken lay an egg? (Quoted from daughter at age 3) To get food for her babies!")], [[52,49,49], makeNimstrLit("Why do Gastroenterologists have such a passion for their job? Because they find the components of one\'s stomach very intestine.")], [[52,49,50], makeNimstrLit("Science joke The bartender says \"we don\'t serve your kind here\" He orders a drink A Tachyon walks into a bar Who wants to hear a Tachyon joke?")], [[52,49,51], [72,111,119,32,109,117,99,104,32,100,111,101,115,32,105,116,32,99,111,115,116,32,97,32,112,105,114,97,116,101,32,116,111,32,112,105,101,114,99,101,32,104,105,115,32,101,97,114,115,63,32,65,32,98,117,99,99,97,110,101,101,114,33]], [[52,49,52], makeNimstrLit("There\'s a TV channel where you can buy all the Pope\'s speeches It\'s called \"Papal View\".")], [[52,49,53], [83,111,32,116,111,100,97,121,32,105,115,32,69,97,114,116,104,32,100,97,121,32,111,110,32,119,104,97,116,32,103,114,111,117,110,100,115,32,97,114,101,32,119,101,32,99,101,108,101,98,114,97,116,105,110,103,63]], [[52,49,54], makeNimstrLit("What did one slice of bread say to the other at the end of a game of chess? \"It\'s stale, mate.\"")], [[52,49,55], makeNimstrLit("I heard it\'s a good night to see the Perseid meteor shower . . . . . . but I haven\'t heard how it got dirty.")], [[52,49,56], makeNimstrLit("Why shouldn\'t you have coffee while on the clock? Because that would be \"grounds\" for termination!")], [[52,49,57], makeNimstrLit("What is green, has four legs and if it fell out of a tree and landed on you it would kill you? A pool table!")], [[52,50,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,70,114,101,110,99,104,109,97,110,32,105,110,32,115,97,110,100,97,108,115,63,32,80,104,105,108,105,112,112,101,32,80,104,105,108,111,112,112,101,46]], [[52,50,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,116,114,117,116,104,102,117,108,32,112,105,101,99,101,32,111,102,32,112,97,112,101,114,63,32,70,97,120,46]], [[52,50,50], [87,104,97,116,32,116,121,112,101,32,111,102,32,109,101,108,111,110,32,119,111,117,108,100,32,82,111,109,101,111,32,97,110,100,32,74,117,108,105,101,116,32,104,97,118,101,32,98,101,101,110,63,32,67,97,110,116,97,108,111,117,112,101,46]], [[52,50,51], makeNimstrLit("What kind of turns do letters take? U-turns! *From my 9 year old son yesterday. Fixed typo.")], [[52,50,52], makeNimstrLit("What did one computer CPU say to the other after getting hit? Ow! That megahertz!")], [[52,50,53], makeNimstrLit("Knock knock. Who\'s there? A cow. A cow who? Not a cow \"who\"! A cow moos. An owl says \"who\".")], [[52,50,54], [68,105,100,32,121,111,117,32,116,97,107,101,32,97,32,115,104,111,119,101,114,32,116,111,100,97,121,63,32,87,104,121,44,32,105,115,32,111,110,101,32,109,105,115,115,105,110,103,63]], [[52,50,55], makeNimstrLit("What did the Hungarian say to the annoying kid? \"You\'re nothing budapest!\"")], [[52,50,56], makeNimstrLit("I was thinking of ways to become transgender... So I figured I\'d fly to Paris. Because then I\'d be abroad.")], [[52,50,57], makeNimstrLit("How does the Mummy plan to destroy Superman? He\'s gonna lure him in to the crypt tonight.")], [[52,51,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,111,110,101,32,108,101,103,63,32,83,116,101,97,107,46]], [[52,51,49], makeNimstrLit("What concert tickets should cost $0.45? 50 cent feat. Nickelback :P")], [[52,51,50], makeNimstrLit("A woman files for divorce from her husband... citing that he makes too many Star Wars puns. When asked if this is true the husband says, \"Divorce is strong with this one.\"")], [[52,51,51], makeNimstrLit("Why can\'t you run in a camp ground? You can only \'ran\'; it\'s past tents.")], [[52,51,52], [87,104,97,116,32,107,105,110,100,32,111,102,32,115,111,100,97,32,100,111,32,100,111,103,115,32,100,114,105,110,107,63,32,66,97,114,113,39,115,32,82,111,111,116,32,66,101,101,114,46]], [[52,51,53], makeNimstrLit("I saw a middle aged man staring at a picture of his very first steps. With tears in his eyes, he told me he regrets ever replacing the steps with an elevator.")], [[52,51,54], [91,79,67,93,32,87,104,121,32,99,111,117,108,100,110,39,116,32,116,104,101,32,100,114,97,103,111,110,32,98,114,101,97,116,104,101,32,102,105,114,101,63,32,72,101,32,104,97,100,32,97,32,99,111,108,100]], [[52,51,55], [87,104,97,116,32,100,111,32,102,105,115,104,32,115,109,111,107,101,63,32,83,101,97,119,101,101,100,33]], [[52,51,56], makeNimstrLit("Why is it a bad idea to get in a relationship with a statue? Because it\'s not going anywhere.")], [[52,51,57], makeNimstrLit("Where do you go to weigh a pie? Somewhere over the rainbow weigh a pie. (sounds like way up high)")], [[52,52,48], makeNimstrLit("I forgot where I threw my boomerang. Oh wait.. It\'s coming back to me now.")], [[52,52,49], makeNimstrLit("What did the Estonian student say in language class? I\'ll never Finnish. *dodges tomato*")], [[52,52,50], makeNimstrLit("What do you call the delivery boy at an Indian restaurant? Curry-er.")], [[52,52,51], makeNimstrLit("I had to clean out my spice rack and found everything was too old and had to be thrown out. What a waste of thyme.")], [[52,52,52], makeNimstrLit("Why were the breakfast potatoes running around hitting each other? HashTag!")], [[52,52,53], makeNimstrLit("What\'s the difference between Bird flu and swine flu? For one you get tweetment and the other you get oinkment...")], [[52,52,54], [87,104,101,114,101,32,100,111,32,100,111,103,115,32,103,111,32,119,104,101,110,32,116,104,101,121,32,108,111,115,101,32,116,104,101,105,114,32,116,97,105,108,115,63,32,84,111,32,97,32,114,101,116,97,105,108,32,115,116,111,114,101,46]], [[52,52,55], makeNimstrLit("I have the opposite of a photographic memory i have a potatographic memory.")], [[52,52,56], [87,104,121,32,100,105,100,32,116,104,101,32,118,101,103,101,116,97,98,108,101,32,98,97,110,100,32,98,114,101,97,107,32,117,112,63,32,84,104,101,121,32,99,111,117,108,100,110,39,116,32,107,101,101,112,32,97,32,98,101,101,116,46]], [[52,52,57], makeNimstrLit("Why did the Spy cross the road? \'Cause he wasn\'t really on your side.")], [[52,53,48], [87,104,97,116,39,115,32,111,114,97,110,103,101,32,97,110,100,32,115,111,117,110,100,115,32,108,105,107,101,32,97,32,112,97,114,114,111,116,63,32,65,32,99,97,114,114,111,116]], [[52,53,49], [73,32,105,110,118,101,110,116,101,100,32,97,32,116,105,109,101,32,109,97,99,104,105,110,101,46,46,46,32,46,46,46,110,101,120,116,32,119,101,101,107,46]], [[52,53,50], makeNimstrLit("Who was the only novelist with both direction and magnitude? Vector Hugo.")], [[52,53,51], makeNimstrLit("My plumber finally quit on me... He couldn\'t take any more of my crap. Sorry that this isn\'t a CLEAN joke. Heh")], [[52,53,52], makeNimstrLit("I went to the store and asked for a one handed sailor... he said sorry, \"I\'m a wholesaler.\"")], [[52,53,53], [119,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,101,102,102,101,109,105,110,97,116,101,32,100,119,97,114,102,63,32,65,32,109,101,116,114,111,45,103,110,111,109,101,46,46,46,46]], [[52,53,54], makeNimstrLit("I told my girlfriend she drew her eyebrows on too high she looked surprised.")], [[52,53,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,74,105,104,97,100,105,115,116,32,116,104,97,116,32,108,111,118,101,115,32,116,117,114,107,101,121,63,32,65,32,84,114,121,112,116,111,112,104,97,110,97,116,105,99,46]], [[52,53,56], makeNimstrLit("What did the Tin Man say when he got run over by a steamroller? Curses! Foil again!")], [[52,53,57], makeNimstrLit("Why there should be a February 30th So dentists can have a day to celebrate")], [[52,54,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,105,103,32,112,105,108,101,32,111,102,32,107,105,116,116,101,110,115,63,32,65,32,109,101,111,119,116,97,105,110,46]], [[52,54,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,97,114,99,97,100,101,32,105,110,32,101,97,115,116,101,114,110,32,101,117,114,111,112,101,63,32,99,122,101,99,104,45,101,45,99,104,101,101,115,101]], [[52,54,50], [77,121,32,114,101,108,97,116,105,111,110,115,104,105,112,32,105,115,32,108,105,107,101,32,77,111,110,111,112,111,108,121,46,32,83,104,101,32,103,105,118,101,115,32,109,101,32,116,111,111,32,109,97,110,121,32,67,104,97,110,99,101,115,46]], [[52,54,51], [72,111,119,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,100,101,101,114,32,119,105,116,104,32,110,111,32,101,121,101,115,63,32,78,111,32,105,100,101,97,46]], [[52,54,52], [87,104,121,32,100,105,100,32,116,104,101,32,98,105,99,121,99,108,101,32,102,97,108,108,32,111,118,101,114,63,32,66,101,99,97,117,115,101,32,105,116,32,119,97,115,32,116,119,111,32,116,105,114,101,100,46]], [[52,54,53], makeNimstrLit("What happened when the man couldn\'t afford the mortgage on his haunted house? ...it was repossessed!")], [[52,54,54], makeNimstrLit("My uncle wanted to give all his sheep a sex change... But it entailed too many ramifications!")], [[52,54,55], [72,111,119,32,109,97,110,121,32,100,97,110,99,101,114,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,99,104,97,110,103,101,32,97,32,108,105,103,104,116,98,117,108,98,63,32,53,44,54,44,55,44,56]], [[52,54,56], [87,104,97,116,32,119,97,115,32,119,114,111,110,103,32,119,105,116,104,32,116,104,101,32,119,111,111,100,101,110,32,99,97,114,63,32,73,116,32,119,111,111,100,101,110,32,103,111,46]], [[52,54,57], [87,104,97,116,32,100,111,32,99,97,118,101,115,32,104,97,118,101,63,32,69,99,104,111,115,121,115,116,101,109,115,46,32,70,114,111,109,32,109,121,32,57,32,121,101,97,114,45,111,108,100,46]], [[52,55,48], [79,110,101,32,102,105,102,116,104,32,111,102,32,112,101,111,112,108,101,46,46,46,32,46,46,46,97,114,101,32,106,117,115,116,32,116,111,111,32,116,101,110,115,101,33]], [[52,55,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,105,115,104,32,119,105,116,104,32,110,111,32,101,121,101,63,32,102,115,104]], [[52,55,50], [87,104,101,114,101,32,100,111,32,114,97,98,98,105,116,115,32,108,105,107,101,32,116,111,32,101,97,116,32,98,114,101,97,107,102,97,115,116,63,32,73,72,79,80,33]], [[52,55,51], makeNimstrLit("What did the wall ask the picture? (All together now!) ***\"How\'s it hangin\'?\"*** ~Skip")], [[52,55,52], makeNimstrLit("Me have great grammar... Me learnt everything I know from Sesame Street!")], [[52,55,53], makeNimstrLit("If I don\'t eat all of my food, it goes to waste. If I do eat all of my food, it goes to *waist*.")], [[52,55,54], makeNimstrLit("What did the green light say to the red light? I love you, but I\'m sick of yellow light always breaking us up.")], [[52,55,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,116,104,101,32,72,97,109,98,117,114,103,108,97,114,39,115,32,97,99,99,111,109,112,108,105,99,101,63,32,104,97,109,98,117,114,103,108,97,114,32,104,101,108,112,108,101,114]], [[52,55,56], makeNimstrLit("Did you hear about the fight in the candy store? Two suckers got licked")], [[52,55,57], makeNimstrLit("Did I tell you I\'m joining a gym in Gainesborough? Because I\'m all about those gains bro")], [[52,56,48], makeNimstrLit("I have a lot of jokes about the unemployed... ...but none of them work.")], [[52,56,49], makeNimstrLit("What is the last thing to go through a fly\'s mind when it hits a windshield? Its butt.")], [[52,56,50], [87,104,105,99,104,32,102,97,105,114,103,114,111,117,110,100,32,114,105,100,101,32,105,115,32,109,97,100,101,32,111,102,32,105,114,111,110,63,32,84,104,101,32,102,101,114,114,111,117,115,32,119,104,101,101,108]], [[52,56,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,117,108,105,109,105,99,32,116,114,101,101,63,32,83,121,99,97,109,111,114,101,46]], [[52,56,52], makeNimstrLit("Why was the lobster upset? Because he found out his friends thought he was a little crabby!")], [[52,56,53], makeNimstrLit("Did you hear about the ointment... Did you hear about the ointment that couldn\'t stop talking about politics? When confronted, he said he was just trying to be topical.")], [[52,56,54], [87,104,97,116,39,115,32,116,104,101,32,102,105,114,115,116,32,114,117,108,101,32,111,102,32,98,117,103,32,111,119,110,101,114,115,104,105,112,63,32,87,97,116,99,104,32,121,111,117,114,32,115,116,101,112,33]], [[52,56,55], [84,104,114,101,101,32,100,114,117,109,115,32,97,110,100,32,97,32,99,121,109,98,97,108,32,114,111,108,108,101,100,32,100,111,119,110,32,97,32,104,105,108,108,32,98,97,32,100,117,109,32,100,117,109,32,99,104,105,110,103]], [[52,56,56], [87,104,97,116,32,105,115,32,105,110,118,105,115,105,98,108,101,32,97,110,100,32,115,109,101,108,108,115,32,108,105,107,101,32,99,97,114,114,111,116,115,63,32,66,117,110,110,121,32,70,97,114,116,115,46]], [[52,56,57], [87,104,97,116,32,100,105,100,32,116,104,101,32,110,117,109,98,101,114,32,122,101,114,111,32,115,97,121,32,116,111,32,116,104,101,32,110,117,109,98,101,114,32,101,105,103,104,116,63,32,78,105,99,101,32,66,101,108,116]], [[52,57,48], makeNimstrLit("When I grow old, I am sure I will look back at my life and say \"aaaah! my neck hurts\"")], [[52,57,49], makeNimstrLit("The pollen count  that\'s a difficult job! [Credit to Milton Jones]")], [[52,57,50], makeNimstrLit("Why did the cowgirl name her pony ink? Because it kept running out of the pen!! My favorite joke when young :).")], [[52,57,51], makeNimstrLit("Did you know yesterday was National Middle Child Day? Don\'t worry, no one else remembered either.")], [[52,57,52], [72,97,118,101,32,121,111,117,32,104,101,97,114,100,32,97,98,111,117,116,32,116,104,101,32,50,32,83,112,97,110,105,115,104,32,102,105,114,101,109,101,110,63,32,74,111,115,101,32,97,110,100,32,104,111,115,101,32,66]], [[52,57,53], makeNimstrLit("There are two types of people in this world 1. Those who can extrapolate from incomplete data")], [[52,57,54], makeNimstrLit("What did the flat iron say to the follicle? Now let me get this straight . . .")], [[52,57,55], [54,58,51,48,32,105,115,32,116,104,101,32,98,101,115,116,32,116,105,109,101,32,111,110,32,97,32,99,108,111,99,107,46,46,46,32,46,46,46,104,97,110,100,115,32,100,111,119,110,46]], [[52,57,56], makeNimstrLit("I love graphs! I used to be obsessed with them... I\'ve calmed down now though, you\'ve gotta draw the line somewhere")], [[52,57,57], [87,104,97,116,32,107,105,110,100,32,111,102,32,99,97,114,32,100,105,100,32,116,104,101,32,71,101,114,109,97,110,32,99,111,119,98,111,121,32,112,117,114,99,104,97,115,101,63,32,65,117,100,105,32,42,116,105,112,115,32,104,97,116,42]], [[53,48,48], [71,97,114,98,97,103,101,32,109,101,110,32,104,97,118,101,32,72,101,102,116,121,32,99,111,110,116,114,97,99,116,115,46]], [[53,48,49], [68,111,108,112,104,105,110,115,32,100,111,110,39,116,32,100,111,32,97,110,121,116,104,105,110,103,32,98,121,32,97,99,99,105,100,101,110,116,46,46,32,65,108,119,97,121,115,32,111,110,32,112,111,114,112,111,105,115,101,46]], [[53,48,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,105,115,104,32,119,105,116,104,32,110,111,32,101,121,101,115,63,32,65,32,102,115,104]], [[53,48,51], [87,104,97,116,32,103,111,101,115,32,111,104,32,111,104,32,111,104,63,32,83,97,110,116,97,32,119,97,108,107,105,110,103,32,98,97,99,107,119,97,114,100,115,46]], [[53,48,52], makeNimstrLit("Why does a milking stool have only three legs? Because the cow has the udder!")], [[53,48,53], [65,32,115,107,101,108,101,116,111,110,32,119,97,108,107,115,32,105,110,116,111,32,97,32,98,97,114,32,111,114,100,101,114,115,32,97,32,98,101,101,114,32,97,110,100,32,97,32,109,111,112,46]], [[53,48,54], makeNimstrLit("First original joke! Why did the rapper visit the urologist? Because his flows were so sick.")], [[53,48,55], [87,104,97,116,39,115,32,103,114,97,121,32,97,110,100,32,97,108,108,32,97,114,111,117,110,100,63,32,69,118,101,114,121,116,104,105,110,103,46,32,73,39,109,32,97,32,100,111,103,46]], [[53,48,56], [126,116,105,112,115,32,102,101,100,111,114,97,32,97,116,32,109,111,115,113,117,105,116,111,126,32,77,108,97,114,105,97]], [[53,48,57], makeNimstrLit("Need help While scratching my ear with key few hours ago, audio on my brand new TV went off. Does anyone know good TV Service. Sh... I think my Laptop sound died too.")], [[53,49,48], [87,104,111,39,115,32,116,104,101,32,119,111,114,108,100,39,115,32,103,114,101,97,116,101,115,116,32,117,110,100,101,114,119,97,116,101,114,32,115,112,121,63,32,80,111,110,100,46,32,74,97,109,101,115,32,80,111,110,100,46]], [[53,49,49], [87,104,121,32,119,97,115,32,116,104,101,32,98,101,108,116,32,108,111,99,107,101,100,32,117,112,63,32,66,101,99,97,117,115,101,32,105,116,32,104,101,108,100,32,97,32,112,97,105,114,32,111,102,32,112,97,110,116,115,46]], [[53,49,50], [72,111,119,32,109,97,110,121,32,97,112,112,108,101,115,32,103,114,111,119,32,111,110,32,97,32,116,114,101,101,63,32,65,108,108,32,111,102,32,116,104,101,109,46]], [[53,49,51], makeNimstrLit("Alrighty Kids always remember: you are what you eat So eat loads of sweets and pass on those vegetables")], [[53,49,52], makeNimstrLit("How did the desk lamp store manager feel when thieves stole all his lightbulbs? He was delighted.")], [[53,49,53], makeNimstrLit("Did you hear about Scrooge\'s drinking problem? He had a dickens of a time with spirits.")], [[53,49,54], [67,111,103,105,116,111,32,69,114,103,111,32,83,112,117,100,46,32,73,32,116,104,105,110,107,44,32,116,104,101,114,101,102,111,114,101,32,73,32,121,97,109,46]], [[53,49,55], makeNimstrLit("What\'s the best part about twenty two year old wheels of cheese? There are twenty of them.")], [[53,49,56], makeNimstrLit("My brother said he\'s incontinent. Yeah, he said he\'s wet his pants in nearly every nation in the world.")], [[53,49,57], makeNimstrLit("What do you call an elephant with a poor memory? A bold and innovative departure from the hackneyed stereotypes that all too often dominate the joke-telling industry.")], [[53,50,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,110,111,115,101,32,119,105,116,104,111,117,116,32,97,32,98,111,100,121,63,32,78,111,98,111,100,121,32,107,110,111,119,115,46,46,46]], [[53,50,49], makeNimstrLit("How do you know ancient Egyptians loved books so much? Because they built their stuff with reads!")], [[53,50,50], makeNimstrLit("Old game show bloopers...I miss this kind of humor today Found this video randomly http://www.youtube.com/watch?v=xv3gK2bmkAk&amp;feature=related")], [[53,50,51], makeNimstrLit("Where do weirdos ride their bicycles? Psycho-paths. (as told by one of my coworkers)")], [[53,50,52], makeNimstrLit("Why do sailors give their wives a bouqet of ropes instead of flowers?? It\'s a bouqet of forget-me-knots.")], [[53,50,53], makeNimstrLit("What\'s the difference between a hippo and a zippo? One is really heavy, and the other is a little lighter.")], [[53,50,54], makeNimstrLit("Where did the cat go when it lost it\'s tail? To the retail store!")], [[53,50,55], makeNimstrLit("What do you call an Italian romance novel model who\'s let himself go? Flabio")], [[53,50,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,108,105,111,110,32,105,110,32,116,104,101,32,99,105,114,99,117,115,46,32,65,32,67,97,114,110,121,45,118,111,114,101]], [[53,50,57], makeNimstrLit("Actually, there are but two types of people Those who can extrapolate from limited data ...")], [[53,51,48], makeNimstrLit("Why\'d the chicken cross the Mobius strip? To get to the same side.")], [[53,51,49], makeNimstrLit("X-post from r/jokes: \"Hey! The dog you sold me yesterday just fell over and died today!\" \"Huh, strange. He\'s never done that before.\"")], [[53,51,50], makeNimstrLit("What is the longest word in the English language? SMILES because there is a mile between the first and last letters!")], [[53,51,51], [73,32,104,97,100,32,97,32,106,111,107,101,32,97,98,111,117,116,32,116,105,109,101,32,116,114,97,118,101,108,32,98,117,116,32,121,111,117,32,103,117,121,115,32,100,105,100,110,39,116,32,108,105,107,101,32,105,116,46]], [[53,51,52], [72,111,119,32,100,111,101,115,32,116,104,101,32,102,97,114,109,101,114,32,99,111,117,110,116,32,117,112,32,104,105,115,32,99,111,119,115,63,32,46,46,46,119,105,116,104,32,97,32,99,111,119,99,117,108,97,116,111,114,46]], [[53,51,53], [73,32,119,111,117,108,100,32,109,97,107,101,32,97,32,115,112,97,114,114,111,119,32,106,111,107,101,46,46,46,32,66,117,116,32,116,104,101,121,32,100,111,110,39,116,32,102,108,121,32,118,101,114,121,32,119,101,108,108,46]], [[53,51,54], makeNimstrLit("Why did the golfer need to buy a new pair of socks? Because he got a hole in one!")], [[53,51,55], makeNimstrLit("Why don\'t you want to hang out with a dude from Chicago? Because \'Illinois you!")], [[53,51,56], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,105,115,104,32,115,97,121,32,119,104,101,110,32,105,116,32,104,105,116,32,116,104,101,32,119,97,108,108,63,32,68,97,109]], [[53,51,57], makeNimstrLit("What does Colonel Mustard\'s Mexican maid call him? *(Phonetically-ish)* Mis\'ser Dijon.")], [[53,52,48], makeNimstrLit("Did you hear about the man who was accidentally buried alive? It was a grave mistake. Woohoo! I\'m making these up!!")], [[53,52,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,104,97,112,112,121,32,112,101,110,103,117,105,110,63,32,65,32,112,101,110,103,114,105,110,33]], [[53,52,50], makeNimstrLit("What did the green grape say to the purple grape? \"Breathe you idiot! Breathe!\"")], [[53,52,51], makeNimstrLit("Did you hear about the two monocles at the party? They made spectacles out of themselves.")], [[53,52,52], makeNimstrLit("What do you get when you drop a piano in a coal mine? A flat minor. Night... Don\'t forget to tip your waitress")], [[53,52,53], [87,97,110,110,97,32,104,101,97,114,32,97,32,100,105,114,116,121,32,106,111,107,101,63,32,65,32,119,104,105,116,101,32,104,111,114,115,101,32,102,101,108,108,32,105,110,32,116,104,101,32,109,117,100,46]], [[53,52,54], makeNimstrLit("A skeleton walks into a bar The bartender says, what will you have? Skeleton says, a beer... and a mop")], [[53,52,55], makeNimstrLit("My daughter hit me with this one while preparing for dinner Why did the table love playing volleyball? Because it was always getting set! I think she gets it from her mother.")], [[53,52,56], [72,111,119,32,100,105,100,32,116,104,101,32,97,113,117,97,114,105,117,109,32,119,105,110,32,116,104,101,32,98,97,116,116,108,101,63,32,71,105,97,110,116,32,70,105,115,104,32,84,97,110,107,115,46]], [[53,52,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,97,108,108,105,103,97,116,111,114,32,105,110,32,97,32,118,101,115,116,63,32,65,110,32,105,110,118,101,115,116,105,103,97,116,111,114]], [[53,53,48], [87,104,97,116,32,100,111,101,115,32,97,32,100,117,99,107,32,99,97,108,108,32,97,32,116,114,97,99,116,111,114,63,32,65,32,113,117,97,99,107,116,111,114]], [[53,53,49], makeNimstrLit("What did daddy fish do when mommy fish got herself lost? ...He flounder")], [[53,53,50], makeNimstrLit("There are three types of people in this world. Those who can count and those who can\'t.")], [[53,53,51], [87,104,121,32,100,105,100,32,116,104,101,32,99,104,105,99,107,101,110,32,107,105,108,108,32,105,116,115,101,108,102,63,32,84,111,32,103,101,116,32,116,111,32,116,104,101,32,111,116,104,101,114,32,115,105,100,101,46]], [[53,53,52], makeNimstrLit("Why can\'t you hear a pterodactyl use the restroom? Because the *p* is silent")], [[53,53,53], makeNimstrLit("I thought about starting a business selling halos... ...but the cost of overheads was too high.")], [[53,53,54], [87,104,101,114,101,32,100,105,100,32,116,104,101,32,116,101,97,109,32,103,101,116,32,116,104,101,114,101,32,117,110,105,102,111,114,109,115,63,32,78,101,119,32,74,101,114,115,101,121]], [[53,53,55], [80,114,111,103,114,97,109,109,101,114,115,32,116,101,110,100,32,116,111,32,98,121,116,101,32,116,104,101,105,114,32,102,111,111,100]], [[53,53,56], makeNimstrLit("What do you call a group of security guards in front of a Samsung store? Guardians of the Galaxy.")], [[53,53,57], [73,32,104,101,97,114,100,32,116,104,101,32,98,101,115,116,32,116,105,109,101,32,116,114,97,118,101,108,32,106,111,107,101,32,116,111,109,111,114,114,111,119,46]], [[53,54,48], makeNimstrLit("What do you call a woman on a cruise ship in Mexico using the diving board at the pool? A broad abroad on a board aboard.")], [[53,54,49], makeNimstrLit("What did the topic sentence say to the evidence? Why aren\'t you supporting me?")], [[53,54,50], makeNimstrLit("What do you get when you mix Michael Jordan with Donald Trump? A Dunkin\' Donut.")], [[53,54,51], makeNimstrLit("Two horses are standing in a field. \"I\'m so hungry I could eat a horse\" Says the first. \"Moo!\" says the second")], [[53,54,52], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,105,108,101,32,111,102,32,107,105,116,116,101,110,115,63,32,65,32,109,101,111,119,116,105,110]], [[53,54,53], makeNimstrLit("What happens to a frog\'s car when it breaks down? It gets toad away.")], [[53,54,54], makeNimstrLit("Two peanuts were walking down the street.... And one of them was assaulted")], [[53,54,55], makeNimstrLit("If you walk into the bathroom an American and walk out an American, what are you in the bathroom? European.")], [[53,54,56], makeNimstrLit("An ion walked up to Lost and Found and reported that he had lost an electron. The clerk asked:are you sure? The ion replied :Yes, I am positive.VCN")], [[53,54,57], makeNimstrLit("What do you say to your sister when she\'s crying? Are you having a crisis?")], [[53,55,48], makeNimstrLit("What do you call a cross between a gorilla and a monkey? A cross.")], [[53,55,49], makeNimstrLit("What do you call it when Google Glass connects to the internet? Eye-fi.")], [[53,55,50], makeNimstrLit("Why did the Kurd bury his music collection? His tribesman said \"ISIL is approaching, and they\'re coming for Yazidis.\"")], [[53,55,51], [84,104,105,115,32,109,97,108,108,97,114,100,32,119,97,100,100,108,101,100,32,105,110,116,111,32,97,32,98,97,114,46,46,46,32,83,104,111,117,108,100,39,118,101,32,100,117,99,107,101,100,46]], [[53,55,52], makeNimstrLit("We now have TWO Wawa\'s by the interstate. The one on the east side of I4 is not so bad. But the other one, whoa. It\'s the Wawa West over there.")], [[53,55,53], makeNimstrLit("What\' the difference between roast beef and pea soup? Anyone can roast beef, but not everyone can pea soup. (As told by my 8yo, who made me laugh with a joke for the first time. Proud dad moment.)")], [[53,55,54], makeNimstrLit("the only one of its kind on this sub Want to hear a dirty joke? horse fell in the mud!")], [[53,55,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,105,116,32,119,104,101,110,32,66,97,116,109,97,110,32,115,107,105,112,115,32,99,104,117,114,99,104,63,32,67,104,114,105,115,116,105,97,110,32,66,97,108,101,46]], [[53,55,56], makeNimstrLit("What do you call a social media platform designed for religious people who also have speech impediments? Faithbook")], [[53,55,57], makeNimstrLit("I\'m so sad because my friend is moving to Shanghai. More like Shang-bye.")], [[53,56,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,97,108,108,105,103,97,116,111,114,32,105,110,32,97,32,118,101,115,116,63,32,73,110,118,101,115,116,105,103,97,116,111,114,46]], [[53,56,49], makeNimstrLit("How to create a clean joke Step 1. Find a dirty joke Step 2. Clean it")], [[53,56,50], makeNimstrLit("A skelleton goes to the bar and says \"Can I have a pint and a mop...\"")], [[53,56,51], makeNimstrLit("Did you hear about the fortune teller that... Had bad breath, calluses all over his body and couldn\'t win a fight? He was a Super Callused Fragile Mystic Hexed with halitosis.")], [[53,56,52], makeNimstrLit("Why was the scarecrow promoted? Because he was outstanding in his field!")], [[53,56,53], makeNimstrLit("My friend gave me a balloon and told me not to pop it.. but I blew it!")], [[53,56,54], makeNimstrLit("My old roommate\'s bathroom was so dirty- -I had to clean the soap before using it. (Seriously.)")], [[53,56,55], makeNimstrLit("Why did the paper follow the pencil? Because it LED THE WAY! I\'m on a roll here! this is fun! ~Skip")], [[53,56,56], makeNimstrLit("Why does a chicken coupe only have two doors? If it had four it\'d be a chicken sedan!")], [[53,56,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,111,110,108,121,32,116,119,111,32,108,101,103,115,63,32,76,101,97,110,32,66,101,101,102,33]], [[53,57,48], makeNimstrLit("Why was the school grey? Because it was a Greyed School. I woke up with this joke in my head this morning. I think my brain is trying to kill me with horrible puns.")], [[53,57,49], makeNimstrLit("Want to hear a clean Joke? Johnny took a bath with bubbles. Want to hear a dirty one? Bubbles is a man")], [[53,57,50], makeNimstrLit("Why do sharks swim in salt water? Because pepper would make them sneeze!")], [[53,57,51], makeNimstrLit("A Siri joke!: Two iPhones walk into a bar... ...Carrying a set of iPod shuffles. The bartender says: &gt; Let those iPods sing, man! He was an iSurfer on iPad mini.")], [[53,57,52], makeNimstrLit("I used to work at an orange juice factory... I ended up getting fired because I couldn\'t concentrate.")], [[53,57,53], [74,117,115,116,32,119,114,111,116,101,32,97,32,98,111,111,107,32,111,110,32,114,101,118,101,114,115,101,32,112,115,121,99,104,111,108,111,103,121,46,46,46,32,68,111,110,39,116,32,114,101,97,100,32,105,116,33]], [[53,57,54], makeNimstrLit("Why did the melon get married in a church? Because he was in love with a cantaloupe.")], [[53,57,55], makeNimstrLit("Why do fish live in salt water? Because *pepper* makes them sneeze!")], [[53,57,56], [87,104,121,32,119,97,115,32,116,104,101,32,97,112,114,105,99,111,116,32,108,97,116,101,32,116,111,32,116,104,101,32,112,97,114,116,121,63,32,72,101,32,103,111,116,32,115,116,117,99,107,32,105,110,32,97,32,106,97,109,46]], [[53,57,57], [80,97,115,115,119,111,114,100,115,32,49,50,51,52,53,54,32,97,98,99,100,101,102,32,80,97,115,115,119,111,114,100]], [[54,48,48], [73,32,107,110,101,119,32,73,32,119,97,115,32,111,108,100,32,119,104,101,110,32,73,32,111,112,101,110,101,100,32,105,110,116,101,114,110,101,116,32,101,120,112,108,111,114,101,114,46]], [[54,48,49], makeNimstrLit("What does a storm cloud have on beneath its clothes? Thunderwear!")], [[54,48,50], makeNimstrLit("Where does the little king keep his little armies? Up his little sleevies.")], [[54,48,51], [34,87,104,97,116,32,107,105,110,100,32,111,102,32,104,111,117,115,101,32,100,111,101,115,32,99,104,101,101,115,101,32,108,105,107,101,32,116,111,32,108,105,118,101,32,105,110,63,34,32,34,65,32,99,111,116,116,97,103,101,34]], [[54,48,52], [87,104,121,32,100,105,100,32,116,104,101,32,98,117,108,108,101,116,32,115,116,97,121,32,104,111,109,101,63,32,66,101,99,97,117,115,101,32,105,116,32,103,111,116,32,102,105,114,101,100,33]], [[54,48,53], [87,104,97,116,32,100,111,32,118,101,103,97,110,32,122,111,109,98,105,101,115,32,101,97,116,63,32,71,82,65,65,65,65,73,78,83]], [[54,48,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,101,99,111,110,111,109,105,99,115,32,108,101,99,116,117,114,101,114,63,32,80,114,111,102,46,32,105,116]], [[54,48,55], makeNimstrLit("/r/cleanjokes hits 10K subscribers **/r/cleanjokes metrics:** Total Subscribers: 10,000 Subreddit Rank: 2,246 Milestones &amp; Subreddit Growth: http://redditmetrics.com/r/cleanjokes")], [[54,48,56], [87,104,121,32,100,105,100,32,116,104,101,32,114,111,112,101,32,103,101,116,32,112,117,116,32,105,110,32,116,105,109,101,111,117,116,63,32,66,101,99,97,117,115,101,32,104,101,32,119,97,115,32,118,101,114,121,32,107,110,111,116,116,121,46]], [[54,48,57], makeNimstrLit("What do mathematicians get if they stare at the roots of negative numbers for too long? Square eyes")], [[54,49,48], makeNimstrLit("I\'m going to stand outside... So if anyone asks, I am outstanding.")], [[54,49,49], [87,104,97,116,32,105,115,32,70,111,114,114,101,115,116,32,71,117,109,112,39,115,32,102,97,118,111,114,105,116,101,32,112,97,115,116,97,63,32,80,101,110,110,101]], [[54,49,50], [87,104,101,114,101,32,100,105,100,32,116,104,101,32,117,110,105,118,101,114,115,101,32,97,116,116,101,110,100,32,99,111,108,108,101,103,101,63,32,65,116,32,116,104,101,32,117,110,105,118,101,114,115,105,116,121,46]], [[54,49,51], makeNimstrLit("How do you find Will Smith in the winter? You search for Fresh Prints.")], [[54,49,52], makeNimstrLit("Why did the squirrel cross the road on the telephone wire? To be on the safe side!")], [[54,49,53], [87,104,97,116,32,105,115,32,80,97,117,108,97,32,68,101,101,110,39,115,32,102,97,118,111,114,105,116,101,32,105,110,115,101,99,116,63,32,84,104,101,32,66,117,116,116,101,114,102,108,121]], [[54,49,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,97,110,116,101,108,111,112,101,32,116,104,97,116,32,119,97,110,116,115,32,97,32,98,105,103,32,119,101,100,100,105,110,103,63,32,67,97,110,116,101,108,111,112,101]], [[54,49,55], makeNimstrLit("Why did no one ever consider Tony Stark (the Iron Man) a protagonist? Because he was always cited as the Anthony hero.")], [[54,49,56], makeNimstrLit("What\'s the difference between a firstborn prince and a baseball? A baseball is thrown to the air.")], [[54,49,57], makeNimstrLit("What do you call an Autobot who works in an overpriced makeup store at the mall ? Ulta Magnus!")], [[54,50,48], makeNimstrLit("I can\'t stand Russian Dolls... They\'re always so full of themselves!")], [[54,50,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,71,114,111,117,110,100,32,98,101,101,102,46]], [[54,50,50], makeNimstrLit("A teacher asked her students to use the word \"beans\" in a sentence... \"My father grows beans,\" said one girl. \"My mother cooks beans,\" said a boy. A third student spoke up, \"We are all human beans.\"")], [[54,50,51], makeNimstrLit("What did the mailman say when his Mail truck caught fire? That he needed to address the situation")], [[54,50,52], makeNimstrLit("Math problem: I had 10 chocolate bars and ate 9. What do I have now? \"Oh, I do not know, DIABETES MAYBE!\"")], [[54,50,53], [87,104,121,32,100,111,110,39,116,32,99,97,110,110,105,98,97,108,115,32,108,105,107,101,32,99,108,111,119,110,115,63,32,116,104,101,121,32,116,97,115,116,101,32,102,117,110,110,121,33]], [[54,50,54], makeNimstrLit("What\'s the difference between pea soup and roast beef? Anyone can roast beef...")], [[54,50,55], makeNimstrLit("Did you know that protons have mass? &gt;Yes Well I didn\'t even know they were Catholic!")], [[54,50,56], makeNimstrLit("How do you find Will Smith in the snow? Look for the fresh prints.")], [[54,50,57], makeNimstrLit("*THUD* \"What was that?\" \"My pants fell down.\" \"...Why so loud?\" \"I\'m wearing them.\"")], [[54,51,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,73,116,97,108,105,97,110,32,103,117,121,32,119,105,116,104,32,97,32,114,117,98,98,101,114,32,116,111,101,63,32,82,111,98,101,114,116,111]], [[54,51,49], makeNimstrLit("What does a ghost cow say? *wave arms around* MoooooOOOOOOoooooooo")], [[54,51,50], makeNimstrLit("How much does wonton soup weigh? One ton, but I don\'t know anyone that\'d wantonly order it.")], [[54,51,51], makeNimstrLit("Saitama tried to change his Facebook password to Goku but Facebook said it was too weak...")], [[54,51,52], [87,104,121,32,100,105,100,32,116,104,101,32,102,108,121,32,102,108,121,63,32,66,101,99,97,117,115,101,32,116,104,101,32,115,112,105,100,101,114,32,115,112,105,101,100,32,104,101,114,46]], [[54,51,53], makeNimstrLit("What do you call a boomerang that doesn\'t come back? pt 2 A boomer-WRONG!")], [[54,51,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,77,101,120,105,99,97,110,32,119,105,116,104,32,99,114,97,122,121,32,105,110,116,101,110,116,105,111,110,115,63,32,65,32,108,111,99,111,109,111,116,105,118,101,33]], [[54,51,55], [72,111,119,32,109,97,110,121,32,110,105,104,105,108,105,115,116,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,115,99,114,101,119,32,105,110,32,97,32,108,105,103,104,116,98,117,108,98,63,32,35]], [[54,51,56], [87,104,101,114,101,32,100,111,32,115,110,111,119,109,101,110,32,100,97,110,99,101,63,32,65,116,32,116,104,101,32,115,110,111,119,98,97,108,108,33]], [[54,51,57], [87,104,121,32,105,115,32,97,32,115,104,111,111,116,105,110,103,32,115,116,97,114,32,98,101,116,116,101,114,32,116,104,97,110,32,97,32,104,97,109,98,117,114,103,101,114,63,32,73,116,39,115,32,109,101,116,101,111,114,46]], [[54,52,48], makeNimstrLit("Why did the vegetables hop into the boiling pot of water? They were part of a stewicide pact.")], [[54,52,49], makeNimstrLit("I find hanging around in coffee shops A great way to espresso yourself")], [[54,52,50], makeNimstrLit("First post and an original How much does a Chinese elephant weigh? .................. Wonton")], [[54,52,51], makeNimstrLit("Heard the one about the corduroy pillowcase? It\'s making headlines.")], [[54,52,52], makeNimstrLit("What do you get when you drop a piano down a mineshaft? A flat miner.")], [[54,52,53], makeNimstrLit("Why did the spider land on the keyboard? She wanted a new website.")], [[54,52,54], makeNimstrLit("Why did the woman buy new wine glasses? Because the ones she was using made everything blurry.")], [[54,52,55], makeNimstrLit("What did one dry erase marker say to the other? I\'m bored! (As in board) Another one from my 9 year-old.")], [[54,52,56], makeNimstrLit("What did the tailpipe say to the muffler? I\'m exhausted. What did the muffler say back? ^mmmmbfmbm")], [[54,52,57], makeNimstrLit("What do you cal a bear with extreme mood swings? A bi-polar bear.")], [[54,53,48], [87,104,121,32,100,105,100,32,116,104,101,32,115,110,97,105,108,32,100,114,105,110,107,32,98,101,101,114,63,32,84,111,32,99,111,109,101,32,111,117,116,32,111,102,32,105,116,115,32,115,104,101,108,108,33]], [[54,53,49], makeNimstrLit("If I bought a balloon for $0.99 ... How much should I sell it for when I adjust for inflation?")], [[54,53,50], [73,32,119,101,110,116,32,111,117,116,32,119,105,116,104,32,97,110,111,114,101,120,105,99,32,116,119,105,110,115,32,108,97,115,116,32,110,105,103,104,116,46,46,46,32,50,32,98,105,114,100,115,44,32,49,32,115,116,111,110,101]], [[54,53,51], makeNimstrLit("Why should you never invest in bakeries? Because they have a high turnover rate.")], [[54,53,52], makeNimstrLit("a disability, a curse word and a radical interpretation of scripture walk into a bar nothing happened welcome to /r/cleanjokes")], [[54,53,53], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,101,97,114,32,119,105,116,104,32,110,111,32,116,101,101,116,104,63,32,42,65,32,103,117,109,109,121,32,98,101,97,114,46,42]], [[54,53,54], makeNimstrLit("Barely amusing Japanese joke Why are snakes so difficult to pick up in Japan? Because in Japan, snakes are hebi.")], [[54,53,55], makeNimstrLit("A priest, a minister, and a rabbit walk into a bar... ...and the bartender says, \"What is this, a joke?\"")], [[54,53,56], makeNimstrLit("No matter what anyone said, I was never going to take the stand. It\'s 1000 pages, for Pete\'s sake!")], [[54,53,57], makeNimstrLit("Why couldn\'t the skeleton cross the street? Because he didn\'t have the guts!")], [[54,54,48], [87,104,121,32,100,111,110,39,116,32,99,114,97,98,115,32,103,105,118,101,32,116,111,32,99,104,97,114,105,116,105,101,115,63,32,84,104,101,121,32,97,114,101,32,115,104,101,108,108,102,105,115,104,46]], [[54,54,49], makeNimstrLit("Why did the mortgage broker go out of business? ...because he lost interest.")], [[54,54,50], makeNimstrLit("My buddy the hacker took the quiz \"What Beatles song best describes your life.\" The answer he got: \"My Way\".")], [[54,54,51], makeNimstrLit("I hear that in Star Wars VIII they\'re going to introduce Han\'s perpetually depressed younger brother. His name is Y Solo.")], [[54,54,52], makeNimstrLit("Did you hear about the skeleton who didn\'t go to prom? He had no body to go with.")], [[54,54,53], makeNimstrLit("What do you call a group of people standing in the arctic circle? A Finnish line.")], [[54,54,54], [87,104,97,116,115,32,98,114,111,119,110,32,97,110,100,32,114,104,121,109,101,115,32,119,105,116,104,32,34,115,110,111,111,112,34,63,32,68,114,46,32,68,114,101]], [[54,54,55], makeNimstrLit("I came into this subreddit expecting jokes about soap. I am mildly disappointed.")], [[54,54,56], [87,104,97,116,32,103,97,109,101,32,100,111,32,121,111,117,32,112,108,97,121,32,119,105,116,104,32,97,32,119,111,109,98,97,116,63,32,87,111,109,46]], [[54,54,57], makeNimstrLit("Wash the alligator clips with rubbing alcohol during flu season Protect yourself from catching a terminal illness.")], [[54,55,48], [87,104,97,116,32,97,103,101,32,119,101,114,101,32,112,105,103,115,32,100,105,115,99,111,118,101,114,101,100,32,105,110,63,32,84,104,101,32,83,97,117,115,32,65,103,101,46]], [[54,55,49], makeNimstrLit("You\'ve got to really be careful when ingesting shoes... cause they\'re usually laced")], [[54,55,50], makeNimstrLit("Did you hear about the guy who invented a knife that can cut four loaves of bread at once? He\'s calling it the \"Four Loaf Cleaver.\"")], [[54,55,51], [65,114,109,97,100,105,108,108,111,32,84,104,101,32,119,111,114,108,100,32,110,101,101,100,115,32,109,111,114,101,32,97,114,109,101,100,32,100,105,108,108,111,115,46]], [[54,55,52], [84,104,105,115,32,105,115,32,97,110,32,88,32,97,110,100,32,90,32,99,111,110,118,101,114,115,97,116,105,111,110,46,46,46,32,89,32,97,114,101,32,121,111,117,32,105,110,32,116,104,101,32,109,105,100,100,108,101,63]], [[54,55,53], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,105,115,104,32,115,97,121,32,119,104,101,110,32,105,116,32,115,119,97,109,32,105,110,116,111,32,116,104,101,32,119,97,108,108,63,32,68,97,109,46]], [[54,55,54], makeNimstrLit("Heart attack When is the worst possible time to have a heart attack? When you are playing Charades.")], [[54,55,55], makeNimstrLit("The hole in the boat So two guys steal a boat and get drunk. Kane of them goes \"Hey, there is a hole in this boat\". The other says \"don\'t worry it\'s not ours\".")], [[54,55,56], [87,104,97,116,32,105,115,32,97,32,116,117,110,97,39,115,32,102,97,118,111,114,105,116,101,32,99,105,116,121,63,32,65,108,98,97,99,111,114,101,113,117,101,46]], [[54,55,57], makeNimstrLit("What kind of pants does Super Mario wear? [Denim, denim, denim.](http://www.youtube.com/watch?v=c0SuIMUoShI)")], [[54,56,48], [87,104,121,32,100,105,100,32,116,104,101,32,99,111,112,32,119,97,107,101,32,117,112,32,104,105,115,32,115,111,110,63,32,84,111,32,115,116,111,112,32,97,32,107,105,100,32,110,97,112,112,105,110,103,46]], [[54,56,49], makeNimstrLit("I hate people who talk about me behind my back... They discussed me.")], [[54,56,50], makeNimstrLit("What did the Buddhist say to the hotdog vendor? Make me one with everything.")], [[54,56,51], makeNimstrLit("I came up with a joke about my old cell phone Nevermind, it tends to get terrible reception")], [[54,56,52], [87,104,97,116,32,100,105,100,32,109,117,115,105,99,32,116,101,108,108,32,116,104,101,32,112,97,110,99,97,107,101,115,63,32,66,32,102,108,97,116,46]], [[54,56,53], makeNimstrLit("What\'s Anakin Skywalker\'s favorite animal? Well, it was cats, originally, but then he was turned to the dog side.")], [[54,56,54], makeNimstrLit("Have you seen the movie - Constipated? No? Why? Cause it hasn\'t come out yet!")], [[54,56,55], makeNimstrLit("Why did the people not like the restaurant on the moon? There was no atmosphere")], [[54,56,56], makeNimstrLit("Why did the grocery delivery guy get fired? He drove people bananas!")], [[54,56,57], [87,104,97,116,32,100,111,101,115,32,97,32,116,104,101,115,97,117,114,117,115,32,101,97,116,32,102,111,114,32,98,114,101,97,107,102,97,115,116,63,32,65,32,115,121,110,111,110,121,109,32,114,111,108,108,46]], [[54,57,48], [87,104,97,116,32,100,111,101,115,32,67,97,112,116,97,105,110,32,75,105,114,107,32,119,101,97,114,32,116,111,32,116,104,101,32,102,105,116,110,101,115,115,32,99,101,110,116,101,114,63,32,74,105,109,32,115,104,111,114,116,115,46]], [[54,57,49], [68,105,100,32,121,111,117,32,104,101,97,114,32,97,98,111,117,116,32,116,104,101,32,108,97,119,121,101,114,32,102,111,114,32,85,50,63,32,72,101,32,119,97,115,32,80,114,111,45,66,111,110,111]], [[54,57,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,111,108,100,32,102,114,117,105,116,45,112,105,99,107,101,114,32,105,110,32,87,105,115,99,111,110,115,105,110,63,32,67,104,101,114,114,121,45,97,116,114,105,99]], [[54,57,51], makeNimstrLit("I heard she accidentally spilled her chocolate milkshake on her white poodle- -knick knack paddy whack give the dog a... bath!!!")], [[54,57,52], makeNimstrLit("An idea for a board game... BONOPOLY - Similar to Monopoly, but where the streets have no name.")], [[54,57,53], [77,97,114,121,32,104,97,100,32,97,32,108,105,116,116,108,101,32,108,97,109,98,46,32,83,104,101,39,115,32,110,111,116,32,97,32,118,101,103,97,110,32,97,110,121,109,111,114,101,46]], [[54,57,54], [87,104,97,116,32,100,105,100,32,48,32,115,97,121,32,116,111,32,56,63,32,78,105,99,101,32,98,101,108,116,33]], [[54,57,55], [83,97,110,116,97,32,107,101,101,112,115,32,104,105,115,32,115,117,105,116,115,32,105,110,32,116,104,101,32,99,108,97,117,115,101,116,46]], [[54,57,56], makeNimstrLit("Why couldn\'t the woman date a German man? Because she was Klaustrophobic!")], [[54,57,57], makeNimstrLit("Knock! Knock! Knock! Knock! Whos there? Control Freak. Con Okay, now you say, Control Freak who?")], [[55,48,48], makeNimstrLit("How did the townspeople react when the mayor presented them with a cost efficient, vegan protein source? They chia\'d.")], [[55,48,49], makeNimstrLit("Did you hear that H.P. Lovecraft wrote a cookbook? It\'s called the Necronomnomnomicon.")], [[55,48,50], makeNimstrLit("Why should you leery of stairs? Because they are always up to something.")], [[55,48,51], makeNimstrLit("I\'m calculating how much it would cost to install lights for a little league baseball field A ballpark estimate would be perfect")], [[55,48,52], [87,104,97,116,32,105,115,32,116,104,101,32,104,111,114,114,111,114,32,109,111,118,105,101,32,81,117,105,106,97,32,114,97,116,101,100,63,32,81,117,105,106,97,45,49,51]], [[55,48,53], makeNimstrLit("So, a guy gave his friend 10 puns, hoping that one of them would make him laugh. Sadly, no pun in ten did.")], [[55,48,54], makeNimstrLit("What was the allergic 2\"X4\"\'s terrifying hallucination? He sawdust.")], [[55,48,55], [87,104,97,116,39,115,32,111,114,97,110,103,101,32,97,110,100,32,115,111,117,110,100,115,32,108,105,107,101,32,97,32,80,97,114,114,111,116,63,32,65,32,67,97,114,114,111,116]], [[55,48,56], [87,104,97,116,39,115,32,98,114,111,119,110,32,97,110,100,32,115,116,105,99,107,121,63,32,65,32,115,116,105,99,107,46]], [[55,48,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,104,101,102,32,119,104,111,39,115,32,115,116,105,110,103,121,32,119,105,116,104,32,104,101,114,98,115,63,32,80,65,82,83,76,69,89,77,79,78,73,79,85,83]], [[55,49,48], [87,104,105,99,104,32,85,83,32,115,116,97,116,101,32,105,115,32,116,104,101,32,102,114,105,101,110,100,108,105,101,115,116,32,116,111,119,97,114,100,115,32,116,104,101,32,74,97,112,97,110,101,115,101,63,32,79,104,105,111]], [[55,49,49], makeNimstrLit("A classic: what do you call somebody with no body and no nose? Nobody knows.")], [[55,49,50], [119,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,97,107,101,32,110,111,111,100,108,101,63,32,65,110,32,105,109,112,97,115,116,97,33,32,58,68]], [[55,49,51], [87,104,97,116,32,100,111,32,69,110,103,105,110,101,101,114,115,32,117,115,101,32,97,115,32,98,105,114,116,104,32,99,111,110,116,114,111,108,63,32,84,104,101,105,114,32,80,101,114,115,111,110,97,108,105,116,121,46]], [[55,49,52], [72,111,119,32,109,117,99,104,32,100,111,101,115,32,97,32,112,105,114,97,116,101,32,101,97,114,105,110,103,32,99,111,115,116,63,32,65,32,98,117,99,99,97,110,101,101,114]], [[55,49,53], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,97,108,108,105,103,97,116,111,114,32,119,105,116,104,32,97,32,118,101,115,116,63,32,65,110,32,73,110,118,101,115,116,105,103,97,116,111,114,33]], [[55,49,54], [83,101,118,101,110,32,100,97,121,115,32,119,105,116,104,111,117,116,32,97,32,106,111,107,101,32,109,97,107,101,115,32,111,110,101,32,119,101,97,107,46]], [[55,49,55], makeNimstrLit("I\'m a social person. I\'m friends with 25 letters of the alphabet. I don\'t know why.")], [[55,49,56], makeNimstrLit("My grandpa started walking five miles a day when he was 60... Now hes 97 years old and we have no idea where he is...")], [[55,49,57], [87,104,101,114,101,32,100,111,32,116,111,105,108,101,116,115,32,108,105,118,101,63,32,80,111,114,99,101,108,32,76,97,110,101,46]], [[55,50,48], makeNimstrLit("Why did the Country Bear Jamboree bear blush? Because he was a bear a-singing. ..... I am at Disney with the kids this week...")], [[55,50,49], [87,104,97,116,39,115,32,97,32,109,97,114,116,105,110,105,39,115,32,102,97,118,111,114,105,116,101,32,103,97,114,110,105,115,104,63,32,79,108,105,118,101,32,39,101,109,33]], [[55,50,50], makeNimstrLit("Why did the chess master order a Russian bride? He needed a Chech mate!")], [[55,50,51], makeNimstrLit("What\'s the difference between a bag of chips and a duck with the flu? One\'s a quick snack and the other\'s a sick quack!")], [[55,50,52], makeNimstrLit("Why didn\'t the cargo ship want to leave the bay? Because it was a freight!")], [[55,50,53], makeNimstrLit("What do you call someone who really loves breakfast? A cereal killer.")], [[55,50,54], makeNimstrLit("What did Captain Ahab say when he harpooned a whale\'s tail fin on the first try? \"Well that was a fluke.\"")], [[55,50,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,115,111,109,101,111,110,101,32,116,104,97,116,32,115,116,101,97,108,115,32,115,104,111,101,115,63,32,65,32,115,110,101,97,107,101,114,46]], [[55,50,56], makeNimstrLit("What song can never be played on #throwback Thursday? Friday by Rebecca Black")], [[55,50,57], [87,104,97,116,32,100,105,100,32,116,104,101,32,110,101,117,116,114,105,110,111,32,115,97,121,32,116,111,32,116,104,101,32,112,108,97,110,101,116,63,32,74,117,115,116,32,112,97,115,115,105,110,103,32,116,104,114,111,117,103,104]], [[55,51,48], [87,104,97,116,32,100,111,32,121,111,117,32,100,111,32,119,105,116,104,32,101,112,105,108,101,112,116,105,99,32,108,101,116,116,117,99,101,63,32,89,111,117,32,109,97,107,101,32,97,32,115,101,105,122,117,114,101,32,115,97,108,97,100,33]], [[55,51,49], makeNimstrLit("Did you hear they\'re republishing that Simple Mathematics study guide? It\'s the revised edition. (Revise Addition)")], [[55,51,50], makeNimstrLit("Do you have a hole in your sock? \"No ...\" *(looks at sock)* . . How\'d you get your foot in it?")], [[55,51,51], [87,104,97,116,32,100,111,101,115,32,97,32,98,97,107,101,114,32,119,101,97,114,32,111,110,32,104,105,115,32,102,101,101,116,63,32,76,111,97,102,101,114,115,46]], [[55,51,52], [87,104,97,116,32,99,97,114,115,32,100,111,32,99,111,119,115,32,100,114,105,118,101,63,32,67,97,116,116,108,101,97,99,115]], [[55,51,53], makeNimstrLit("I was at Redbox, but I didn\'t know what to watch. I consulted my groceries, and my pizza said, \"Keep Frozen.\"")], [[55,51,54], makeNimstrLit("What do you get when you cross a pig and a spider? Bacon and scrambled leggs.")], [[55,51,55], makeNimstrLit("Why didn\'t the fisherman go to Florida to fish for long jawed fish with rows of razor like teeth? He didn\'t have a Gar")], [[55,51,56], makeNimstrLit("Why don\'t robots have any brothers anymore? Because they have trans-sisters.")], [[55,51,57], [87,104,97,116,115,32,98,108,117,101,32,97,110,100,32,115,109,101,108,108,115,32,108,105,107,101,32,114,101,100,32,112,97,105,110,116,63,32,66,108,117,101,32,112,97,105,110,116]], [[55,52,48], makeNimstrLit("Darth Vader told me he knows what i\'m getting for Christmas He said he felt my presents...")], [[55,52,49], [87,104,121,32,100,105,100,32,116,104,101,32,104,105,112,112,105,101,32,100,114,111,119,110,63,32,72,101,32,119,97,115,32,116,111,111,32,42,102,97,114,32,111,117,116,42,33]], [[55,52,50], makeNimstrLit("What\'s the difference between a Jew and a pizza? The pizza can have ham and cheese together.")], [[55,52,51], [68,101,102,105,110,101,32,34,87,105,108,108,34,32,73,115,110,39,116,32,105,116,32,111,98,118,105,111,117,115,63,32,73,116,39,115,32,97,32,100,101,97,100,32,103,105,118,101,97,119,97,121,33]], [[55,52,52], makeNimstrLit("There\'s a wreath hanging on my door with hundred dollar bills attached. I call it an Aretha Franklin. c:")], [[55,52,53], [72,111,119,32,109,97,110,121,32,114,111,97,100,115,32,109,117,115,116,32,97,32,109,97,110,32,119,97,108,107,63,32,52,50,46]], [[55,52,54], makeNimstrLit("What is a spectre\'s favorite theme park attraction? The Roller Ghoster")], [[55,52,55], [87,104,97,116,32,100,111,101,115,32,97,32,110,111,115,101,121,32,112,101,112,112,101,114,32,100,111,63,32,71,101,116,115,32,106,97,108,97,112,101,110,111,32,98,117,115,105,110,101,115,115,33]], [[55,52,56], makeNimstrLit("Did you know that in high school, Robert E. Lee was voted \"most likely to secede?\"")], [[55,52,57], makeNimstrLit("Did you hear the Offspring song about how to store mummies? \"You gotta keep \'em desiccated\"")], [[55,53,48], makeNimstrLit("This is 2 girls with 1 cup. [A.K.A. Friends At (a) Cafe Bar](http://www.gettyimages.com/detail/photo/friends-at-cafe-bar-high-res-stock-photography/156534295)")], [[55,53,49], makeNimstrLit("Why were the treefrog\'s stories always so attention grabbing? Because he was absolutely ribbeting!")], [[55,53,50], makeNimstrLit("What do you call a slice of bread from another country? An immigraint.")], [[55,53,51], makeNimstrLit("You know what they say about men that have big feet? #They wear big shoes! *Come on guys, this is /r/cleanjokes! Get your minds out of the gutter!*")], [[55,53,52], makeNimstrLit("Q: What do you call a deer with no eyes? A: No eye deer (No idea) Q: What do you call a quadriplegic deer with no eyes? A: Still, no eye deer. (Still no idea)")], [[55,53,53], [72,111,119,32,109,97,110,121,32,103,111,108,102,101,114,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,99,104,97,110,103,101,32,97,32,108,105,103,104,116,32,98,117,108,98,63,32,70,79,85,82,33]], [[55,53,54], makeNimstrLit("What did the famous musician say the moment he was born? *I\'LL BE BACH*")], [[55,53,55], makeNimstrLit("What did the pebble say to the rock? I wish I was a little boulder!")], [[55,53,56], [87,104,97,116,32,103,111,101,115,32,117,112,32,97,110,100,32,100,111,119,110,32,98,117,116,32,100,111,101,115,32,110,111,116,32,109,111,118,101,63,32,83,116,97,105,114,115]], [[55,53,57], makeNimstrLit("In what town lives the mathematician who can only multiply by two? Dublin.")], [[55,54,48], makeNimstrLit("What did the buffalo say to his son when he left for college? Bison")], [[55,54,49], makeNimstrLit("Why do Jamaican chickens make fun of all the other chickens? Because they\'re jerks.")], [[55,54,50], makeNimstrLit("Did y\'all hear the one about the professional jump-roper? Never mind. *Skip it*.")], [[55,54,51], makeNimstrLit("The victim\'s body was found in the kitchen surrounded by eight empty boxes of cornflakes. Police suspect it was the work of a serial killer.")], [[55,54,52], [34,83,116,97,121,32,115,116,114,111,110,103,33,34,32,73,32,115,97,105,100,32,116,111,32,109,121,32,119,105,45,102,105,32,115,105,103,110,97,108,46]], [[55,54,53], makeNimstrLit("Pick up line for a Shakespeare lover. How now brown chicken brown cow?")], [[55,54,54], makeNimstrLit("Why did the snail draw an \"S\" on the side of his car? So that when he drove by people could say, \"Look at that escargot!\"")], [[55,54,55], makeNimstrLit("When do you know you are getting a good deal on a boat? When there\'s a sail on it.")], [[55,54,56], makeNimstrLit("What happens if socialism comes to the Sahara? Old Soviet-era joke told in Russia: What happens if socialism comes to the Sahara? Nothing at first, but then the sand shortages will start.")], [[55,54,57], [72,111,119,32,100,111,32,115,97,105,108,111,114,115,32,102,105,110,105,115,104,32,97,32,99,111,114,110,121,32,106,111,107,101,32,111,110,32,97,32,98,111,97,116,63,32,66,97,32,100,117,109,32,115,104,105,112,46]], [[55,55,48], [87,104,97,116,39,115,32,116,104,101,32,98,101,115,116,32,112,97,114,116,32,111,102,32,97,32,98,97,107,101,114,39,115,32,98,111,100,121,63,32,84,104,101,105,114,32,98,117,110,115,46]], [[55,55,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,99,111,102,102,101,101,32,109,97,100,101,32,102,114,111,109,32,99,111,97,108,63,32,84,97,114,98,117,99,107,115,46]], [[55,55,50], makeNimstrLit("What did the three holes in the ground say? Well, well, well My grandpa\'s favorite joke. Took me five years to get it.")], [[55,55,51], makeNimstrLit("When you ask a girl, Wanna go to the gym with me? https://www.youtube.com/watch?v=rQegAi6d-MM")], [[55,55,52], makeNimstrLit("I once ate a watch. It was time consuming, I didn\'t go back for seconds.")], [[55,55,53], makeNimstrLit("Why do zombies always kill at comedy clubs? Because their jokes are told post-humorously!")], [[55,55,54], makeNimstrLit("What do you get when you cross a crocodile with a cartridge? A snapshot.")], [[55,55,55], [87,104,101,114,101,32,100,111,32,121,111,117,32,108,101,97,114,110,32,116,111,32,109,97,107,101,32,105,99,101,32,99,114,101,97,109,63,32,83,117,110,100,97,101,32,83,99,104,111,111,108]], [[55,55,56], makeNimstrLit("What is a rocket\'s favorite meal? Launch! Another one from my 9 year old.")], [[55,55,57], [87,104,97,116,32,100,111,32,108,97,119,121,101,114,115,32,119,101,97,114,32,116,111,32,99,111,117,114,116,63,32,76,97,119,115,117,105,116,115,46]], [[55,56,48], [87,104,97,116,32,100,111,32,116,104,101,121,32,99,97,108,108,32,97,32,109,111,110,97,115,116,101,114,121,32,107,101,121,32,116,104,97,116,32,111,112,101,110,115,32,97,108,108,32,100,111,111,114,115,63,32,77,111,110,107,32,107,101,121]], [[55,56,49], [73,32,102,101,108,108,32,105,110,32,116,104,101,32,109,117,100,46,32,65,110,100,32,116,111,111,107,32,97,32,115,104,111,119,101,114,32,114,105,103,104,116,32,97,102,116,101,114,33]], [[55,56,50], [70,97,114,116,32,116,117,116,111,114,32,119,97,110,116,101,100,44,32,109,117,115,116,32,104,97,118,101,32,114,101,102,101,114,101,110,99,101,115]], [[55,56,51], [73,32,100,111,32,109,121,32,98,101,115,116,32,119,104,101,110,32,109,121,32,109,97,110,97,103,101,114,32,112,117,116,115,32,97,32,103,117,110,32,116,111,32,109,121,32,104,101,97,100,46]], [[55,56,52], makeNimstrLit("What do you call someone who majors in geology and astronomy A rockstar")], [[55,56,53], makeNimstrLit("I rang up a local builder and said, \"I want a skip outside my house.\" He said, \"I\'m not stopping you.\" **Tim Vine**")], [[55,56,54], [87,104,97,116,32,107,105,110,100,32,111,102,32,98,105,114,100,32,99,97,110,32,119,114,105,116,101,63,32,65,32,112,101,110,103,117,105,110,46]], [[55,56,55], makeNimstrLit("What did the bunny say to the frog? [My name is Rabbit, not ribbit!!](https://www.youtube.com/watch?v=CYkDxsaHlkg)")], [[55,56,56], makeNimstrLit("What do you get when you cross an elephant and a rhino? \'ell if I know wot to call it!")], [[55,56,57], makeNimstrLit("Why did the chef invest in chicken and cow bones? He wanted to buy stock options.")], [[55,57,48], [87,104,97,116,32,115,105,100,101,32,111,102,32,97,32,108,101,111,112,97,114,100,32,104,97,115,32,116,104,101,32,109,111,115,116,32,115,112,111,116,115,63,32,84,104,101,32,111,117,116,115,105,100,101]], [[55,57,49], [72,111,119,32,119,97,115,32,116,104,101,32,82,111,109,97,110,32,69,109,112,105,114,101,32,99,117,116,32,105,110,32,116,119,111,63,32,87,105,116,104,32,97,32,112,97,105,114,32,111,102,32,67,97,101,115,97,114,115,46]], [[55,57,50], makeNimstrLit("What\'s faster hot or cold? Hot! Because anyone can catch a cold! buh duh tsst")], [[55,57,51], makeNimstrLit("What did one octopus say to the other octopus? Will you hold my hand hand hand hand hand hand hand hand?")], [[55,57,52], makeNimstrLit("Why do fish always sing off key? Because you can\'t tune a fish. Say it outloud if you don\'t get it. I made this one up in first grade IIRC.")], [[55,57,53], makeNimstrLit("[PICKLE] Our first chance to help our new ally! http://www.reddit.com/r/pickle/comments/1a2xg8/next_attack_for_our_entire_army_march_12th_at_520/")], [[55,57,54], [87,104,97,116,32,116,121,112,101,32,111,102,32,99,104,101,101,115,101,32,108,105,118,101,115,32,117,110,100,101,114,32,121,111,117,114,32,98,101,100,63,32,77,117,101,110,115,116,101,114,46]], [[55,57,55], [87,104,97,116,32,100,105,100,32,116,104,101,32,48,32,115,97,121,32,116,111,32,116,104,101,32,56,63,32,46,46,46,32,72,101,121,44,32,110,105,99,101,32,98,101,108,116,46,46]], [[55,57,56], [72,111,119,32,100,111,101,115,32,97,32,100,117,99,107,32,112,97,121,32,102,111,114,32,108,105,112,115,116,105,99,107,63,32,83,104,101,32,112,117,116,115,32,105,116,32,111,110,32,104,101,114,32,98,105,108,108]], [[55,57,57], makeNimstrLit("So I work in a Steak House and all the people there are really lazy So I must say after working there: That it\'s rare to see a job well done")], [[56,48,48], makeNimstrLit("What is H.P. Lovecraft\'s cook book called? The Necronomnomnomicon.")], [[56,48,49], [87,104,121,32,100,105,100,32,116,104,101,32,114,97,98,98,105,116,32,103,111,32,116,111,32,114,101,104,97,98,63,32,72,101,32,119,97,115,32,104,111,112,112,101,100,32,117,112,32,111,110,32,101,97,115,116,101,114,32,101,103,103,115,46]], [[56,48,50], makeNimstrLit("Knock Knock... 1.Knock knock. Whos there? Yoda lady. Yoda lady who? Good job yodeling! 2.Knock knock. Whos there? Well, not your parents, because your parents never knock!")], [[56,48,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,99,104,101,101,115,101,32,116,104,97,116,32,105,115,110,39,116,32,121,111,117,114,115,63,32,78,97,99,104,111,32,99,104,101,101,115,101,33]], [[56,48,52], makeNimstrLit("Reinventing Yourself http://dryinginside.blogspot.com/2012/10/reinventing-yourself-doesnt-always-work.html")], [[56,48,53], makeNimstrLit("What do you call a Macho Man Randy Savage that does not belong to you? &gt;Nacho Man Randy Savage!!!!! this is my original content!!!!")], [[56,48,54], [87,104,97,116,32,100,111,101,115,32,116,104,101,32,104,111,114,115,101,32,99,97,108,108,32,116,104,101,32,112,105,103,115,32,111,110,32,104,105,115,32,102,97,114,109,63,32,78,101,105,103,104,45,98,111,97,114,115,46]], [[56,48,55], [87,104,97,116,39,115,32,98,114,111,119,110,32,97,110,100,32,115,116,105,99,107,121,63,32,65,32,115,116,105,99,107]], [[56,48,56], makeNimstrLit("What is the world famous Chef Gordan\'s favorite football team? The Ramsays")], [[56,48,57], makeNimstrLit("My shower had a bit of mildew- -but all it took was a little... scrubbing!!!")], [[56,49,48], makeNimstrLit("Choose a major you love and you won\'t have to work for a day in your life Because that major probably has no jobs (not an original)")], [[56,49,49], [87,104,101,110,32,105,115,32,98,111,111,103,101,114,32,110,111,116,32,97,32,98,111,111,103,101,114,63,32,87,104,101,110,32,105,116,40,39,115,32,110,111,116,41,46]], [[56,49,50], makeNimstrLit("What\'s the longest word in the dictionary? \"Smiles\" because there is a mile between each S!")], [[56,49,51], makeNimstrLit("At the end of the Age of Dinosaurs what happened to the good ones? They got veloci-raptured.")], [[56,49,52], [87,104,105,99,104,32,80,111,107,101,109,111,110,32,103,111,116,32,97,32,99,111,108,100,63,32,80,105,107,45,97,45,99,104,111,111,46]], [[56,49,53], makeNimstrLit("What do you call someone who\'s studied Old Norse literature and become an expert. Well edda-cated.")], [[56,49,54], makeNimstrLit("What instrument does God play? He plays the cello. As it says in scripture: \"Our God is a cellist God.\"")], [[56,49,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,108,121,32,119,105,116,104,32,110,111,32,119,105,110,103,115,63,32,65,32,119,97,108,107,46]], [[56,49,56], makeNimstrLit("Want to hear a joke about a crappy restaurant? Nevermind, I\'m afraid it may be in poor taste.")], [[56,49,57], makeNimstrLit("Knock knock Who\'s there? Abby. Abby who. A bee has stolen my wallet. (I will show my self out)")], [[56,50,48], makeNimstrLit("Which celebrity is great at creating probate documents? Will Smith")], [[56,50,49], makeNimstrLit("Why couldn\'t Joe be friends with a double-amputee? Because he\'s lack-toes intolerant.")], [[56,50,50], makeNimstrLit("What do you say when you find two banana peels together? Answer: A pair of slipper")], [[56,50,51], makeNimstrLit("Why cant college students take exams at the zoo? Too many cheetahs")], [[56,50,52], makeNimstrLit("I saw this man and woman wrapped in a barcode... I asked, Are you two an item?")], [[56,50,53], makeNimstrLit("A photon walks into a hotel. The bellhop asks if he needs help with his bags. The photon says, \"no, I\'m travelling light. \"")], [[56,50,54], makeNimstrLit("If you\'re not buying kraft mac and cheese you might be buying an impasta.")], [[56,50,55], [72,111,119,32,100,111,32,121,111,117,32,109,97,107,101,32,97,32,107,108,101,101,110,101,120,32,100,97,110,99,101,63,32,89,111,117,32,112,117,116,32,97,32,108,105,116,116,108,101,32,66,111,111,103,105,101,32,105,110,32,105,116,33]], [[56,50,56], makeNimstrLit("TV playback craziness [Through the eyes of Adrienne Hedger](https://www.facebook.com/HedgerHumor/photos/pb.630201143662377.-2207520000.1443863939./1179935295355623/?type=3&amp;theater). :)")], [[56,50,57], makeNimstrLit("What do you call a very religious person who sleep walks? A Roman Catholic.")], [[56,51,48], makeNimstrLit("I don\'t have a Facebook or Twitter account... ...so I just go around announcing out loud what I\'m doing at random times. I\'ve got 3 followers so far, but I think 2 are cops.")], [[56,51,49], makeNimstrLit("Soap addiction I used to be addicted to soap. But I\'m clean now!!")], [[56,51,50], [87,104,121,32,105,115,32,54,32,97,102,114,97,105,100,32,111,102,32,55,63,32,66,101,99,97,117,115,101,32,55,44,32,56,44,32,57,46]], [[56,51,51], [87,104,97,116,32,68,105,100,32,68,101,108,97,119,97,114,101,63,32,65,32,98,114,97,110,100,32,78,101,119,32,74,101,114,115,101,121,33]], [[56,51,52], makeNimstrLit("Why don\'t you see penguins in Britain? Because they\'re afraid of Wales")], [[56,51,53], makeNimstrLit("New Internet acronym: RALSHMICOMN Rolling Around Laughing So Hard Milk Is Coming Out My Nose")], [[56,51,54], [72,111,119,32,100,111,32,121,111,117,32,107,105,108,108,32,97,32,99,105,114,99,117,115,63,32,89,111,117,32,115,116,97,98,32,105,116,32,105,110,32,116,104,101,32,106,117,103,103,108,101,114,46]], [[56,51,55], makeNimstrLit("More retailers should adopt the \"Leave A Penny / Take A Penny\" system. It is literally, common cents.")], [[56,51,56], [72,111,119,32,109,117,99,104,32,100,111,32,112,105,114,97,116,101,115,32,112,97,121,32,102,111,114,32,101,97,114,114,105,110,103,115,63,32,97,98,111,117,116,32,97,32,98,117,99,107,32,97,110,32,101,97,114,46]], [[56,51,57], makeNimstrLit("Why did the boy throw a clock out the window? He wanted to see time fly.")], [[56,52,48], makeNimstrLit("Which word is the longest in the English language? Smiles - because there is a mile between the first and last letters")], [[56,52,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,101,114,115,111,110,32,119,104,111,32,102,97,114,116,115,32,105,110,32,112,114,105,118,97,116,101,63,32,65,32,112,114,105,118,97,116,101,32,116,117,116,111,114]], [[56,52,50], makeNimstrLit("Why did the raisin take the prune to the new year\'s ball? Because he couldn\'t find a date!")], [[56,52,51], makeNimstrLit("Why did the chicken soup cross the road? Because it was down hill!")], [[56,52,52], makeNimstrLit("What did one math book say to the other math book? We\'ve got a lot of problems.")], [[56,52,53], makeNimstrLit("Two competing podiatrists opened offices next door to each other... They were arch enemies. Edit: Spelling")], [[56,52,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,102,97,107,101,32,71,101,114,109,97,110,32,99,117,114,114,101,110,99,121,63,32,81,117,101,115,116,105,111,110,32,109,97,114,107,115]], [[56,52,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,97,116,32,112,115,121,99,104,105,99,63,32,65,32,102,111,117,114,32,99,104,105,110,32,116,101,108,108,101,114,46]], [[56,52,56], makeNimstrLit("How does Harry Houdini tell people to steal stuff? Straight jack it.")], [[56,52,57], makeNimstrLit("Why can\'t you hear a pterodactyl urinate? Because of the silent P.")], [[56,53,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,69,103,121,112,116,105,97,110,32,98,111,110,101,45,115,101,116,116,101,114,63,32,67,97,105,114,111,45,112,114,97,99,116,111,114,46]], [[56,53,49], makeNimstrLit("My first job... My first job out of college was a \"diesel fitter\" at a pantyhose factory... As they came off the line, I would hold them up and say, \"Yep, deez\'ll fit her!\"")], [[56,53,50], makeNimstrLit("What did the closed can say to the half opened can? YOU\'RE BEING UNCANNY!")], [[56,53,51], makeNimstrLit("Whats the problem with tainted money? It taint yours and it taint mine :D (Puns for the win? :D)")], [[56,53,52], makeNimstrLit("What do you call it when someone resuscitates a person who chokes on alcohol? La chaim-lich maneuver.")], [[56,53,53], [72,111,119,32,109,97,110,121,32,109,105,110,105,109,97,108,105,115,116,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,115,99,114,101,119,32,105,110,32,97,32,108,105,103,104,116,32,98,117,108,98,63,32,49]], [[56,53,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,108,111,97,102,32,98,97,107,101,100,32,105,110,32,97,32,122,111,111,63,32,66,114,101,97,100,32,105,110,32,99,97,112,116,105,118,105,116,121,46]], [[56,53,55], [87,104,101,114,101,32,100,111,101,115,32,97,32,114,105,118,101,114,32,107,101,101,112,32,105,116,39,115,32,109,111,110,101,121,63,32,65,116,32,116,104,101,32,98,97,110,107,46]], [[56,53,56], [87,104,97,116,32,115,105,100,101,32,111,102,32,97,32,116,117,114,107,101,121,32,104,97,115,32,116,104,101,32,109,111,115,116,32,102,101,97,116,104,101,114,115,63,32,84,104,101,32,111,117,116,115,105,100,101,46]], [[56,53,57], makeNimstrLit("My teacher\'s nickname in school is Flush. He always has the same suit.")], [[56,54,48], [87,104,97,116,32,107,105,110,100,32,111,102,32,100,105,115,104,32,100,111,101,115,32,76,101,66,114,111,110,32,108,105,107,101,63,32,97,110,121,116,104,105,110,103,32,119,105,116,104,32,99,117,114,114,121,32,105,110,32,105,116,46]], [[56,54,49], makeNimstrLit("There are 10 types of people in the world. Those who understand binary code and those who do not.")], [[56,54,50], [87,104,97,116,32,100,111,32,108,97,119,121,101,114,115,32,119,101,97,114,32,116,111,32,99,111,117,114,116,63,32,76,97,119,32,115,117,105,116,115,33]], [[56,54,51], makeNimstrLit("Why are the nordic countries the best countries to live in? Their flags are big plusses.")], [[56,54,52], makeNimstrLit("When Captain Picard\'s sewing machine broke he brought it to the repairman and said... \"make it sew.\"")], [[56,54,53], makeNimstrLit("My brother... Likes driving black and white F1 race cars. They call him the F1 racist.")], [[56,54,54], makeNimstrLit("What is green, fuzzy, and will kill you if it falls out of a tree? A pool table. [Thanks, Wagon Train camper!]")], [[56,54,55], makeNimstrLit("How do you make a tissue dance? You put a boogie in it! (Not sure of the spelling, heard it from someone).")], [[56,54,56], [87,104,111,32,109,97,107,101,115,32,116,104,101,32,115,119,101,101,116,101,115,116,32,118,105,100,101,111,32,103,97,109,101,115,63,32,77,97,115,97,104,105,114,111,32,83,97,99,99,104,97,114,105,100,101]], [[56,54,57], makeNimstrLit("Someone dropped their Scrabble in the middle of the road... ...that\'s the word on the street anyway.")], [[56,55,48], makeNimstrLit("Harry Potter can\'t tell the difference between his cooking pot and his best friend. [X Post from r/Fantasy] They\'re both cauldron.")], [[56,55,49], makeNimstrLit("My dog chewed up my laptop... I guess he wanted a byte to eat! ^imagine ^this ^in ^zoidberg\'s ^voice")], [[56,55,50], makeNimstrLit("Why did the chicken cross the playground? To get to the other slide")], [[56,55,51], makeNimstrLit("Why don\'t cats play poker in the jungle... ...theres too many cheet-ahs")], [[56,55,52], makeNimstrLit("What did Ernie say to Bert when he asked for ice-cream? Sure, Bert!")], [[56,55,53], [65,115,107,32,121,111,117,114,32,100,111,99,116,111,114,32,105,102,32,108,101,102,116,32,105,115,32,114,105,103,104,116,32,102,111,114,32,121,111,117,46]], [[56,55,54], makeNimstrLit("Why was the tank top more gangster than the tube top? The tube top was strapless.")], [[56,55,55], makeNimstrLit("This boy said he was going to hit me with the neck of a guitar.... I said, Is that a fret?")], [[56,55,56], makeNimstrLit("Apple just released a brand new programming language, *Swift*. Job recruiters everywhere immediately started posting ads for Swift programmers with 5 years of experience.")], [[56,55,57], makeNimstrLit("Which way will it fall? If a rooster lays an egg on a pointed roof, which way will it land? Roosters don\'t lay eggs")], [[56,56,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,97,32,116,119,105,116,99,104,63,32,66,101,101,102,32,106,101,114,107,121]], [[56,56,49], [73,39,109,32,110,97,109,105,110,103,32,109,121,32,84,86,32,114,101,109,111,116,101,32,87,97,108,100,111,46,46,46,32,46,46,46,102,111,114,32,111,98,118,105,111,117,115,32,114,101,97,115,111,110,115,46]], [[56,56,50], makeNimstrLit("A platypus went into a hotel owned by a duck.. ..A platypus went into a hotel owned by a duck. Platypus ate food. Duck billed platypus")], [[56,56,51], makeNimstrLit("Have you heard about the Black Magic book for orphans? It\'s called the necro**mom**icon")], [[56,56,52], makeNimstrLit("What do you call a black and white bird that can\'t win, nor fly. A peng-lose.")], [[56,56,53], [72,111,119,32,100,111,32,121,111,117,32,99,97,116,99,104,32,97,32,117,110,105,113,117,101,32,114,97,98,98,105,116,63,32,42,117,110,105,113,117,101,42,32,117,112,32,111,110,32,105,116,33]], [[56,56,54], [119,104,97,116,32,107,101,101,112,115,32,116,104,101,32,108,105,111,110,115,32,102,114,111,109,32,108,101,97,118,105,110,103,32,116,104,101,32,115,97,118,97,110,110,97,104,32,116,104,101,32,101,108,101,45,102,101,110,99,101]], [[56,56,55], makeNimstrLit("Will you tell you the story of the huge sad wall? I shouldn\'t, you\'ll never get over it.")], [[56,56,56], [87,104,101,114,101,32,100,111,32,121,111,117,32,98,117,121,32,80,105,107,109,105,110,32,102,114,111,109,63,32,84,104,101,32,79,108,105,45,77,97,114,116]], [[56,56,57], [87,104,101,114,101,32,100,111,32,108,105,116,101,114,97,108,32,100,111,103,115,32,108,105,118,101,63,32,79,110,32,116,104,101,32,114,111,111,102,46]], [[56,57,48], makeNimstrLit("I just bought a Bonnie Tyler sat-nav. It keeps telling me to turn around, and every now and then it falls apart.")], [[56,57,49], makeNimstrLit("Why was the Headless Horseman depressed? He could never seem to get ahead in life.")], [[56,57,50], makeNimstrLit("everybody gets their 15 minutes of fame - so here\'s my first original joke! why is it impossible to surprise a snowman? .. he has ice in the back of his head")], [[56,57,51], makeNimstrLit("What\'s the difference between me and a calendar? A calendar has dates. #foreveralone")], [[56,57,52], [87,104,97,116,32,116,105,109,101,32,100,111,101,115,32,83,101,97,110,32,67,111,110,110,101,114,121,32,97,114,114,105,118,101,32,97,116,32,87,105,109,98,108,101,100,111,110,63,32,84,101,110,110,105,115,104]], [[56,57,53], makeNimstrLit("Knock-knock... \"Knock-knock\" \"Who\'s there?\" \"Control Freak - now you say \'Control Freak who?\'\" :)")], [[56,57,54], makeNimstrLit("What did the picture say to the Judge? I WAS FRAMED! I just now made that up. I feel good about this one! ~Skip")], [[56,57,55], makeNimstrLit("Have you heard the one about the agnostic with dyslexia and insomnia? He tossed and turned all night wondering if there was a dog")], [[56,57,56], makeNimstrLit("Why did Woodrow Wilson take a long time to turn around? Because he could only make 14 point turns.")], [[56,57,57], makeNimstrLit("totally original joke/first post: What do you get when you play a Frank Sinatra record at twice the speed? \"Shrank Sinatra\"")], [[57,48,48], [72,111,119,32,100,105,100,32,72,105,116,108,101,114,32,116,105,101,32,104,105,115,32,115,104,111,101,108,97,99,101,115,63,32,73,110,32,99,117,116,101,32,108,105,116,116,108,101,32,107,110,111,116,115,105,101,115,33]], [[57,48,49], makeNimstrLit("My first joke here and an original! Did you hear about the two lawyers who set up shop under the old oak tree? I heard it was a pretty shady business.")], [[57,48,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,100,105,115,99,111,117,110,116,101,100,32,90,117,99,107,101,114,98,101,114,103,63,32,77,97,114,107,101,100,32,100,111,119,110,33]], [[57,48,51], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,108,111,111,114,32,115,97,121,32,116,111,32,116,104,101,32,100,101,115,107,63,32,73,32,99,97,110,32,115,101,101,32,121,111,117,114,32,100,114,97,119,101,114,115,33]], [[57,48,52], makeNimstrLit("There were two flies sitting on a toilet seat... one got pissed off.")], [[57,48,53], makeNimstrLit("What\'s a difference between a teacher and a train? The teacher tells you to spit you gum out. The train says, \"Chew, chew, chew!\"")], [[57,48,54], makeNimstrLit("Why don\'t blind people like skydiving? It scares the crap out of the dog.")], [[57,48,55], makeNimstrLit("The scientists a scientist went to a remote island with a dog in order to teach his speaking. Three years later, the scientist returns, and is asked about his experiment; he replied \"woof, woof, woof\"")], [[57,48,56], makeNimstrLit("What do you call a con-artist who minored in psychology? Sigmund Fraud")], [[57,48,57], [87,104,97,116,39,115,32,97,32,112,105,103,115,32,102,97,118,111,114,105,116,101,32,109,117,115,99,108,101,63,32,84,104,101,32,104,97,109,115,116,114,105,110,103,46]], [[57,49,48], [87,104,97,116,32,100,111,32,102,105,115,104,32,116,104,105,110,107,32,97,98,111,117,116,32,97,105,114,63,32,73,116,39,115,32,85,78,45,66,45,82,69,65,84,72,65,66,76,69,33]], [[57,49,49], [87,104,97,116,32,100,105,100,32,116,104,101,32,104,97,109,109,101,114,32,115,97,121,32,116,111,32,116,104,101,32,100,114,105,108,108,63,32,89,111,117,39,114,101,32,116,111,111,32,98,111,114,105,110,103,46]], [[57,49,50], makeNimstrLit("What did Sean Connery say when his books fell on his head? I blame my shelf")], [[57,49,51], [87,104,121,32,100,105,100,32,116,111,109,97,116,111,32,98,108,117,115,104,63,32,98,101,99,97,117,115,101,32,105,116,32,115,97,119,32,116,104,101,32,115,97,108,97,100,32,100,114,101,115,115,105,110,103]], [[57,49,52], makeNimstrLit("My biggest problem with passive smoking is having to follow the smoker around.")], [[57,49,53], makeNimstrLit("What did the traffic light say to the car? Don\'t look at me I\'m changing.")], [[57,49,54], makeNimstrLit("What is green, sings and can be found in the fridge? Elvis Parsley")], [[57,49,55], [87,104,97,116,32,105,115,32,74,97,99,107,105,101,32,67,104,97,110,39,115,32,102,97,118,111,114,105,116,101,32,100,114,105,110,107,63,32,87,97,116,97]], [[57,49,56], makeNimstrLit("What did the Pelican say to the fish when he was running late for work? I\'ll catch you later!")], [[57,49,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,97,109,101,108,32,105,110,32,65,108,97,115,107,97,63,32,76,111,115,116,46]], [[57,50,48], makeNimstrLit("All these people getting emails from the Prince of Nigeria, I got one from an Egyptian Pharaoh... But it turned out to just be a pyramid scheme.")], [[57,50,49], [73,32,108,111,118,101,32,115,101,108,102,32,100,101,112,114,101,99,97,116,105,110,103,32,104,117,109,111,117,114,46,32,83,104,97,109,101,32,73,39,109,32,110,111,32,103,111,111,100,32,97,116,32,105,116,46]], [[57,50,50], makeNimstrLit("Here\'s a funny joke I heard about pizza oh nevermind. It\'s too cheesy.")], [[57,50,51], [87,104,97,116,32,84,105,109,101,32,68,111,32,89,111,117,32,71,111,32,84,111,32,84,104,101,32,68,101,110,116,105,115,116,63,32,84,111,111,116,104,32,45,32,72,117,114,116,121,33,32,88,68]], [[57,50,52], [75,110,111,99,107,32,107,110,111,99,107,46,32,87,104,111,39,115,32,116,104,101,114,101,63,32,68,111,111,114,98,101,108,108,32,116,101,99,104,110,105,99,105,97,110,46]], [[57,50,53], [73,102,32,77,114,46,32,66,101,97,110,32,108,111,115,116,32,111,110,101,32,111,102,32,104,105,115,32,108,101,103,115,32,104,101,39,100,32,98,101,32,99,97,110,110,101,108,108,105,110,105,33]], [[57,50,54], [87,104,101,110,32,105,115,32,116,104,101,32,109,111,110,116,104,32,119,104,101,110,32,116,104,101,32,109,111,115,116,32,116,114,101,101,115,32,102,97,108,108,63,32,83,101,112,45,116,105,109,98,101,114]], [[57,50,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,116,104,114,101,101,32,108,101,103,115,63,32,84,114,105,45,116,105,112,46]], [[57,50,56], [72,111,119,32,119,97,115,32,82,111,109,101,32,115,112,108,105,116,32,105,110,32,104,97,108,102,63,32,87,105,116,104,32,97,32,112,97,105,114,32,111,102,32,42,67,97,101,115,97,114,115,42]], [[57,50,57], makeNimstrLit("What do you call Washington State after a long rain storm? Washed a Ton State. I woke up with that joke in my head this morning. My brain is weird. Had to share it with someone.")], [[57,51,48], makeNimstrLit("What did the one wall say to the other wall? \"Meet you at the corner\"")], [[57,51,49], [87,104,97,116,32,100,111,32,98,101,101,102,32,104,101,97,114,116,115,32,115,109,101,108,108,32,108,105,107,101,63,32,72,111,110,101,121,46]], [[57,51,50], [72,111,119,32,109,97,110,121,32,82,111,109,97,110,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,115,99,114,101,119,32,105,110,32,97,32,108,105,103,104,116,32,98,117,108,98,63,32,86,46]], [[57,51,51], makeNimstrLit("Why do birds fly south for the winter? because its too far to walk!")], [[57,51,52], [87,104,97,116,32,105,115,32,97,32,116,114,97,118,101,108,101,114,39,115,32,102,97,118,111,114,105,116,101,32,102,111,110,116,63,32,84,105,109,101,115,32,78,101,119,32,82,111,97,109,105,110,39,33]], [[57,51,53], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,110,111,115,101,121,32,112,101,112,112,101,114,63,32,74,97,108,97,112,101,110,111,32,66,117,115,105,110,101,115,115]], [[57,51,54], makeNimstrLit("Science Jokes Thread on AskReddit! For your amusement: http://en.reddit.com/r/AskReddit/comments/1auxsf/what_are_some_funny_scientific_jokes_that_you_know/")], [[57,51,55], makeNimstrLit("Why was Cinderella thrown off the basketball team? *She ran away from the ball.*")], [[57,51,56], makeNimstrLit("Why did the air freshener company go out of business? Because they lacked common scents...")], [[57,51,57], makeNimstrLit("With a name like Freddy Mercury... shouldn\'t he have done heavy metal?")], [[57,52,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,115,111,109,101,111,110,101,32,119,104,111,32,115,101,114,118,101,115,32,115,109,101,108,108,121,32,100,114,105,110,107,115,63,32,97,32,70,97,114,116,101,110,100,101,114]], [[57,52,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,103,114,111,117,112,32,111,102,32,71,101,111,109,101,116,114,121,32,99,108,97,115,115,101,115,63,32,65,32,103,101,111,109,101,102,111,114,101,115,116,46]], [[57,52,50], [87,104,97,116,39,115,32,114,101,100,32,97,110,100,32,105,115,32,98,97,100,32,102,111,114,32,121,111,117,114,32,116,101,101,116,104,63,32,65,32,98,114,105,99,107]], [[57,52,51], makeNimstrLit("How much did the pirate charge for corn? He sold them for a buccaneer.")], [[57,52,52], makeNimstrLit("A penguin walks into a bar... He goes up to the barman and says, \"Have you seen my father in here today?\" The barman says, \"I don\'t know, what does he look like?\"")], [[57,52,53], [73,39,109,32,118,101,114,121,32,107,101,101,110,32,73,32,99,111,117,108,100,32,116,101,108,108,32,104,101,32,119,97,115,32,98,97,108,100,32,97,116,32,116,104,101,32,100,114,111,112,32,111,102,32,97,32,104,97,116,46]], [[57,52,54], makeNimstrLit("So I was feeling down the other day... My friend wanted to cheer me up, so he told me 10 jokes to make me feel better. Unfortunately, no pun in ten did.")], [[57,52,55], [87,104,97,116,32,100,111,32,116,104,101,32,70,114,101,110,99,104,32,99,97,108,108,32,97,114,116,105,102,105,99,105,97,108,32,102,101,101,116,32,102,111,114,32,99,97,116,115,63,32,70,97,117,120,32,80,97,119,115]], [[57,52,56], [73,32,106,117,115,116,32,105,110,118,101,110,116,101,100,32,97,32,110,101,119,32,119,111,114,100,33,32,73,116,39,115,32,99,97,108,108,101,100,32,34,112,108,97,103,105,97,114,105,115,109,34,46]], [[57,52,57], makeNimstrLit("What did the host serve his guests for The Simpsons marathon night? Disco Stew!")], [[57,53,48], makeNimstrLit("Why did the mechanic go to art school? Because he wanted to learn how to make a van go!")], [[57,53,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,105,115,104,32,119,105,116,104,32,110,111,32,101,121,101,115,63,32,46,46,46,46,97,32,102,115,115,115,104,104,104,46,46,46]], [[57,53,50], [87,104,97,116,32,107,105,110,100,32,111,102,32,100,111,103,32,99,97,110,32,100,111,32,109,97,103,105,99,32,116,114,105,99,107,115,63,32,65,32,108,97,98,114,97,99,97,100,97,98,114,97,100,111,114,46]], [[57,53,51], [87,72,65,84,32,105,115,32,66,114,117,99,101,32,76,101,101,39,115,32,102,97,118,111,114,105,116,101,32,100,114,105,110,107,63,32,87,65,72,32,84,65,72,72,33,33,33,33]], [[57,53,52], makeNimstrLit("What other body parts did Voldemort not have apart from his nose? His legs and arms.. because he was disarmed and defeated.")], [[57,53,53], makeNimstrLit("A police officer bought a robot this robot was fueled by sodium and alkaline, but could only hold enough for 24 hours at a time. so every morning he had to charge it with a salt and battery.")], [[57,53,54], makeNimstrLit("What kind of bee will not take credit for his contributions? A Humblebee.")], [[57,53,55], [87,104,97,116,32,100,111,101,115,32,97,32,86,117,108,99,97,110,32,108,97,119,110,109,111,119,101,114,32,110,101,101,100,32,116,111,32,102,117,110,99,116,105,111,110,63,32,65,32,115,112,111,99,107,32,112,108,117,103,46]], [[57,53,56], makeNimstrLit("Why did the chicken cross the road? To show the opossum it could be done.")], [[57,53,57], [73,32,119,111,117,108,100,32,110,101,118,101,114,32,101,120,97,103,103,101,114,97,116,101,46,46,46,32,46,46,46,105,110,32,97,32,109,105,108,108,105,111,110,32,121,101,97,114,115,46]], [[57,54,48], [84,104,101,121,32,116,111,108,100,32,109,101,32,73,32,104,97,100,32,116,121,112,101,32,34,65,34,32,98,108,111,111,100,46,46,46,32,116,117,114,110,115,32,111,117,116,32,105,116,32,119,97,115,32,97,32,116,121,112,111,46]], [[57,54,49], [87,104,121,32,100,105,100,32,116,104,101,32,99,104,105,99,107,101,110,32,99,114,111,115,115,32,116,104,101,32,114,111,97,100,63,32,84,111,32,103,101,116,32,116,111,32,116,104,101,32,111,116,104,101,114,32,115,105,100,101,46]], [[57,54,50], makeNimstrLit("Why do ducks have flat feet? To stomp out forest fires. Why do elephants have flat feet? To stomp out flaming ducks.")], [[57,54,51], makeNimstrLit("What do you call a midget psychic that broke out of prison? A small medium at large!")], [[57,54,52], [84,104,101,32,104,97,105,114,100,114,101,115,115,101,114,39,115,32,111,97,116,104,32,70,105,114,115,116,44,32,104,97,114,109,32,110,111,32,39,100,111,46,46,46]], [[57,54,53], [87,104,97,116,32,107,105,110,100,32,111,102,32,112,97,110,116,115,32,100,111,101,115,32,83,117,112,101,114,32,77,97,114,105,111,32,119,101,97,114,63,32,68,101,110,105,109,32,68,101,110,105,109,32,68,101,110,105,109]], [[57,54,54], makeNimstrLit("A man once thought he\'d discovered a new primary color but it proved to be merely a pigment of his imagination.")], [[57,54,55], makeNimstrLit("You\'d think that people who kept their head warm would tend to be healthier... but as it turns out, people who wear turbans are actually more likely to be Sikh")], [[57,54,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,109,97,110,32,119,105,116,104,32,104,105,115,32,98,105,103,32,116,111,101,32,97,98,111,118,101,32,104,105,115,32,115,104,105,110,63,32,84,111,110,121]], [[57,54,57], makeNimstrLit("what do you call a vampire that sucks mucus instead of blood? nose-feratu!")], [[57,55,48], makeNimstrLit("What do you call someone who wears leather, likes bondage and likes getting inked? Moleskine")], [[57,55,49], makeNimstrLit("What\'s the difference between a piano, a tuna and a jar of glue? You: You can tuna piano but you can\'t piano a tuna! Person getting told joke: What about the glue? You: I knew you\'d get stuck there!")], [[57,55,50], makeNimstrLit("Why arent koalas actual bears? They dont meet the koalafications.")], [[57,55,51], [87,104,97,116,32,119,97,115,32,68,114,32,70,114,97,110,107,101,110,115,116,101,105,110,39,115,32,115,101,99,111,110,100,32,106,111,98,63,32,72,101,32,119,97,115,32,97,32,98,111,100,121,45,98,117,105,108,100,101,114]], [[57,55,52], makeNimstrLit("What do you call somebody with no body and no nose? Nobody knows.")], [[57,55,53], makeNimstrLit("This summer I\'m going to go to the beach and bury metal objects that say, \'Get a life\' on them. Demetri Martin")], [[57,55,54], [73,32,104,97,100,32,97,32,99,111,110,118,101,114,115,97,116,105,111,110,32,119,105,116,104,32,97,32,77,111,98,105,117,115,32,115,116,114,105,112,46,46,46,32,73,116,32,119,97,115,32,111,110,101,45,115,105,100,101,100,46]], [[57,55,55], makeNimstrLit("Coco The Clown took his car back to the garage this week. The door wouldn\'t fall off.")], [[57,55,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,97,99,104,121,100,101,114,109,32,116,104,97,116,32,115,105,110,103,115,32,106,97,122,122,63,32,69,108,101,112,104,97,110,116,115,32,71,101,114,97,108,100]], [[57,55,57], [72,111,119,32,109,117,99,104,32,100,111,32,100,114,117,109,32,115,104,97,112,101,100,32,115,111,102,97,115,32,99,111,115,116,63,32,53,32,100,111,108,108,97,114,115,32,112,101,114,45,99,117,115,104,105,111,110,46]], [[57,56,48], makeNimstrLit("What do you call a cow jumping over a barbed wire fence? Utter destruction! !!!!")], [[57,56,49], makeNimstrLit("Did someone say \"purple\"? Sorry, it must have been a pigment of my imagination!")], [[57,56,50], makeNimstrLit("What did the blue denims say to the black denims? I guess we have different genes! *knee slap* ... I\'ll see myself to the door")], [[57,56,51], [73,32,106,117,115,116,32,102,111,117,110,100,32,111,117,116,32,73,39,109,32,99,111,108,111,114,98,108,105,110,100,32,73,116,32,99,97,109,101,32,111,117,116,32,111,102,32,116,104,101,32,121,101,108,108,111,119,46]], [[57,56,52], makeNimstrLit("Ever heard about that movie called Constipation? It never came out.")], [[57,56,53], [72,111,119,32,100,111,101,115,32,97,32,112,108,97,110,116,32,119,97,108,107,63,32,73,116,32,117,115,101,115,32,97,32,112,108,97,110,116,32,115,116,97,110,100,46]], [[57,56,54], makeNimstrLit("Did you hear about the two silk worms that got in a fight? It ended in a tie.")], [[57,56,55], makeNimstrLit("What do you call a midget psychic who just escaped from prison? A small medium at large")], [[57,56,56], makeNimstrLit("Why does Mr. Pencil hate Mr. Pen so much? Because he is an erascist.")], [[57,56,57], makeNimstrLit("I made a model aircraft. I wanted it to be an unpainted smooth finish wooden aircraft. So I made a plain planed plane plane.")], [[57,57,48], makeNimstrLit("What happened to the Denver Broncos in the Super Bowl? They had a MetLife crisis. (that\'s the name of the stadium)")], [[57,57,49], makeNimstrLit("How do you pay for things in the Czech Republic? Cash or Czech Edit: a word")], [[57,57,50], [87,104,97,116,32,98,101,103,105,110,115,32,119,105,116,104,32,69,44,32,101,110,100,115,32,119,105,116,104,32,69,44,32,97,110,100,32,104,97,115,32,111,110,101,32,108,101,116,116,101,114,63,32,101,110,118,101,108,111,112,101]], [[57,57,51], makeNimstrLit("Why did Beethoven get rid of his chickens? All they said was, Bach, Bach, Bach ...")], [[57,57,52], makeNimstrLit("Why did the packaged green onion get into trouble? Because it was a wrapped scallion.")], [[57,57,53], [87,104,97,116,32,116,105,109,101,32,100,111,32,121,111,117,32,103,111,32,116,111,32,116,104,101,32,100,101,110,116,105,115,116,63,32,50,58,51,48]], [[57,57,54], makeNimstrLit("Did you hear about the kidnapping recently? The goatherd woke him up.")], [[57,57,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,116,119,111,32,103,117,121,115,32,97,98,111,118,101,32,97,32,119,105,110,100,111,119,63,32,67,117,114,116,32,39,110,32,82,111,100]], [[57,57,56], [87,104,121,32,100,105,100,32,116,104,101,32,108,101,116,116,117,99,101,32,103,101,116,32,97,114,114,101,115,116,101,100,63,32,46,46,46,102,111,114,32,100,105,115,116,117,114,98,105,110,103,32,116,104,101,32,112,101,97,115,33]], [[57,57,57], [87,104,97,116,32,104,97,112,112,101,110,101,100,32,116,111,32,116,104,101,32,116,121,114,97,110,110,105,99,97,108,32,102,114,117,105,116,63,32,72,101,32,119,97,115,32,105,109,112,101,97,99,104,101,100,33]], [[49,48,48,48], makeNimstrLit("Did you hear about the corduroy pillow? You didn\'t hear? It made headlines!")], [[49,48,48,49], makeNimstrLit("Today, the doctor told me that the bottom of my heart has stopped functioning. My girlfriend will be disappointed; that\'s the part I loved her from.")], [[49,48,48,50], [72,111,119,32,100,111,32,121,111,117,32,109,97,107,101,32,103,111,108,100,32,115,111,117,112,63,32,89,111,117,32,117,115,101,32,49,52,32,99,97,114,114,111,116,115,46]], [[49,48,48,51], makeNimstrLit("What\'s my New Year resolution? Well, I just got a Hi-Def TV, so it\'s 1920 X 1080i.")], [[49,48,48,52], [72,111,119,32,100,111,101,115,32,97,32,99,97,99,116,117,115,32,100,111,32,104,105,115,32,109,97,116,104,32,104,111,109,101,119,111,114,107,63,32,72,101,32,117,115,101,115,32,97,32,99,97,99,116,105,45,108,97,116,111,114,33]], [[49,48,48,53], [87,104,97,116,39,115,32,97,110,32,111,118,101,110,39,115,32,102,97,118,111,114,105,116,101,32,99,111,109,101,100,121,32,114,111,117,116,105,110,101,63,32,68,101,97,100,112,97,110,46]], [[49,48,48,54], makeNimstrLit("Two balloons are floating across the desert One balloon says to the other, Look out for the cactussssssssssssssssssss!")], [[49,48,48,55], makeNimstrLit("linuxmint 13 or 15 question why does 13 have lts and not newer versions?")], [[49,48,48,56], [119,104,121,32,119,97,115,32,80,97,118,108,111,118,39,115,32,104,97,105,114,32,115,111,32,115,111,102,116,63,32,99,108,97,115,115,105,99,97,108,32,99,111,110,100,105,116,105,111,110,105,110,103,46]], [[49,48,48,57], makeNimstrLit("What did the slab of meat say when it was covered in salt and left out to dry? \"I\'m cured!\"")], [[49,48,49,48], makeNimstrLit("What do you call an animal that goes through your trash and tells great stories? A raccoonteur.")], [[49,48,49,49], makeNimstrLit("I\'m making a band! I started a band called 999 Megabytes...we havent gotten a gig yet.")], [[49,48,49,50], makeNimstrLit("What do you call thrusting a hairy rod in and out of your mouth really fast then afterwards spitting out a white liquid? Brushing your teeth")], [[49,48,49,51], [87,104,121,32,100,111,101,115,110,39,116,32,116,104,101,32,115,117,110,32,110,101,101,100,32,116,111,32,103,111,32,116,111,32,85,110,105,118,101,114,115,105,116,121,63,32,72,101,39,115,32,116,111,111,32,98,114,105,103,104,116,46]], [[49,48,49,52], makeNimstrLit("Why did the turtle cross the road? To get to the nearest Shell Station!")], [[49,48,49,53], makeNimstrLit("Do you know why one side of the the V formation of geese in flight is longer than the other side? Because It has more geese in it!")], [[49,48,49,54], makeNimstrLit("What\'s a pirates favorite letter? You think it\'s the \"R\" but it\'s really the \"C\". Happy talk like a pirate day!")], [[49,48,49,55], makeNimstrLit("Did you hear about the Native American who went to a party and drank 37 cups of tea? They found him dead the next morning in his tea pee.")], [[49,48,49,56], [87,104,97,116,32,100,105,100,32,116,104,101,32,101,108,101,112,104,97,110,116,32,115,97,121,32,116,111,32,116,104,101,32,104,111,114,110,45,108,101,115,115,32,114,104,105,110,111,63,32,34,82,104,105,110,111,32,104,111,114,110,63,34]], [[49,48,49,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,71,114,111,117,110,100,32,98,101,101,102,33]], [[49,48,50,48], [72,111,119,32,100,111,32,112,111,114,99,117,112,105,110,101,115,32,112,108,97,121,32,108,101,97,112,102,114,111,103,63,32,86,101,114,121,32,99,97,114,101,102,117,108,108,121]], [[49,48,50,49], [87,104,101,114,101,32,100,111,101,115,32,116,104,101,32,71,101,110,101,114,97,108,32,107,101,101,112,32,104,105,115,32,97,114,109,105,101,115,63,32,73,110,32,104,105,115,32,115,108,101,101,118,105,101,115,46]], [[49,48,50,50], makeNimstrLit("How many Super Saiyans does it take to change a lightbulb? Just 1 but it will take 3 episodes.")], [[49,48,50,51], makeNimstrLit("What do you call 99 bunnies walking forward and they take one step backwards? A receding hare line.")], [[49,48,50,52], [87,104,97,116,32,107,105,110,100,32,111,102,32,106,101,97,110,115,32,100,111,32,103,104,111,115,116,115,32,119,101,97,114,63,32,66,111,111,32,74,101,97,110,115]], [[49,48,50,53], makeNimstrLit("What should you do before criticizing Pac-Man? WAKA WAKA WAKA mile in his shoes")], [[49,48,50,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,97,116,104,101,114,32,119,104,111,32,119,97,115,32,107,105,100,110,97,112,112,101,100,32,105,110,32,73,114,97,113,63,32,65,32,66,97,103,104,100,97,100,46]], [[49,48,50,55], makeNimstrLit("What has six eyes but cannot see? Three men in a house with dirty dishes in the sink, laundry that needs to be folded and kids that need a bath")], [[49,48,50,56], makeNimstrLit("What do Egyptians do when their mass transit breaks down? Get Anubis.")], [[49,48,50,57], makeNimstrLit("What\'s the difference between unlawful and illegal? Unlawful is against the law and illegal is a sick bird.")], [[49,48,51,48], makeNimstrLit("How long did it take for the police to catch the man running in his underwear? It was a brief chase...")], [[49,48,51,49], makeNimstrLit("What do call a horse that lives near you? A neighbor (naybor for pessimist horses)")], [[49,48,51,50], [65,32,116,101,114,109,105,116,101,32,119,97,108,107,115,32,105,110,116,111,32,97,32,112,117,98,32,65,110,100,32,97,115,107,115,32,34,119,104,101,114,101,39,115,32,116,104,101,32,98,97,114,32,116,101,110,100,101,114,63,34]], [[49,48,51,51], [87,104,97,116,32,107,105,110,100,32,111,102,32,98,105,114,100,115,32,115,116,105,99,107,32,116,111,103,101,116,104,101,114,63,32,86,101,108,45,99,114,111,119,115]], [[49,48,51,52], makeNimstrLit("What happens when you get some vinegar in your ear? You suffer from pickled hearing!")], [[49,48,51,53], [65,32,115,97,100,32,99,97,110,32,103,111,101,115,32,116,111,32,103,101,116,32,114,101,99,121,99,108,101,100,46,32,72,101,32,119,97,115,32,115,111,100,97,45,112,114,101,115,115,101,100,46]], [[49,48,51,54], [87,104,97,116,32,100,111,101,115,32,68,114,101,119,32,67,97,114,101,121,32,104,97,118,101,32,105,110,32,104,105,115,32,100,114,105,118,101,119,97,121,63,32,67,108,101,118,101,108,97,110,100,32,82,111,99,107,115,33]], [[49,48,51,55], makeNimstrLit("Why don\'t you want your nose to be 12 inches long? because then it would be a foot!")], [[49,48,51,56], makeNimstrLit("Branson My wife and I went to Branson, Missouri. I think our hotel caters to senior citizens because it had a free incontinental breakfast.")], [[49,48,51,57], makeNimstrLit("A long joke jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooke")], [[49,48,52,48], makeNimstrLit("What did one ocean say to the other ocean? Nothing, they just waved.")], [[49,48,52,49], [87,104,97,116,115,32,98,108,117,101,32,97,110,100,32,115,109,101,108,108,115,32,108,105,107,101,32,114,101,100,32,112,97,105,110,116,63,32,66,108,117,101,32,112,97,105,110,116]], [[49,48,52,50], [65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,32,78,111,101,108,46]], [[49,48,52,51], makeNimstrLit("Kids, I don\'t know if our ceiling is the best ceiling... ...but it\'s definitely up there.")], [[49,48,52,52], makeNimstrLit("Why was the hula hoop a great boxer? It could go round for round.")], [[49,48,52,53], [104,111,119,32,100,111,32,121,111,117,32,109,97,107,101,32,55,32,101,118,101,110,63,32,114,101,109,111,118,101,32,116,104,101,32,34,115,34]], [[49,48,52,54], [87,104,97,116,32,103,101,116,115,32,108,111,110,103,101,114,32,116,104,101,32,109,111,114,101,32,121,111,117,32,99,117,116,32,105,116,32,97,116,32,98,111,116,104,32,101,110,100,115,63,32,65,32,100,105,116,99,104,46]], [[49,48,52,55], makeNimstrLit("Where does dubious pasta come from? The spaghetto. I can\'t take all the credit, however: I heard the word from [this](http://www.reddit.com/r/funny/comments/xdp4k/the_gaydar/c5lnkep) guy")], [[49,48,52,56], [87,104,97,116,32,100,105,100,32,116,104,101,32,48,32,115,97,121,32,116,111,32,116,104,101,32,56,63,32,78,105,99,101,32,98,101,108,116,33]], [[49,48,52,57], makeNimstrLit("Why was the chicken kicked out of class? For using *fowl* language.")], [[49,48,53,48], makeNimstrLit("At least I now know why the lions leave the plains before the end of summer. Because the Pride goeth before the Fall.")], [[49,48,53,49], makeNimstrLit("What do you call an economist at an amusement park who is just sitting around? A lazy fair goer!")], [[49,48,53,50], makeNimstrLit("How did the prostitute get promoted? She slept her way to the top!")], [[49,48,53,51], [87,104,97,116,32,100,105,100,32,116,104,101,32,115,112,97,99,101,32,98,101,116,119,101,101,110,32,116,119,111,32,116,105,108,101,115,32,115,97,121,63,32,73,32,65,77,32,71,82,79,85,84]], [[49,48,53,52], makeNimstrLit("What do you say to the Montana barista when they overfill your chamomile? Beautiful")], [[49,48,53,53], makeNimstrLit("What\'s green and fuzzy and can kill you if it falls from a tree? A pool table.")], [[49,48,53,54], makeNimstrLit("How do you make a tissue dance? You put a little boogie in it. :)")], [[49,48,53,55], [87,97,110,110,97,32,104,101,97,114,32,97,32,99,111,110,115,116,114,117,99,116,105,111,110,32,106,111,107,101,63,32,73,39,109,32,119,111,114,107,105,110,103,32,111,110,32,105,116,46]], [[49,48,53,56], makeNimstrLit("What do gamers plant in their garden? Skill trees! **Dances wildly with top hat and cane**")], [[49,48,53,57], [87,104,97,116,39,115,32,97,110,32,105,100,101,97,108,105,115,116,32,118,101,103,101,116,97,114,105,97,110,39,115,32,102,97,118,111,114,105,116,101,32,109,101,97,108,63,32,80,101,97,115,32,97,110,100,32,104,111,109,105,110,121]], [[49,48,54,48], makeNimstrLit("Who\'s bad at baseball but fun at parties? A pitcher filled with margaritas!")], [[49,48,54,49], makeNimstrLit("What do you get when you mix two chains and a cow? Truuuuuuuuuuu-moooooooooooooooooo!!!")], [[49,48,54,50], [87,104,121,32,100,111,32,101,108,101,112,104,97,110,116,115,32,104,105,100,101,32,98,101,104,105,110,100,32,116,114,101,101,115,63,32,84,111,32,116,114,105,112,32,97,110,116,115,46]], [[49,48,54,51], makeNimstrLit("I can make a movie with my hand. All it takes is a FLICK of the wrist!")], [[49,48,54,52], makeNimstrLit("I am not pro gay. I am not even amateur gay. But, I support their rights.")], [[49,48,54,53], makeNimstrLit("why didn\'t the american leek want to talk to the japanese leek? because it was negi")], [[49,48,54,54], [73,32,104,97,116,101,32,103,105,114,108,115,32,119,105,116,104,32,100,111,117,98,108,101,32,115,116,97,110,100,97,114,100,115,32,117,110,108,101,115,115,32,116,104,101,121,39,114,101,32,112,114,101,116,116,121]], [[49,48,54,55], [87,104,97,116,32,100,105,100,32,116,104,101,32,108,97,122,121,32,115,117,114,103,101,111,110,32,115,97,121,32,116,111,32,104,105,115,32,112,97,116,105,101,110,116,63,32,83,117,116,117,114,101,32,115,101,108,102,33]], [[49,48,54,56], makeNimstrLit("I have found that there are three kinds of people; Those who can count and those who can\'t.")], [[49,48,54,57], makeNimstrLit("I made half a cup of tea the other day... It was so nice I had two.")], [[49,48,55,48], makeNimstrLit("Why did peanut butter flop at the talent show? He didn\'t have the right jam.")], [[49,48,55,49], [72,111,119,32,109,97,110,121,32,116,105,99,107,108,101,115,32,100,111,101,115,32,105,116,32,116,97,107,101,32,116,111,32,109,97,107,101,32,97,32,115,113,117,105,100,32,108,97,117,103,104,63,32,84,101,110,116,97,99,108,101,115,46]], [[49,48,55,50], [87,104,101,114,101,32,100,111,32,67,111,119,115,32,103,111,32,102,111,114,32,112,97,114,116,105,101,115,63,32,84,104,101,32,77,111,111,118,105,101,115]], [[49,48,55,51], makeNimstrLit("How many Saiyans does it take to change a lightbulb? Just one, but it takes 5 episodes.")], [[49,48,55,52], makeNimstrLit("Did you hear about the schizophrenic accounts manager? He couldn\'t help but hear invoices inside his head.")], [[49,48,55,53], makeNimstrLit("[My Joke] Why do galaxies put on boring shows while separated? Because their performance is lack-cluster.")], [[49,48,55,54], [75,110,111,99,107,32,75,110,111,99,107,46,46,46]], [[49,48,55,55], makeNimstrLit("There is a special species of bird that is really good at holding stuff together... They\'re called velcrows.")], [[49,48,55,56], makeNimstrLit("Why are jokes about rotten eggs banned? Because they\'re infeggtious")], [[49,48,55,57], makeNimstrLit("What side dish do frogs like to enjoy with their hamburgers? French Flies!")], [[49,48,56,48], [87,104,97,116,32,100,111,32,99,111,119,115,32,100,111,32,102,111,114,32,102,117,110,63,32,84,104,101,121,32,103,111,32,116,111,32,116,104,101,32,109,111,111,111,111,111,45,118,105,101,115,46]], [[49,48,56,49], makeNimstrLit("Why did the puppy get away with committing murder? ...He had paws-able deniability.")], [[49,48,56,50], [84,104,101,114,101,32,111,110,99,101,32,119,97,115,32,97,32,106,101,97,108,111,117,115,32,122,111,109,98,105,101,46,46,46,32,66,117,116,32,104,101,32,97,116,101,32,104,105,115,32,104,101,97,114,116,32,111,117,116,46]], [[49,48,56,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,117,98,105,113,117,105,116,111,117,115,32,115,112,117,100,63,32,65,32,99,111,109,109,111,110,45,116,97,116,101,114,33]], [[49,48,56,52], makeNimstrLit("Why was Cinderella banned from playing sports? Because she always ran away from the ball &lt;p&gt; My favorite joke since I was little")], [[49,48,56,53], makeNimstrLit("Want to hear a joke about pizza? Never mind, it\'s probably too cheesy.")], [[49,48,56,54], [87,104,97,116,32,104,97,115,32,97,32,98,111,116,116,111,109,32,97,116,32,116,104,101,32,116,111,112,63,32,89,111,117,114,32,108,101,103,115,46]], [[49,48,56,55], [87,104,97,116,32,116,121,112,101,32,111,102,32,103,114,97,105,110,32,117,115,101,115,32,112,114,111,102,97,110,105,116,121,63,32,86,117,108,103,97,114,32,87,104,101,97,116]], [[49,48,56,56], makeNimstrLit("What do you call a penguin with a smoking problem? It\'s a puffin!")], [[49,48,56,57], makeNimstrLit("What did they call the Pillsbury Doughboy after he hurt his leg? Limp Biscuit")], [[49,48,57,48], makeNimstrLit("Better be named after what? If you had to choose, would you prefer having a disease named after you, or be named after your mother in law?")], [[49,48,57,49], makeNimstrLit("I know a woman who owns a taser... Let me tell you, she\'s stunning!")], [[49,48,57,50], makeNimstrLit("Did you hear about the neutron who was arrested? He was held without charge.")], [[49,48,57,51], makeNimstrLit("Have you ever heard the one about the dust bunny and the mud pie? Well then sorry, I only tell clean jokes.")], [[49,48,57,52], [87,104,121,32,119,97,115,32,116,104,101,32,116,111,109,97,116,111,32,98,108,117,115,104,105,110,103,63,32,66,101,99,97,117,115,101,32,105,116,32,115,97,119,32,116,104,101,32,115,97,108,97,100,32,100,114,101,115,115,105,110,103,46]], [[49,48,57,53], makeNimstrLit("My buddy said he\'d give his right arm to be ambidextrous I can only admire such dedication.")], [[49,48,57,54], [87,104,121,32,100,105,100,32,116,104,101,32,115,107,101,108,101,116,111,110,32,110,111,116,32,97,116,116,101,110,100,32,112,114,111,109,63,32,72,101,32,104,97,100,32,110,111,32,98,111,100,121,32,116,111,32,103,111,32,119,105,116,104,46]], [[49,48,57,55], makeNimstrLit("Why was the owl afraid of Raidoactivity Because it was made of Hootonium")], [[49,48,57,56], makeNimstrLit("How many US Congressmen does it take to change a lightbulb? Oh, please. Like they\'ve ever changed anything that needed it.")], [[49,48,57,57], makeNimstrLit("What do you call soup that you\'ve found a hair in? Rabbit Soup :D")], [[49,49,48,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,119,111,109,97,110,32,119,105,116,104,32,111,110,101,32,108,101,103,63,32,69,105,108,101,101,110]], [[49,49,48,49], makeNimstrLit("Two birds are sitting on a perch. One bird says to the other, \"Do you smell fish?\"")], [[49,49,48,50], makeNimstrLit("A man wanted to name his son a very long name... ...so he named him Miles")], [[49,49,48,51], makeNimstrLit("What killed the guy ordering at an Italian restaurant? He\'d had trouble deciding to go with the appetizers or entrees, but eventually he went antipasto way.")], [[49,49,48,52], makeNimstrLit("I\'m tired of people calling America the dumbest country in the world Quite frankly, I think Europe is!")], [[49,49,48,53], makeNimstrLit("What did Arnold Schwarzenegger say upon being asked to star in a Broadway production about the world\'s greatest composers? I\'ll be Bach. Sorry.")], [[49,49,48,54], makeNimstrLit("What did the owner of the Indian restaurant say when he burned all of his bread? \"Don\'t worry, it\'s a naan issue.\"")], [[49,49,48,55], makeNimstrLit("Who was the most important Knight of the Round Table? Sir Cumference.")], [[49,49,48,56], makeNimstrLit("Why did Beethoven kill off his chickens? They kept saying, \"Bach, Bach, Bach.\"")], [[49,49,48,57], [87,104,121,32,100,105,100,32,116,104,101,32,98,105,103,97,109,105,115,116,32,99,114,111,115,115,32,116,104,101,32,114,111,97,100,63,32,84,111,32,103,101,116,32,116,111,32,116,104,101,32,111,116,104,101,114,32,98,114,105,100,101,46]], [[49,49,49,48], makeNimstrLit("Why did the fox cross the road? It was chassing after the chicken!")], [[49,49,49,49], makeNimstrLit("Why did the man throw his watch out the window? He wanted to see time fly!")], [[49,49,49,50], makeNimstrLit("Why is ok to leave the lid off a basket of socialist crabs? Because whenever one of them climbs to the top, the others drag it back down.")], [[49,49,49,51], [87,104,121,32,100,105,100,32,116,104,101,32,98,97,110,107,101,114,32,108,101,97,118,101,32,104,105,115,32,106,111,98,63,32,104,101,32,108,111,115,116,32,105,110,116,101,114,101,115,116]], [[49,49,49,52], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,97,115,104,101,119,32,105,110,32,115,112,97,99,101,63,32,65,110,32,97,115,116,114,111,110,117,116,46]], [[49,49,49,53], [87,104,121,32,97,114,101,32,115,111,109,101,32,99,104,105,108,108,105,101,115,32,110,111,115,121,63,32,84,104,101,121,39,114,101,32,106,97,108,97,112,101,110,111,32,98,117,115,105,110,101,115,115]], [[49,49,49,54], makeNimstrLit("What did the digital clock say to the grandfather clock? \"Look grandpa, no hands!\"")], [[49,49,49,55], makeNimstrLit("What do you call it when you dip poultry and beef in chocolate?  Brown-chichen-Brown-cow")], [[49,49,49,56], makeNimstrLit("What happens when your cousin eats all the Pumpkin pie on Thanksgiving? Plump kin!")], [[49,49,49,57], makeNimstrLit("Why does the Pope only eat munchkins? Cause they\'re the holy part of the donut!")], [[49,49,50,48], makeNimstrLit("Knock, Knock... Who\'s there? The K.G.B. The K.G.B. wh... **SLAP**! WE are K.G.B., WE will ask questions!!")], [[49,49,50,49], [87,104,97,116,32,105,115,32,77,111,122,97,114,116,32,100,111,105,110,103,32,114,105,103,104,116,32,110,111,119,63,32,68,101,99,111,109,112,111,115,105,110,103]], [[49,49,50,50], makeNimstrLit("What is a vampire\'s favorite fruit? a Neck-tarine --From a great co-worker")], [[49,49,50,51], makeNimstrLit("\"So Sherlock...\" asked Watson, \"I forget, what was your highest degree of education?\" \"Elementary, my dear Watson.\"")], [[49,49,50,52], makeNimstrLit("What did Descartes say while shopping online? I think therefore I Amazon")], [[49,49,50,53], [87,104,97,116,32,100,111,101,115,32,114,47,84,104,101,95,68,111,110,97,108,100,32,99,97,108,108,32,105,116,115,32,114,117,108,101,32,108,105,115,116,63,32,84,104,101,32,77,65,71,65,32,67,97,114,116,97]], [[49,49,50,54], makeNimstrLit("A cow fell off a truck in Russia Apparently he hadn\'t been Put in properly.")], [[49,49,50,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,108,111,119,101,114,32,105,110,32,70,108,111,114,105,100,97,63,32,79,114,108,97,110,100,111,32,66,108,111,111,109,46]], [[49,49,50,56], makeNimstrLit("What do you call an Egyptian doctor who works on peoples backs? A Cairopractor!")], [[49,49,50,57], makeNimstrLit("Why did the dog go into the water? Because he didn\'t want to be a hot dog.")], [[49,49,51,48], makeNimstrLit("Why\'d the hipster burn his mouth on his coffee? Because he drank it before it was cool.")], [[49,49,51,49], makeNimstrLit("Why couldn\'t the lifeguard save the hippie from drowning? He was *too far out, maaan*.")], [[49,49,51,50], [73,102,32,121,111,117,32,104,97,118,101,32,98,108,97,100,100,101,114,32,112,114,111,98,108,101,109,115,46,32,85,114,105,110,101,32,116,114,111,117,98,108,101,46]], [[49,49,51,51], [87,104,101,114,101,32,100,105,100,32,116,104,101,32,103,101,110,101,114,97,108,32,107,101,101,112,32,104,105,115,32,97,114,109,105,101,115,63,32,73,110,32,104,105,115,32,115,108,101,101,118,105,101,115,33]], [[49,49,51,52], makeNimstrLit("What did Cholera say to Malaria? Are you gonna Jaundice on Saturday?")], [[49,49,51,53], makeNimstrLit("Q)What will you call a person who sleeps next to a close relative? A) NapKin")], [[49,49,51,54], makeNimstrLit("Scary Halloween Joke **Person 1:** Knock knock! **Person 2:** Who\'s there? **Person 1:** A GHOST!!!")], [[49,49,51,55], [87,104,111,32,105,110,118,101,110,116,101,100,32,102,114,97,99,116,105,111,110,115,63,32,72,101,110,114,121,32,116,104,101,32,49,47,56]], [[49,49,51,56], [87,104,97,116,39,115,32,99,111,108,100,32,97,110,100,32,115,99,97,114,121,63,33,32,73,45,115,99,114,101,97,109,33]], [[49,49,51,57], makeNimstrLit("Why was the rooster happy after his trip to Vegas? He got clucky.")], [[49,49,52,48], makeNimstrLit("What did the judge ask when he went to the dentist? Do you swear to pull the tooth, the whole tooth and nothing but the tooth?")], [[49,49,52,49], [87,104,121,32,97,114,101,32,104,111,114,115,101,115,32,110,101,118,101,114,32,111,118,101,114,119,101,105,103,104,116,63,32,84,104,101,121,39,114,101,32,111,110,32,97,32,115,116,97,98,108,101,32,100,105,101,116,46]], [[49,49,52,50], makeNimstrLit("Why does not a forth-grader ever take the bus home? Because he knew his parents will make him return it.")], [[49,49,52,51], makeNimstrLit("Why was Farmer Bob so good at his job? Because he was outstanding in his field")], [[49,49,52,52], makeNimstrLit("What do you call a fish who works for the government? An Official.")], [[49,49,52,53], makeNimstrLit("Why didn\'t the Duke of Windsor let his French servant help him tie his tie? He never does it with a four-in (foreign)-hand.")], [[49,49,52,54], makeNimstrLit("Why did the bald man draw rabbits all over his head? From a distance they look like hares!")], [[49,49,52,55], makeNimstrLit("I went to a shredded cheese convention the other day... it was grate")], [[49,49,52,56], [87,104,97,116,32,105,115,32,73,83,73,76,39,115,32,102,97,118,111,117,114,105,116,101,32,100,101,115,115,101,114,116,63,32,84,101,114,114,111,114,109,105,115,117]], [[49,49,52,57], [87,97,110,110,97,32,104,101,97,114,32,116,119,111,32,115,104,111,114,116,32,106,111,107,101,115,32,97,110,100,32,97,32,108,111,110,103,32,106,111,107,101,63,32,74,111,107,101,32,106,111,107,101,32,106,111,111,111,111,107,101,33]], [[49,49,53,48], makeNimstrLit("What happened to the runny nose... it tripped and fell. Now it\'s all boogered up.")], [[49,49,53,49], makeNimstrLit("Four years ago, I asked out the girl of my dreams. Today, I asked her to marry me. She said no both times. (not an original)")], [[49,49,53,50], makeNimstrLit("What do you call a cavator that isnt a cavator anymore? an EXcavator")], [[49,49,53,51], [87,104,121,32,100,105,100,32,116,104,101,32,115,116,114,97,119,98,101,114,114,121,32,99,114,121,63,32,66,101,99,97,117,115,101,32,104,105,115,32,109,111,116,104,101,114,32,119,97,115,32,105,110,32,97,32,106,97,109,46]], [[49,49,53,52], makeNimstrLit("People dont like having to bend over to get their drinks... We really need to raise the bar.")], [[49,49,53,53], [73,32,102,101,97,114,32,102,111,114,32,116,104,101,32,99,97,108,101,110,100,97,114,46,46,46,32,46,46,46,105,116,115,32,100,97,121,115,32,97,114,101,32,110,117,109,98,101,114,101,100,46]], [[49,49,53,54], makeNimstrLit("why are there fences around graveyards? people are just dying to get in there these days.")], [[49,49,53,55], makeNimstrLit("One Eskimo said to the other, \"Where is your mother from?\" The second Eskimo says \"Alaska.\"")], [[49,49,53,56], makeNimstrLit("Why can\'t a Pirate make it through their ABC\'s? They always get lost at C.")], [[49,49,53,57], [74,101,115,117,115,32,119,114,111,116,101,32,97,32,112,108,97,121,32,97,98,111,117,116,32,97,32,116,111,114,110,97,100,111,46,32,73,116,32,119,97,115,32,97,110,32,65,99,116,32,111,102,32,71,111,100,46]], [[49,49,54,48], makeNimstrLit("What did the blonde do when she discovered that most accidents happen within a mile from home? She moved.")], [[49,49,54,49], makeNimstrLit("Why did the girltree fall in love with the boy tree? He was sappy")], [[49,49,54,50], [73,32,119,101,110,116,32,116,111,32,97,32,115,101,97,102,111,111,100,32,100,105,115,99,111,32,108,97,115,116,32,119,101,101,107,46,46,46,32,46,46,46,97,110,100,32,112,117,108,108,101,100,32,97,32,109,117,115,115,101,108,46]], [[49,49,54,51], [87,104,121,32,100,105,100,32,116,104,101,32,112,105,101,32,103,111,32,116,111,32,116,104,101,32,100,101,110,116,105,115,116,63,32,73,116,32,110,101,101,100,101,100,32,97,32,102,105,108,108,105,110,103,46]], [[49,49,54,52], makeNimstrLit("(True story) So my friend saw me browsing this subreddit and he said... \"Is this a subreddit for really bad jokes?\"")], [[49,49,54,53], [83,117,112,101,114,109,97,110,32,97,110,100,32,69,121,111,114,101,32,104,97,100,32,97,32,98,97,98,121,46,32,84,104,101,32,98,97,98,121,39,115,32,110,97,109,101,63,32,83,117,112,101,114,101,121,111,114,101]], [[49,49,54,54], [87,104,97,116,32,99,104,101,101,115,101,32,100,111,32,121,111,117,32,117,115,101,32,116,111,32,103,101,116,32,97,32,98,101,97,114,32,111,117,116,32,111,102,32,97,32,116,114,101,101,63,32,67,97,109,101,109,98,101,114,116,33]], [[49,49,54,55], makeNimstrLit("Did you know that it\'s traditional to serve Eggs Benedict on a hubcap? There\'s no plate like chrome for the Hollandaise.")], [[49,49,54,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,100,101,101,112,45,115,101,97,32,100,105,118,105,110,103,32,100,111,103,63,32,83,99,117,98,97,32,45,32,68,111,111,33]], [[49,49,54,57], makeNimstrLit("Where did the fish go when it needed an operation? To the sturgeon")], [[49,49,55,48], makeNimstrLit("My English teacher got really angry about the format of my essay. It wasn\'t justified.")], [[49,49,55,49], makeNimstrLit("Starcraft: Why did the marine vote for the dragoon? He was Protoss")], [[49,49,55,50], makeNimstrLit("All these people getting emails from the Prince of Nigeria, I got one from an Egyptian Pharaoh... But it turned out to just be a pyramid scheme.")], [[49,49,55,51], makeNimstrLit("What do you get if you cross an elephant with a fish? Swimming trunks")], [[49,49,55,52], [87,104,101,114,101,32,105,115,32,69,110,103,97,103,101,109,101,110,116,44,32,79,104,105,111,63,32,66,101,116,119,101,101,110,32,68,97,121,116,111,110,32,97,110,100,32,77,97,114,105,111,110,46]], [[49,49,55,53], makeNimstrLit("Why is Ireland the richest country in the world? Because it\'s capital is always Dublin.")], [[49,49,55,54], makeNimstrLit("Can you tell me what you call a person from Corsica? Course a can.")], [[49,49,55,55], [72,111,119,32,100,105,100,32,116,104,101,32,109,101,116,97,108,32,103,101,116,32,116,104,101,32,119,114,111,110,103,32,105,100,101,97,63,32,72,101,32,119,97,115,32,109,105,115,108,101,100,46]], [[49,49,55,56], [83,111,32,116,111,100,97,121,32,105,115,32,83,116,97,114,32,87,97,114,115,32,100,97,121,32,77,97,121,32,116,104,101,32,102,111,117,114,116,104,32,98,101,32,119,105,116,104,32,121,111,117,33]], [[49,49,55,57], [119,104,97,116,32,104,97,112,112,101,110,115,32,105,102,32,121,111,117,32,100,114,105,110,107,32,51,46,49,52,32,108,105,116,101,114,115,32,111,102,32,119,97,116,101,114,63,32,121,111,117,32,119,105,108,108,32,80,105,32,115,115]], [[49,49,56,48], makeNimstrLit("A WWII Joke! What did the German Shepherd say at his Nuremberg trial? \"I was just following odors.\"")], [[49,49,56,49], [87,104,97,116,32,100,111,32,99,111,119,115,32,108,105,107,101,32,116,111,32,112,117,116,32,111,110,32,116,104,101,105,114,32,104,111,116,32,100,111,103,115,63,32,109,111,111,115,116,97,114,100]], [[49,49,56,50], makeNimstrLit("Why did the cow go to the psychologist? She had a fodder complex.")], [[49,49,56,51], makeNimstrLit("Why did the knife quit? It couldn\'t CUT IT! woohoo! I made this one up while sitting at a buffet table. Enjoy! ~Skip")], [[49,49,56,52], [87,104,97,116,39,115,32,71,101,111,114,103,101,32,87,97,115,104,105,110,103,116,111,110,39,115,32,108,101,97,115,116,32,102,97,118,111,114,105,116,101,32,102,108,111,119,101,114,63,32,76,105,91,101,93,45,108,97,99,115,33]], [[49,49,56,53], makeNimstrLit("Why should you avoid people dressed as celery? They could be stalking you!")], [[49,49,56,54], [87,97,110,110,97,32,104,101,97,114,32,97,32,106,111,107,101,32,97,98,111,117,116,32,78,105,116,114,105,99,32,79,120,105,100,101,32,63,32,78,79]], [[49,49,56,55], makeNimstrLit("What\'s the strongest letter in the alphabet? ***P*** Even Superman can\'t hold it.")], [[49,49,56,56], makeNimstrLit("What do you call it when your wife brings you rice porridge in prison? Congee-gal visit")], [[49,49,56,57], makeNimstrLit("Why did the dinosaur cross the road? Because the chicken didn\'t exist.")], [[49,49,57,48], [87,104,121,32,100,111,101,115,32,97,32,114,97,112,112,101,114,32,110,101,101,100,32,97,110,32,117,109,98,114,101,108,108,97,63,32,70,111,39,32,100,114,105,122,122,108,101,46]], [[49,49,57,49], [87,104,97,116,32,100,105,100,32,84,101,110,110,101,115,115,101,101,63,32,87,104,97,116,32,65,114,107,97,110,115,97,115,46]], [[49,49,57,50], makeNimstrLit("My son decided to help me clean the car today. After ten minutes of watching him, I told him to use some elbow grease. Two hours later, the idiot came back and told me that he couldn\'t find it.")], [[49,49,57,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,103,114,111,117,112,32,111,102,32,67,111,109,98,105,39,115,63,32,65,32,67,111,109,98,105,32,110,97,116,105,111,110,33]], [[49,49,57,52], makeNimstrLit("How do you get down from an elephant? You don\'t, you get down from a duck")], [[49,49,57,53], makeNimstrLit("You can pick your friends, and you can pick your nose... But you can\'t pick your friend\'s nose")], [[49,49,57,54], makeNimstrLit("Which whiskey should you buy if you want to dance all night? Wild Twerky!")], [[49,49,57,55], makeNimstrLit("Why couldn\'t the hunter cook breakfast? The game warden found out he poached his eggs!")], [[49,49,57,56], makeNimstrLit("I went to an ATM... I was at an ATM this morning and this older lady asked me to help check her balance, so I pushed her over.")], [[49,49,57,57], [72,111,119,32,109,117,99,104,32,100,111,101,115,32,97,32,116,114,117,99,107,32,102,117,108,108,32,111,102,32,98,111,110,101,115,32,119,101,105,103,104,63,32,65,32,115,107,101,108,101,84,111,110]], [[49,50,48,48], [87,104,121,32,100,111,110,39,116,32,99,97,116,115,32,112,108,97,121,32,112,111,107,101,114,32,105,110,32,116,104,101,32,106,117,110,103,108,101,63,32,84,111,111,32,109,97,110,121,32,99,104,101,101,116,97,104,115,33]], [[49,50,48,49], [65,32,115,107,101,108,101,116,111,110,32,119,97,108,107,115,32,105,110,116,111,32,97,32,98,97,114,46,46,46,32,65,115,107,115,32,102,111,114,32,97,32,98,101,101,114,32,97,110,100,32,97,32,109,111,112,46]], [[49,50,48,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,97,116,104,101,105,115,116,32,98,111,110,101,63,32,65,32,98,108,97,115,102,101,109,117,114,46]], [[49,50,48,51], makeNimstrLit("How do you catch a one-of-a-kind rabbit? Unique up on it. How do you catch a very calm rabbit? The tame way.")], [[49,50,48,52], makeNimstrLit("Will Smith\'s website isn\'t responding. What do you do? Refresh Prince of Bel Air.")], [[49,50,48,53], [87,104,97,116,32,116,104,101,32,116,104,101,32,101,108,101,99,116,114,105,99,105,97,110,32,115,97,121,32,116,111,32,104,105,115,32,98,117,100,100,121,63,32,87,97,116,116,115,32,117,112,63,33]], [[49,50,48,54], makeNimstrLit("How many South Americans does it take to change a lightbulb? A Brazilian.... I\'ll get my coat...")], [[49,50,48,55], [72,111,119,32,100,111,32,121,111,117,32,99,97,116,99,104,32,97,32,98,114,97,63,32,89,111,117,32,115,101,116,32,97,32,98,111,111,98,121,32,116,114,97,112,46]], [[49,50,48,56], makeNimstrLit("April showers bring May flowers, but what do May flowers bring? Pilgrims.")], [[49,50,48,57], [87,104,105,99,104,32,99,104,101,101,115,101,32,105,115,32,116,104,101,32,108,111,110,101,108,105,101,115,116,63,32,80,114,111,118,45,97,108,111,110,101,33]], [[49,50,49,48], makeNimstrLit("Did you hear the joke about the fast car? I would tell you but I think you\'re too slow to get it.")], [[49,50,49,49], [87,104,121,32,100,105,100,32,116,104,101,32,116,119,105,110,107,105,101,32,103,111,32,116,111,32,116,104,101,32,100,101,110,116,105,115,116,63,32,72,101,32,108,111,115,116,32,104,105,115,32,102,105,108,108,105,110,103,33]], [[49,50,49,50], makeNimstrLit("How does a fish always know how much they weigh? Because they have their own scales!")], [[49,50,49,51], makeNimstrLit("What does music have to do with safety? If you don\'t C sharp, you\'ll B flat.")], [[49,50,49,52], makeNimstrLit("Why is there very little honey in Belgium? Because there is only one B in Belgium")], [[49,50,49,53], [72,111,119,32,109,97,110,121,32,103,111,97,108,115,32,100,105,100,32,71,101,114,109,97,110,121,32,115,99,111,114,101,63,32,103,101,114,77,65,78,89]], [[49,50,49,54], makeNimstrLit("Why did the elephant turn around in the airport and go home? He forgot to pack his trunk.")], [[49,50,49,55], makeNimstrLit("Two fish are in a tank... Two fish are in a tank... First one says: I\'ll drive! Second one says: \"I\'ll man the guns!\"")], [[49,50,49,56], makeNimstrLit("How many hipsters does it take to change a light bulb? it\'s a pretty obscure number.... i\'m sure you haven\'t heard of it.")], [[49,50,49,57], [87,104,97,116,32,99,101,108,101,98,114,105,116,121,32,110,101,118,101,114,32,112,97,121,101,100,32,119,105,116,104,32,97,32,99,104,101,113,117,101,32,111,114,32,99,114,101,100,105,116,63,32,74,111,104,110,110,121,32,67,97,115,104,46]], [[49,50,50,48], [87,104,97,116,32,105,115,32,97,32,112,97,105,114,32,111,102,32,115,104,101,101,112,39,115,32,102,97,118,111,114,105,116,101,32,105,110,115,116,114,117,109,101,110,116,63,32,84,119,111,45,66,97,97,97,115,46]], [[49,50,50,49], makeNimstrLit("You know why ancient Greek children were always getting lost from their parents? \'Cause they kept Roman around!")], [[49,50,50,50], makeNimstrLit("Have you heard about that hot Thai lounge singer? Yeah. They call him *Frank Sriracha.*")], [[49,50,50,51], makeNimstrLit("...walks into a bar... A golfer, a priest and a lawyer walk into a bar. The bartender looks up and asks, \"What is this? Some kind of joke?\"")], [[49,50,50,52], makeNimstrLit("Other uses for chloroform 1) A great conversational piece when talking to the cops about using it 2) Make the day go by faster 3) And finally, as a reagent.")], [[49,50,50,53], makeNimstrLit("Cars Why do lazy people only drive automatics? Because they\'re shiftless.")], [[49,50,50,54], [87,104,121,32,105,115,32,89,111,100,97,32,97,102,114,97,105,100,32,111,102,32,115,101,118,101,110,63,32,66,101,99,97,117,115,101,32,115,105,120,32,115,101,118,101,110,32,101,105,103,104,116,46]], [[49,50,50,55], makeNimstrLit("Why couldn\'t the pirate learn the alphabet? Because he was always lost at C.")], [[49,50,50,56], makeNimstrLit("College My son took Rock Climbing in college but he had to drop the class. He couldn\'t find any \"Cliff Notes.\"")], [[49,50,50,57], makeNimstrLit("What is the cheapest part of a boat? The part with the sail in it.")], [[49,50,51,48], makeNimstrLit("Why was the egg kicked out of the comedy club? Because he was telling bad yolks!")], [[49,50,51,49], makeNimstrLit("You know what\'s the problem with Mexican and black jokes? If you\'ve heard Juan, you\'ve heard Jamaal.")], [[49,50,51,50], makeNimstrLit("The signature dish of a restaurant called the Twisted Rooster: Mobius Chicken Strips.")], [[49,50,51,51], makeNimstrLit("What did one math book say to the other? Don\'t bother me; I\'ve got my own *problems!*")], [[49,50,51,52], makeNimstrLit("Why are giraffes slow to apologize? It takes them a long time to swallow their pride")], [[49,50,51,53], [86,101,108,99,114,111,32,87,104,97,116,32,97,32,114,105,112,32,111,102,102,46,32,74,111,107,101,32,98,121,32,84,105,109,32,86,105,110,101,46]], [[49,50,51,54], makeNimstrLit("Why don\'t melons ever run away and get married? Because they cantaloupe!")], [[49,50,51,55], [76,105,107,101,32,109,111,115,116,32,112,101,111,112,108,101,32,109,121,32,97,103,101,46,46,46,32,73,39,109,32,50,55,46]], [[49,50,51,56], makeNimstrLit("Two fish in a tank Fish 1:Uh, Greg? Fish 2:What Fish 1:How do we drive this thing")], [[49,50,51,57], [68,105,100,32,121,111,117,32,104,101,97,114,32,97,98,111,117,116,32,116,104,101,32,73,116,97,108,105,97,110,32,99,104,101,102,32,116,104,97,116,32,100,105,101,100,63,32,72,101,32,112,97,115,116,97,32,119,97,121,46]], [[49,50,52,48], makeNimstrLit("Why did the bacteria cross the microscope? To get to the other slide")], [[49,50,52,49], makeNimstrLit("I read a story about a kid that ate 4 cans of alphabet soup in one sitting... It said that he later had a massive vowel movement. Maybe a dirty joke.")], [[49,50,52,50], [84,97,115,116,101,100,32,116,104,101,32,98,101,115,116,32,66,111,114,115,99,104,116,32,101,118,101,114,33,32,73,116,39,108,108,32,98,101,32,104,97,114,100,32,116,111,32,98,101,101,116,46]], [[49,50,52,51], makeNimstrLit("The Fine Bros. \'React\' announcement was like a television with no antenna. Poor reception.")], [[49,50,52,52], [87,104,97,116,32,100,111,32,99,97,108,108,32,97,32,104,111,114,115,101,32,116,104,97,116,32,108,105,118,101,115,32,110,101,97,114,32,121,111,117,63,32,65,32,110,97,121,98,111,114]], [[49,50,52,53], [87,104,97,116,32,107,105,110,100,32,111,102,32,98,101,101,115,32,109,97,107,101,32,109,105,108,107,63,32,66,111,111,98,105,101,115,46]], [[49,50,52,54], makeNimstrLit("What does Mario use to get his hot dogs off the grill? He uses his Donkey Tongs.")], [[49,50,52,55], makeNimstrLit("\"We don\'t serve time travelers here\" A time traveler walks into a bar.")], [[49,50,52,56], makeNimstrLit("How do you kill bread? Bake it for a little while, and it will be toast.")], [[49,50,52,57], makeNimstrLit("What do you call an imaginary color? A pigment of your imagination.")], [[49,50,53,48], makeNimstrLit("Did you hear about the mathematician who hated negative numbers? He\'ll stop at nothing to avoid them!")], [[49,50,53,49], makeNimstrLit("What do you call security guards working outside Samsung shops? Guardians of the Galaxy")], [[49,50,53,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,99,104,101,101,115,101,32,116,104,97,116,32,105,115,32,98,121,32,105,116,115,101,108,102,63,32,80,114,111,118,111,108,111,110,101]], [[49,50,53,51], makeNimstrLit("I just got a job helping a one arm typist do capital letters... Its shift work.")], [[49,50,53,52], [87,104,121,32,100,111,101,115,32,97,32,66,105,99,121,99,108,101,32,104,97,118,101,32,97,32,107,105,99,107,115,116,97,110,100,63,32,66,101,99,97,117,115,101,32,105,116,39,115,32,116,119,111,32,116,105,114,101,100,46]], [[49,50,53,53], makeNimstrLit("Which side of a horse has the most hair? The OUTSIDE! oh-my-goodness, that\'s hilarious! ~Skip")], [[49,50,53,54], makeNimstrLit("I went in to a pet shop and said, Can I buy a goldfish? The guy said, Do you want an aquarium? I said, I dont care what star sign it is.")], [[49,50,53,55], makeNimstrLit("Noah wasn\'t much for civilized society . . . You could say he was an-arc-ist.")], [[49,50,53,56], [84,119,111,32,115,105,108,107,32,119,111,114,109,115,32,104,97,100,32,97,32,114,97,99,101,46,32,84,104,101,121,32,101,110,100,101,100,32,117,112,32,105,110,32,97,32,116,105,101,46]], [[49,50,53,57], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,115,104,101,101,112,32,99,111,118,101,114,101,100,32,105,110,32,99,104,111,99,111,108,97,116,101,63,32,65,32,99,97,110,100,121,32,98,97,97]], [[49,50,54,48], [87,104,97,116,32,100,111,32,121,111,117,32,100,111,32,105,102,32,121,111,117,32,115,101,101,32,97,32,115,112,97,99,101,109,97,110,63,32,89,111,117,32,112,97,114,107,32,105,110,32,105,116,44,32,109,97,110,46]], [[49,50,54,49], makeNimstrLit("Why did Trump insist on Hillary Clinton as Secretary of state? He doesn\'t believe women should get above secretary")], [[49,50,54,50], makeNimstrLit("I was wondering why the frisbee was getting bigger. And then it hit me.")], [[49,50,54,51], [87,104,97,116,32,100,105,100,32,116,104,101,32,66,117,102,102,97,108,111,32,115,97,121,32,119,104,101,110,32,104,105,115,32,99,104,105,108,100,32,108,101,102,116,32,102,111,114,32,99,111,108,108,101,103,101,63,32,66,105,115,111,110]], [[49,50,54,52], [72,111,119,32,100,111,32,121,111,117,32,107,101,101,112,32,97,110,32,105,100,105,111,116,32,105,110,32,115,117,115,112,101,110,115,101,63,32,73,39,108,108,32,116,101,108,108,32,121,111,117,32,108,97,116,101,114,46]], [[49,50,54,53], [66,97,116,109,97,110,32,100,111,101,115,110,39,116,32,104,97,118,101,32,110,105,103,104,116,109,97,114,101,115,32,78,105,103,104,116,109,97,114,101,115,32,104,97,118,101,32,98,97,116,109,97,110]], [[49,50,54,54], makeNimstrLit("Charles Dickens walks into a bar... and orders a martini. The bartender asks \"olive \'er twist?\"")], [[49,50,54,55], makeNimstrLit("Nickelback walks into a bar.... So Nickelback walks into a bar, and there is no punchline, because ruining music isn\'t funny.")], [[49,50,54,56], makeNimstrLit("So a polar bear walks into a bar... and says, \"I\'ll have a gin.....and tonic\" The bartender says, \"What\'s with the big pause?\" And the polar bear says, \"Oh, I\'ve always had them.\"")], [[49,50,54,57], makeNimstrLit("Mom asked if I wanted to race toy cars with my neighbor Chucky. I responded, \"Nah, that\'s child\'s play.\"")], [[49,50,55,48], [87,104,97,116,32,100,111,32,121,111,117,32,102,105,110,100,32,105,110,32,97,32,99,108,111,117,100,39,115,32,115,104,111,114,116,115,63,32,84,104,117,110,100,101,114,112,97,110,116,115,33]], [[49,50,55,49], [87,104,121,32,100,105,100,32,116,104,101,32,83,83,68,32,98,117,114,110,32,97,32,102,108,97,103,63,32,66,101,99,97,117,115,101,32,105,116,32,119,97,115,32,97,32,80,97,116,114,105,111,116,32,66,108,97,122,101]], [[49,50,55,50], makeNimstrLit("Difference between a dead squirrel and a dead drummer in the road? http://imgur.com/PKibj The squirrel might have been on his way to a gig.")], [[49,50,55,51], [66,121,32,115,104,101,97,114,32,99,111,105,110,99,105,100,101,110,99,101,46,46,46,32,46,46,46,97,108,108,32,116,104,101,115,101,32,115,104,101,101,112,32,108,111,111,107,32,116,104,101,32,115,97,109,101,46,46,46]], [[49,50,55,52], makeNimstrLit("Finally decided on my thesis paper. It\'s a LOTR themed essay in defense of Sauron Titled \"Getting away with Mordor\"")], [[49,50,55,53], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,101,101,32,102,114,111,109,32,116,104,101,32,119,114,111,110,103,32,115,105,100,101,32,111,102,32,116,111,119,110,63,32,65,32,98,117,109,98,108,101,103,101,101]], [[49,50,55,54], makeNimstrLit("Why did Mrs. Grape leave Mr. Grape? She was tired of raisin kids.")], [[49,50,55,55], [87,104,97,116,32,100,111,101,115,32,98,97,116,109,97,110,32,116,97,107,101,32,105,110,32,104,105,115,32,119,104,105,115,107,101,121,63,32,74,117,115,116,32,105,99,101,46]], [[49,50,55,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,111,111,109,101,114,97,110,103,32,116,104,97,116,32,100,111,101,115,110,39,116,32,99,111,109,101,32,98,97,99,107,63,32,65,32,83,116,105,99,107]], [[49,50,55,57], [65,32,103,117,121,32,119,97,108,107,115,32,105,110,116,111,32,97,32,98,97,114,32,79,117,99,104]], [[49,50,56,48], makeNimstrLit("Why did the scale decide that the scam artists were heavier than the novels? Because the cons outweighed the prose.")], [[49,50,56,49], makeNimstrLit("Im trying to get into classical music... ...but I cant find any original recordings. All the music is performed by cover bands.")], [[49,50,56,50], makeNimstrLit("What did aged mother cheddar say to her son the day of school photos? Looking sharp.")], [[49,50,56,51], makeNimstrLit("Why does a chicken coop have two doors? Because if it had four it would be a chicken sedan!")], [[49,50,56,52], makeNimstrLit("Note for Santa Dear Santa, Please give me a big fat bank account and a slim body. Please don\'t mix those two up like you did last year. Thanks.")], [[49,50,56,53], [87,104,121,32,119,97,115,32,80,97,118,108,111,118,39,115,32,104,97,105,114,32,115,111,32,115,111,102,116,63,32,72,101,32,99,111,110,100,105,116,105,111,110,101,100,32,105,116,46]], [[49,50,56,54], makeNimstrLit("What\'s an atheist\'s favorite Christmas movie? Coincidence on 34th Street")], [[49,50,56,55], makeNimstrLit("What do you call someone who makes a lot of money through deforestation of the Amazon? A Brazillionaire!")], [[49,50,56,56], [87,104,97,116,115,32,77,97,114,105,111,115,32,102,97,118,111,114,105,116,101,32,116,121,112,101,32,111,102,32,106,101,97,110,115,63,32,100,101,110,105,109,32,100,101,110,105,109,32,100,101,110,105,109,33]], [[49,50,56,57], [87,104,97,116,32,100,105,100,32,116,104,101,32,48,32,115,97,121,32,116,111,32,116,104,101,32,56,63,32,76,101,116,39,115,32,109,97,107,101,32,97,32,115,110,111,119,109,97,110,33]], [[49,50,57,48], makeNimstrLit("Have a very Joseph Christmas! We shouldn\'t discriminate by sex, you know.")], [[49,50,57,49], makeNimstrLit("Never try to kill a termite with a napkin. It\'ll only get bigger.")], [[49,50,57,50], makeNimstrLit("What did one nose say when the other nose said \"I love you\"? \"Back achoo!\"")], [[49,50,57,51], makeNimstrLit("Hope you guys like clean humor videos https://www.youtube.com/watch?v=kNt-aTq0hxM")], [[49,50,57,52], makeNimstrLit("Why don\'t blind people like to skydive? Because it scares the dog.")], [[49,50,57,53], [84,119,111,32,103,117,121,115,32,119,97,108,107,32,105,110,116,111,32,97,32,98,97,114,46,46,46,32,116,104,101,32,116,104,105,114,100,32,111,110,101,32,100,117,99,107,115,46]], [[49,50,57,54], makeNimstrLit("What did the french butter say when it got stocked in the cooler? Beurre... I came up with this today while grocery shopping. I\'m ridiculously pleased with myself.")], [[49,50,57,55], makeNimstrLit("Why did the dog sleep on the chandelier? Because he was a light sleeper.")], [[49,50,57,56], [87,104,97,116,32,104,97,112,112,101,110,115,32,119,104,101,110,32,97,32,115,112,111,111,110,32,97,110,100,32,102,111,114,107,32,103,101,116,32,105,110,116,111,32,97,32,102,105,103,104,116,63,32,99,105,118,105,108,119,97,114]], [[49,50,57,57], makeNimstrLit("My grandma refused to be an organ donor. She was buried with all of her musical instruments.")], [[49,51,48,48], [72,111,119,32,100,111,32,121,111,117,32,99,111,117,110,116,32,99,111,119,115,63,32,87,105,116,104,32,97,32,99,111,119,99,117,108,97,116,111,114,46]], [[49,51,48,49], makeNimstrLit("I dig, she dig, we dig, he dig, they dig, you dig ... Maybe not a funny joke but at least it is deep.")], [[49,51,48,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,117,114,105,97,108,32,99,104,97,109,98,101,114,32,102,117,108,108,32,111,102,32,77,111,111,115,101,63,32,77,111,111,115,111,108,101,117,109,46]], [[49,51,48,51], [77,105,110,116,115,32,73,32,119,97,115,32,101,97,116,105,110,103,32,109,105,110,116,32,99,104,111,99,111,108,97,116,101,115,32,97,110,100,32,73,32,102,101,108,116,32,115,105,99,107,32,97,102,116,101,114,32,101,105,103,104,116,46]], [[49,51,48,52], makeNimstrLit("A Polar Bear walks into a cafe He says, \"I\'ll have a burger and.... a coke.\" The waitress says, \"Okay. But, why the long pause?\" The bear says, \"I don\'t know. I was born with them.\"")], [[49,51,48,53], [87,104,97,116,32,100,105,100,32,116,104,101,32,104,111,116,32,100,111,103,115,32,110,97,109,101,32,116,104,101,105,114,32,99,104,105,108,100,63,32,70,114,97,110,107]], [[49,51,48,54], makeNimstrLit("I may be middle-class, but I\'m hard. *Al dente*, you might say. **Jimmy Carr**")], [[49,51,48,55], makeNimstrLit("What do you say when you see three whales? Whale whale whale, what do we have here?")], [[49,51,48,56], makeNimstrLit("What did Cinderella say while waiting for her photos? Someday my prints will come")], [[49,51,48,57], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,105,115,104,32,115,97,121,32,119,104,101,110,32,105,116,32,104,105,116,32,116,104,101,32,99,111,110,99,114,101,116,101,32,119,97,108,108,63,32,68,97,109]], [[49,51,49,48], makeNimstrLit("My Bucket List * ~~Five gallon bucket~~ * ~~Mop bucket~~ * Bucket hat")], [[49,51,49,49], makeNimstrLit("What do you call an old soldier who has been sprinkled in salt and pepper? A seasoned veteran.")], [[49,51,49,50], makeNimstrLit("The fast food restaurant for babies. \"Welcome to Gerber King, may I take your order?\"")], [[49,51,49,51], makeNimstrLit("What did one frog say to the other? Time\'s fun when you\'re having flies.")], [[49,51,49,52], makeNimstrLit("What do you get when you cross the Atlantic with the Titanic? Halfway.")], [[49,51,49,53], makeNimstrLit("Want to hear a dirty joke? This boy trips and falls into some mud.")], [[49,51,49,54], makeNimstrLit("No matter how much you push the envelope... ...it\'s still stationery.")], [[49,51,49,55], makeNimstrLit("My buddy went to a foreign country to get his sex change operation. Now he\'s a dude who\'s abroad.")], [[49,51,49,56], makeNimstrLit("A vampire stopped coming to my nightly poker games. All I said was that he made too many mistakes...")], [[49,51,49,57], makeNimstrLit("What\'s the most beautiful thing in Advanced Physics? A passing grade. :)")], [[49,51,50,48], makeNimstrLit("I bought a vacuum cleaner six months ago... ...and so far, all it\'s been doing is gathering dust.")], [[49,51,50,49], [87,104,101,114,101,32,100,111,32,121,111,117,32,100,114,111,119,110,32,97,32,104,105,112,115,116,101,114,63,32,84,104,101,32,77,97,105,110,115,116,114,101,97,109,46]], [[49,51,50,50], makeNimstrLit("What did the mama cow say to the baby cow? (x-post from /r/3amjokes) [It\'s pasture bedtime!](http://www.reddit.com/r/3amjokes/comments/1y8d67/what_did_the_mama_cow_say_to_the_baby_cow/)")], [[49,51,50,51], makeNimstrLit("Why did the man with one hand cross the road? To get to the second hand shop!")], [[49,51,50,52], makeNimstrLit("An invisible man marries an invisible woman... The kids were nothing to look at either.")], [[49,51,50,53], makeNimstrLit("What did the creepy scientist say to his new creepy wife? Let\'s grow MOLD together!")], [[49,51,50,54], [78,101,118,101,114,32,116,114,117,115,116,32,97,110,32,97,116,111,109,32,84,104,101,121,32,109,97,107,101,32,117,112,32,101,118,101,114,121,116,104,105,110,103]], [[49,51,50,55], makeNimstrLit("When you cook duck you should always add a little bit of goose It makes a game out of every bite.")], [[49,51,50,56], makeNimstrLit("A pair of mittens says to a hat, \"I\'ll stay here, you go on a head\"")], [[49,51,50,57], [87,104,97,116,32,105,115,32,98,108,97,99,107,44,32,98,105,116,116,101,114,32,97,110,100,32,100,111,110,116,32,119,111,114,107,32,119,111,114,116,104,32,97,32,100,97,109,110,63,32,68,101,99,97,102,32,99,111,102,102,101,101]], [[49,51,51,48], makeNimstrLit("Knock, Knock... Who\'s there? Peas. Peas who? *Peas pass the butter*")], [[49,51,51,49], makeNimstrLit("My \"go to\" zoo joke I tell this to my wife and kids every time we go to a zoo... Q. What do you get when you cross an elephant with a rhino? A. Elephino")], [[49,51,51,50], makeNimstrLit("Why did the chicken cross the road half-way? She wanted to lay it on the line.")], [[49,51,51,51], makeNimstrLit("I knew this guy who was so dumb... he saw a road sign that said, \"Disney Land Left\", so he turned around and went home.")], [[49,51,51,52], makeNimstrLit("I\'m not really sure I\'m understanding this financial crisis in Greece... It\'s all Greek to me.")], [[49,51,51,53], makeNimstrLit("What happened when porky pig fell asleep at his construction job? The foreman fired him, saying, \'We can\'t have bored boars boring boards.\'")], [[49,51,51,54], [68,105,100,32,121,111,117,32,104,101,97,114,32,97,98,111,117,116,32,116,104,97,116,32,115,112,105,99,121,32,107,110,105,103,104,116,63,32,83,105,114,32,65,99,104,97,46]], [[49,51,51,55], makeNimstrLit("What did the Buddhist say to the hot dog vendor? Make me one with everything.")], [[49,51,51,56], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,110,111,32,108,101,103,115,63,32,71,114,111,117,110,100,32,98,101,101,102,46]], [[49,51,51,57], makeNimstrLit("There once was a girl from Nantucket... Who carried her ice in a bucket. She walked down a hill. She had a great spill. And when she got up, she said, \"I\'m going to watch my step next time!\"")], [[49,51,52,48], [87,104,121,32,97,114,101,32,98,101,97,114,115,32,115,111,32,104,97,105,114,121,32,63,32,84,104,101,121,32,100,111,110,39,116,32,104,97,118,101,32,115,97,108,111,110,115,32,105,110,32,116,104,101,32,106,117,110,103,108,101,32,33]], [[49,51,52,49], makeNimstrLit("How many tickles does it take to make an octopus laugh? ten-tickles")], [[49,51,52,50], makeNimstrLit("Which is faster, hot or cold? Hot is faster. Anyone can catch a cold.")], [[49,51,52,51], makeNimstrLit("Do you think George Clooney has an iTunes playlist called Clooney Tunes?")], [[49,51,52,52], makeNimstrLit("I was going to go to a clairvoyants meeting the other day but.... it was cancelled due to unforeseen events.")], [[49,51,52,53], makeNimstrLit("Joke request Tell me your best joke that includes \"July\" \"fourth\" and \"fire\" Let\'s see what you\'ve got, Reddit!")], [[49,51,52,54], makeNimstrLit("What is black, white, and red all over? A Communist Propaganda film from the 1930s.")], [[49,51,52,55], [91,79,67,32,99,47,111,32,109,121,32,57,32,121,46,111,46,93,32,87,104,97,116,32,104,111,108,100,115,32,117,112,32,97,32,98,111,119,108,39,115,32,112,97,110,116,115,63,32,83,117,115,112,111,111,110,100,101,114,115,33]], [[49,51,52,56], makeNimstrLit("I don\'t like going to funerals early in the day. I\'m not much of a mourning person.")], [[49,51,52,57], makeNimstrLit("What happens when breed a shark and snowman? You get a frostbite!")], [[49,51,53,48], [87,104,105,99,104,32,108,101,116,116,101,114,32,111,102,32,116,104,101,32,97,108,112,104,97,98,101,116,32,105,115,32,116,104,101,32,108,97,122,105,101,115,116,63,32,108,101,116,116,101,114,32,71,32,40,108,101,116,104,97,114,103,121,41]], [[49,51,53,49], [119,104,97,116,115,32,98,114,111,119,110,32,97,110,100,32,115,116,105,99,107,121,63,32,97,32,115,116,105,99,107,33]], [[49,51,53,50], [87,104,105,99,104,32,100,97,121,32,100,111,32,99,104,105,99,107,101,110,115,32,102,101,97,114,32,109,111,115,116,63,32,70,114,121,100,97,121,46]], [[49,51,53,51], makeNimstrLit("What did the knob say to the door? I LOCK you a lot! yep, its corny, indeed, but... I\'m tryin\'! ~Skip")], [[49,51,53,52], [83,104,111,117,116,32,111,117,116,32,116,111,46,46,46,32,46,46,46,98,97,115,101,98,97,108,108,32,112,108,97,121,101,114,115,32,119,104,111,32,104,97,118,101,32,116,104,114,101,101,32,115,116,114,105,107,101,115,46]], [[49,51,53,53], [119,104,121,32,100,111,32,116,104,101,121,32,99,97,108,108,32,116,104,101,109,32,108,105,103,104,116,32,98,117,108,98,115,63,32,116,104,101,121,32,100,111,110,39,116,32,119,101,105,103,104,32,118,101,114,121,32,109,117,99,104]], [[49,51,53,54], makeNimstrLit("What\'s a reporter\'s favorite food? Ice cream because they always want a scoop!")], [[49,51,53,55], makeNimstrLit("Why did the scarecrow win the Nobel prize? He was outstanding in his field.")], [[49,51,53,56], makeNimstrLit("Is your refrigerator running? Well, you better get glasses, and stop doing drugs")], [[49,51,53,57], makeNimstrLit("A stamp collector walks into a bar... He walks up to the hostess and says, \"You\'re more beautiful than any stamp in my collection\" She replied, \"Philately will get you nowhere.\"")], [[49,51,54,48], makeNimstrLit("I personally don\'t believe in bros before hoes or hoes before hoes.. There needs to be a balance. A homie-hoe-stasis")], [[49,51,54,49], [72,111,119,32,100,111,32,121,111,117,32,102,105,120,32,97,32,98,114,111,107,101,110,32,112,117,109,112,107,105,110,63,32,87,105,116,104,32,97,32,112,117,109,112,107,105,110,32,112,97,116,99,104,33]], [[49,51,54,50], makeNimstrLit("My dad\'s not an alcoholic... ...He just collects empty bottles, sounds so much better, doesn\'t it? ~ Stewart Francis")], [[49,51,54,51], makeNimstrLit("I believe a lot of conflict in the Wild West could have been avoided completely... ...if cowboy architects had just made their towns big enough for everyone.")], [[49,51,54,52], [81,41,32,87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,103,114,111,117,112,32,111,102,32,56,32,114,97,98,98,105,116,115,63,32,65,41,32,82,97,98,98,121,116,101,33]], [[49,51,54,53], [87,104,97,116,32,105,115,32,97,32,98,97,99,116,101,114,105,97,39,115,32,79,84,72,69,82,32,102,97,118,111,114,105,116,101,32,100,105,115,104,63,32,84,104,101,32,80,69,84,82,73,32,100,105,115,104,33]], [[49,51,54,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,114,111,100,117,99,116,105,118,101,32,65,115,105,97,110,63,32,67,104,105,110,97,32,103,101,116,32,115,111,109,101,116,104,105,110,103,32,100,111,110,101,46]], [[49,51,54,55], [87,104,121,32,100,111,32,103,104,111,115,116,115,32,99,97,114,114,121,32,116,105,115,115,117,101,115,63,32,66,101,99,97,117,115,101,32,116,104,101,121,32,104,97,118,101,32,66,79,79,79,79,103,101,114,115,46]], [[49,51,54,56], makeNimstrLit("Two pretzels.. Two pretzels went walking down the street, one was \"assaulted\"")], [[49,51,54,57], makeNimstrLit("What is the Sun\'s favorite candy? Starburst! Another one from my 9 year old. I don\'t know where he gets it.")], [[49,51,55,48], makeNimstrLit("I just met someone who was a steam-roller operator. He was such a flatterer.")], [[49,51,55,49], makeNimstrLit("Why did the chicken cross the road? To get away from Gordon ramsey")], [[49,51,55,50], makeNimstrLit("What did the turkey say to the turkey hunter? \"Quack, quack, quack.\"")], [[49,51,55,51], makeNimstrLit("What is the difference between a man and a cat? One eats a lot, is lazy and doesnt care who brings the food. The other is a pet.")], [[49,51,55,52], makeNimstrLit("How do you confuse a fish? You put it in a bowl and tell it go to a corner!")], [[49,51,55,53], makeNimstrLit("Have you guys ever heard of the crazy Mexican Train Killer? He had...... Loco Motives")], [[49,51,55,54], makeNimstrLit("Do you know why there\'s no casinos in Africa? Because there\'s too many CHEETAHS!")], [[49,51,55,55], [119,104,97,116,32,100,105,100,32,116,104,101,32,122,101,114,111,32,115,97,121,32,116,111,32,116,104,101,32,101,105,103,104,116,63,32,110,105,99,101,32,98,101,108,116]], [[49,51,55,56], makeNimstrLit("They laughed when I said I wanted to be a comedian. Well, no ones laughing now.")], [[49,51,55,57], makeNimstrLit("I just heard because of the government shutdown government archeologists are working with a skeleton crew.")], [[49,51,56,48], makeNimstrLit("Why do abcdefghijklmopqrstuvwxy &amp; z hate hanging out with the letter n? Because n always has to be the center of attention.")], [[49,51,56,49], [87,104,121,32,99,111,117,108,100,110,39,116,32,66,97,99,104,32,112,97,121,32,102,111,114,32,104,105,115,32,100,105,110,110,101,114,63,32,66,101,99,97,117,115,101,32,104,101,32,119,97,115,32,66,97,114,111,113,117,101,46]], [[49,51,56,50], makeNimstrLit("What is the difference... What is the difference between unlawful and illegal? One is against the law and the other is a sick bird.")], [[49,51,56,51], [87,104,97,116,32,100,105,100,32,111,110,101,32,111,99,101,97,110,32,115,97,121,32,116,111,32,116,104,101,32,111,116,104,101,114,63,32,78,111,116,104,105,110,103,44,32,116,104,101,121,32,106,117,115,116,32,119,97,118,101,100,46]], [[49,51,56,52], [87,104,97,116,39,115,32,109,97,100,101,32,111,102,32,98,114,97,115,115,32,97,110,100,32,115,111,117,110,100,115,32,108,105,107,101,32,84,111,109,32,74,111,110,101,115,63,32,84,114,111,109,98,111,110,101,115,33]], [[49,51,56,53], [87,104,121,32,100,105,100,32,116,104,101,32,87,105,115,101,32,77,97,110,32,103,101,116,32,50,53,32,116,111,32,108,105,102,101,63,32,77,121,114,114,104,100,101,114]], [[49,51,56,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,100,105,110,111,115,97,117,114,32,70,66,73,32,97,103,101,110,116,63,32,65,32,112,116,101,114,101,100,97,99,116,101,100,46]], [[49,51,56,55], [87,104,97,116,32,100,105,100,32,116,104,101,32,102,105,115,104,32,115,97,121,32,119,104,101,110,32,105,116,32,114,97,110,32,105,110,116,111,32,116,104,101,32,119,97,108,108,63,32,68,97,109]], [[49,51,56,56], [49,54,32,115,111,100,105,117,109,32,97,116,111,109,115,32,119,97,108,107,32,105,110,116,111,32,97,32,98,97,114,32,102,111,108,108,111,119,101,100,32,98,121,32,66,97,116,109,97,110,46]], [[49,51,56,57], makeNimstrLit("What\'s the difference between a poorly dressed man on a tricycle and a well dessed man on a bicycle? Attire...!!")], [[49,51,57,48], makeNimstrLit("What did the pilot say when his plane wasn\'t flying? \"Aw man, that\'s a drag.\"")], [[49,51,57,49], makeNimstrLit("I asked my soap who it voted for, it said... I\'d lather not say! note: This one came to me in the shower just now, gotta go back in now. Oh, the irony! I think. ~Skip")], [[49,51,57,50], [87,104,121,32,100,105,100,32,116,104,101,32,99,111,102,102,101,101,32,102,105,108,101,32,97,32,112,111,108,105,99,101,32,114,101,112,111,114,116,63,32,66,101,99,97,117,115,101,32,105,116,32,119,97,115,32,109,117,103,103,101,100,46]], [[49,51,57,51], [72,111,119,32,100,111,101,115,32,116,104,101,32,109,97,110,32,105,110,32,116,104,101,32,109,111,111,110,32,99,117,116,32,104,105,115,32,104,97,105,114,63,32,69,99,108,105,112,115,101,32,105,116,46]], [[49,51,57,52], [72,111,119,32,100,105,100,32,116,104,101,32,98,117,114,103,108,97,114,32,103,101,116,32,105,110,116,111,32,116,104,101,32,104,111,117,115,101,63,32,73,110,116,114,117,100,101,114,32,119,105,110,100,111,119]], [[49,51,57,53], makeNimstrLit("Two chimps are in the bath One says \"ooh oooh eek eek\" The other one says \"well put some cold water in then!\"")], [[49,51,57,54], [87,104,97,116,32,100,111,32,100,117,99,107,115,32,100,111,32,97,116,32,67,104,114,105,115,116,109,97,115,32,116,105,109,101,63,32,84,104,101,121,32,100,117,99,107,101,114,97,116,101,32,99,111,111,107,105,101,115,46]], [[49,51,57,55], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,100,101,97,100,32,102,108,121,63,32,97,32,102,108,101,119]], [[49,51,57,56], makeNimstrLit("Knock knock. Who\'s there? Interrupting cow. Interrup........ MOOOOOOOOOOOOOOOO!!!! [Works best IRL](/spoiler)")], [[49,51,57,57], [87,104,97,116,32,100,105,32,121,111,117,32,99,97,108,108,32,97,32,115,110,111,119,109,97,110,32,105,110,32,109,97,121,63,32,65,32,112,117,100,100,108,101,33]], [[49,52,48,48], makeNimstrLit("What do you call a white supremacist who doesn\'t eat meat? A vegitaryan")], [[49,52,48,49], makeNimstrLit("How is a rabbit similar to a plum? they are both purple, except for the rabbit.")], [[49,52,48,50], [87,104,121,32,97,114,101,32,116,104,101,114,101,32,110,111,32,109,105,100,103,101,116,32,97,99,99,111,117,110,116,97,110,116,115,63,32,84,104,101,121,32,97,108,119,97,121,115,32,99,111,109,101,32,117,112,32,115,104,111,114,116,46]], [[49,52,48,51], makeNimstrLit("What do you call a noisy Chinese dog? How-Ling (my dad wanted me to post this)")], [[49,52,48,52], makeNimstrLit("Why can\'t you hear a pterodactyl in the bathroom ... because the \"p\" is silent")], [[49,52,48,53], [72,111,119,32,100,105,100,32,116,104,101,32,80,105,108,108,115,98,117,114,121,32,68,111,117,103,104,32,66,111,121,32,68,105,101,63,32,65,32,89,101,97,115,116,32,73,110,102,101,99,116,105,111,110]], [[49,52,48,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,110,97,116,105,118,101,32,97,109,101,114,105,99,97,110,32,99,111,111,107,32,97,32,115,105,111,117,120,32,99,104,101,102]], [[49,52,48,55], makeNimstrLit("I said bring your coffee maker whenever you want Them: great headphones on planes is heavier than flying over TEAs")], [[49,52,48,56], makeNimstrLit("A poem for Valentine\'s day Roses are red Poppies are red The grass is red Oh no my yard is on fire")], [[49,52,48,57], makeNimstrLit("What did the dad buffalo say when his offspring left for college? Bison")], [[49,52,49,48], [72,111,119,32,100,111,32,121,111,117,32,103,101,116,32,80,105,107,97,99,104,117,32,111,110,32,116,104,101,32,98,117,115,63,32,80,111,107,101,32,39,101,109,32,111,110,33]], [[49,52,49,49], [87,104,97,116,115,32,98,114,111,119,110,32,97,110,100,32,115,116,105,99,107,121,63,32,97,32,115,116,105,99,107]], [[49,52,49,50], makeNimstrLit("What do you call a fish that operates on brains? A brain sturgeon.")], [[49,52,49,51], makeNimstrLit("The reason angels can fly... ...is that they take themselves lightly. **G. K. Chesterton**")], [[49,52,49,52], [73,39,109,32,105,110,32,116,104,101,32,116,101,114,109,105,110,97,116,111,114,32,109,117,115,105,99,97,108,46,32,73,39,108,108,32,98,101,32,66,97,99,104,46]], [[49,52,49,53], [73,32,116,114,121,32,110,111,116,32,116,111,32,115,112,101,110,100,32,116,111,111,32,109,117,99,104,32,116,105,109,101,32,111,110,108,105,110,101,46,46,46,32,46,46,46,98,117,116,32,87,105,45,70,105,103,104,116,32,105,116,63]], [[49,52,49,54], makeNimstrLit("What does December have that other months dont have? The letter D.")], [[49,52,49,55], makeNimstrLit("What\'s the best way to capitalize on an opportunity? ON AN OPPORTUNITY")], [[49,52,49,56], makeNimstrLit("What\'s green, fuzzy, and if it falls out of a tree it\'ll kill you? A pool table.")], [[49,52,49,57], makeNimstrLit("A termite walks into a bar... And asks the nearest person \"Hey, is the bar tender here?\"")], [[49,52,50,48], [73,32,116,105,114,101,100,32,112,108,97,121,105,110,103,32,115,111,99,99,101,114,32,66,117,116,32,73,32,99,111,117,108,100,110,39,116,32,103,101,116,32,97,32,107,105,99,107,32,111,117,116,32,111,102,32,105,116,46]], [[49,52,50,49], [87,104,97,116,32,100,105,100,32,116,104,101,32,112,114,105,101,115,116,32,115,97,121,32,119,104,101,110,32,119,97,116,101,114,105,110,103,32,104,105,115,32,103,97,114,100,101,110,63,32,76,101,116,32,117,115,32,115,112,114,97,121,46]], [[49,52,50,50], [72,111,119,32,100,105,100,32,116,104,101,32,109,117,115,105,99,105,97,110,32,99,97,116,99,104,32,104,105,115,32,102,105,115,104,63,32,72,101,32,99,97,115,116,97,110,101,116]], [[49,52,50,51], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,112,108,97,115,116,105,99,32,115,104,101,101,112,63,32,76,97,109,98,105,110,97,116,101,100,33]], [[49,52,50,52], [73,32,110,101,101,100,32,116,104,105,115,32,112,108,97,110,116,32,116,111,32,103,114,111,119,46,32,87,101,108,108,44,32,119,97,116,101,114,32,121,111,117,32,119,97,105,116,105,110,103,32,102,111,114,63]], [[49,52,50,53], makeNimstrLit("Book, you look so much thinner! I know! I had my appendix removed!")], [[49,52,50,54], makeNimstrLit("Have you been injured in a car accident? call 555-bottom-feeders. We will do anything for money.")], [[49,52,50,55], makeNimstrLit("Did you hear about the stallion and the mare? They had a stable relationship.")], [[49,52,50,56], [87,104,97,116,32,97,114,101,32,116,119,111,32,100,111,99,116,111,114,115,32,119,105,116,104,32,99,111,108,100,115,32,65,110,32,105,114,111,110,105,99,32,80,97,114,97,100,111,120,46]], [[49,52,50,57], makeNimstrLit("What do you get when you cross Kansas with a vulture? Carrion my wayward son")], [[49,52,51,48], [72,111,119,32,100,111,32,121,111,117,32,107,110,111,119,32,105,116,39,115,32,116,105,109,101,32,116,111,32,103,111,32,116,111,32,98,101,100,63,32,72,105,116,108,101,114,32,105,115,32,114,97,112,105,110,103,32,121,111,117,33]], [[49,52,51,49], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,82,111,109,97,110,105,97,110,32,103,114,111,99,101,114,121,32,99,108,101,114,107,63,32,83,99,97,110,116,104,101,115,107,117]], [[49,52,51,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,101,97,114,32,111,102,32,104,111,114,110,101,100,32,98,111,118,105,110,101,115,63,32,65,117,114,111,99,104,110,111,112,104,111,98,105,97,46]], [[49,52,51,51], makeNimstrLit("What haircut did the Texan barber recommend when asked? He couldn\'t think of anything, and said \"I\'ll mullet over\"")], [[49,52,51,52], [91,79,67,93,32,72,111,119,32,100,111,101,115,32,71,97,110,100,104,105,32,109,101,97,115,117,114,101,32,112,97,115,115,105,118,101,32,114,101,115,105,115,116,97,110,99,101,63,32,73,110,32,111,111,111,111,111,111,104,109,115,46]], [[49,52,51,53], makeNimstrLit("Why is Kim Jong Un like todays music? They both ain\'t got the same Seoul.")], [[49,52,51,54], makeNimstrLit("I knew this guy who would ask men at church, \"is your tie made out of bird cloth?\" &lt;blank stare&gt; \"It\'s cheep, cheep, cheep.\"")], [[49,52,51,55], makeNimstrLit("What happened when the carrot died? There was a huge turnip at the funeral.")], [[49,52,51,56], makeNimstrLit("Why can\'t you hear a pterodactyl go to the bathroom? Because the P is silent")], [[49,52,51,57], [87,104,121,32,100,111,32,108,105,98,114,97,114,105,97,110,115,32,108,105,107,101,32,116,104,101,32,119,105,110,100,63,32,73,116,32,115,97,121,115,44,32,34,83,104,104,104,33,34,32,97,108,108,32,100,97,121,33]], [[49,52,52,48], makeNimstrLit("One potato asks another: -\"Are you sure we are related?\" -\"Yes I yam!\"")], [[49,52,52,49], [73,32,108,105,107,101,32,109,121,32,115,108,97,118,101,115,32,108,105,107,101,32,73,32,108,105,107,101,32,109,121,32,99,111,102,102,101,101,32,70,114,101,101,46]], [[49,52,52,50], [87,104,111,32,105,115,32,116,104,101,32,111,110,108,121,32,115,117,112,101,114,104,117,109,97,110,32,70,114,111,122,111,110,101,32,99,97,110,39,116,32,100,101,97,108,32,119,105,116,104,63,32,84,104,111,114,46]], [[49,52,52,51], makeNimstrLit("Why don\'t bears wear boots? Cos they like to walk around in their bear feet.")], [[49,52,52,52], makeNimstrLit("There\'s 10 kind of people in the world. Those who know binary and those who don\'t.")], [[49,52,52,53], makeNimstrLit("What do you call the object Attila the Hun uses to brush his leg hair? A Hun knee comb.")], [[49,52,52,54], makeNimstrLit("Words can\'t possibly describe how beautiful you are... But numbers can 4/10")], [[49,52,52,55], [87,104,97,116,32,97,114,101,32,116,119,105,110,115,32,102,97,118,111,114,105,116,101,32,102,114,117,105,116,115,63,32,80,101,97,114,115]], [[49,52,52,56], makeNimstrLit("Did you hear about the guy who fell into an upholstery machine? Now he\'s fully recovered.")], [[49,52,52,57], makeNimstrLit("Why did the chicken cross the road? To get to the moron\'s house. *knock knock* ^^Whose ^^there? *the chicken...*")], [[49,52,53,48], makeNimstrLit("Why did the wave fail the driving test? It kept crashing on the beach.")], [[49,52,53,49], makeNimstrLit("What did one earthquake say to the other? Hey, it\'s not my fault.")], [[49,52,53,50], makeNimstrLit("I bought some shoes from a drug dealer, I don\'t know what he laced them with but I have been tripping all day. --My amazing girlfriend told me this one")], [[49,52,53,51], makeNimstrLit("Request: Jokes for the sick? I have a good friend who was just hospitalized, hopefully nothing too serious. I\'d love to send him a few short, clean jokes to cheer him up. Thanks!")], [[49,52,53,52], makeNimstrLit("Why would no one listen to the percussion section? Because they couldn\'t drum up enough support.")], [[49,52,53,53], [87,104,97,116,32,107,105,110,100,32,111,102,32,98,101,101,32,99,97,110,32,110,101,118,101,114,32,98,101,32,117,110,100,101,114,115,116,111,111,100,63,32,65,32,109,117,109,98,108,101,45,98,101,101,46]], [[49,52,53,54], [87,104,97,116,39,115,32,116,104,101,32,100,105,102,102,101,114,101,110,99,101,32,98,101,116,119,101,101,110,32,66,111,116,111,120,32,97,110,100,32,66,111,114,97,120,63,32,84,119,111,32,108,101,116,116,101,114,115,46]], [[49,52,53,55], [65,32,98,114,111,111,109,32,111,110,108,121,32,108,105,107,101,115,32,111,110,101,32,98,114,97,110,100,32,111,102,32,99,111,109,101,100,121,46,32,68,117,115,116,112,97,110,46]], [[49,52,53,56], makeNimstrLit("If you bury someone in the wrong place then you have made a grave mistake.")], [[49,52,53,57], makeNimstrLit("A man walks into a fancy dress party carrying a woman on his back... The host asks the man why this is so. \"Oh, I\'m a tortoise and this is Michelle\" says the man.")], [[49,52,54,48], makeNimstrLit("There\'s only one problem with reading articles about space based technology It all goes waaaay over my head.")], [[49,52,54,49], makeNimstrLit("Pac-Man What should you do before you criticize Pac-Man? WAKA WAKA WAKA mile in his shoes.")], [[49,52,54,50], makeNimstrLit("What does a bag of rice and an onion do when they get into a fast car? They pilaf. I\'ll show my way out")], [[49,52,54,51], [87,97,110,116,32,116,111,32,104,101,97,114,32,97,32,106,111,107,101,32,97,98,111,117,116,32,112,105,122,122,97,63,32,78,101,118,101,114,32,109,105,110,100,32,105,116,32,105,115,32,116,111,111,32,99,104,101,101,115,121,46]], [[49,52,54,52], makeNimstrLit("What did the Triangle say to the Circle? \"Your life is pointless.\"")], [[49,52,54,53], makeNimstrLit("HELP! We need your best joke you have! We will choose the best joke and make a video of it, just for you!")], [[49,52,54,54], makeNimstrLit("I heard a great joke about a boomerang earlier. I\'m sure it will come back to me eventually.")], [[49,52,54,55], makeNimstrLit("What did the pony say when he had a sore throat? Pardon me, I\'m just a little hoarse.")], [[49,52,54,56], makeNimstrLit("I\'m good friends with 25 letters of the alphabet... I don\'t know why.")], [[49,52,54,57], makeNimstrLit("What\'s pink and fluffy? Pink fluff. Whats blue and fluffy? Pink fluff holding its breath")], [[49,52,55,48], makeNimstrLit("What\'s Sam Smith\'s favorite type of nut?  [It\'s an alllllllllmond](https://www.youtube.com/watch?v=fB63ztKnGvo&amp;feature=youtu.be&amp;t=37s)")], [[49,52,55,49], [87,104,97,116,32,100,105,100,32,116,104,101,32,107,111,97,108,97,32,98,101,97,114,32,115,97,121,32,116,111,32,116,104,101,32,98,97,114,98,101,114,63,32,89,111,117,32,99,97,45,108,105,112,32,116,104,105,115,63]], [[49,52,55,50], [87,104,97,116,32,99,105,116,121,32,108,111,118,101,115,32,116,111,32,101,97,116,32,115,97,110,100,119,105,99,104,101,115,63,32,75,111,108,100,99,117,116,116,97]], [[49,52,55,51], makeNimstrLit("Why aren\'t sumos chummy with racecar drivers? They move in different circles.")], [[49,52,55,52], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,115,104,97,118,105,110,103,32,97,32,99,114,97,122,121,32,115,104,101,101,112,63,32,83,104,101,97,114,32,109,97,100,110,101,115,115,46]], [[49,52,55,53], makeNimstrLit("Why don\'t tennis players get married? Because to them love means nothing.")], [[49,52,55,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,102,97,107,101,32,110,111,111,100,108,101,63,32,65,110,32,73,109,112,97,115,116,97]], [[49,52,55,55], makeNimstrLit("I thought I had a brain tumor but then I realized it was all in my head.")], [[49,52,55,56], makeNimstrLit("Did you know that 1 in every doll, in every doll, in every doll, in every doll are Russian?")], [[49,52,55,57], [84,111,100,97,121,39,115,32,109,121,32,99,97,107,101,32,100,97,121,33,32,65,110,100,32,73,39,109,32,103,111,105,110,103,32,116,111,32,101,97,116,32,105,116,32,116,111,111,33]], [[49,52,56,48], makeNimstrLit("How do you kill a vampire from the South? With a chicken fried stake")], [[49,52,56,49], makeNimstrLit("You can pick your friends, and you can pick your nose... But you can\'t pick your friend\'s nose")], [[49,52,56,50], makeNimstrLit("Two atoms walk into a bar... One says, \"Oh no, I\'ve lost an electron.\" The other asks, \"Are you sure?\" \"Yeah, I\'m positive!\"")], [[49,52,56,51], [87,104,97,116,32,105,115,32,114,111,98,111,116,32,106,97,122,122,32,99,97,108,108,101,100,63,32,66,101,101,112,32,66,111,111,112,32,66,111,112,33]], [[49,52,56,52], makeNimstrLit("My Girlfriend told me she didn\'t want anything for Birthday I didn\'t give her anything :O #ThugLife")], [[49,52,56,53], makeNimstrLit("What have you got if your pet kangaroo gets into molasses and Indian curry? An Indian goo roo")], [[49,52,56,54], makeNimstrLit("I would think you\'d have to be open minded... ...to be a brain surgeon.")], [[49,52,56,55], makeNimstrLit("I fell off a forty foot ladder today.... lucky I was on the bottom rung.")], [[49,52,56,56], [87,104,101,114,101,32,100,105,100,32,78,97,112,111,108,101,111,110,32,66,111,110,97,112,97,114,116,101,32,107,101,101,112,32,104,105,115,32,97,114,109,105,101,115,63,32,73,110,32,104,105,115,32,115,108,101,101,118,105,101,115,46]], [[49,52,56,57], [119,104,97,116,32,100,105,100,32,115,111,99,114,97,116,101,115,32,108,101,97,114,110,32,102,114,111,109,32,116,104,101,32,84,45,114,101,120,63,32,105,32,100,105,110,111]], [[49,52,57,48], makeNimstrLit("Why do ducks have webbed feet? To stomp out fires. Why do elephants have flat feet? To stomp out the burning ducks.")], [[49,52,57,49], [87,104,97,116,32,100,111,32,99,111,119,115,32,108,105,107,101,32,111,110,32,116,104,101,105,114,32,104,111,116,100,111,103,115,63,32,77,79,79,115,116,97,114,100,46]], [[49,52,57,50], [66,114,111,111,109,32,97,100,118,111,99,97,116,101,115,32,102,111,114,32,99,108,101,97,110,101,114,32,119,111,114,107,32,101,110,118,105,114,111,110,109,101,110,116,46]], [[49,52,57,51], makeNimstrLit("I was watching a TV program on various Religious orders and how the use stringed instruments. I was appalled by the amount of sects and violins!")], [[49,52,57,52], makeNimstrLit("If you give a mouse a cookie.. If you give a mouse a cookie.. Why are you giving a mouse any food? That\'s unsanitary.")], [[49,52,57,53], makeNimstrLit("What happens if you pass gas in church? You have to sit in your own pew.")], [[49,52,57,54], [87,104,97,116,115,32,116,104,101,32,98,101,115,116,32,116,104,105,110,103,32,116,111,32,112,117,116,32,105,110,116,111,32,97,32,112,105,101,63,32,89,111,117,114,32,116,101,101,116,104,33]], [[49,52,57,55], [73,32,104,97,118,101,32,116,111,32,102,105,110,100,32,97,32,110,101,119,32,112,101,114,115,111,110,97,108,32,116,114,97,105,110,101,114,46,32,72,101,32,100,105,100,110,39,116,32,100,111,32,115,113,117,97,116,40,115,41,46]], [[49,52,57,56], [87,97,110,110,97,32,104,101,97,114,32,97,32,100,105,114,116,121,32,106,111,107,101,63,32,65,32,119,104,105,116,101,32,104,111,114,115,101,32,102,101,108,108,32,105,110,32,97,32,109,117,100,32,112,117,100,100,108,101,46]], [[49,52,57,57], makeNimstrLit("A funny bird is the pelican His beak can hold more than his belly can He can hold in his beak Enough for a week And I don\'t know how the heck he can!")], [[49,53,48,48], [87,104,101,114,101,32,100,111,32,100,105,110,111,115,97,117,114,115,32,103,101,116,32,116,104,101,105,114,32,112,105,99,107,108,101,115,32,102,114,111,109,63,32,86,108,97,115,105,99,32,80,97,114,107]], [[49,53,48,49], makeNimstrLit("What\'s the difference between a fish and a guitar? You can\'t tuna fish!")], [[49,53,48,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,116,119,111,32,99,114,111,119,115,63,32,65,116,116,101,109,112,116,101,100,32,109,117,114,100,101,114,46]], [[49,53,48,51], makeNimstrLit("What do you call a t-shirt with stalks of wheat on it? A crop top!")], [[49,53,48,52], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,99,111,119,32,119,105,116,104,32,50,32,108,101,103,115,63,32,76,101,97,110,32,98,101,101,102,46]], [[49,53,48,53], makeNimstrLit("What is the scientific name for a crippled tyrannosaurus rex ? Tywalkasoreus Rex")], [[49,53,48,54], makeNimstrLit("What type pf culture is most peaceful and never gets angry? Nomads!")], [[49,53,48,55], makeNimstrLit("I tried to change my password to 14days... The computer said it was two week.")], [[49,53,48,56], makeNimstrLit("2 fish in a tank, one says to the other Do you know how to drive this thing?")], [[49,53,48,57], makeNimstrLit("Knock knock - Who\'s there? - Impatient cow. - Impatient co- - He already left.")], [[49,53,49,48], [87,104,121,32,119,101,114,101,32,116,104,101,32,76,105,98,121,97,110,115,32,101,97,116,105,110,103,32,109,111,110,101,121,63,32,84,104,101,121,32,119,101,114,101,32,104,97,118,105,110,103,32,100,105,110,97,114,46]], [[49,53,49,49], makeNimstrLit("Why can\'t you hear it when a pteranodon goes to the bathroom? Because they\'re all dead.")], [[49,53,49,50], makeNimstrLit("why was the rabbit promoted to brewmaster? All his beers had a lot of hops")], [[49,53,49,51], makeNimstrLit("What is Captain Ahab\'s favorite reggae band? Bob Marley and The Whalers!")], [[49,53,49,52], [87,104,101,114,101,32,100,105,100,32,116,104,101,32,109,105,115,116,108,101,116,111,101,32,103,111,32,116,111,32,98,101,99,111,109,101,32,114,105,99,104,32,97,110,100,32,102,97,109,111,117,115,63,32,72,111,108,108,121,119,111,111,100,46]], [[49,53,49,53], makeNimstrLit("bad scary film I was watching a really poorly done scary movie last night, it was horrorble.")], [[49,53,49,54], makeNimstrLit("What did batman say to robin before robin got in the car? get in the car")], [[49,53,49,55], makeNimstrLit("Why did the strawberry go out with the pineapple? Because he couldn\'t get a date!")], [[49,53,49,56], makeNimstrLit("Why did the buddhist refuse novocaine when he went to get a tooth pulled? He wanted to transcend dental medication.")], [[49,53,49,57], makeNimstrLit("What happens when you don\'t serve drinks at a party? There\'s no punch line.")], [[49,53,50,48], makeNimstrLit("I just read this article about short term memory I don\'t remember what it was about")], [[49,53,50,49], makeNimstrLit("Did you hear about the farmer that fell into the field machine and lost half his body? He\'s all right now! :-)")], [[49,53,50,50], [65,99,99,105,100,101,110,116,97,108,32,83,101,97,102,111,111,100,32,73,32,116,114,105,101,100,32,100,111,108,112,104,105,110,32,111,110,99,101,46,46,46,98,117,116,32,110,111,116,32,111,110,32,112,111,114,112,111,105,115,101,46]], [[49,53,50,51], makeNimstrLit("Did you hear about the wedding between the two antenna? The service was terrible, but the reception was great.")], [[49,53,50,52], [87,104,97,116,32,115,116,97,116,101,32,100,111,32,109,111,115,116,32,112,101,111,112,108,101,32,108,105,118,101,32,105,110,63,32,68,101,110,105,97,108,46,32,77,121,115,101,108,102,32,105,110,99,108,117,100,101,100,46]], [[49,53,50,53], [119,104,97,116,115,32,98,114,111,119,110,32,97,110,100,32,114,104,121,109,101,115,32,119,105,116,104,32,115,110,111,111,112,63,32,68,114,32,68,114,101]], [[49,53,50,54], makeNimstrLit("Why do space rocks taste better than earth rocks? Because they are a little meteor")], [[49,53,50,55], [87,104,97,116,32,100,111,101,115,32,97,32,104,97,119,107,32,99,97,108,108,32,97,32,104,105,103,104,32,108,101,100,103,101,32,65,32,42,102,97,108,99,111,110,121,33,42]], [[49,53,50,56], makeNimstrLit("What did the German policeman say to his nipples? You are under a vest!")], [[49,53,50,57], makeNimstrLit("Someone talked to me today about having two X chromosomes. Typical woman.")], [[49,53,51,48], makeNimstrLit("If you\'re American, when are you not American? When European. Or when you\'re Russian. Any more? :)")], [[49,53,51,49], makeNimstrLit("A mathematician was constipated, how did he solve his problem? He worked it out with a pencil and paper.")], [[49,53,51,50], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,98,97,114,98,97,114,105,97,110,32,121,111,117,32,99,97,110,39,116,32,115,101,101,63,32,97,110,32,73,110,118,105,115,105,103,111,116,104,46]], [[49,53,51,51], makeNimstrLit("Where did the seaweed... Where did the seaweed find a job? In the \"Kelp Wanted\" section of the want-ads.")], [[49,53,51,52], makeNimstrLit("How many tickles does it take to make an octopus laugh? Ten tickles")], [[49,53,51,53], makeNimstrLit("Who is the roundest knight at King Arthur\'s table? Sir Cumference.")], [[49,53,51,54], makeNimstrLit("I know a guy who collects candy canes... ...they are all in mint condition.")], [[49,53,51,55], [73,39,109,32,114,101,97,100,105,110,103,32,97,32,98,111,111,107,32,97,98,111,117,116,32,97,110,116,105,45,103,114,97,118,105,116,121,46,32,73,32,99,97,110,39,116,32,112,117,116,32,105,116,32,100,111,119,110,46]], [[49,53,51,56], makeNimstrLit("Why do the French like eating snails? Because they can\'t stand fast food!")], [[49,53,51,57], makeNimstrLit("What does a Jedi say after a tragic loss of life? \"May my thoughts be with them\".")], [[49,53,52,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,110,32,97,108,105,101,110,32,105,110,32,97,32,115,119,97,109,112,63,32,65,32,77,65,82,83,72,105,97,110]], [[49,53,52,49], makeNimstrLit("Will Smith joke How do you find Will Smith in the snow? You look for fresh prince...")], [[49,53,52,50], [79,110,101,32,116,105,109,101,44,32,97,32,99,111,119,32,115,97,118,101,100,32,109,121,32,108,105,102,101,32,73,116,32,119,97,115,32,98,111,118,105,110,101,32,105,110,116,101,114,118,101,110,116,105,111,110,46]], [[49,53,52,51], makeNimstrLit("Why should you always knock before opening the refrigerator? Because there might be an Italian dressing.")], [[49,53,52,52], makeNimstrLit("What did the rubber band factory worker say when he was fired? Oh snap!")], [[49,53,52,53], makeNimstrLit("Why did the rap battle champion get the most spacious and accessible seat on the bus? Because of his dis-ability.")], [[49,53,52,54], makeNimstrLit("What lies at the bottom of the ocean and twitches? A nervous wreck.")], [[49,53,52,55], makeNimstrLit("We always bought our cars used, this one was as black as the night- -that is, until we washed it!!!")], [[49,53,52,56], [73,32,102,101,101,100,32,109,121,32,99,97,116,32,108,101,109,111,110,115,46,32,72,101,39,115,32,97,32,114,101,97,108,32,115,111,117,114,32,112,117,115,115,46]], [[49,53,52,57], makeNimstrLit("I thought the dryer shrank my clothes.. turns out it was the refrigerator")], [[49,53,53,48], makeNimstrLit("I was driving today... And saw a sign that said, \"Steamed Crabs\". I began to wonder: \"What made them so mad?\"")], [[49,53,53,49], makeNimstrLit("My dog used to chase people on a bike a lot. It got so bad, finally I had to take his bike away.")], [[49,53,53,50], makeNimstrLit("What do you call someone who points out the obvious? Someone who points out the obvious.")], [[49,53,53,51], makeNimstrLit("What do you call a Mexican with a rubber toe? Rubber-Toe! (Roberto)")], [[49,53,53,52], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,116,104,101,32,117,108,116,105,109,97,116,101,32,102,105,115,104,32,100,111,99,116,111,114,63,32,84,104,101,32,83,116,117,114,103,101,111,110,32,71,101,110,101,114,97,108]], [[49,53,53,53], makeNimstrLit("How did the firefly feel when he flew into the fan? He was de-lighted")], [[49,53,53,54], [87,104,121,32,99,111,117,108,100,110,39,116,32,116,104,101,32,112,111,110,121,32,115,105,110,103,63,32,72,101,32,119,97,115,32,97,32,108,105,116,116,108,101,32,104,111,114,115,101,46]], [[49,53,53,55], makeNimstrLit("What did the horse say when he fell over? \"Help! I\'ve fallen and I can\'t giddy up.\"")], [[49,53,53,56], makeNimstrLit("What happens when you steamroll Batman and Robin? They become flatman and ribbon.")], [[49,53,53,57], makeNimstrLit("Why did the melon try so hard to get her father\'s approval? Because she cant-aloupe")], [[49,53,54,48], makeNimstrLit("My girl asks why I love chocolate so much. Well, I have several Reisens...")], [[49,53,54,49], makeNimstrLit("I finally finished baby proofing the house. Let\'s see those babies get in here now.")], [[49,53,54,50], [77,121,32,102,114,105,101,110,100,32,115,97,121,115,32,115,104,101,39,115,32,100,111,105,110,103,32,103,111,111,100,32,98,117,116,32,115,104,101,32,109,101,97,110,115,32,119,101,108,108]], [[49,53,54,51], [87,104,121,32,100,111,101,115,32,83,110,111,111,112,32,68,111,103,103,32,117,115,101,32,97,110,32,117,109,98,114,101,108,108,97,63,32,70,111,114,32,68,114,105,122,122,108,101]], [[49,53,54,52], [87,104,97,116,32,100,111,32,118,101,103,97,110,32,122,111,109,98,105,101,115,32,101,97,116,63,32,71,114,97,97,97,97,97,105,110,115,33]], [[49,53,54,53], [83,99,104,111,111,110,101,114,32,111,114,32,108,97,116,101,114,44,32,115,97,105,108,111,114,115,46,46,46,32,46,46,46,101,110,103,97,103,101,32,105,110,32,114,117,100,100,101,114,32,110,111,110,115,101,110,115,101,46]], [[49,53,54,54], [87,104,97,116,39,115,32,97,32,112,105,114,97,116,101,39,115,32,102,97,118,111,114,105,116,101,32,108,101,116,116,101,114,63,32,84,104,101,32,67,46]], [[49,53,54,55], makeNimstrLit("What happened to the butched after he backed into the meat grinder? he got a little \"behind\" in his work")], [[49,53,54,56], makeNimstrLit("I still remember what my grandpa said before he kicked the bucket... \"How far do you think I can kick this bucket?!\"")], [[49,53,54,57], makeNimstrLit("Knock knock -Who\'s there? Ash -Ash who? Bless you.. P.S. kids love it")], [[49,53,55,48], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,115,105,110,103,105,110,103,32,108,97,112,116,111,112,63,32,65,32,68,101,108,108]], [[49,53,55,49], [73,102,32,97,108,108,32,111,102,32,73,114,101,108,97,110,100,32,115,97,110,107,44,32,119,104,97,116,32,112,97,114,116,32,111,102,32,105,116,32,119,111,117,108,100,110,39,116,63,32,67,111,117,110,116,121,32,67,111,114,107]], [[49,53,55,50], makeNimstrLit("Knock knock! **Who\'s there?** *Tank* **Tank who?** *You\'re welcome*")], [[49,53,55,51], [84,104,105,115,32,80,111,115,116,32,106,117,115,116,32,115,97,121,115,32,105,116,32,97,108,108,33,32,73,116,32,97,108,108,46]], [[49,53,55,52], [87,104,97,116,32,107,105,110,100,32,111,102,32,109,117,115,105,99,32,100,111,101,115,32,97,32,112,114,105,110,116,101,114,32,109,97,107,101,63,32,65,32,112,97,112,101,114,32,106,97,109,46]], [[49,53,55,53], makeNimstrLit("My friend\'s bakery burned down last night. Now his business is toast.")], [[49,53,55,54], makeNimstrLit("Why did the superhero make a lot of shredded cheese? It was for the grater good.")], [[49,53,55,55], makeNimstrLit("What mysterious hair product does Lucifer use to keep himself looking good? Arcane-gel!")], [[49,53,55,56], makeNimstrLit("Overheard: Augustus Caesar on New Year\'s Day: \"I keep writing \'B.C.\' on all my checks.\"")], [[49,53,55,57], makeNimstrLit("What did the mom say to her son when he said he didn\'t want any of her flippin\' pancakes? Fine. They will just be burnt on one side.")], [[49,53,56,48], [87,104,97,116,32,104,97,115,32,109,111,114,101,32,108,101,116,116,101,114,115,32,116,104,97,110,32,116,104,101,32,97,108,112,104,97,98,101,116,63,32,84,104,101,32,112,111,115,116,32,111,102,102,105,99,101,46]], [[49,53,56,49], [89,111,117,32,99,97,110,32,116,117,110,101,32,97,32,103,117,105,116,97,114,46,46,46,32,98,117,116,32,121,111,117,32,99,97,110,39,116,32,116,117,110,97,32,102,105,115,104,33]], [[49,53,56,50], [87,104,97,116,32,104,97,115,32,116,119,111,32,97,114,109,115,32,97,110,100,32,49,52,32,108,101,103,115,63,32,71,117,121,32,119,104,111,32,99,111,108,108,101,99,116,115,32,108,101,103,115,46]], [[49,53,56,51], [72,111,119,32,100,111,101,115,32,97,32,112,101,110,103,117,105,110,32,98,117,105,108,100,32,105,116,115,32,104,111,117,115,101,63,32,73,103,108,111,111,115,32,105,116,32,116,111,103,101,116,104,101,114,33]], [[49,53,56,52], makeNimstrLit("Why didn\'t Silento knock before coming inside? Because you already know who it\'s isss! My little sister told me this joke.")], [[49,53,56,53], makeNimstrLit("[My Joke] Where do noodles get their nails done? At the spa-getti.")], [[49,53,56,54], [87,104,97,116,32,100,111,32,121,111,117,32,99,97,108,108,32,97,32,100,111,103,32,105,110,32,97,32,100,105,118,105,110,103,32,98,101,108,108,63,32,65,32,115,117,98,45,119,111,111,102,101,114]], [[49,53,56,55], makeNimstrLit("What do you get when you sit on a potato? A potato wedge! (I made this up when I was 9)")], [[49,53,56,56], [68,111,32,121,111,117,32,103,117,121,115,47,103,97,108,115,32,108,105,107,101,32,104,111,114,115,101,32,106,111,107,101,115,63,32,89,101,97,104,32,111,114,32,110,101,101,105,105,105,103,103,104,104,63]], [[49,53,56,57], [87,104,97,116,32,100,105,100,32,111,110,101,32,100,117,99,107,32,115,97,121,32,116,111,32,116,104,101,32,111,116,104,101,114,63,32,81,117,97,99,107,33]], [[49,53,57,48], [72,111,119,32,100,105,100,32,116,104,101,32,112,105,108,111,116,32,108,105,107,101,32,104,105,115,32,104,111,116,100,111,103,63,32,80,108,97,110,101,46]], [[49,53,57,49], makeNimstrLit("A horse walks into a bar, orders a beer. The bartender says, \"Why the long face?\" And the horse answers, \"They\'ve started a round of layoffs at the plant.\"")], [[49,53,57,50], makeNimstrLit("Why did the Buddhist monk refuse Novocain? Because he wanted to transcend dental medication.")], [[49,53,57,51], makeNimstrLit("Wise man once say... He who runs in front of car will get tired, He who runs behind car will get exhausted.")], [[49,53,57,52], makeNimstrLit("My buddy says he is the world\'s worst at self-deprecating humor. he worried once he was too modest. Then realized he was wrong.")], [[49,53,57,53], makeNimstrLit("What do you call a dog with no legs? It doesn\'t matter what you call it, it won\'t come.")], [[49,53,57,54], [73,32,115,117,112,112,111,114,116,32,102,97,114,109,105,110,103,32,97,110,100,32,109,97,116,104,46,46,46,32,73,39,109,32,112,114,111,45,116,114,97,99,116,111,114,46]], [[49,53,57,55], makeNimstrLit("How do you make a computer your best friend? You buy it a nice bunch of software and get it loaded!")], [[49,53,57,56], makeNimstrLit("What do you call a dog with no legs? Don\'t bother, he\'s not coming.")], [[49,53,57,57], makeNimstrLit("Every journey has a beginning. -ahem- Just a small town girl Living in a lonely world...")], [[49,54,48,48], makeNimstrLit("What\'s the difference between a cat and a complex sentence? A cat has claws at the end of its paws. A complex sentence has a pause at the end of its clause.")], [[49,54,48,49], [78,101,118,101,114,32,112,108,97,121,32,112,111,107,101,114,32,119,105,116,104,32,97,32,112,105,101,99,101,115,32,111,102,32,112,97,112,101,114,46,32,84,104,101,121,39,114,101,32,98,111,117,110,100,32,116,111,32,102,111,108,100,46]], [[49,54,48,50], [87,104,121,32,100,111,32,72,117,116,117,115,32,104,97,116,101,32,68,117,115,116,105,110,32,72,111,102,102,109,97,110,63,32,72,101,32,105,109,112,101,114,115,111,110,97,116,101,100,32,97,32,84,111,111,116,115,105,101,46]], [[49,54,48,51], makeNimstrLit("A Thanksgiving Joke What did the turkey say about the television program from the 1950s? There\'s a little bit too much grayvy.")], [[49,54,48,52], [87,104,97,116,39,115,32,105,110,118,105,115,105,98,108,101,32,97,110,100,32,115,109,101,108,108,115,32,108,105,107,101,32,99,97,114,114,111,116,115,63,32,82,97,98,98,105,116,32,102,97,114,116,115]], [[49,54,48,53], makeNimstrLit("What did one wall say to the other wall? I`ll meet you at the corner.")], [[49,54,48,54], [87,104,97,116,39,115,32,116,104,101,32,109,111,115,116,32,98,101,97,117,116,105,102,117,108,32,116,104,105,110,103,32,105,110,32,109,97,116,104,101,109,97,116,105,99,115,63,32,65,32,99,117,116,101,32,97,110,103,108,101]], [[49,54,48,55], makeNimstrLit("A dog with only 3 legs walks into a saloon in the Old West He slides up to the bar and announces: \'\'I\'m looking for the man who shot my paw.\"")], [[49,54,48,56], makeNimstrLit("I used to be addicted... to the hokey pokey but I turned myself around (x-post from /r/jokes)")], [[49,54,48,57], [84,104,101,32,116,104,114,101,101,32,117,110,119,114,105,116,116,101,110,32,114,117,108,101,115,32,111,102,32,47,114,47,99,108,101,97,110,106,111,107,101,115,32,97,114,101,58,32,49,46,32,50,46,32,51,46]], [[49,54,49,48], makeNimstrLit("Why did Beethoven get rid of his chickens? All they said was, Bach, Bach, Bach\"")], [[49,54,49,49], makeNimstrLit("Why does a chicken coup have 2 doors? Because if it had 4 doors, it would be a chicken Sedan.")], [[49,54,49,50], [83,111,109,101,111,110,101,32,115,108,121,32,115,104,101,97,114,101,100,32,115,108,101,101,112,105,110,103,32,115,104,101,101,112,46,32,84,97,108,107,32,97,98,111,117,116,32,115,104,101,97,114,32,116,101,114,114,111,114,46]], [[49,54,49,51], [68,105,100,32,121,97,32,104,101,97,114,32,97,98,111,117,116,32,116,104,101,32,109,97,103,105,99,32,116,114,97,99,116,111,114,63,32,73,116,32,116,117,114,110,101,100,32,105,110,116,111,32,97,32,102,105,101,108,100]], [[49,54,49,52], [87,104,121,32,100,111,32,74,97,118,97,32,100,101,118,101,108,111,112,101,114,115,32,119,101,97,114,32,103,108,97,115,115,101,115,63,32,66,101,99,97,117,115,101,32,116,104,101,121,32,100,111,110,39,116,32,67,35]], [[49,54,49,53], [74,117,115,116,32,119,101,110,116,32,116,111,32,97,110,32,101,109,111,116,105,111,110,97,108,32,119,101,100,100,105,110,103,32,69,118,101,110,32,116,104,101,32,99,97,107,101,32,119,97,115,32,105,110,32,116,105,101,114,115,46]], [[49,54,49,54], [87,104,121,32,100,111,101,115,32,83,110,111,111,112,32,68,111,103,32,99,97,114,114,121,32,97,110,100,32,117,109,98,114,101,108,108,97,63,32,70,111,45,68,114,105,122,122,108,101]], [[49,54,49,55], makeNimstrLit("How do you know you put the right joke in the right thread? Don\'t worry, someone will tell you.")], [[49,54,49,56], makeNimstrLit("What do you call a camel with 3 humps? Humphrey. (I was told this joke by an actual dad, it was his response to one of my jokes)")], [[49,54,49,57], makeNimstrLit("Two fish in a tank. [x-post from r/Jokes] One asks: How do you drive this thing?")], [[49,54,50,48], [34,83,116,97,121,32,115,116,114,111,110,103,33,34,32,73,32,115,97,105,100,32,116,111,32,109,121,32,119,105,45,102,105,32,115,105,103,110,97,108,46]], [[49,54,50,49], [87,104,121,32,119,97,115,32,116,104,101,32,116,111,109,97,116,111,32,98,108,117,115,104,105,110,103,63,32,66,101,99,97,117,115,101,32,105,116,32,115,97,119,32,116,104,101,32,115,97,108,97,100,32,100,114,101,115,115,105,110,103,33]], [[49,54,50,50], [87,104,97,116,32,105,115,32,104,101,97,118,121,32,102,111,114,119,97,114,100,32,98,117,116,32,110,111,116,32,98,97,99,107,119,97,114,100,63,32,42,42,116,111,110,42,42]]];
var ConstSet12 = setConstr(35);
var ConstSet13 = setConstr([48, 57]);
var ConstSet14 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}
      var teacherUrls_2818572336 = [makeNimstrLit("https://fonts.googleapis.com/css2?family=Shantell+Sans:wght@300&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Comfortaa:wght@500&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Merienda:wght@400&display=swap")];
      var studentUrls_2818572357 = [makeNimstrLit("https://fonts.googleapis.com/css2?family=Caveat:wght@400&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Edu+QLD+Beginner:wght@400&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Edu+SA+Beginner:wght@500&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Edu+NSW+ACT+Foundation:wght@400&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Edu+TAS+Beginner:wght@400&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Edu+VIC+WA+NT+Beginner:wght@500&display=swap")];
      var ellUrls_2818572378 = [makeNimstrLit("https://fonts.googleapis.com/css2?family=Mali:wght@300&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=Tillana:wght@400&display=swap")];
      var mathUrls_2818572399 = [makeNimstrLit("https://fonts.googleapis.com/css2?family=Noto+Sans+Math&display=swap"), makeNimstrLit("https://fonts.googleapis.com/css2?family=STIX+Two+Text&display=swap")];
      var monoUrls_2818572420 = [makeNimstrLit("https://fonts.googleapis.com/css2?family=Inconsolata&family=Shantell+Sans&display=swap")];

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557579 = false;
    F.line = 31;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    F.line = 32;
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    F.line = 34;
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557578;

}
var ConstSet15 = setConstr(46, 44);
var ConstSet16 = setConstr([65, 90]);
var ConstSet17 = setConstr([97, 122]);
var F = {procname: "module macros", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exceptions", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/exceptions.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exceptions", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/exceptions.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module constants", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/constants.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module constants", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/constants.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macrocache", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/core/macrocache.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macrocache", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/core/macrocache.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macro_utils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/private/macro_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macro_utils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/private/macro_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module use", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/use.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module use", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/use.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sgr", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/sgr.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sgr", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/sgr.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1157628081 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties_data", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/properties_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties_data", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/properties_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptype", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/exptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptype", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/exptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types_data", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/types_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types_data", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/types_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/unicodedb-0.12.0-4452416471e2fe8726eb6070ed6ea7368171cc09/unicodedb/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch2", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfamatch2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch2", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfamatch2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall2", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfafindall2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall2", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfafindall2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex/nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/regex-0.25.0-57eb3c12417dd493545eb55740595a661ea74e9c/regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module js", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/js.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module js", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/js.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/style.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/sugar/style.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module htmlgen", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/htmlgen.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module htmlgen", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/htmlgen.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strtabs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strtabs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsexml", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parsexml.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsexml", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parsexml.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module xmltree", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/xmltree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module xmltree", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/xmltree.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module htmlparser", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/htmlparser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module htmlparser", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/htmlparser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__1694500051 = 0;
      colontmp__1694500051 = (i_33556519 - 1);
      var res_1694500052 = colontmp__1694500051;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_1694500052)) break Label7;
            j_33556554 = res_1694500052;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_1694500052 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_1694500046 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_1694500046 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_1694500046;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_1694500046 = addInt(i_1694500046, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function tgadd(self_1694498845, tags_1694498846) {
  var F = {procname: "tag.add", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 176;
      F.filename = "tag.nim";
      var tag_1694498860 = null;
      F.line = 13;
      F.filename = "iterators.nim";
      var i_1694500040 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_1694500040 < (tags_1694498846).length)) break Label3;
            F.line = 176;
            F.filename = "tag.nim";
            tag_1694498860 = tags_1694498846[chckIndx(i_1694500040, 0, (tags_1694498846).length - 1)];
            Label4: {
              if ((tag_1694498860 == null)) {
              F.line = 178;
              break Label4;
              }
              
              if (tag_1694498860.onlyChildren) {
              Label5: {
                F.line = 180;
                var i_1694498886 = null;
                F.line = 241;
                F.filename = "iterators.nim";
                var i_1694500036 = 0;
                F.line = 242;
                var L_1694500037 = (tag_1694498860.childNodes).length;
                Label6: {
                  F.line = 243;
                    Label7: while (true) {
                    if (!(i_1694500036 < L_1694500037)) break Label7;
                      F.line = 180;
                      F.filename = "tag.nim";
                      i_1694498886 = tag_1694498860.childNodes[chckIndx(i_1694500036, 0, (tag_1694498860.childNodes).length - 1)];
                      F.line = 180;
                      tgadd(self_1694498845, [i_1694498886]);
                      F.line = 245;
                      F.filename = "iterators.nim";
                      i_1694500036 = addInt(i_1694500036, 1);
                      if (!(((tag_1694498860.childNodes).length == L_1694500037))) {
                      F.line = 246;
                      failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              }
              else {
                F.line = 183;
                F.filename = "tag.nim";
              self_1694498845.appendChild(tag_1694498860.cloneNode(true));
              }
              
            };
            F.line = 16;
            F.filename = "iterators.nim";
            i_1694500040 = addInt(i_1694500040, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function find_956301366(a_956301369, item_956301370) {
  var result_956301371 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_956301371 = 0;
    Label1: {
      F.line = 1666;
      var i_956301375 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_1006633021 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_1006633021 < (a_956301369).length)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_956301375 = a_956301369[chckIndx(i_1006633021, 0, (a_956301369).length - 1)];
            if (eqStrings(i_956301375, item_956301370)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_956301371 = addInt(result_956301371, 1);
            F.line = 16;
            F.filename = "iterators.nim";
            i_1006633021 = addInt(i_1006633021, 1);
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_956301371 = (-1);
  };
  framePtr = F.prev;

  return result_956301371;

}

function contains_956301361(a_956301363, item_956301364) {
  var result_956301365 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1683;
    F.filename = "system.nim";
    result_956301365 = (0 <= find_956301366(a_956301363, item_956301364));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_956301365;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function binarySearch_771752957(c_771752958, tab_771752959, len_771752960, stride_771752961) {
  var result_771752962 = 0;

  var F = {procname: "unicode.binarySearch", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 468;
    F.filename = "unicode.nim";
    var n_771752963 = len_771752960;
    F.line = 469;
    var t_771752964 = 0;
    Label1: {
      F.line = 470;
        Label2: while (true) {
        if (!(1 < n_771752963)) break Label2;
          F.line = 471;
          var m_771752965 = divInt(n_771752963, 2);
          F.line = 472;
          var p_771752966 = addInt(t_771752964, mulInt(m_771752965, stride_771752961));
          if ((((tab_771752959[chckIndx(p_771752966, 0, (tab_771752959).length - 1)]) | 0) <= c_771752958)) {
          F.line = 474;
          t_771752964 = p_771752966;
          F.line = 475;
          n_771752963 = subInt(n_771752963, m_771752965);
          }
          else {
            F.line = 477;
            n_771752963 = m_771752965;
          }
          
        }
    };
    if ((!((n_771752963 == 0)) && (((tab_771752959[chckIndx(t_771752964, 0, (tab_771752959).length - 1)]) | 0) <= c_771752958))) {
    F.line = 479;
    result_771752962 = t_771752964;
    break BeforeRet;
    }
    
    F.line = 480;
    result_771752962 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_771752962;

}

function nuctoLower(c_771752968) {
  var result_771752969 = 0;

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 491;
    F.filename = "unicode.nim";
    var c_771752970 = c_771752968;
    F.line = 492;
    var p_771752979 = binarySearch_771752957(c_771752970, toLowerRanges_771752948, 45, 3);
    if ((((0 <= p_771752979) && (((toLowerRanges_771752948[chckIndx(p_771752979, 0, (toLowerRanges_771752948).length - 1)]) | 0) <= c_771752970)) && (c_771752970 <= ((toLowerRanges_771752948[chckIndx(addInt(p_771752979, 1), 0, (toLowerRanges_771752948).length - 1)]) | 0)))) {
    F.line = 494;
    result_771752969 = subInt(addInt(c_771752970, ((toLowerRanges_771752948[chckIndx(addInt(p_771752979, 2), 0, (toLowerRanges_771752948).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    F.line = 495;
    p_771752979 = binarySearch_771752957(c_771752970, toLowerSinglets_771752949, 610, 2);
    if (((0 <= p_771752979) && (c_771752970 == ((toLowerSinglets_771752949[chckIndx(p_771752979, 0, (toLowerSinglets_771752949).length - 1)]) | 0)))) {
    F.line = 497;
    result_771752969 = subInt(addInt(c_771752970, ((toLowerSinglets_771752949[chckIndx(addInt(p_771752979, 1), 0, (toLowerSinglets_771752949).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    F.line = 498;
    result_771752969 = c_771752970;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_771752969;

}

function HEX3CHEX3DHEX25_33555507(x_33555508, y_33555509) {
  var result_33555510 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 185;
    F.filename = "comparisons.nim";
    result_33555510 = (Number(BigInt.asUintN(32, BigInt(x_33555508))) <= Number(BigInt.asUintN(32, BigInt(y_33555509))));
  framePtr = F.prev;

  return result_33555510;

}

function nuctoLowerStr(s_771754269) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_771754270 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 658;
    F.filename = "unicode.nim";
    result_771754270 = nimCopy(null, mnewString(chckRange((s_771754269).length, 0, 2147483647)), NTI33554449);
    F.line = 660;
    var iHEX60gensym252_771754277 = 0;
    F.line = 661;
    var resultIndexHEX60gensym252_771754278 = 0;
    F.line = 662;
    var runeHEX60gensym252_771754279 = 0;
    Label1: {
      F.line = 680;
        Label2: while (true) {
        if (!(iHEX60gensym252_771754277 < (s_771754269).length)) break Label2;
          if ((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] <= 127)) {
          F.line = 91;
          runeHEX60gensym252_771754279 = chckRange(s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)], (-2147483648), 2147483647);
          F.line = 92;
          iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          else {
          if (((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_771754277 <= subInt((s_771754269).length, 2))) {
          F.line = 96;
          runeHEX60gensym252_771754279 = chckRange(((((((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] & 31) >>> 0) << 6) >>> 0) | ((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 1), 0, (s_771754269).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 98;
          iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 2);
          }
          else {
            F.line = 100;
            runeHEX60gensym252_771754279 = 65533;
            F.line = 101;
            iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          
          }
          else {
          if (((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_771754277 <= subInt((s_771754269).length, 3))) {
          F.line = 106;
          runeHEX60gensym252_771754279 = chckRange(((((((((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] & 15) >>> 0) << 12) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 1), 0, (s_771754269).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 2), 0, (s_771754269).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 109;
          iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 3);
          }
          else {
            F.line = 111;
            runeHEX60gensym252_771754279 = 65533;
            F.line = 112;
            iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          
          }
          else {
          if (((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_771754277 <= subInt((s_771754269).length, 4))) {
          F.line = 118;
          runeHEX60gensym252_771754279 = chckRange(((((((((((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] & 7) >>> 0) << 18) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 1), 0, (s_771754269).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 2), 0, (s_771754269).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 3), 0, (s_771754269).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 122;
          iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 4);
          }
          else {
            F.line = 124;
            runeHEX60gensym252_771754279 = 65533;
            F.line = 125;
            iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          
          }
          else {
          if (((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_771754277 <= subInt((s_771754269).length, 5))) {
          F.line = 132;
          runeHEX60gensym252_771754279 = chckRange(((((((((((((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] & 3) >>> 0) << 24) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 1), 0, (s_771754269).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 2), 0, (s_771754269).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 3), 0, (s_771754269).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 4), 0, (s_771754269).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 137;
          iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 5);
          }
          else {
            F.line = 139;
            runeHEX60gensym252_771754279 = 65533;
            F.line = 140;
            iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          
          }
          else {
          if (((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_771754277 <= subInt((s_771754269).length, 6))) {
          F.line = 148;
          runeHEX60gensym252_771754279 = chckRange(((((((((((((((s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)] & 1) >>> 0) << 30) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 1), 0, (s_771754269).length - 1)] & 63) >>> 0) << 24) >>> 0)) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 2), 0, (s_771754269).length - 1)] & 63) >>> 0) << 18) >>> 0)) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 3), 0, (s_771754269).length - 1)] & 63) >>> 0) << 12) >>> 0)) >>> 0) | ((((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 4), 0, (s_771754269).length - 1)] & 63) >>> 0) << 6) >>> 0)) >>> 0) | ((s_771754269[chckIndx(addInt(iHEX60gensym252_771754277, 5), 0, (s_771754269).length - 1)] & 63) >>> 0)) >>> 0), (-2147483648), 2147483647);
          F.line = 154;
          iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 6);
          }
          else {
            F.line = 156;
            runeHEX60gensym252_771754279 = 65533;
            F.line = 157;
            iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          
          }
          else {
            F.line = 159;
            runeHEX60gensym252_771754279 = chckRange(s_771754269[chckIndx(iHEX60gensym252_771754277, 0, (s_771754269).length - 1)], (-2147483648), 2147483647);
            F.line = 160;
            iHEX60gensym252_771754277 = addInt(iHEX60gensym252_771754277, 1);
          }
          }}}}}
          F.line = 665;
          runeHEX60gensym252_771754279 = nuctoLower(runeHEX60gensym252_771754279);
          F.line = 221;
          var iHEX60gensym274_771754520 = runeHEX60gensym252_771754279;
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_771754520, 127)) {
          F.line = 223;
          if (result_771754270.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_771754278, 1), 0, 2147483647), Temporary3)) { for (var i = result_771754270.length; i < Temporary3; ++i) result_771754270.push(0); }
         else {result_771754270.length = Temporary3; };
          F.line = 224;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 0), 0, (result_771754270).length - 1)] = chckRange(iHEX60gensym274_771754520, 0, 255);
          F.line = 225;
          resultIndexHEX60gensym252_771754278 = addInt(resultIndexHEX60gensym252_771754278, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_771754520, 2047)) {
          F.line = 227;
          if (result_771754270.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_771754278, 2), 0, 2147483647), Temporary4)) { for (var i = result_771754270.length; i < Temporary4; ++i) result_771754270.push(0); }
         else {result_771754270.length = Temporary4; };
          F.line = 228;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 0), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 >> 6) | 192), 0, 255);
          F.line = 229;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 1), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 & 63) | 128), 0, 255);
          F.line = 230;
          resultIndexHEX60gensym252_771754278 = addInt(resultIndexHEX60gensym252_771754278, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_771754520, 65535)) {
          F.line = 232;
          if (result_771754270.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_771754278, 3), 0, 2147483647), Temporary5)) { for (var i = result_771754270.length; i < Temporary5; ++i) result_771754270.push(0); }
         else {result_771754270.length = Temporary5; };
          F.line = 233;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 0), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 >> 12) | 224), 0, 255);
          F.line = 234;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 1), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 6) & 63) | 128), 0, 255);
          F.line = 235;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 2), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 & 63) | 128), 0, 255);
          F.line = 236;
          resultIndexHEX60gensym252_771754278 = addInt(resultIndexHEX60gensym252_771754278, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_771754520, 2097151)) {
          F.line = 238;
          if (result_771754270.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_771754278, 4), 0, 2147483647), Temporary6)) { for (var i = result_771754270.length; i < Temporary6; ++i) result_771754270.push(0); }
         else {result_771754270.length = Temporary6; };
          F.line = 239;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 0), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 >> 18) | 240), 0, 255);
          F.line = 240;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 1), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 12) & 63) | 128), 0, 255);
          F.line = 241;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 2), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 6) & 63) | 128), 0, 255);
          F.line = 242;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 3), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 & 63) | 128), 0, 255);
          F.line = 243;
          resultIndexHEX60gensym252_771754278 = addInt(resultIndexHEX60gensym252_771754278, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_771754520, 67108863)) {
          F.line = 245;
          if (result_771754270.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_771754278, 5), 0, 2147483647), Temporary7)) { for (var i = result_771754270.length; i < Temporary7; ++i) result_771754270.push(0); }
         else {result_771754270.length = Temporary7; };
          F.line = 246;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 0), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 >> 24) | 248), 0, 255);
          F.line = 247;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 1), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 18) & 63) | 128), 0, 255);
          F.line = 248;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 2), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 12) & 63) | 128), 0, 255);
          F.line = 249;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 3), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 6) & 63) | 128), 0, 255);
          F.line = 250;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 4), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 & 63) | 128), 0, 255);
          F.line = 251;
          resultIndexHEX60gensym252_771754278 = addInt(resultIndexHEX60gensym252_771754278, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555507(iHEX60gensym274_771754520, 2147483647)) {
          F.line = 253;
          if (result_771754270.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_771754278, 6), 0, 2147483647), Temporary8)) { for (var i = result_771754270.length; i < Temporary8; ++i) result_771754270.push(0); }
         else {result_771754270.length = Temporary8; };
          F.line = 254;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 0), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 >> 30) | 252), 0, 255);
          F.line = 255;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 1), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 24) & 63) | 128), 0, 255);
          F.line = 256;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 2), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 18) & 63) | 128), 0, 255);
          F.line = 257;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 3), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 12) & 63) | 128), 0, 255);
          F.line = 258;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 4), 0, (result_771754270).length - 1)] = chckRange((((iHEX60gensym274_771754520 >> 6) & 63) | 128), 0, 255);
          F.line = 259;
          result_771754270[chckIndx(addInt(resultIndexHEX60gensym252_771754278, 5), 0, (result_771754270).length - 1)] = chckRange(((iHEX60gensym274_771754520 & 63) | 128), 0, 255);
          F.line = 260;
          resultIndexHEX60gensym252_771754278 = addInt(resultIndexHEX60gensym252_771754278, 6);
          }
          else {
          }
          }}}}}
        }
    };
  framePtr = F.prev;

  return result_771754270;

}

function toLower_771759512(s_771759513) {
  var result_771759514 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1297;
    F.filename = "unicode.nim";
    result_771759514 = nimCopy(null, nuctoLowerStr((s_771759513.slice(0, (s_771759513).length - 1 + 1))), NTI33554449);
  framePtr = F.prev;

  return result_771759514;

}

function imul_1157628216(a_1157628217, b_1157628218) {
  var result_1157628219 = 0;

  var F = {procname: "hashes.imul", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 293;
    F.filename = "hashes.nim";
    var mask_1157628220 = 65535;
    F.line = 295;
    var aHi_1157628225 = (((a_1157628217 >>> 16) & mask_1157628220) >>> 0);
    F.line = 296;
    var aLo_1157628226 = ((a_1157628217 & mask_1157628220) >>> 0);
    F.line = 297;
    var bHi_1157628231 = (((b_1157628218 >>> 16) & mask_1157628220) >>> 0);
    F.line = 298;
    var bLo_1157628232 = ((b_1157628218 & mask_1157628220) >>> 0);
    F.line = 299;
    result_1157628219 = ((((aLo_1157628226 * bLo_1157628232) >>> 0) + ((((((aHi_1157628225 * bLo_1157628232) >>> 0) + ((aLo_1157628226 * bHi_1157628231) >>> 0)) >>> 0) << 16) >>> 0)) >>> 0);
  framePtr = F.prev;

  return result_1157628219;

}

function rotl32_1157628237(x_1157628238, r_1157628239) {
  var result_1157628240 = 0;

  var F = {procname: "hashes.rotl32", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "hashes.nim";
    result_1157628240 = ((((x_1157628238 << r_1157628239) >>> 0) | (x_1157628238 >>> subInt(32, r_1157628239))) >>> 0);
  framePtr = F.prev;

  return result_1157628240;

}

function murmurHash_1157628249(x_1157628250) {
  var result_1157628251 = 0;

  var F = {procname: "hashes.murmurHash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 315;
    F.filename = "hashes.nim";
    var size_1157628260 = (x_1157628250).length;
    F.line = 316;
    var stepSize_1157628261 = 4;
    F.line = 317;
    var n_1157628262 = divInt(size_1157628260, stepSize_1157628261);
    F.line = 319;
    var h1_1157628263 = 0;
    F.line = 320;
    var i_1157628264 = 0;
    Label1: {
      F.line = 330;
        Label2: while (true) {
        if (!(i_1157628264 < mulInt(n_1157628262, stepSize_1157628261))) break Label2;
          F.line = 331;
          var k1_1157628267 = 0;
          F.line = 324;
          var jHEX60gensym19_1157628284 = stepSize_1157628261;
          Label3: {
            F.line = 339;
              Label4: while (true) {
              if (!(0 < jHEX60gensym19_1157628284)) break Label4;
                F.line = 326;
                jHEX60gensym19_1157628284 = subInt(jHEX60gensym19_1157628284, 1);
                F.line = 327;
                k1_1157628267 = ((((k1_1157628267 << 8) >>> 0) | x_1157628250[chckIndx(addInt(i_1157628264, jHEX60gensym19_1157628284), 0, (x_1157628250).length - 1)]) >>> 0);
              }
          };
          F.line = 340;
          i_1157628264 = addInt(i_1157628264, stepSize_1157628261);
          F.line = 342;
          k1_1157628267 = imul_1157628216(k1_1157628267, 3432918353);
          F.line = 343;
          k1_1157628267 = rotl32_1157628237(k1_1157628267, 15);
          F.line = 344;
          k1_1157628267 = imul_1157628216(k1_1157628267, 461845907);
          F.line = 346;
          h1_1157628263 = ((h1_1157628263 ^ k1_1157628267) >>> 0);
          F.line = 347;
          h1_1157628263 = rotl32_1157628237(h1_1157628263, 13);
          F.line = 348;
          h1_1157628263 = ((((h1_1157628263 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    F.line = 351;
    var k1_1157628302 = 0;
    F.line = 352;
    var rem_1157628303 = modInt(size_1157628260, stepSize_1157628261);
    Label5: {
      F.line = 353;
        Label6: while (true) {
        if (!(0 < rem_1157628303)) break Label6;
          F.line = 354;
          rem_1157628303 = subInt(rem_1157628303, 1);
          F.line = 355;
          k1_1157628302 = ((((k1_1157628302 << 8) >>> 0) | x_1157628250[chckIndx(addInt(i_1157628264, rem_1157628303), 0, (x_1157628250).length - 1)]) >>> 0);
        }
    };
    F.line = 356;
    k1_1157628302 = imul_1157628216(k1_1157628302, 3432918353);
    F.line = 357;
    k1_1157628302 = rotl32_1157628237(k1_1157628302, 15);
    F.line = 358;
    k1_1157628302 = imul_1157628216(k1_1157628302, 461845907);
    F.line = 359;
    h1_1157628263 = ((h1_1157628263 ^ k1_1157628302) >>> 0);
    F.line = 362;
    h1_1157628263 = ((h1_1157628263 ^ size_1157628260) >>> 0);
    F.line = 363;
    h1_1157628263 = ((h1_1157628263 ^ (h1_1157628263 >>> 16)) >>> 0);
    F.line = 364;
    h1_1157628263 = imul_1157628216(h1_1157628263, 2246822507);
    F.line = 365;
    h1_1157628263 = ((h1_1157628263 ^ (h1_1157628263 >>> 13)) >>> 0);
    F.line = 366;
    h1_1157628263 = imul_1157628216(h1_1157628263, 3266489909);
    F.line = 367;
    h1_1157628263 = ((h1_1157628263 ^ (h1_1157628263 >>> 16)) >>> 0);
    F.line = 368;
    result_1157628251 = Number(BigInt.asIntN(32, BigInt(h1_1157628263)));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1157628251;

}

function hash_1157628368(x_1157628369) {
  var result_1157628370 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 394;
    F.filename = "hashes.nim";
    result_1157628370 = murmurHash_1157628249((x_1157628369.slice(0, (x_1157628369).length - 1 + 1)));
  framePtr = F.prev;

  return result_1157628370;

}

function HEX21HEX26_1157627907(h_1157627908, val_1157627909) {
  var result_1157627910 = 0;

  var F = {procname: "hashes.!&", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "hashes.nim";
    var h_1157627911 = Number(BigInt.asUintN(32, BigInt(h_1157627908)));
    F.line = 84;
    var val_1157627912 = Number(BigInt.asUintN(32, BigInt(val_1157627909)));
    F.line = 85;
    var res_1157627913 = ((h_1157627911 + val_1157627912) >>> 0);
    F.line = 86;
    res_1157627913 = ((res_1157627913 + ((res_1157627913 << 10) >>> 0)) >>> 0);
    F.line = 87;
    res_1157627913 = ((res_1157627913 ^ (res_1157627913 >>> 6)) >>> 0);
    F.line = 88;
    result_1157627910 = Number(BigInt.asIntN(32, BigInt(res_1157627913)));
  framePtr = F.prev;

  return result_1157627910;

}

function HEX21HEX24_1157627922(h_1157627923) {
  var result_1157627924 = 0;

  var F = {procname: "hashes.!$", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "hashes.nim";
    var h_1157627925 = Number(BigInt.asUintN(32, BigInt(h_1157627923)));
    F.line = 95;
    var res_1157627930 = ((h_1157627925 + ((h_1157627925 << 3) >>> 0)) >>> 0);
    F.line = 96;
    res_1157627930 = ((res_1157627930 ^ (res_1157627930 >>> 11)) >>> 0);
    F.line = 97;
    res_1157627930 = ((res_1157627930 + ((res_1157627930 << 15) >>> 0)) >>> 0);
    F.line = 98;
    result_1157627924 = Number(BigInt.asIntN(32, BigInt(res_1157627930)));
  framePtr = F.prev;

  return result_1157627924;

}

function hashIgnoreCase_1157628447(x_1157628448) {
  var result_1157628449 = 0;

  var F = {procname: "hashes.hashIgnoreCase", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 484;
    F.filename = "hashes.nim";
    var h_1157628450 = 0;
    Label1: {
      F.line = 485;
      var i_1157628455 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__1694500080 = 0;
      F.line = 485;
      F.filename = "hashes.nim";
      colontmp__1694500080 = subInt((x_1157628448).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_1694500081 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_1694500081 <= colontmp__1694500080)) break Label3;
            F.line = 485;
            F.filename = "hashes.nim";
            i_1157628455 = res_1694500081;
            F.line = 486;
            var c_1157628456 = x_1157628448[chckIndx(i_1157628455, 0, (x_1157628448).length - 1)];
            if ((ConstSet2[c_1157628456] != undefined)) {
            F.line = 488;
            c_1157628456 = chckRange(addInt(c_1157628456, 32), 0, 255);
            }
            
            F.line = 489;
            h_1157628450 = HEX21HEX26_1157627907(h_1157628450, c_1157628456);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_1694500081 = addInt(res_1694500081, 1);
          }
      };
    };
    F.line = 490;
    F.filename = "hashes.nim";
    result_1157628449 = HEX21HEX24_1157627922(h_1157628450);
  framePtr = F.prev;

  return result_1157628449;

}

function hashIgnoreStyle_1157628380(x_1157628381) {
  var result_1157628382 = 0;

  var F = {procname: "hashes.hashIgnoreStyle", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 434;
    F.filename = "hashes.nim";
    var h_1157628383 = 0;
    F.line = 435;
    var i_1157628384 = 0;
    F.line = 436;
    var xLen_1157628385 = (x_1157628381).length;
    Label1: {
      F.line = 437;
        Label2: while (true) {
        if (!(i_1157628384 < xLen_1157628385)) break Label2;
          F.line = 438;
          var c_1157628386 = x_1157628381[chckIndx(i_1157628384, 0, (x_1157628381).length - 1)];
          if ((c_1157628386 == 95)) {
          F.line = 440;
          i_1157628384 = addInt(i_1157628384, 1);
          }
          else {
            if ((ConstSet3[c_1157628386] != undefined)) {
            F.line = 443;
            c_1157628386 = chckRange(addInt(c_1157628386, 32), 0, 255);
            }
            
            F.line = 444;
            h_1157628383 = HEX21HEX26_1157627907(h_1157628383, c_1157628386);
            F.line = 445;
            i_1157628384 = addInt(i_1157628384, 1);
          }
          
        }
    };
    F.line = 446;
    result_1157628382 = HEX21HEX24_1157627922(h_1157628383);
  framePtr = F.prev;

  return result_1157628382;

}

function myhash_1677721737(t_1677721738, key_1677721739) {
  var result_1677721740 = 0;

  var F = {procname: "strtabs.myhash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 118;
    F.filename = "strtabs.nim";
    switch (t_1677721738.mode) {
    case 0:
      F.line = 119;
      result_1677721740 = hash_1157628368(key_1677721739);
      break;
    case 1:
      F.line = 120;
      result_1677721740 = hashIgnoreCase_1157628447(key_1677721739);
      break;
    case 2:
      F.line = 121;
      result_1677721740 = hashIgnoreStyle_1157628380(key_1677721739);
      break;
    }
  framePtr = F.prev;

  return result_1677721740;

}

function cmpStrings(a_33557033, b_33557034) {
        if (a_33557033 == b_33557034) return 0;
    if (!a_33557033) return -1;
    if (!b_33557034) return 1;
    for (var i = 0; i < a_33557033.length && i < b_33557034.length; i++) {
      var result = a_33557033[i] - b_33557034[i];
      if (result != 0) return result;
    }
    return a_33557033.length - b_33557034.length;
  

  
}

function cmp_33555881(x_33555882, y_33555883) {
  var result_33557039 = 0;

    result_33557039 = cmpStrings(x_33555882, y_33555883);

  return result_33557039;

}

function toLowerAscii_989855745(c_989855746) {
  var result_989855747 = 0;

  var F = {procname: "strimpl.toLowerAscii", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/strimpl.nim", line: 0};
  framePtr = F;
    if ((ConstSet4[c_989855746] != undefined)) {
    F.line = 3;
    F.filename = "strimpl.nim";
    result_989855747 = chckRange(addInt(c_989855746, 32), 0, 255);
    }
    else {
      F.line = 5;
      result_989855747 = c_989855746;
    }
    
  framePtr = F.prev;

  return result_989855747;

}

function nsuCmpIgnoreCase(a_721420475, b_721420476) {
  var result_721420477 = 0;

  var F = {procname: "strutils.cmpIgnoreCase", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 42;
    F.filename = "strimpl.nim";
    var aLenHEX60gensym20_721420484 = (a_721420475).length;
    F.line = 43;
    var bLenHEX60gensym20_721420485 = (b_721420476).length;
    F.line = 44;
    var iHEX60gensym20_721420486 = 0;
    F.line = 48;
    var mHEX60gensym20_721420487 = nimMin(aLenHEX60gensym20_721420484, bLenHEX60gensym20_721420485);
    Label1: {
      F.line = 49;
        Label2: while (true) {
        if (!(iHEX60gensym20_721420486 < mHEX60gensym20_721420487)) break Label2;
          F.line = 50;
          result_721420477 = subInt(toLowerAscii_989855745(a_721420475[chckIndx(iHEX60gensym20_721420486, 0, (a_721420475).length - 1)]), toLowerAscii_989855745(b_721420476[chckIndx(iHEX60gensym20_721420486, 0, (b_721420476).length - 1)]));
          if (!((result_721420477 == 0))) {
          F.line = 51;
          break BeforeRet;
          }
          
          F.line = 52;
          iHEX60gensym20_721420486 = addInt(iHEX60gensym20_721420486, 1);
        }
    };
    F.line = 53;
    result_721420477 = subInt(aLenHEX60gensym20_721420484, bLenHEX60gensym20_721420485);
  };
  framePtr = F.prev;

  return result_721420477;

}

function nsuCmpIgnoreStyle(a_721420500, b_721420501) {
          var Temporary7;
          var Temporary8;

  var result_721420502 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_721420511 = (a_721420500).length;
    var bLenHEX60gensym24_721420512 = (b_721420501).length;
    var iHEX60gensym24_721420513 = 0;
    var jHEX60gensym24_721420514 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_721420513 < aLenHEX60gensym24_721420511) && (a_721420500[iHEX60gensym24_721420513] == 95))) break Label4;
                iHEX60gensym24_721420513 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_721420514 < bLenHEX60gensym24_721420512) && (b_721420501[jHEX60gensym24_721420514] == 95))) break Label6;
                jHEX60gensym24_721420514 += 1;
              }
          };
          if ((iHEX60gensym24_721420513 < aLenHEX60gensym24_721420511)) {
          Temporary7 = toLowerAscii_989855745(a_721420500[iHEX60gensym24_721420513]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_721420525 = Temporary7;
          if ((jHEX60gensym24_721420514 < bLenHEX60gensym24_721420512)) {
          Temporary8 = toLowerAscii_989855745(b_721420501[jHEX60gensym24_721420514]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_721420526 = Temporary8;
          result_721420502 = (aaHEX60gensym24_721420525 - bbHEX60gensym24_721420526);
          if (!((result_721420502 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_721420511 <= iHEX60gensym24_721420513)) {
          if ((bLenHEX60gensym24_721420512 <= jHEX60gensym24_721420514)) {
          result_721420502 = 0;
          break BeforeRet;
          }
          
          result_721420502 = (-1);
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_721420512 <= jHEX60gensym24_721420514)) {
          result_721420502 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_721420513 += 1;
          jHEX60gensym24_721420514 += 1;
        }
    };
  };

  return result_721420502;

}

function myCmp_1677721741(t_1677721742, a_1677721743, b_1677721744) {
  var result_1677721745 = false;

  var F = {procname: "strtabs.myCmp", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 124;
    F.filename = "strtabs.nim";
    switch (t_1677721742.mode) {
    case 0:
      F.line = 125;
      result_1677721745 = (cmp_33555881(a_1677721743, b_1677721744) == 0);
      break;
    case 1:
      F.line = 126;
      result_1677721745 = (nsuCmpIgnoreCase(a_1677721743, b_1677721744) == 0);
      break;
    case 2:
      F.line = 127;
      result_1677721745 = (nsuCmpIgnoreStyle(a_1677721743, b_1677721744) == 0);
      break;
    }
  framePtr = F.prev;

  return result_1677721745;

}

function nextTry_1677721755(h_1677721756, maxHash_1677721757) {
  var result_1677721758 = 0;

  var F = {procname: "strtabs.nextTry", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "strtabs.nim";
    result_1677721758 = (addInt(h_1677721756, 1) & maxHash_1677721757);
  framePtr = F.prev;

  return result_1677721758;

}

function rawGet_1677721759(t_1677721760, key_1677721761) {
  var result_1677721762 = 0;

  var F = {procname: "strtabs.rawGet", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 137;
    F.filename = "strtabs.nim";
    var h_1677721766 = (myhash_1677721737(t_1677721760, key_1677721761) & (t_1677721760.data).length - 1);
    Label1: {
      F.line = 138;
        Label2: while (true) {
        if (!t_1677721760.data[chckIndx(h_1677721766, 0, (t_1677721760.data).length - 1)].Field2) break Label2;
          if (myCmp_1677721741(t_1677721760, t_1677721760.data[chckIndx(h_1677721766, 0, (t_1677721760.data).length - 1)].Field0, key_1677721761)) {
          F.line = 140;
          result_1677721762 = h_1677721766;
          break BeforeRet;
          }
          
          F.line = 141;
          h_1677721766 = nextTry_1677721755(h_1677721766, (t_1677721760.data).length - 1);
        }
    };
    F.line = 142;
    result_1677721762 = (-1);
  };
  framePtr = F.prev;

  return result_1677721762;

}

function nsthasKey(t_1677721807, key_1677721808) {
  var result_1677721809 = false;

  var F = {procname: "strtabs.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 211;
    F.filename = "strtabs.nim";
    result_1677721809 = (0 <= rawGet_1677721759(t_1677721807, key_1677721808));
  framePtr = F.prev;

  return result_1677721809;

}

function nstTake(t_1677721778, key_1677721779) {
  var result_1677721780 = null;
  var result_1677721780_Idx = 0;

  var F = {procname: "strtabs.[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 145;
    F.filename = "strtabs.nim";
    var indexHEX60gensym3_1677721782 = rawGet_1677721759(t_1677721778, key_1677721779);
    if ((0 <= indexHEX60gensym3_1677721782)) {
    F.line = 146;
    result_1677721780 = t_1677721778.data[chckIndx(indexHEX60gensym3_1677721782, 0, (t_1677721778.data).length - 1)]; result_1677721780_Idx = "Field1";
    }
    else {
      F.line = 148;
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1677721779 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    
  framePtr = F.prev;

  return [result_1677721780, result_1677721780_Idx];

}

function stattrs(name_1694498999, e_1694499000, attrs_1694499001) {
    var Temporary1;

  var F = {procname: "tag.setAttributes", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    if (contains_956301361(SvgElements_1694498842, toLower_771759512(name_1694498999))) {
    if (nsthasKey(attrs_1694499001, [99,108,97,115,115])) {
    F.line = 196;
    F.filename = "tag.nim";
    var a_1694499008 = toJSStr((Temporary1 = nstTake(attrs_1694499001, [99,108,97,115,115]), Temporary1)[0][Temporary1[1]]);
    F.line = 197;
    e_1694499000.setAttributeNS(null, 'class', a_1694499008);
    }
    
    Label2: {
      F.line = 198;
      var key_1694499009 = [];
      F.line = 198;
      var val_1694499010 = [];
      Label3: {
        F.line = 100;
        F.filename = "strtabs.nim";
        var h_1694500062 = 0;
        F.line = 75;
        F.filename = "iterators_1.nim";
        var colontmp__1694500063 = 0;
        F.line = 100;
        F.filename = "strtabs.nim";
        colontmp__1694500063 = (attrs_1694499001.data).length - 1;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_1694500064 = 0;
        Label4: {
          F.line = 91;
            Label5: while (true) {
            if (!(res_1694500064 <= colontmp__1694500063)) break Label5;
              F.line = 100;
              F.filename = "strtabs.nim";
              h_1694500062 = res_1694500064;
              if (attrs_1694499001.data[chckIndx(h_1694500062, 0, (attrs_1694499001.data).length - 1)].Field2) {
              F.line = 198;
              F.filename = "tag.nim";
              key_1694499009 = attrs_1694499001.data[chckIndx(h_1694500062, 0, (attrs_1694499001.data).length - 1)].Field0;
              F.line = 198;
              val_1694499010 = attrs_1694499001.data[chckIndx(h_1694500062, 0, (attrs_1694499001.data).length - 1)].Field1;
              if (!(eqStrings(key_1694499009, [99,108,97,115,115]))) {
              F.line = 200;
              e_1694499000.setAttribute(toJSStr(key_1694499009), toJSStr(val_1694499010));
              }
              
              }
              
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_1694500064 = addInt(res_1694500064, 1);
            }
        };
      };
    };
    }
    else {
      Label6: {
        F.line = 202;
        F.filename = "tag.nim";
        var key_1694499011 = [];
        F.line = 202;
        var val_1694499012 = [];
        Label7: {
          F.line = 100;
          F.filename = "strtabs.nim";
          var h_1694500068 = 0;
          F.line = 75;
          F.filename = "iterators_1.nim";
          var colontmp__1694500069 = 0;
          F.line = 100;
          F.filename = "strtabs.nim";
          colontmp__1694500069 = (attrs_1694499001.data).length - 1;
          F.line = 90;
          F.filename = "iterators_1.nim";
          var res_1694500070 = 0;
          Label8: {
            F.line = 91;
              Label9: while (true) {
              if (!(res_1694500070 <= colontmp__1694500069)) break Label9;
                F.line = 100;
                F.filename = "strtabs.nim";
                h_1694500068 = res_1694500070;
                if (attrs_1694499001.data[chckIndx(h_1694500068, 0, (attrs_1694499001.data).length - 1)].Field2) {
                F.line = 202;
                F.filename = "tag.nim";
                key_1694499011 = attrs_1694499001.data[chckIndx(h_1694500068, 0, (attrs_1694499001.data).length - 1)].Field0;
                F.line = 202;
                val_1694499012 = attrs_1694499001.data[chckIndx(h_1694500068, 0, (attrs_1694499001.data).length - 1)].Field1;
                F.line = 202;
                e_1694499000.setAttribute(toJSStr(key_1694499011), toJSStr(val_1694499012));
                }
                
                F.line = 93;
                F.filename = "iterators_1.nim";
                res_1694500070 = addInt(res_1694500070, 1);
              }
          };
        };
      };
    }
    
  framePtr = F.prev;

  
}

function nwelm(name_1694499030) {
  var result_1694499031 = null;

  var F = {procname: "tag.newElement", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    if (contains_956301361(SvgElements_1694498842, toLower_771759512(name_1694499030))) {
    F.line = 207;
    F.filename = "tag.nim";
    result_1694499031 = {m_type: NTI1694498821, onlyChildren: false, lazyFunc: null, lazy: false, className: null, classList: null, checked: false, defaultChecked: false, defaultValue: null, disabled: false, form: null, name: null, readOnly: false, options: [], selectedOptions: [], clientWidth: 0, clientHeight: 0, contentEditable: null, isContentEditable: false, dir: null, offsetHeight: 0, offsetWidth: 0, offsetLeft: 0, offsetTop: 0, attributes: [], childNodes: [], children: [], data: null, firstChild: null, lastChild: null, nextSibling: null, nodeName: null, nodeType: 0, nodeValue: null, parentNode: null, content: null, previousSibling: null, ownerDocument: null, innerHTML: null, outerHTML: null, innerText: null, textContent: null, style: null, baseURI: null, parentElement: null, isConnected: false, onabort: null, onblur: null, onchange: null, onclick: null, ondblclick: null, onerror: null, onfocus: null, onkeydown: null, onkeypress: null, onkeyup: null, onload: null, onmousedown: null, onmousemove: null, onmouseout: null, onmouseover: null, onmouseup: null, onreset: null, onselect: null, onstorage: null, onsubmit: null, onunload: null, onloadstart: null, onprogress: null, onloadend: null};
    F.line = 208;
    var n_1694499038 = toJSStr(name_1694499030);
    F.line = 209;
    result_1694499031 = document.createElementNS('http://www.w3.org/2000/svg', n_1694499038)
    }
    else {
      F.line = 211;
      result_1694499031 = document.createElement(toJSStr(name_1694499030));
    }
    
  framePtr = F.prev;

  return result_1694499031;

}

function tg1(name_1694499115, attrs_1694499116, children_1694499121, onlyChildren_1694499122) {
  var result_1694499123 = null;

  var F = {procname: "tag.initTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    F.line = 227;
    F.filename = "tag.nim";
    result_1694499123 = nwelm(name_1694499115);
    F.line = 228;
    result_1694499123.onlyChildren = onlyChildren_1694499122;
    F.line = 229;
    stattrs(name_1694499115, result_1694499123, attrs_1694499116);
    Label1: {
      F.line = 230;
      var child_1694499146 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1694500091 = 0;
      F.line = 242;
      var L_1694500092 = (children_1694499121).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_1694500091 < L_1694500092)) break Label3;
            F.line = 230;
            F.filename = "tag.nim";
            child_1694499146 = children_1694499121[chckIndx(i_1694500091, 0, (children_1694499121).length - 1)];
            Label4: {
              if ((child_1694499146 == null)) {
              F.line = 232;
              break Label4;
              }
              
              F.line = 233;
              tgadd(result_1694499123, [child_1694499146]);
            };
            F.line = 245;
            F.filename = "iterators.nim";
            i_1694500091 = addInt(i_1694500091, 1);
            if (!(((children_1694499121).length == L_1694500092))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1694499123;

}

function tg2(name_1694499167, children_1694499172, onlyChildren_1694499173) {
  var result_1694499174 = null;

  var F = {procname: "tag.initTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    F.line = 255;
    F.filename = "tag.nim";
    result_1694499174 = nwelm(name_1694499167);
    F.line = 256;
    result_1694499174.onlyChildren = onlyChildren_1694499173;
    Label1: {
      F.line = 257;
      var child_1694499178 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1694500095 = 0;
      F.line = 242;
      var L_1694500096 = (children_1694499172).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_1694500095 < L_1694500096)) break Label3;
            F.line = 257;
            F.filename = "tag.nim";
            child_1694499178 = children_1694499172[chckIndx(i_1694500095, 0, (children_1694499172).length - 1)];
            if (!((child_1694499178 == null))) {
            F.line = 259;
            tgadd(result_1694499174, [child_1694499178]);
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_1694500095 = addInt(i_1694500095, 1);
            if (!(((children_1694499172).length == L_1694500096))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1694499174;

}

function tg3(name_1694499183, isText_1694499184, attrs_1694499185, children_1694499190, onlyChildren_1694499191) {
  var result_1694499192 = null;

  var F = {procname: "tag.initTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    if (isText_1694499184) {
    F.line = 285;
    F.filename = "tag.nim";
    result_1694499192 = document.createTextNode(toJSStr(name_1694499183));
    }
    else {
      F.line = 287;
      result_1694499192 = nwelm(name_1694499183);
      F.line = 288;
      result_1694499192.onlyChildren = onlyChildren_1694499191;
      F.line = 289;
      stattrs(name_1694499183, result_1694499192, attrs_1694499185);
      Label1: {
        F.line = 290;
        var child_1694499196 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_1694500100 = 0;
        F.line = 242;
        var L_1694500101 = (children_1694499190).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_1694500100 < L_1694500101)) break Label3;
              F.line = 290;
              F.filename = "tag.nim";
              child_1694499196 = children_1694499190[chckIndx(i_1694500100, 0, (children_1694499190).length - 1)];
              Label4: {
                if ((child_1694499196 == null)) {
                F.line = 292;
                break Label4;
                }
                
                F.line = 293;
                tgadd(result_1694499192, [child_1694499196]);
              };
              F.line = 245;
              F.filename = "iterators.nim";
              i_1694500100 = addInt(i_1694500100, 1);
              if (!(((children_1694499190).length == L_1694500101))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  framePtr = F.prev;

  return result_1694499192;

}

function tg4(name_1694499201, isText_1694499202, children_1694499207, onlyChildren_1694499208) {
  var result_1694499209 = null;

  var F = {procname: "tag.initTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    if (isText_1694499202) {
    F.line = 309;
    F.filename = "tag.nim";
    result_1694499209 = document.createTextNode(toJSStr(name_1694499201));
    }
    else {
      F.line = 311;
      result_1694499209 = nwelm(name_1694499201);
      F.line = 312;
      result_1694499209.onlyChildren = onlyChildren_1694499208;
      Label1: {
        F.line = 313;
        var child_1694499213 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_1694500105 = 0;
        F.line = 242;
        var L_1694500106 = (children_1694499207).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_1694500105 < L_1694500106)) break Label3;
              F.line = 313;
              F.filename = "tag.nim";
              child_1694499213 = children_1694499207[chckIndx(i_1694500105, 0, (children_1694499207).length - 1)];
              Label4: {
                if ((child_1694499213 == null)) {
                F.line = 315;
                break Label4;
                }
                
                F.line = 316;
                tgadd(result_1694499209, [child_1694499213]);
              };
              F.line = 245;
              F.filename = "iterators.nim";
              i_1694500105 = addInt(i_1694500105, 1);
              if (!(((children_1694499207).length == L_1694500106))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  framePtr = F.prev;

  return result_1694499209;

}
var F = {procname: "module tag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
framePtr = F;
F.line = 99;
F.filename = "tag.nim";
//js
  const _originAddEventListener = Node.prototype.addEventListener;
  const _originRemoveEventListener = Node.prototype.removeEventListener;
  const _originCloneNode = Node.prototype.cloneNode;

  Node.prototype.__getEventIndex = function(target, targetArgs) {
    if (!this._eventListeners)
      this._eventListeners = [];
    return this._eventListeners.findIndex(args => {
      for (let i = 0; i < args.length; i++)
        if (targetArgs[i] !== args[i]) return false;
      return true;
    });
  };

  Node.prototype.getEventListeners = function() {
    if (!this._eventListeners)
      this._eventListeners = [];
    return this._eventListeners;
  }

  const cloneEvents = (source, element, deep) => {
    for (const args of source.getEventListeners())
      Node.prototype.addEventListener.apply(element, args)
    
    if (source.lazy && !element.lazy){
      element.lazy = source.lazy;
      element.lazyFunc = source.lazyFunc;
    }

    if (deep) {
      for (let i = 0; i < source.childNodes.length; i++) {
        const sourceNode = source.childNodes[i];
        const targetNode = element.childNodes[i];
        if (sourceNode instanceof Node && targetNode instanceof Node) {
          cloneEvents(sourceNode, targetNode, deep);
        }
      }
    }
  };

  Node.prototype.addEventListener = function() {
    if (!this._eventListeners)
      this._eventListeners = [];
    this._eventListeners.push(arguments);
    return _originAddEventListener.apply(this, arguments);
  };

  Node.prototype.removeEventListener = function() {
    if (!this._eventListeners)
      this._eventListeners = [];
    const eventIndex = this.__getEventIndex(arguments);
    if (eventIndex !== -1)
      this._eventListeners.splice(eventIndex, 1);
    return _originRemoveEventListener.apply(this, arguments);
  };

  Node.prototype.cloneNode = function(deep) {
    if (!this._eventListeners)
      this._eventListeners = [];
    const clonedNode = _originCloneNode.apply(this, arguments);
    if (clonedNode instanceof Node)
      cloneEvents(this, clonedNode, deep);
    return clonedNode;
  };
  
framePtr = F.prev;
var F = {procname: "module tag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mounting", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/routing/mounting.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mounting", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/routing/mounting.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module base64", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/base64.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module base64", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/base64.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decorators", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/routing/decorators.nim", line: 0};
framePtr = F;
F.line = 48;
F.filename = "decorators.nim";
framePtr = F.prev;
var F = {procname: "module decorators", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/routing/decorators.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanutils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/private/scanutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanutils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/private/scanutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module routing", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/routing/routing.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module routing", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/routing/routing.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsconsole", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/jsconsole.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newSeq_1644167227(len_1644167229) {
  var result_1644167230 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_1644167230 = new Array(len_1644167229); for (var i = 0 ; i < len_1644167229 ; ++i) { result_1644167230[i] = {Field0: [], Field1: null}; }  framePtr = F.prev;

  return result_1644167230;

}

function nextPowerOfTwo_822083831(x_822083832) {
  var result_822083833 = 0;

    result_822083833 = (x_822083832 - 1);
    result_822083833 = (result_822083833 | (result_822083833 >> 16));
    result_822083833 = (result_822083833 | (result_822083833 >> 8));
    result_822083833 = (result_822083833 | (result_822083833 >> 4));
    result_822083833 = (result_822083833 | (result_822083833 >> 2));
    result_822083833 = (result_822083833 | (result_822083833 >> 1));
    result_822083833 += (1 + ((x_822083832 <= 0) ? 1 : 0));

  return result_822083833;

}

function slotsNeeded_1140850730(count_1140850731) {
  var result_1140850732 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "hashcommon.nim";
    result_1140850732 = nextPowerOfTwo_822083831(addInt(divInt(mulInt(count_1140850731, 3), 2), 4));
  framePtr = F.prev;

  return result_1140850732;

}

function initTable_1644167310(initialSize_1644167313) {
  var result_1644167314 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym0_1644167316 = slotsNeeded_1140850730(chckRange(initialSize_1644167313, 0, 2147483647));
    F.line = 169;
    result_1644167314.counter = 0;
    F.line = 170;
    result_1644167314.data = new Array(chckRange(correctSizeHEX60gensym0_1644167316, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1644167316, 0, 2147483647) ; ++i) { result_1644167314.data[i] = {Field0: 0, Field1: 0, Field2: null}; }  framePtr = F.prev;

  return result_1644167314;

}

function newTable_1644167271(initialSize_1644167274) {
  var result_1644167280 = null;

  var F = {procname: "newTable.newTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 828;
    F.filename = "tables.nim";
    result_1644167280 = ({data: [], counter: 0});
    F.line = 830;
    result_1644167280 = nimCopy(result_1644167280, initTable_1644167310(initialSize_1644167274), NTI1644167223);
  framePtr = F.prev;

  return result_1644167280;

}

function initTable_1644168859(initialSize_1644168862) {
  var result_1644168863 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym16_1644168865 = slotsNeeded_1140850730(chckRange(initialSize_1644168862, 0, 2147483647));
    F.line = 169;
    result_1644168863.counter = 0;
    F.line = 170;
    result_1644168863.data = new Array(chckRange(correctSizeHEX60gensym16_1644168865, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_1644168865, 0, 2147483647) ; ++i) { result_1644168863.data[i] = {Field0: 0, Field1: null, Field2: null}; }  framePtr = F.prev;

  return result_1644168863;

}

function newTable_1644168820(initialSize_1644168823) {
  var result_1644168829 = null;

  var F = {procname: "newTable.newTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 828;
    F.filename = "tables.nim";
    result_1644168829 = ({data: [], counter: 0});
    F.line = 830;
    result_1644168829 = nimCopy(result_1644168829, initTable_1644168859(initialSize_1644168823), NTI1644168031);
  framePtr = F.prev;

  return result_1644168829;

}

function rt(path_1644170396) {
  var F = {procname: "renderer.route", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 188;
    F.filename = "renderer.nim";
          window.history.pushState({previous: window.location.href}, '', '#' + path_1644170396);
      
    F.line = 191;
    var force_1644170397 = !((currentRoute_1644167269[0] == path_1644170396));
    F.line = 192;
    rawEcho(nimBoolToStr(force_1644170397), [44,32], cstrToNimstr(currentRoute_1644167269[0]), [44,32], cstrToNimstr(path_1644170396));
    F.line = 193;
    currentRoute_1644167269[0] = path_1644170396;
    F.line = 194;
    application_1644167268[0].router(force_1644170397);
    if (force_1644170397) {
    F.line = 196;
    window.scrollTo(0, 0);
    }
    
  framePtr = F.prev;

  
}

function bck() {
  var F = {procname: "renderer.back", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 199;
    F.filename = "renderer.nim";
    window.history.back();
  framePtr = F.prev;

  
}

function frwrd() {
  var F = {procname: "renderer.forward", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 202;
    F.filename = "renderer.nim";
    window.history.forward();
  framePtr = F.prev;

  
}

function hash_1157628371(x_1157628372) {
  var result_1157628373 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 397;
    F.filename = "hashes.nim";
    F.line = 409;
    var xx_1157628374 = cstrToNimstr(x_1157628372);
    result_1157628373 = murmurHash_1157628249((xx_1157628374.slice(0, (xx_1157628374).length - 1 + 1)));
  framePtr = F.prev;

  return result_1157628373;

}

function isFilled_1140850719(hcode_1140850720) {
  var result_1140850721 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1140850721 = !((hcode_1140850720 == 0));
  framePtr = F.prev;

  return result_1140850721;

}

function nextTry_1140850722(h_1140850723, maxHash_1140850724) {
  var result_1140850725 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_1140850725 = (addInt(h_1140850723, 1) & maxHash_1140850724);
  framePtr = F.prev;

  return result_1140850725;

}

function rawGet_1644169095(t_1644169098, key_1644169099, hc_1644169100, hc_1644169100_Idx) {
  var result_1644169101 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1644169100[hc_1644169100_Idx] = hash_1157628371(key_1644169099);
    if ((hc_1644169100[hc_1644169100_Idx] == 0)) {
    F.line = 61;
    hc_1644169100[hc_1644169100_Idx] = 314159265;
    }
    
    if (((t_1644169098.data).length == 0)) {
    F.line = 43;
    result_1644169101 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1644169152 = (hc_1644169100[hc_1644169100_Idx] & (t_1644169098.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1140850719(t_1644169098.data[chckIndx(h_1644169152, 0, (t_1644169098.data).length - 1)].Field0)) break Label2;
          if (((t_1644169098.data[chckIndx(h_1644169152, 0, (t_1644169098.data).length - 1)].Field0 == hc_1644169100[hc_1644169100_Idx]) && (t_1644169098.data[chckIndx(h_1644169152, 0, (t_1644169098.data).length - 1)].Field1 == key_1644169099))) {
          F.line = 51;
          result_1644169101 = h_1644169152;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1644169152 = nextTry_1140850722(h_1644169152, (t_1644169098.data).length - 1);
        }
    };
    F.line = 53;
    result_1644169101 = subInt((-1), h_1644169152);
  };
  framePtr = F.prev;

  return result_1644169101;

}

function hasKey_1644170596(t_1644170599, key_1644170600) {
  var result_1644170601 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1644170602 = [0];
    F.line = 373;
    result_1644170601 = (0 <= rawGet_1644169095(t_1644170599, key_1644170600, hc_1644170602, 0));
  framePtr = F.prev;

  return result_1644170601;

}

function hasKey_1644170497(t_1644170500, key_1644170501) {
  var result_1644170502 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 913;
    F.filename = "tables.nim";
    result_1644170502 = hasKey_1644170596(t_1644170500, key_1644170501);
  framePtr = F.prev;

  return result_1644170502;

}

function raiseKeyError_1644170841(key_1644170843) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(cstrToNimstr(key_1644170843) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1644170774(t_1644170777, key_1644170778) {
  var result_1644170779 = null;
  var result_1644170779_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_1644170780 = [0];
    F.line = 244;
    var indexHEX60gensym22_1644170787 = rawGet_1644169095(t_1644170777, key_1644170778, hcHEX60gensym22_1644170780, 0);
    if ((0 <= indexHEX60gensym22_1644170787)) {
    F.line = 245;
    result_1644170779 = t_1644170777.data[chckIndx(indexHEX60gensym22_1644170787, 0, (t_1644170777.data).length - 1)]; result_1644170779_Idx = "Field2";
    }
    else {
      F.line = 247;
    raiseKeyError_1644170841(key_1644170778);
    }
    
  framePtr = F.prev;

  return [result_1644170779, result_1644170779_Idx];

}

function HEX5BHEX5D_1644170662(t_1644170665, key_1644170666) {
    var Temporary1;

  var result_1644170667 = null;
  var result_1644170667_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 879;
    F.filename = "tables.nim";
    result_1644170667 = (Temporary1 = HEX5BHEX5D_1644170774(t_1644170665, key_1644170666), Temporary1)[0]; result_1644170667_Idx = Temporary1[1];
  framePtr = F.prev;

  return [result_1644170667, result_1644170667_Idx];

}

function mustRehash_1644169437(t_1644169439) {
  var result_1644169440 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1644169439.counter < (t_1644169439.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1644169440 = ((mulInt((t_1644169439.data).length, 2) < mulInt(t_1644169439.counter, 3)) || (subInt((t_1644169439.data).length, t_1644169439.counter) < 4));
  framePtr = F.prev;

  return result_1644169440;

}

function rawInsert_1644169886(t_1644169890, data_1644169891, data_1644169891_Idx, key_1644169892, val_1644169893, hc_1644169894, h_1644169895) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1644169891[data_1644169891_Idx][chckIndx(h_1644169895, 0, (data_1644169891[data_1644169891_Idx]).length - 1)].Field1 = key_1644169892;
    F.line = 26;
    data_1644169891[data_1644169891_Idx][chckIndx(h_1644169895, 0, (data_1644169891[data_1644169891_Idx]).length - 1)].Field2 = val_1644169893;
    F.line = 27;
    data_1644169891[data_1644169891_Idx][chckIndx(h_1644169895, 0, (data_1644169891[data_1644169891_Idx]).length - 1)].Field0 = hc_1644169894;
  framePtr = F.prev;

  
}

function enlarge_1644169592(t_1644169595) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1644169598 = [];
    F.line = 251;
    n_1644169598 = new Array(chckRange(mulInt((t_1644169595.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1644169595.data).length, 2), 0, 2147483647) ; ++i) { n_1644169598[i] = {Field0: 0, Field1: null, Field2: null}; }    F.line = 252;
    var Temporary1 = t_1644169595.data; t_1644169595.data = n_1644169598; n_1644169598 = Temporary1;    Label2: {
      F.line = 253;
      var i_1644169662 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__1644175765 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__1644175765 = (n_1644169598).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_1644175767 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_1644175767 <= colontmp__1644175765)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1644169662 = res_1644175767;
            F.line = 254;
            var eh_1644169716 = n_1644169598[chckIndx(i_1644169662, 0, (n_1644169598).length - 1)].Field0;
            if (isFilled_1140850719(eh_1644169716)) {
            F.line = 256;
            var j_1644169720 = (eh_1644169716 & (t_1644169595.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1140850719(t_1644169595.data[chckIndx(j_1644169720, 0, (t_1644169595.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1644169720 = nextTry_1140850722(j_1644169720, (t_1644169595.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1644169886(t_1644169595, t_1644169595, "data", n_1644169598[chckIndx(i_1644169662, 0, (n_1644169598).length - 1)].Field1, n_1644169598[chckIndx(i_1644169662, 0, (n_1644169598).length - 1)].Field2, eh_1644169716, j_1644169720);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_1644175767 = addInt(res_1644175767, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1644170071(t_1644170074, key_1644170075, hc_1644170076) {
  var result_1644170077 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1644170074.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1644170077 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1644170128 = (hc_1644170076 & (t_1644170074.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1140850719(t_1644170074.data[chckIndx(h_1644170128, 0, (t_1644170074.data).length - 1)].Field0)) break Label2;
          if (((t_1644170074.data[chckIndx(h_1644170128, 0, (t_1644170074.data).length - 1)].Field0 == hc_1644170076) && (t_1644170074.data[chckIndx(h_1644170128, 0, (t_1644170074.data).length - 1)].Field1 == key_1644170075))) {
          F.line = 51;
          result_1644170077 = h_1644170128;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1644170128 = nextTry_1140850722(h_1644170128, (t_1644170074.data).length - 1);
        }
    };
    F.line = 53;
    result_1644170077 = subInt((-1), h_1644170128);
  };
  framePtr = F.prev;

  return result_1644170077;

}

function HEX5BHEX5DHEX3D_1644169034(t_1644169037, key_1644169038, val_1644169039) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1644169037.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym19_1644169089 = slotsNeeded_1140850730(32);
    F.line = 169;
    t_1644169037.counter = 0;
    F.line = 170;
    t_1644169037.data = new Array(chckRange(correctSizeHEX60gensym19_1644169089, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym19_1644169089, 0, 2147483647) ; ++i) { t_1644169037.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    F.line = 59;
    var hc_1644169094 = [0];
    F.line = 60;
    var index_1644169330 = rawGet_1644169095(t_1644169037, key_1644169038, hc_1644169094, 0);
    if ((0 <= index_1644169330)) {
    F.line = 61;
    t_1644169037.data[chckIndx(index_1644169330, 0, (t_1644169037.data).length - 1)].Field2 = val_1644169039;
    }
    else {
      if (((t_1644169037.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym24_1644169432 = slotsNeeded_1140850730(32);
      F.line = 169;
      t_1644169037.counter = 0;
      F.line = 170;
      t_1644169037.data = new Array(chckRange(correctSizeHEX60gensym24_1644169432, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_1644169432, 0, 2147483647) ; ++i) { t_1644169037.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_1644169437(t_1644169037)) {
      F.line = 51;
      enlarge_1644169592(t_1644169037);
      F.line = 52;
      index_1644169330 = rawGetKnownHC_1644170071(t_1644169037, key_1644169038, hc_1644169094[0]);
      }
      
      F.line = 53;
      index_1644169330 = subInt((-1), index_1644169330);
      F.line = 54;
      rawInsert_1644169886(t_1644169037, t_1644169037, "data", key_1644169038, val_1644169039, hc_1644169094[0], index_1644169330);
      F.line = 62;
      t_1644169037.counter = addInt(t_1644169037.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_1644170901(t_1644170904, key_1644170905, val_1644170906) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 895;
    F.filename = "tables.nim";
    HEX5BHEX5DHEX3D_1644169034(t_1644170904, key_1644170905, val_1644170906);
  framePtr = F.prev;

  
}

function rgcmp(name_1644170454, component_1644170455) {
    var Temporary1;

  var result_1644170456 = null;

  var F = {procname: "renderer.registerComponent", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 237;
    F.filename = "renderer.nim";
    if (hasKey_1644170497(components_1644170371[0], name_1644170454)) {
    F.line = 244;
    result_1644170456 = (Temporary1 = HEX5BHEX5D_1644170662(components_1644170371[0], name_1644170454), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
    }
    
    F.line = 245;
    HEX5BHEX5DHEX3D_1644170901(components_1644170371[0], name_1644170454, component_1644170455);
    result_1644170456 = component_1644170455;
  };
  framePtr = F.prev;

  return result_1644170456;

}

function ismtp(a_1644171007, b_1644171008) {
  var result_1644171009 = false;

  var F = {procname: "renderer.isSameTypes", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((a_1644171007.nodeType == b_1644171008.nodeType) && (a_1644171007.nodeType == 1))) {
    F.line = 264;
    F.filename = "renderer.nim";
    result_1644171009 = eqStrings(toLower_771759512(cstrToNimstr(a_1644171007.nodeName)), toLower_771759512(cstrToNimstr(b_1644171008.nodeName)));
    break BeforeRet;
    }
    
    F.line = 265;
    result_1644171009 = (a_1644171007.nodeType == b_1644171008.nodeType);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1644171009;

}

function initTable_1644171066(initialSize_1644171069) {
  var result_1644171070 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym36_1644171072 = slotsNeeded_1140850730(chckRange(initialSize_1644171069, 0, 2147483647));
    F.line = 169;
    result_1644171070.counter = 0;
    F.line = 170;
    result_1644171070.data = new Array(chckRange(correctSizeHEX60gensym36_1644171072, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_1644171072, 0, 2147483647) ; ++i) { result_1644171070.data[i] = {Field0: 0, Field1: null, Field2: null}; }  framePtr = F.prev;

  return result_1644171070;

}

function newTable_1644171032(initialSize_1644171035) {
  var result_1644171036 = null;

  var F = {procname: "newTable.newTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 828;
    F.filename = "tables.nim";
    result_1644171036 = ({data: [], counter: 0});
    F.line = 830;
    result_1644171036 = nimCopy(result_1644171036, initTable_1644171066(initialSize_1644171035), NTI1644169146);
  framePtr = F.prev;

  return result_1644171036;

}

function rawGet_1644171302(t_1644171305, key_1644171306, hc_1644171307, hc_1644171307_Idx) {
  var result_1644171308 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1644171307[hc_1644171307_Idx] = hash_1157628371(key_1644171306);
    if ((hc_1644171307[hc_1644171307_Idx] == 0)) {
    F.line = 61;
    hc_1644171307[hc_1644171307_Idx] = 314159265;
    }
    
    if (((t_1644171305.data).length == 0)) {
    F.line = 43;
    result_1644171308 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1644171359 = (hc_1644171307[hc_1644171307_Idx] & (t_1644171305.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1140850719(t_1644171305.data[chckIndx(h_1644171359, 0, (t_1644171305.data).length - 1)].Field0)) break Label2;
          if (((t_1644171305.data[chckIndx(h_1644171359, 0, (t_1644171305.data).length - 1)].Field0 == hc_1644171307[hc_1644171307_Idx]) && (t_1644171305.data[chckIndx(h_1644171359, 0, (t_1644171305.data).length - 1)].Field1 == key_1644171306))) {
          F.line = 51;
          result_1644171308 = h_1644171359;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1644171359 = nextTry_1140850722(h_1644171359, (t_1644171305.data).length - 1);
        }
    };
    F.line = 53;
    result_1644171308 = subInt((-1), h_1644171359);
  };
  framePtr = F.prev;

  return result_1644171308;

}

function mustRehash_1644171644(t_1644171646) {
  var result_1644171647 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1644171646.counter < (t_1644171646.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1644171647 = ((mulInt((t_1644171646.data).length, 2) < mulInt(t_1644171646.counter, 3)) || (subInt((t_1644171646.data).length, t_1644171646.counter) < 4));
  framePtr = F.prev;

  return result_1644171647;

}

function rawInsert_1644172093(t_1644172097, data_1644172098, data_1644172098_Idx, key_1644172099, val_1644172100, hc_1644172101, h_1644172102) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1644172098[data_1644172098_Idx][chckIndx(h_1644172102, 0, (data_1644172098[data_1644172098_Idx]).length - 1)].Field1 = key_1644172099;
    F.line = 26;
    data_1644172098[data_1644172098_Idx][chckIndx(h_1644172102, 0, (data_1644172098[data_1644172098_Idx]).length - 1)].Field2 = val_1644172100;
    F.line = 27;
    data_1644172098[data_1644172098_Idx][chckIndx(h_1644172102, 0, (data_1644172098[data_1644172098_Idx]).length - 1)].Field0 = hc_1644172101;
  framePtr = F.prev;

  
}

function enlarge_1644171799(t_1644171802) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1644171805 = [];
    F.line = 251;
    n_1644171805 = new Array(chckRange(mulInt((t_1644171802.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1644171802.data).length, 2), 0, 2147483647) ; ++i) { n_1644171805[i] = {Field0: 0, Field1: null, Field2: null}; }    F.line = 252;
    var Temporary1 = t_1644171802.data; t_1644171802.data = n_1644171805; n_1644171805 = Temporary1;    Label2: {
      F.line = 253;
      var i_1644171869 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__1644175777 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__1644175777 = (n_1644171805).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_1644175778 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_1644175778 <= colontmp__1644175777)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1644171869 = res_1644175778;
            F.line = 254;
            var eh_1644171923 = n_1644171805[chckIndx(i_1644171869, 0, (n_1644171805).length - 1)].Field0;
            if (isFilled_1140850719(eh_1644171923)) {
            F.line = 256;
            var j_1644171927 = (eh_1644171923 & (t_1644171802.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1140850719(t_1644171802.data[chckIndx(j_1644171927, 0, (t_1644171802.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1644171927 = nextTry_1140850722(j_1644171927, (t_1644171802.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1644172093(t_1644171802, t_1644171802, "data", n_1644171805[chckIndx(i_1644171869, 0, (n_1644171805).length - 1)].Field1, n_1644171805[chckIndx(i_1644171869, 0, (n_1644171805).length - 1)].Field2, eh_1644171923, j_1644171927);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_1644175778 = addInt(res_1644175778, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1644172278(t_1644172281, key_1644172282, hc_1644172283) {
  var result_1644172284 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1644172281.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1644172284 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1644172335 = (hc_1644172283 & (t_1644172281.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1140850719(t_1644172281.data[chckIndx(h_1644172335, 0, (t_1644172281.data).length - 1)].Field0)) break Label2;
          if (((t_1644172281.data[chckIndx(h_1644172335, 0, (t_1644172281.data).length - 1)].Field0 == hc_1644172283) && (t_1644172281.data[chckIndx(h_1644172335, 0, (t_1644172281.data).length - 1)].Field1 == key_1644172282))) {
          F.line = 51;
          result_1644172284 = h_1644172335;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1644172335 = nextTry_1140850722(h_1644172335, (t_1644172281.data).length - 1);
        }
    };
    F.line = 53;
    result_1644172284 = subInt((-1), h_1644172335);
  };
  framePtr = F.prev;

  return result_1644172284;

}

function HEX5BHEX5DHEX3D_1644171241(t_1644171244, key_1644171245, val_1644171246) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1644171244.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym39_1644171296 = slotsNeeded_1140850730(32);
    F.line = 169;
    t_1644171244.counter = 0;
    F.line = 170;
    t_1644171244.data = new Array(chckRange(correctSizeHEX60gensym39_1644171296, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_1644171296, 0, 2147483647) ; ++i) { t_1644171244.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    F.line = 59;
    var hc_1644171301 = [0];
    F.line = 60;
    var index_1644171537 = rawGet_1644171302(t_1644171244, key_1644171245, hc_1644171301, 0);
    if ((0 <= index_1644171537)) {
    F.line = 61;
    t_1644171244.data[chckIndx(index_1644171537, 0, (t_1644171244.data).length - 1)].Field2 = val_1644171246;
    }
    else {
      if (((t_1644171244.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym44_1644171639 = slotsNeeded_1140850730(32);
      F.line = 169;
      t_1644171244.counter = 0;
      F.line = 170;
      t_1644171244.data = new Array(chckRange(correctSizeHEX60gensym44_1644171639, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym44_1644171639, 0, 2147483647) ; ++i) { t_1644171244.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_1644171644(t_1644171244)) {
      F.line = 51;
      enlarge_1644171799(t_1644171244);
      F.line = 52;
      index_1644171537 = rawGetKnownHC_1644172278(t_1644171244, key_1644171245, hc_1644171301[0]);
      }
      
      F.line = 53;
      index_1644171537 = subInt((-1), index_1644171537);
      F.line = 54;
      rawInsert_1644172093(t_1644171244, t_1644171244, "data", key_1644171245, val_1644171246, hc_1644171301[0], index_1644171537);
      F.line = 62;
      t_1644171244.counter = addInt(t_1644171244.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_1644172594(t_1644172597, key_1644172598, val_1644172599) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 895;
    F.filename = "tables.nim";
    HEX5BHEX5DHEX3D_1644171241(t_1644172597, key_1644172598, val_1644172599);
  framePtr = F.prev;

  
}

function aidx(e_1644171023) {
  var result_1644171031 = null;

  var F = {procname: "renderer.attrIndex", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 267;
    F.filename = "renderer.nim";
    var attrs_1644172546 = newTable_1644171032(32);
    if (((e_1644171023.attributes).length == 0)) {
    F.line = 269;
    result_1644171031 = attrs_1644172546;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 270;
      var i_1644172553 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1644175771 = 0;
      F.line = 242;
      var L_1644175772 = (e_1644171023.attributes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_1644175771 < L_1644175772)) break Label3;
            F.line = 270;
            F.filename = "renderer.nim";
            i_1644172553 = e_1644171023.attributes[chckIndx(i_1644175771, 0, (e_1644171023.attributes).length - 1)];
            F.line = 270;
            HEX5BHEX5DHEX3D_1644172594(attrs_1644172546, i_1644172553.nodeName, i_1644172553.nodeValue);
            F.line = 245;
            F.filename = "iterators.nim";
            i_1644175771 = addInt(i_1644175771, 1);
            if (!(((e_1644171023.attributes).length == L_1644175772))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 272;
    F.filename = "renderer.nim";
    result_1644171031 = attrs_1644172546;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1644171031;

}

function len_1644172915(t_1644172918) {
  var result_1644172919 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 486;
    F.filename = "tables.nim";
    result_1644172919 = t_1644172918.counter;
  framePtr = F.prev;

  return result_1644172919;

}

function hasKey_1644173200(t_1644173203, key_1644173204) {
  var result_1644173205 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1644173206 = [0];
    F.line = 373;
    result_1644173205 = (0 <= rawGet_1644171302(t_1644173203, key_1644173204, hc_1644173206, 0));
  framePtr = F.prev;

  return result_1644173205;

}

function getOrDefault_1644173279(t_1644173282, key_1644173283) {
  var result_1644173284 = null;

  var F = {procname: "getOrDefault.getOrDefault", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 183;
    F.filename = "tableimpl.nim";
    var hcHEX60gensym56_1644173287 = [0];
    F.line = 184;
    var indexHEX60gensym56_1644173294 = rawGet_1644171302(t_1644173282, key_1644173283, hcHEX60gensym56_1644173287, 0);
    if ((0 <= indexHEX60gensym56_1644173294)) {
    F.line = 185;
    result_1644173284 = t_1644173282.data[chckIndx(indexHEX60gensym56_1644173294, 0, (t_1644173282.data).length - 1)].Field2;
    }
    
  framePtr = F.prev;

  return result_1644173284;

}

function HEX3DHEX3D_1644172744(s_1644172747, t_1644172748) {
  var result_1644172749 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((s_1644172747 == null)) {
    F.line = 1114;
    F.filename = "tables.nim";
    result_1644172749 = (t_1644172748 == null);
    }
    else {
    if ((t_1644172748 == null)) {
    F.line = 1115;
    result_1644172749 = false;
    }
    else {
      if ((s_1644172747.counter == t_1644172748.counter)) {
      Label1: {
        F.line = 209;
        F.filename = "tableimpl.nim";
        var keyHEX60gensym52_1644173158 = null;
        F.line = 209;
        var valHEX60gensym52_1644173159 = null;
        F.line = 695;
        F.filename = "tables.nim";
        var L_1644175804 = len_1644172915(s_1644172747);
        Label2: {
          F.line = 696;
          var h_1644175806 = 0;
          F.line = 75;
          F.filename = "iterators_1.nim";
          var colontmp__1644175807 = 0;
          F.line = 696;
          F.filename = "tables.nim";
          colontmp__1644175807 = (s_1644172747.data).length - 1;
          F.line = 90;
          F.filename = "iterators_1.nim";
          var res_1644175808 = 0;
          Label3: {
            F.line = 91;
              Label4: while (true) {
              if (!(res_1644175808 <= colontmp__1644175807)) break Label4;
                F.line = 696;
                F.filename = "tables.nim";
                h_1644175806 = res_1644175808;
                if (isFilled_1140850719(s_1644172747.data[chckIndx(h_1644175806, 0, (s_1644172747.data).length - 1)].Field0)) {
                F.line = 209;
                F.filename = "tableimpl.nim";
                keyHEX60gensym52_1644173158 = s_1644172747.data[chckIndx(h_1644175806, 0, (s_1644172747.data).length - 1)].Field1;
                F.line = 209;
                valHEX60gensym52_1644173159 = s_1644172747.data[chckIndx(h_1644175806, 0, (s_1644172747.data).length - 1)].Field2;
                if (!(hasKey_1644173200(t_1644172748, keyHEX60gensym52_1644173158))) {
                F.line = 210;
                result_1644172749 = false;
                break BeforeRet;
                }
                
                if (!((getOrDefault_1644173279(t_1644172748, keyHEX60gensym52_1644173158) == valHEX60gensym52_1644173159))) {
                F.line = 211;
                result_1644172749 = false;
                break BeforeRet;
                }
                
                if (!((len_1644172915(s_1644172747) == L_1644175804))) {
                F.line = 699;
                F.filename = "tables.nim";
                failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim(699, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 93;
                F.filename = "iterators_1.nim";
                res_1644175808 = addInt(res_1644175808, 1);
              }
          };
        };
      };
      F.line = 212;
      F.filename = "tableimpl.nim";
      result_1644172749 = true;
      break BeforeRet;
      }
      
    }
    }
  };
  framePtr = F.prev;

  return result_1644172749;

}

function len_1644173396(t_1644173399) {
  var result_1644173400 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1024;
    F.filename = "tables.nim";
    result_1644173400 = t_1644173399.counter;
  framePtr = F.prev;

  return result_1644173400;

}

function hasKey_1644173664(t_1644173667, key_1644173668) {
  var result_1644173669 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 913;
    F.filename = "tables.nim";
    result_1644173669 = hasKey_1644173200(t_1644173667, key_1644173668);
  framePtr = F.prev;

  return result_1644173669;

}

function HEX5BHEX5D_1644173933(t_1644173936, key_1644173937) {
  var result_1644173938 = null;
  var result_1644173938_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_1644173939 = [0];
    F.line = 244;
    var indexHEX60gensym22_1644173946 = rawGet_1644171302(t_1644173936, key_1644173937, hcHEX60gensym22_1644173939, 0);
    if ((0 <= indexHEX60gensym22_1644173946)) {
    F.line = 245;
    result_1644173938 = t_1644173936.data[chckIndx(indexHEX60gensym22_1644173946, 0, (t_1644173936.data).length - 1)]; result_1644173938_Idx = "Field2";
    }
    else {
      F.line = 247;
    raiseKeyError_1644170841(key_1644173937);
    }
    
  framePtr = F.prev;

  return [result_1644173938, result_1644173938_Idx];

}

function HEX5BHEX5D_1644173821(t_1644173824, key_1644173825) {
    var Temporary1;

  var result_1644173826 = null;
  var result_1644173826_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 879;
    F.filename = "tables.nim";
    result_1644173826 = (Temporary1 = HEX5BHEX5D_1644173933(t_1644173824, key_1644173825), Temporary1)[0]; result_1644173826_Idx = Temporary1[1];
  framePtr = F.prev;

  return [result_1644173826, result_1644173826_Idx];

}

function patrs(dom_1644172700, vdom_1644172701) {
                var Temporary5;

  var F = {procname: "renderer.patchAttrs", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 275;
    F.filename = "renderer.nim";
    var domAttrs_1644172702 = aidx(dom_1644172700);
    F.line = 276;
    var vdomAttrs_1644172703 = aidx(vdom_1644172701);
    if (HEX3DHEX3D_1644172744(domAttrs_1644172702, vdomAttrs_1644172703)) {
    F.line = 278;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 279;
      var key_1644173622 = null;
      F.line = 279;
      var val_1644173623 = null;
      F.line = 1144;
      F.filename = "tables.nim";
      var L_1644175786 = len_1644173396(vdomAttrs_1644172703);
      Label2: {
        F.line = 1145;
        var h_1644175788 = 0;
        F.line = 75;
        F.filename = "iterators_1.nim";
        var colontmp__1644175789 = 0;
        F.line = 1145;
        F.filename = "tables.nim";
        colontmp__1644175789 = (vdomAttrs_1644172703.data).length - 1;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_1644175790 = 0;
        Label3: {
          F.line = 91;
            Label4: while (true) {
            if (!(res_1644175790 <= colontmp__1644175789)) break Label4;
              F.line = 1145;
              F.filename = "tables.nim";
              h_1644175788 = res_1644175790;
              if (isFilled_1140850719(vdomAttrs_1644172703.data[chckIndx(h_1644175788, 0, (vdomAttrs_1644172703.data).length - 1)].Field0)) {
              F.line = 279;
              F.filename = "renderer.nim";
              key_1644173622 = vdomAttrs_1644172703.data[chckIndx(h_1644175788, 0, (vdomAttrs_1644172703.data).length - 1)].Field1;
              F.line = 279;
              val_1644173623 = vdomAttrs_1644172703.data[chckIndx(h_1644175788, 0, (vdomAttrs_1644172703.data).length - 1)].Field2;
              if (!(hasKey_1644173664(domAttrs_1644172702, key_1644173622))) {
              F.line = 281;
              dom_1644172700.setAttribute(key_1644173622, val_1644173623);
              if (((dom_1644172700.nodeName == "INPUT") && (key_1644173622 == "value"))) {
              F.line = 283;
              dom_1644172700.value = val_1644173623;
              }
              
              }
              else {
              if (!(((Temporary5 = HEX5BHEX5D_1644173821(domAttrs_1644172702, key_1644173622), Temporary5)[0][Temporary5[1]] == val_1644173623))) {
              F.line = 285;
              dom_1644172700.setAttribute(key_1644173622, val_1644173623);
              if (((dom_1644172700.nodeName == "INPUT") && (key_1644173622 == "value"))) {
              F.line = 287;
              dom_1644172700.value = val_1644173623;
              }
              
              }
              }
              if (!((len_1644173396(vdomAttrs_1644172703) == L_1644175786))) {
              F.line = 1148;
              F.filename = "tables.nim";
              failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim(1148, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_1644175790 = addInt(res_1644175790, 1);
            }
        };
      };
    };
    Label6: {
      F.line = 288;
      F.filename = "renderer.nim";
      var key_1644174023 = null;
      F.line = 288;
      var val_1644174024 = null;
      F.line = 1144;
      F.filename = "tables.nim";
      var L_1644175793 = len_1644173396(domAttrs_1644172702);
      Label7: {
        F.line = 1145;
        var h_1644175795 = 0;
        F.line = 75;
        F.filename = "iterators_1.nim";
        var colontmp__1644175796 = 0;
        F.line = 1145;
        F.filename = "tables.nim";
        colontmp__1644175796 = (domAttrs_1644172702.data).length - 1;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_1644175797 = 0;
        Label8: {
          F.line = 91;
            Label9: while (true) {
            if (!(res_1644175797 <= colontmp__1644175796)) break Label9;
              F.line = 1145;
              F.filename = "tables.nim";
              h_1644175795 = res_1644175797;
              if (isFilled_1140850719(domAttrs_1644172702.data[chckIndx(h_1644175795, 0, (domAttrs_1644172702.data).length - 1)].Field0)) {
              F.line = 288;
              F.filename = "renderer.nim";
              key_1644174023 = domAttrs_1644172702.data[chckIndx(h_1644175795, 0, (domAttrs_1644172702.data).length - 1)].Field1;
              F.line = 288;
              val_1644174024 = domAttrs_1644172702.data[chckIndx(h_1644175795, 0, (domAttrs_1644172702.data).length - 1)].Field2;
              if (!(hasKey_1644173664(vdomAttrs_1644172703, key_1644174023))) {
              F.line = 290;
              dom_1644172700.removeAttribute(key_1644174023);
              }
              
              if (!((len_1644173396(domAttrs_1644172702) == L_1644175793))) {
              F.line = 1148;
              F.filename = "tables.nim";
              failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim(1148, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_1644175797 = addInt(res_1644175797, 1);
            }
        };
      };
    };
  };
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1644174110(s_1644174112, i_1644174113) {
  var result_1644174114 = null;
  var result_1644174114_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_1644174114 = s_1644174112; result_1644174114_Idx = chckIndx(subInt((s_1644174112).length, i_1644174113), 0, (s_1644174112).length - 1);
  framePtr = F.prev;

  return [result_1644174114, result_1644174114_Idx];

}

function dff(vdom_1644174087, dom_1644174088) {
      var Temporary1;
              var Temporary8;

  var F = {procname: "renderer.diff", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
      if (!!(dom_1644174088.hasChildNodes())) Temporary1 = false; else {        Temporary1 = vdom_1644174087.hasChildNodes();      }    if (Temporary1) {
    Label2: {
      F.line = 293;
      F.filename = "renderer.nim";
      var t_1644174092 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1644175811 = 0;
      F.line = 242;
      var L_1644175812 = (vdom_1644174087.childNodes).length;
      Label3: {
        F.line = 243;
          Label4: while (true) {
          if (!(i_1644175811 < L_1644175812)) break Label4;
            F.line = 293;
            F.filename = "renderer.nim";
            t_1644174092 = vdom_1644174087.childNodes[chckIndx(i_1644175811, 0, (vdom_1644174087.childNodes).length - 1)];
            F.line = 293;
            dom_1644174088.appendChild(t_1644174092.cloneNode(true));
            F.line = 245;
            F.filename = "iterators.nim";
            i_1644175811 = addInt(i_1644175811, 1);
            if (!(((vdom_1644174087.childNodes).length == L_1644175812))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      F.line = 296;
      F.filename = "renderer.nim";
      if (dom_1644174088.isEqualNode(vdom_1644174087)){return}
      if (((vdom_1644174087.childNodes).length < (dom_1644174088.childNodes).length)) {
      Label5: {
        F.line = 298;
        var i_1644174109 = 0;
        F.line = 117;
        F.filename = "iterators_1.nim";
        var colontmp__1644175815 = 0;
        F.line = 298;
        F.filename = "renderer.nim";
        colontmp__1644175815 = subInt((dom_1644174088.childNodes).length, (vdom_1644174087.childNodes).length);
        F.line = 119;
        F.filename = "iterators_1.nim";
        var i_1644175816 = 0;
        Label6: {
          F.line = 120;
            Label7: while (true) {
            if (!(i_1644175816 < colontmp__1644175815)) break Label7;
              F.line = 298;
              F.filename = "renderer.nim";
              i_1644174109 = i_1644175816;
              F.line = 298;
              (Temporary8 = HEX5BHEX5D_1644174110(dom_1644174088.childNodes, 1), Temporary8)[0][Temporary8[1]].remove();
              F.line = 122;
              F.filename = "iterators_1.nim";
              i_1644175816 = addInt(i_1644175816, 1);
            }
        };
      };
      }
      
      Label9: {
        F.line = 300;
        F.filename = "renderer.nim";
        var i_1644174142 = 0;
        F.line = 117;
        F.filename = "iterators_1.nim";
        var colontmp__1644175819 = 0;
        F.line = 300;
        F.filename = "renderer.nim";
        colontmp__1644175819 = (vdom_1644174087.childNodes).length;
        F.line = 119;
        F.filename = "iterators_1.nim";
        var i_1644175820 = 0;
        Label10: {
          F.line = 120;
            Label11: while (true) {
            if (!(i_1644175820 < colontmp__1644175819)) break Label11;
              F.line = 300;
              F.filename = "renderer.nim";
              i_1644174142 = i_1644175820;
              if (((dom_1644174088.childNodes).length <= i_1644174142)) {
              F.line = 302;
              dom_1644174088.appendChild(vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)].cloneNode(true));
              }
              else {
              if (ismtp(dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)], vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)])) {
              if ((dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)].nodeType == 3)) {
              if (!((dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)].textContent == vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)].textContent))) {
              F.line = 306;
              dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)].textContent = vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)].textContent;
              }
              
              }
              else {
                F.line = 308;
              patrs(dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)], vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)]);
              }
              
              }
              else {
                F.line = 310;
              dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)].replaceWith(vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)].cloneNode(true));
              }
              }
              if (!((vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)].nodeType == 3))) {
              F.line = 312;
              dff(vdom_1644174087.childNodes[chckIndx(i_1644174142, 0, (vdom_1644174087.childNodes).length - 1)], dom_1644174088.childNodes[chckIndx(i_1644174142, 0, (dom_1644174088.childNodes).length - 1)]);
              }
              
              F.line = 122;
              F.filename = "iterators_1.nim";
              i_1644175820 = addInt(i_1644175820, 1);
            }
        };
      };
    }
    
  framePtr = F.prev;

  
}

function prrndr(tag_1644174155) {
  var F = {procname: "renderer.prerenderLazyProcs", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    if (tag_1644174155.lazy) {
    F.line = 315;
    F.filename = "renderer.nim";
    var t_1644174156 = tag_1644174155.lazyFunc();
    F.line = 316;
    prrndr(t_1644174156);
    F.line = 317;
    tag_1644174155.parentElement.insertBefore(t_1644174156, tag_1644174155);
    F.line = 318;
    tag_1644174155.remove();
    }
    else {
      Label1: {
        F.line = 320;
        var t_1644174160 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_1644175823 = 0;
        F.line = 242;
        var L_1644175824 = (tag_1644174155.childNodes).length;
        Label2: {
          F.line = 243;
            Label3: while (true) {
            if (!(i_1644175823 < L_1644175824)) break Label3;
              F.line = 320;
              F.filename = "renderer.nim";
              t_1644174160 = tag_1644174155.childNodes[chckIndx(i_1644175823, 0, (tag_1644174155.childNodes).length - 1)];
              F.line = 320;
              prrndr(t_1644174160);
              F.line = 245;
              F.filename = "iterators.nim";
              i_1644175823 = addInt(i_1644175823, 1);
              if (!(((tag_1644174155.childNodes).length == L_1644175824))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  framePtr = F.prev;

  
}

function isEmpty_1140850716(hcode_1140850717) {
  var result_1140850718 = false;

  var F = {procname: "tables.isEmpty", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 24;
    F.filename = "hashcommon.nim";
    result_1140850718 = (hcode_1140850717 == 0);
  framePtr = F.prev;

  return result_1140850718;

}

function del_1644174357(t_1644174360, key_1644174361) {
  var F = {procname: "del.del", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "tableimpl.nim";
    var hc_1644174362 = [0];
    F.line = 138;
    var i_1644174369 = rawGet_1644169095(t_1644174360, key_1644174361, hc_1644174362, 0);
    F.line = 114;
    var mskHEX60gensym36_1644174373 = (t_1644174360.data).length - 1;
    if ((0 <= i_1644174369)) {
    F.line = 116;
    t_1644174360.counter = subInt(t_1644174360.counter, 1);
    Label1: {
      Label2: {
        F.line = 118;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 119;
            var jHEX60gensym36_1644174380 = i_1644174369;
            F.line = 120;
            var rHEX60gensym36_1644174381 = jHEX60gensym36_1644174380;
            F.line = 498;
            F.filename = "tables.nim";
            t_1644174360.data[chckIndx(i_1644174369, 0, (t_1644174360.data).length - 1)].Field0 = 0;
            F.line = 122;
            F.filename = "tableimpl.nim";
            t_1644174360.data[chckIndx(i_1644174369, 0, (t_1644174360.data).length - 1)].Field1 = null;
            F.line = 123;
            t_1644174360.data[chckIndx(i_1644174369, 0, (t_1644174360.data).length - 1)].Field2 = null;
            Label4: {
              F.line = 124;
                Label5: while (true) {
                if (!true) break Label5;
                  F.line = 125;
                  i_1644174369 = (addInt(i_1644174369, 1) & mskHEX60gensym36_1644174373);
                  if (isEmpty_1140850716(t_1644174360.data[chckIndx(i_1644174369, 0, (t_1644174360.data).length - 1)].Field0)) {
                  F.line = 127;
                  break Label1;
                  }
                  
                  F.line = 128;
                  rHEX60gensym36_1644174381 = (t_1644174360.data[chckIndx(i_1644174369, 0, (t_1644174360.data).length - 1)].Field0 & mskHEX60gensym36_1644174373);
                  if (!(((((rHEX60gensym36_1644174381 <= i_1644174369) && (jHEX60gensym36_1644174380 < rHEX60gensym36_1644174381)) || ((jHEX60gensym36_1644174380 < rHEX60gensym36_1644174381) && (i_1644174369 < jHEX60gensym36_1644174380))) || ((i_1644174369 < jHEX60gensym36_1644174380) && (rHEX60gensym36_1644174381 <= i_1644174369))))) {
                  F.line = 130;
                  break Label4;
                  }
                  
                }
            };
            F.line = 132;
            t_1644174360.data[chckIndx(jHEX60gensym36_1644174380, 0, (t_1644174360.data).length - 1)] = nimCopy(t_1644174360.data[chckIndx(jHEX60gensym36_1644174380, 0, (t_1644174360.data).length - 1)], t_1644174360.data[chckIndx(i_1644174369, 0, (t_1644174360.data).length - 1)], NTI1644168037);
          }
      };
    };
    }
    
  framePtr = F.prev;

  
}

function del_1644174259(t_1644174262, key_1644174263) {
  var F = {procname: "del.del", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 1052;
    F.filename = "tables.nim";
    del_1644174357(t_1644174262, key_1644174263);
  framePtr = F.prev;

  
}

function find_1644174959(a_1644174962, item_1644174963) {
  var result_1644174964 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_1644174964 = 0;
    Label1: {
      F.line = 1666;
      var i_1644174978 = null;
      F.line = 13;
      F.filename = "iterators.nim";
      var i_1644175853 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_1644175853 < (a_1644174962).length)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_1644174978 = a_1644174962[chckIndx(i_1644175853, 0, (a_1644174962).length - 1)];
            if ((i_1644174978 == item_1644174963)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_1644174964 = addInt(result_1644174964, 1);
            F.line = 16;
            F.filename = "iterators.nim";
            i_1644175853 = addInt(i_1644175853, 1);
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_1644174964 = (-1);
  };
  framePtr = F.prev;

  return result_1644174964;

}

function contains_1644174954(a_1644174956, item_1644174957) {
  var result_1644174958 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1683;
    F.filename = "system.nim";
    result_1644174958 = (0 <= find_1644174959(a_1644174956, item_1644174957));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_1644174958;

}

function rndrvd(app_1644174164, tag_1644174165, force_1644174166) {
  var F = {procname: "renderer.renderVdom", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 324;
    F.filename = "renderer.nim";
    var realDom_1644174167 = document.getElementById(app_1644174164.appId);
    F.line = 325;
    var activeElement_1644174168 = document.activeElement;
    Label1: {
      F.line = 326;
      var i_1644174191 = {Field0: [], Field1: null};
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1644175828 = 0;
      F.line = 242;
      var L_1644175829 = (rendererHandlers_1644167267[0]).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_1644175828 < L_1644175829)) break Label3;
            F.line = 326;
            F.filename = "renderer.nim";
            i_1644174191 = rendererHandlers_1644167267[0][chckIndx(i_1644175828, 0, (rendererHandlers_1644167267[0]).length - 1)];
            if (eqStrings(i_1644174191.Field0, [98,101,102,111,114,101,82,101,110,100,101,114,101,100])) {
            F.line = 328;
            i_1644174191.Field1();
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_1644175828 = addInt(i_1644175828, 1);
            if (!(((rendererHandlers_1644167267[0]).length == L_1644175829))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 332;
    F.filename = "renderer.nim";
    prrndr(tag_1644174165);
    F.line = 333;
    dff(tag_1644174165, realDom_1644174167);
    Label4: {
      F.line = 334;
      var i_1644174195 = {Field0: [], Field1: null};
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1644175832 = 0;
      F.line = 242;
      var L_1644175833 = (rendererHandlers_1644167267[0]).length;
      Label5: {
        F.line = 243;
          Label6: while (true) {
          if (!(i_1644175832 < L_1644175833)) break Label6;
            F.line = 334;
            F.filename = "renderer.nim";
            i_1644174195 = rendererHandlers_1644167267[0][chckIndx(i_1644175832, 0, (rendererHandlers_1644167267[0]).length - 1)];
            if (eqStrings(i_1644174195.Field0, [114,101,110,100,101,114,101,100])) {
            F.line = 336;
            i_1644174195.Field1();
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_1644175832 = addInt(i_1644175832, 1);
            if (!(((rendererHandlers_1644167267[0]).length == L_1644175833))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (force_1644174166) {
    Label7: {
      F.line = 339;
      F.filename = "renderer.nim";
      var comp_1644174218 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_1644175837 = 0;
      F.line = 242;
      var L_1644175838 = (createdComponentsList_1644168819[0]).length;
      Label8: {
        F.line = 243;
          Label9: while (true) {
          if (!(i_1644175837 < L_1644175838)) break Label9;
            F.line = 339;
            F.filename = "renderer.nim";
            comp_1644174218 = createdComponentsList_1644168819[0][chckIndx(i_1644175837, 0, (createdComponentsList_1644168819[0]).length - 1)];
            F.line = 339;
            comp_1644174218.exited(comp_1644174218, null);
            F.line = 339;
            del_1644174259(components_1644170371[0], toJSStr(comp_1644174218.uniqCompId));
            F.line = 245;
            F.filename = "iterators.nim";
            i_1644175837 = addInt(i_1644175837, 1);
            if (!(((createdComponentsList_1644168819[0]).length == L_1644175838))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      F.line = 342;
      F.filename = "renderer.nim";
      var comp_1644174895 = null;
      var comp_1644174895_Idx = 0;
      F.line = 250;
      F.filename = "iterators.nim";
      var i_1644175842 = 0;
      F.line = 251;
      var L_1644175843 = (currentComponentsList_1644168814[0]).length;
      Label11: {
        F.line = 252;
          Label12: while (true) {
          if (!(i_1644175842 < L_1644175843)) break Label12;
            F.line = 342;
            F.filename = "renderer.nim";
            comp_1644174895 = currentComponentsList_1644168814[0]; comp_1644174895_Idx = chckIndx(i_1644175842, 0, (currentComponentsList_1644168814[0]).length - 1);
            F.line = 343;
            comp_1644174895[comp_1644174895_Idx] = rgcmp(toJSStr(comp_1644174895[comp_1644174895_Idx].uniqCompId), comp_1644174895[comp_1644174895_Idx]);
            F.line = 342;
            comp_1644174895[comp_1644174895_Idx].updated(comp_1644174895[comp_1644174895_Idx], null);
            F.line = 254;
            F.filename = "iterators.nim";
            i_1644175842 = addInt(i_1644175842, 1);
            if (!(((currentComponentsList_1644168814[0]).length == L_1644175843))) {
            F.line = 255;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(255, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 345;
    F.filename = "renderer.nim";
    if (createdComponentsList_1644168819[0].length < 0) { for (var i = createdComponentsList_1644168819[0].length ; i < 0 ; ++i) createdComponentsList_1644168819[0].push(null); }
               else { createdComponentsList_1644168819[0].length = 0; };
    }
    else {
      Label13: {
        F.line = 347;
        var comp_1644174903 = null;
        F.line = 241;
        F.filename = "iterators.nim";
        var i_1644175846 = 0;
        F.line = 242;
        var L_1644175847 = (currentComponentsList_1644168814[0]).length;
        Label14: {
          F.line = 243;
            Label15: while (true) {
            if (!(i_1644175846 < L_1644175847)) break Label15;
              F.line = 347;
              F.filename = "renderer.nim";
              comp_1644174903 = currentComponentsList_1644168814[0][chckIndx(i_1644175846, 0, (currentComponentsList_1644168814[0]).length - 1)];
              F.line = 347;
              comp_1644174903.updated(comp_1644174903, null);
              F.line = 245;
              F.filename = "iterators.nim";
              i_1644175846 = addInt(i_1644175846, 1);
              if (!(((currentComponentsList_1644168814[0]).length == L_1644175847))) {
              F.line = 246;
              failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
    F.line = 349;
    F.filename = "renderer.nim";
    if (currentComponentsList_1644168814[0].length < 0) { for (var i = currentComponentsList_1644168814[0].length ; i < 0 ; ++i) currentComponentsList_1644168814[0].push(null); }
               else { currentComponentsList_1644168814[0].length = 0; };
    if (activeElement_1644174168.hasAttribute("id")) {
    F.line = 351;
    var actElem_1644174908 = document.getElementById(activeElement_1644174168.id);
    if (!((actElem_1644174908 == null))) {
    F.line = 353;
    actElem_1644174908.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElem_1644174908.nodeName)) {
    F.line = 356;
    var oldActiveElem_1644174984 = activeElement_1644174168;
    F.line = 357;
    var currentActiveElem_1644174985 = actElem_1644174908;
    F.line = 358;
    currentActiveElem_1644174985.setSelectionRange(oldActiveElem_1644174984.selectionStart, oldActiveElem_1644174984.selectionEnd, oldActiveElem_1644174984.selectionDirection);
    }
    
    }
    
    }
    
  framePtr = F.prev;

  
}
var F = {procname: "module renderer", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
framePtr = F;
F.line = 119;
F.filename = "renderer.nim";
var rendererHandlers_1644167267 = [newSeq_1644167227(0)];
F.line = 120;
var application_1644167268 = [null];
F.line = 121;
var currentRoute_1644167269 = ["/"];
F.line = 122;
var scopedCycleCounter_1644167270 = [0];
F.line = 135;
var componentEventHandlers_1644168808 = [newTable_1644167271(32)];
F.line = 136;
var currentComponent_1644168809 = [[]];
F.line = 137;
var currentComponentsList_1644168814 = [[]];
F.line = 138;
var createdComponentsList_1644168819 = [[]];
F.line = 141;
var components_1644170371 = [newTable_1644168820(32)];
framePtr = F.prev;
var F = {procname: "module renderer", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module translatable", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/translatable.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module translatable", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/translatable.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function remember_1996489675(val_1996489677) {
  var result_1996489682 = null;

  var F = {procname: "remember.remember", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "state.nim";
    result_1996489682 = {val: nimCopy(null, val_1996489677, NTI2013265923), watchers: []};
  framePtr = F.prev;

  return result_1996489682;

}
var F = {procname: "module state", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
framePtr = F;
F.line = 44;
F.filename = "state.nim";
var enableRouting_1996488722 = [true];
F.line = 523;
var languageSettings_1996489716 = [remember_1996489675({lang: [97,117,116,111]})];
framePtr = F.prev;
var F = {procname: "module state", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module utils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/ssr/utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module utils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/ssr/utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osseps", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osseps.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pathnorm", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/pathnorm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oserrors", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/oserrors.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module oscommon", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/oscommon.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ospaths2", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/ospaths2.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ossymlinks", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/ossymlinks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module ossymlinks", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/ossymlinks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osfiles", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osfiles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osfiles", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osfiles.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osdirs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osdirs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module envvars", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/envvars.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module osappdirs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/osappdirs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module cmdline", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/cmdline.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module cmdline", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/cmdline.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module os", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/os.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module os", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/os.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumerate", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/enumerate.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sharedhelper", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/sharedhelper.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sharedhelper", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/sharedhelper.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/parser.nim", line: 0};
framePtr = F;
F.line = 74;
F.filename = "parser.nim";
F.line = 75;
F.line = 76;
F.line = 77;
F.line = 78;
F.line = 79;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unidecode", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unidecode/unidecode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unidecode", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unidecode/unidecode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mimetypes", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/mimetypes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mimetypes", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/mimetypes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module uri", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/uri.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module uri", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/uri.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjautils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/nimjautils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimjautils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja/nimjautils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimja", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nimja", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/nimja-0.8.7-a15b5860fb1926e682faf004ec1efc1d655d9b09/nimja.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module engine", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/tmpl_engine/engine.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module engine", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/tmpl_engine/engine.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module queries", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/queries.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module queries", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/queries.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module components", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module components", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module spa_utils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/spa_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module spa_utils", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/spa_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module happyx", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module happyx", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_2533361268 === undefined) {
  globalThis.utcInstance_2533361268 = [null];
}
F.line = 1372;
if (globalThis.localInstance_2533361269 === undefined) {
  globalThis.localInstance_2533361269 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module random", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
framePtr = F;
F.line = 109;
F.filename = "random.nim";
var state_2516582414 = [{a0: 1773455756, a1: 4275166512}];
framePtr = F.prev;
var F = {procname: "module random", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macroplus", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/macroplus-0.2.5-08f56f12579c8c790e02c296946314182a06f137/macroplus.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macroplus", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/macroplus-0.2.5-08f56f12579c8c790e02c296946314182a06f137/macroplus.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module reducers", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/reducers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module reducers", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/reducers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module helpers", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/helpers.nim", line: 0};
framePtr = F;
F.line = 141;
F.filename = "helpers.nim";
framePtr = F.prev;
var F = {procname: "module helpers", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module iterators", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/iterators.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module iterators", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/iterators.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module adapters", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/adapters.nim", line: 0};
framePtr = F;
F.line = 47;
F.filename = "adapters.nim";
framePtr = F.prev;
var F = {procname: "module adapters", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr/adapters.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module iterrr", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module iterrr", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/iterrr-1.2.0-a01d292757ca786ccc2a0b54b083c2446f72a522/iterrr.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module shuffling", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/shuffling.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module shuffling", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/shuffling.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sampling", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/sampling.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sampling", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/sampling.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module syms", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/LP-0.1.0-a4547325be9c39049f814cc82f271cf39c56a09b/LP/syms.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module syms", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/LP-0.1.0-a4547325be9c39049f814cc82f271cf39c56a09b/LP/syms.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module htmlFile", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/htmlFile.nim", line: 0};
framePtr = F;
F.line = 1;
F.filename = "htmlFile.nim";
framePtr = F.prev;
var F = {procname: "module htmlFile", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/htmlFile.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newProbCounter_2785017908() {
  var result_2785017909 = null;

  var F = {procname: "numbering.newProbCounter", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/numbering.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "numbering.nim";
    result_2785017909 = {prob: 0, part: 0, subpart: 0, answerchoice: 0};
  framePtr = F.prev;

  return result_2785017909;

}
var F = {procname: "module numbering", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/numbering.nim", line: 0};
framePtr = F;
F.line = 4;
F.filename = "numbering.nim";
var lowercaseLetters_2785017860 = [[]];
Label5: {
  F.line = 5;
  var i_2785017865 = [0];
  F.line = 90;
  F.filename = "iterators_1.nim";
  var res_2785024157 = 97;
  Label6: {
    F.line = 91;
      Label7: while (true) {
      if (!(res_2785024157 <= 122)) break Label7;
        F.line = 5;
        F.filename = "numbering.nim";
        i_2785017865[0] = chckRange(res_2785024157, 0, 255);
        F.line = 5;
        lowercaseLetters_2785017860[0].push.apply(lowercaseLetters_2785017860[0], nimCharToStr(i_2785017865[0]));;
        F.line = 93;
        F.filename = "iterators_1.nim";
        res_2785024157 = addInt(res_2785024157, 1);
      }
  };
};
F.line = 8;
F.filename = "numbering.nim";
var uppercaseLetters_2785017866 = [[]];
Label8: {
  F.line = 9;
  var i_2785017871 = [0];
  F.line = 90;
  F.filename = "iterators_1.nim";
  var res_2785024160 = 65;
  Label9: {
    F.line = 91;
      Label10: while (true) {
      if (!(res_2785024160 <= 90)) break Label10;
        F.line = 9;
        F.filename = "numbering.nim";
        i_2785017871[0] = chckRange(res_2785024160, 0, 255);
        F.line = 9;
        uppercaseLetters_2785017866[0].push.apply(uppercaseLetters_2785017866[0], nimCharToStr(i_2785017871[0]));;
        F.line = 93;
        F.filename = "iterators_1.nim";
        res_2785024160 = addInt(res_2785024160, 1);
      }
  };
};
F.line = 52;
F.filename = "numbering.nim";
var pCount_2785017945 = [newProbCounter_2785017908()];
F.line = 53;
var eCount_2785017946 = [newProbCounter_2785017908()];
F.line = 54;
var sCount_2785017947 = [newProbCounter_2785017908()];
framePtr = F.prev;
var F = {procname: "module numbering", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/numbering.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module problemType", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/problemType.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module problemType", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/problemType.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module eMathjax", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/eMathjax.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module eMathjax", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/eMathjax.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fonts", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/fonts.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fonts", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/fonts.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module images", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module images", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module grouping", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/grouping.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module grouping", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/grouping.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function remember_2852126732(val_2852126734) {
  var result_2852126735 = null;

  var F = {procname: "remember.remember", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "state.nim";
    result_2852126735 = {val: val_2852126734, watchers: []};
  framePtr = F.prev;

  return result_2852126735;

}

function watchImpl_2852126776(state_2852126778, o_2852126779, n_2852126780) {
  var F = {procname: "watchImpl.watchImpl", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 53;
      F.filename = "state.nim";
      var w_2852126802 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_2852153138 = 0;
      F.line = 242;
      var L_2852153139 = (state_2852126778.watchers).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_2852153138 < L_2852153139)) break Label3;
            F.line = 53;
            F.filename = "state.nim";
            w_2852126802 = state_2852126778.watchers[chckIndx(i_2852153138, 0, (state_2852126778.watchers).length - 1)];
            F.line = 53;
            w_2852126802(o_2852126779, n_2852126780);
            F.line = 245;
            F.filename = "iterators.nim";
            i_2852153138 = addInt(i_2852153138, 1);
            if (!(((state_2852126778.watchers).length == L_2852153139))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function set_2852126764(self_2852126766, value_2852126767) {
  var F = {procname: "set.set", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    if ((0 < (self_2852126766.watchers).length)) {
    F.line = 331;
    F.filename = "state.nim";
    watchImpl_2852126776(self_2852126766, self_2852126766.val, value_2852126767);
    }
    
    F.line = 332;
    self_2852126766.val = value_2852126767;
    if (((enableRouting_1996488722[0] && !((application_1644167268[0] == null))) && !((application_1644167268[0].router == null)))) {
    F.line = 334;
    application_1644167268[0].router(false);
    }
    
  framePtr = F.prev;

  
}

function HEX3Aanonymous_2852126754(ev_2852126755) {
  var F = {procname: "layout.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
  framePtr = F;
    F.line = 16;
    F.filename = "layout.nim";
    set_2852126764(printStatus_2852126753[0], true);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_2852126843(ev_2852126844) {
  var F = {procname: "layout.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "layout.nim";
    set_2852126764(printStatus_2852126753[0], false);
  framePtr = F.prev;

  
}
var F = {procname: "module layout", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
framePtr = F;
F.line = 12;
F.filename = "layout.nim";
var topPageMargin_2852126731 = [[48,46,50,53,105,110]];
F.line = 14;
var printStatus_2852126753 = [remember_2852126732(false)];
F.line = 16;
window.addEventListener("beforeprint", HEX3Aanonymous_2852126754, false);
F.line = 17;
window.addEventListener("afterprint", HEX3Aanonymous_2852126843, false);
framePtr = F.prev;
var F = {procname: "module layout", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module paper", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/paper.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module paper", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/paper.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module markup", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/markup.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module markup", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/markup.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module videos", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module videos", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mTables", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/mTables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mTables", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/mTables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mBlocks", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/mBlocks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mBlocks", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/mBlocks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mGrid", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/mGrid.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module mGrid", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/mGrid.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module base24", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
framePtr = F;
F.line = 5;
F.filename = "base24.nim";
topPageMargin_2852126731[0] = nimCopy(null, [48,46,50,53,105,110], NTI33554449);
framePtr = F.prev;
var F = {procname: "module base24", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slides24", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slides24", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module Tasks", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/Tasks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module Tasks", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/Tasks.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function parseSaturatedNatural_754975126(s_754975127, b_754975128, b_754975128_Idx) {
      var Temporary1;
          var Temporary4;

  var result_754975129 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 500;
    F.filename = "parseutils.nim";
    var i_754975130 = 0;
    if (((i_754975130 < (s_754975127).length) && (s_754975127[chckIndx(i_754975130, 0, (s_754975127).length - 1)] == 43))) {
    F.line = 501;
    i_754975130 = addInt(i_754975130, 1);
    }
    
      if (!(i_754975130 < (s_754975127).length)) Temporary1 = false; else {        Temporary1 = (ConstSet9[s_754975127[chckIndx(i_754975130, 0, (s_754975127).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 503;
    b_754975128[b_754975128_Idx] = 0;
    Label2: {
      F.line = 504;
        Label3: while (true) {
          if (!(i_754975130 < (s_754975127).length)) Temporary4 = false; else {            Temporary4 = (ConstSet10[s_754975127[chckIndx(i_754975130, 0, (s_754975127).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 505;
          var c_754975159 = subInt(s_754975127[chckIndx(i_754975130, 0, (s_754975127).length - 1)], 48);
          if ((b_754975128[b_754975128_Idx] <= divInt(subInt(2147483647, c_754975159), 10))) {
          F.line = 507;
          b_754975128[b_754975128_Idx] = addInt(mulInt(b_754975128[b_754975128_Idx], 10), c_754975159);
          }
          else {
            F.line = 509;
            b_754975128[b_754975128_Idx] = 2147483647;
          }
          
          F.line = 510;
          i_754975130 = addInt(i_754975130, 1);
          Label5: {
            F.line = 511;
              Label6: while (true) {
              if (!((i_754975130 < (s_754975127).length) && (s_754975127[chckIndx(i_754975130, 0, (s_754975127).length - 1)] == 95))) break Label6;
                F.line = 511;
                i_754975130 = addInt(i_754975130, 1);
              }
          };
        }
    };
    F.line = 512;
    result_754975129 = i_754975130;
    }
    
  framePtr = F.prev;

  return result_754975129;

}

function parseSaturatedNatural_754975632(s_754975633, b_754975634, b_754975634_Idx, start_754975635) {
  var result_754975636 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1013;
    F.filename = "parseutils.nim";
    result_754975636 = parseSaturatedNatural_754975126((s_754975633.slice(start_754975635, (s_754975633).length - 1 + 1)), b_754975634, b_754975634_Idx);
  framePtr = F.prev;

  return result_754975636;

}

function HEX5BHEX5D_721421595(s_721421598, x_721421599) {
  var result_721421600 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_721421602 = x_721421599.a;
    F.line = 84;
    var L_721421604 = addInt(subInt(subInt((s_721421598).length, x_721421599.b), a_721421602), 1);
    F.line = 85;
    result_721421600 = nimCopy(null, mnewString(chckRange(L_721421604, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_721421609 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_2785018719 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_2785018719 < L_721421604)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_721421609 = i_2785018719;
            F.line = 86;
            result_721421600[chckIndx(i_721421609, 0, (result_721421600).length - 1)] = s_721421598[chckIndx(addInt(i_721421609, a_721421602), 0, (s_721421598).length - 1)];
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_2785018719 = addInt(i_2785018719, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_721421600;

}

function HEX2EHEX2E_956301416(a_956301419, b_956301420) {
  var result_956301423 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_956301423 = nimCopy(result_956301423, {a: a_956301419, b: b_956301420}, NTI956301397);
  framePtr = F.prev;

  return result_956301423;

}

function parseStandardFormatSpecifier_704643130(s_704643131, start_704643132, ignoreUnknownSuffix_704643133) {
      var Temporary1;
      var Temporary2;

  var result_704643134 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

  var F = {procname: "strformat.parseStandardFormatSpecifier", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 434;
    F.filename = "strformat.nim";
    result_704643134.fill = 32;
    F.line = 435;
    result_704643134.align = 0;
    F.line = 436;
    result_704643134.sign = 45;
    F.line = 437;
    var i_704643136 = start_704643132;
    if (((addInt(i_704643136, 1) < (s_704643131).length) && (ConstSet5[s_704643131[chckIndx(addInt(i_704643136, 1), 0, (s_704643131).length - 1)]] != undefined))) {
    F.line = 439;
    result_704643134.fill = s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)];
    F.line = 440;
    result_704643134.align = s_704643131[chckIndx(addInt(i_704643136, 1), 0, (s_704643131).length - 1)];
    F.line = 441;
    i_704643136 = addInt(i_704643136, 2);
    }
    else {
    if (((i_704643136 < (s_704643131).length) && (ConstSet6[s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)]] != undefined))) {
    F.line = 443;
    result_704643134.align = s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)];
    F.line = 444;
    i_704643136 = addInt(i_704643136, 1);
    }
    }
    if (((i_704643136 < (s_704643131).length) && (ConstSet7[s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)]] != undefined))) {
    F.line = 447;
    result_704643134.sign = s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)];
    F.line = 448;
    i_704643136 = addInt(i_704643136, 1);
    }
    
    if (((i_704643136 < (s_704643131).length) && (s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)] == 35))) {
    F.line = 451;
    result_704643134.alternateForm = true;
    F.line = 452;
    i_704643136 = addInt(i_704643136, 1);
    }
    
      if (!((addInt(i_704643136, 1) < (s_704643131).length) && (s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet8[s_704643131[chckIndx(addInt(i_704643136, 1), 0, (s_704643131).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 455;
    result_704643134.padWithZero = true;
    F.line = 456;
    i_704643136 = addInt(i_704643136, 1);
    }
    
    F.line = 458;
    var parsedLength_704643178 = parseSaturatedNatural_754975632(s_704643131, result_704643134, "minimumWidth", i_704643136);
    F.line = 459;
    i_704643136 = addInt(i_704643136, parsedLength_704643178);
    if (((i_704643136 < (s_704643131).length) && (s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)] == 46))) {
    F.line = 461;
    i_704643136 = addInt(i_704643136, 1);
    F.line = 462;
    var parsedLengthB_704643189 = parseSaturatedNatural_754975632(s_704643131, result_704643134, "precision", i_704643136);
    F.line = 463;
    i_704643136 = addInt(i_704643136, parsedLengthB_704643189);
    }
    else {
      F.line = 465;
      result_704643134.precision = (-1);
    }
    
      if (!(i_704643136 < (s_704643131).length)) Temporary2 = false; else {        Temporary2 = (ConstSet11[s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)]] != undefined);      }    if (Temporary2) {
    F.line = 468;
    result_704643134.typ = s_704643131[chckIndx(i_704643136, 0, (s_704643131).length - 1)];
    F.line = 469;
    i_704643136 = addInt(i_704643136, 1);
    }
    
    F.line = 470;
    result_704643134.endPosition = i_704643136;
    if ((!((i_704643136 == (s_704643131).length)) && !(ignoreUnknownSuffix_704643133))) {
    F.line = 472;
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_721421595(s_704643131, HEX2EHEX2E_956301416(i_704643136, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_704643134;

}

function mkDigit_704643077(v_704643078, typ_704643079) {
      var Temporary1;

  var result_704643080 = [];

  var F = {procname: "strformat.mkDigit", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if (!((v_704643078 < 26))) {
    F.line = 324;
    F.filename = "strformat.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim(324, 9) `v < 26` "));
    }
    
    if ((v_704643078 < 10)) {
    F.line = 326;
    result_704643080 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_704643078), 0, 255)), NTI33554449);
    }
    else {
      F.line = 328;
      if ((typ_704643079 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_704643080 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_704643078), 10), 0, 255)), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_704643080;

}

function nsuRepeatChar(c_721421409, count_721421410) {
  var result_721421411 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1328;
    F.filename = "strutils.nim";
    result_721421411 = nimCopy(null, mnewString(count_721421410), NTI33554449);
    Label1: {
      F.line = 1329;
      var i_721421416 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__1358954562 = 0;
      F.line = 1329;
      F.filename = "strutils.nim";
      colontmp__1358954562 = subInt(count_721421410, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_1358954563 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_1358954563 <= colontmp__1358954562)) break Label3;
            F.line = 1329;
            F.filename = "strutils.nim";
            i_721421416 = res_1358954563;
            F.line = 1329;
            result_721421411[chckIndx(i_721421416, 0, (result_721421411).length - 1)] = c_721421409;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_1358954563 = addInt(res_1358954563, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_721421411;

}

function formatInt_1040187603(n_1040187605, radix_1040187606, spec_1040187607) {
    var Temporary1;

  var result_1040187608 = [];

  var F = {procname: "formatInt.formatInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strformat.nim";
    var n_1040187611 = BigInt(n_1040187605);
    F.line = 371;
    var negative_1040187612 = (n_1040187611 < 0n);
    F.line = 372;
    if (negative_1040187612) {
    Temporary1 = BigInt.asUintN(64, (BigInt.asUintN(64, ~(n_1040187611)) + 1n));
    }
    else {
    Temporary1 = BigInt.asUintN(64, n_1040187611);
    }
    
    var v_1040187613 = Temporary1;
    F.line = 379;
    var xx_1040187614 = [];
    if (spec_1040187607.alternateForm) {
    F.line = 381;
    switch (spec_1040187607.typ) {
    case 88:
      F.line = 382;
      xx_1040187614 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      F.line = 383;
      xx_1040187614 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      F.line = 384;
      xx_1040187614 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      F.line = 385;
      xx_1040187614 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1040187613 == 0n)) {
    F.line = 389;
    result_1040187608 = nimCopy(null, [48], NTI33554449);
    }
    else {
      F.line = 391;
      result_1040187608 = nimCopy(null, [], NTI33554449);
      Label2: {
        F.line = 392;
          Label3: while (true) {
          if (!(0n < v_1040187613)) break Label3;
            F.line = 393;
            var d_1040187615 = (v_1040187613 % BigInt.asUintN(64, BigInt(radix_1040187606)));
            F.line = 394;
            v_1040187613 = BigInt.asUintN(64, (v_1040187613 / BigInt.asUintN(64, BigInt(radix_1040187606))));
            F.line = 395;
            result_1040187608.push.apply(result_1040187608, mkDigit_704643077(chckRange(Number(d_1040187615), (-2147483648), 2147483647), spec_1040187607.typ));;
          }
      };
      Label4: {
        F.line = 396;
        var idx_1040187620 = 0;
        F.line = 117;
        F.filename = "iterators_1.nim";
        var colontmp__3103786338 = 0;
        F.line = 396;
        F.filename = "strformat.nim";
        colontmp__3103786338 = divInt((result_1040187608).length, 2);
        F.line = 119;
        F.filename = "iterators_1.nim";
        var i_3103786339 = 0;
        Label5: {
          F.line = 120;
            Label6: while (true) {
            if (!(i_3103786339 < colontmp__3103786338)) break Label6;
              F.line = 396;
              F.filename = "strformat.nim";
              idx_1040187620 = i_3103786339;
              F.line = 396;
              var Temporary7 = result_1040187608[chckIndx(idx_1040187620, 0, (result_1040187608).length - 1)]; result_1040187608[chckIndx(idx_1040187620, 0, (result_1040187608).length - 1)] = result_1040187608[chckIndx(subInt(subInt((result_1040187608).length, idx_1040187620), 1), 0, (result_1040187608).length - 1)]; result_1040187608[chckIndx(subInt(subInt((result_1040187608).length, idx_1040187620), 1), 0, (result_1040187608).length - 1)] = Temporary7;              F.line = 122;
              F.filename = "iterators_1.nim";
              i_3103786339 = addInt(i_3103786339, 1);
            }
        };
      };
    }
    
    if (spec_1040187607.padWithZero) {
    F.line = 399;
    F.filename = "strformat.nim";
    var sign_1040187625 = (negative_1040187612 || !((spec_1040187607.sign == 45)));
    F.line = 400;
    var toFill_1040187629 = subInt(subInt(subInt(spec_1040187607.minimumWidth, (result_1040187608).length), (xx_1040187614).length), (sign_1040187625 ? 1 : 0));
    if ((0 < toFill_1040187629)) {
    F.line = 402;
    result_1040187608 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1040187629, 0, 2147483647)) || []).concat(result_1040187608 || []), NTI33554449);
    }
    
    }
    
    if (negative_1040187612) {
    F.line = 405;
    result_1040187608 = nimCopy(null, ([45] || []).concat(xx_1040187614 || [],result_1040187608 || []), NTI33554449);
    }
    else {
    if (!((spec_1040187607.sign == 45))) {
    F.line = 407;
    result_1040187608 = nimCopy(null, [spec_1040187607.sign].concat(xx_1040187614 || [],result_1040187608 || []), NTI33554449);
    }
    else {
      F.line = 409;
      result_1040187608 = nimCopy(null, (xx_1040187614 || []).concat(result_1040187608 || []), NTI33554449);
    }
    }
    if ((spec_1040187607.align == 60)) {
    Label8: {
      F.line = 412;
      var i_1040187634 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__3103786342 = 0;
      F.line = 412;
      F.filename = "strformat.nim";
      colontmp__3103786342 = (result_1040187608).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_3103786343 = colontmp__3103786342;
      Label9: {
        F.line = 120;
          Label10: while (true) {
          if (!(i_3103786343 < spec_1040187607.minimumWidth)) break Label10;
            F.line = 412;
            F.filename = "strformat.nim";
            i_1040187634 = i_3103786343;
            F.line = 412;
            addChar(result_1040187608, spec_1040187607.fill);;
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_3103786343 = addInt(i_3103786343, 1);
          }
      };
    };
    }
    else {
      F.line = 415;
      F.filename = "strformat.nim";
      var toFill_1040187635 = subInt(spec_1040187607.minimumWidth, (result_1040187608).length);
      if ((spec_1040187607.align == 94)) {
      F.line = 417;
      var half_1040187636 = divInt(toFill_1040187635, 2);
      F.line = 418;
      result_1040187608 = nimCopy(null, (nsuRepeatChar(spec_1040187607.fill, chckRange(half_1040187636, 0, 2147483647)) || []).concat(result_1040187608 || [],nsuRepeatChar(spec_1040187607.fill, chckRange(subInt(toFill_1040187635, half_1040187636), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_1040187635)) {
        F.line = 421;
        result_1040187608 = nimCopy(null, (nsuRepeatChar(spec_1040187607.fill, chckRange(toFill_1040187635, 0, 2147483647)) || []).concat(result_1040187608 || []), NTI33554449);
        }
        
      }
      
    }
    
  framePtr = F.prev;

  return result_1040187608;

}

function formatValue_1040187595(result_1040187597, result_1040187597_Idx, value_1040187598, specifier_1040187599) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((specifier_1040187599).length == 0)) {
    F.line = 481;
    F.filename = "strformat.nim";
    result_1040187597[result_1040187597_Idx].push.apply(result_1040187597[result_1040187597_Idx], HEX24_369098760(value_1040187598));;
    F.line = 482;
    break BeforeRet;
    }
    
    F.line = 483;
    var spec_1040187600 = parseStandardFormatSpecifier_704643130(specifier_1040187599, 0, false);
    F.line = 484;
    var radix_1040187601 = 10;
    F.line = 485;
    switch (spec_1040187600.typ) {
    case 120:
    case 88:
      F.line = 486;
      radix_1040187601 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      F.line = 488;
      radix_1040187601 = 2;
      break;
    case 111:
      F.line = 489;
      radix_1040187601 = 8;
      break;
    default: 
      F.line = 491;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1040187600.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    F.line = 494;
    result_1040187597[result_1040187597_Idx].push.apply(result_1040187597[result_1040187597_Idx], formatInt_1040187603(value_1040187598, radix_1040187601, spec_1040187600));;
  };
  framePtr = F.prev;

  
}

function slideControls_3103784981(e_3103784982) {
  var F = {procname: "slides.slideControls", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
  framePtr = F;
    F.line = 11;
    F.filename = "slides.nim";
    var f_3103784983 = e_3103784982;
    F.line = 12;
    console.log(f_3103784983.key);
    F.line = 13;
    switch (f_3103784983.key) {
    case "ArrowDown":
      if ((currentSlideIndex_3103784980[0]["Field1"] < subInt((allTheSlides_3103784978[0][chckIndx(currentSlideIndex_3103784980[0]["Field0"], 0, (allTheSlides_3103784978[0]).length - 1)]).length, 1))) {
      F.line = 16;
      currentSlideIndex_3103784980[0]["Field1"] = addInt(currentSlideIndex_3103784980[0]["Field1"], 1);
      F.line = 17;
      Label1: {
        F.line = 17;
        var fmtRes_3103784995 = [mnewString(0)];
        F.line = 17;
        fmtRes_3103784995[0].push.apply(fmtRes_3103784995[0], [115,108,105,100,101,115,45]);;
        F.line = 17;
        formatValue_1040187595(fmtRes_3103784995, 0, currentSlideIndex_3103784980[0]["Field0"], []);
        F.line = 17;
        fmtRes_3103784995[0].push.apply(fmtRes_3103784995[0], [45]);;
        F.line = 17;
        formatValue_1040187595(fmtRes_3103784995, 0, currentSlideIndex_3103784980[0]["Field1"], []);
      };
      rt(toJSStr(fmtRes_3103784995[0]));
      F.line = 18;
      MathJax.typeset();
      }
      
      break;
    case "ArrowUp":
      if ((0 < currentSlideIndex_3103784980[0]["Field1"])) {
      F.line = 21;
      currentSlideIndex_3103784980[0]["Field1"] = subInt(currentSlideIndex_3103784980[0]["Field1"], 1);
      F.line = 22;
      Label2: {
        F.line = 22;
        var fmtRes_3103785014 = [mnewString(0)];
        F.line = 22;
        fmtRes_3103785014[0].push.apply(fmtRes_3103785014[0], [115,108,105,100,101,115,45]);;
        F.line = 22;
        formatValue_1040187595(fmtRes_3103785014, 0, currentSlideIndex_3103784980[0]["Field0"], []);
        F.line = 22;
        fmtRes_3103785014[0].push.apply(fmtRes_3103785014[0], [45]);;
        F.line = 22;
        formatValue_1040187595(fmtRes_3103785014, 0, currentSlideIndex_3103784980[0]["Field1"], []);
      };
      rt(toJSStr(fmtRes_3103785014[0]));
      F.line = 23;
      MathJax.typeset();
      }
      
      break;
    case "ArrowRight":
      if ((currentSlideIndex_3103784980[0]["Field0"] < subInt((allTheSlides_3103784978[0]).length, 1))) {
      F.line = 26;
      currentSlideIndex_3103784980[0]["Field0"] = addInt(currentSlideIndex_3103784980[0]["Field0"], 1);
      F.line = 27;
      currentSlideIndex_3103784980[0]["Field1"] = 0;
      F.line = 28;
      Label3: {
        F.line = 28;
        var fmtRes_3103785037 = [mnewString(0)];
        F.line = 28;
        fmtRes_3103785037[0].push.apply(fmtRes_3103785037[0], [115,108,105,100,101,115,45]);;
        F.line = 28;
        formatValue_1040187595(fmtRes_3103785037, 0, currentSlideIndex_3103784980[0]["Field0"], []);
        F.line = 28;
        fmtRes_3103785037[0].push.apply(fmtRes_3103785037[0], [45]);;
        F.line = 28;
        formatValue_1040187595(fmtRes_3103785037, 0, currentSlideIndex_3103784980[0]["Field1"], []);
      };
      rt(toJSStr(fmtRes_3103785037[0]));
      F.line = 29;
      MathJax.typeset();
      }
      
      break;
    case "ArrowLeft":
      if ((0 < currentSlideIndex_3103784980[0]["Field0"])) {
      F.line = 32;
      currentSlideIndex_3103784980[0]["Field0"] = subInt(currentSlideIndex_3103784980[0]["Field0"], 1);
      F.line = 33;
      currentSlideIndex_3103784980[0]["Field1"] = 0;
      F.line = 34;
      Label4: {
        F.line = 34;
        var fmtRes_3103785056 = [mnewString(0)];
        F.line = 34;
        fmtRes_3103785056[0].push.apply(fmtRes_3103785056[0], [115,108,105,100,101,115,45]);;
        F.line = 34;
        formatValue_1040187595(fmtRes_3103785056, 0, currentSlideIndex_3103784980[0]["Field0"], []);
        F.line = 34;
        fmtRes_3103785056[0].push.apply(fmtRes_3103785056[0], [45]);;
        F.line = 34;
        formatValue_1040187595(fmtRes_3103785056, 0, currentSlideIndex_3103784980[0]["Field1"], []);
      };
      rt(toJSStr(fmtRes_3103785056[0]));
      F.line = 35;
      MathJax.typeset();
      }
      
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  
}
var F = {procname: "module slides", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
framePtr = F;
F.line = 5;
F.filename = "slides.nim";
var allTheSlides_3103784978 = [[]];
F.line = 6;
var slidesLevel_3103784979 = [0];
F.line = 9;
var currentSlideIndex_3103784980 = [nimCopy(null, {Field0: 0, Field1: 0}, NTI3103784965)];
F.line = 38;
window.addEventListener("keydown", slideControls_3103784981, false);
framePtr = F.prev;
var F = {procname: "module slides", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slides", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/slides.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slides", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/slides.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newSeq_1677721894(len_1677721896) {
  var result_1677721897 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_1677721897 = new Array(len_1677721896); for (var i = 0 ; i < len_1677721896 ; ++i) { result_1677721897[i] = {Field0: [], Field1: [], Field2: false}; }  framePtr = F.prev;

  return result_1677721897;

}

function nstnewStringTable(mode_1677721888) {
  var result_1677721889 = null;

  var F = {procname: "strtabs.newStringTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 264;
    F.filename = "strtabs.nim";
    result_1677721889 = {mode: mode_1677721888, counter: 0, data: newSeq_1677721894(64), m_type: NTI1677721606};
  framePtr = F.prev;

  return result_1677721889;

}

function mustRehash_1677721746(length_1677721747, counter_1677721748) {
  var result_1677721749 = false;

  var F = {procname: "strtabs.mustRehash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    if (!((counter_1677721748 < length_1677721747))) {
    F.line = 130;
    F.filename = "strtabs.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim(130, 9) `length > counter` "));
    }
    
    F.line = 131;
    result_1677721749 = ((mulInt(length_1677721747, 2) < mulInt(counter_1677721748, 3)) || (subInt(length_1677721747, counter_1677721748) < 4));
  framePtr = F.prev;

  return result_1677721749;

}

function rawInsert_1677721814(t_1677721815, data_1677721816, data_1677721816_Idx, key_1677721817, val_1677721818) {
  var F = {procname: "strtabs.rawInsert", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "strtabs.nim";
    var h_1677721822 = (myhash_1677721737(t_1677721815, key_1677721817) & (data_1677721816[data_1677721816_Idx]).length - 1);
    Label1: {
      F.line = 224;
        Label2: while (true) {
        if (!data_1677721816[data_1677721816_Idx][chckIndx(h_1677721822, 0, (data_1677721816[data_1677721816_Idx]).length - 1)].Field2) break Label2;
          F.line = 225;
          h_1677721822 = nextTry_1677721755(h_1677721822, (data_1677721816[data_1677721816_Idx]).length - 1);
        }
    };
    F.line = 226;
    data_1677721816[data_1677721816_Idx][chckIndx(h_1677721822, 0, (data_1677721816[data_1677721816_Idx]).length - 1)].Field0 = nimCopy(null, key_1677721817, NTI33554449);
    F.line = 227;
    data_1677721816[data_1677721816_Idx][chckIndx(h_1677721822, 0, (data_1677721816[data_1677721816_Idx]).length - 1)].Field1 = nimCopy(null, val_1677721818, NTI33554449);
    F.line = 228;
    data_1677721816[data_1677721816_Idx][chckIndx(h_1677721822, 0, (data_1677721816[data_1677721816_Idx]).length - 1)].Field2 = true;
  framePtr = F.prev;

  
}

function enlarge_1677721826(t_1677721827) {
            var Temporary4;
            var Temporary5;

  var F = {procname: "strtabs.enlarge", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 231;
    F.filename = "strtabs.nim";
    var n_1677721828 = [[]];
    F.line = 232;
    n_1677721828[0] = new Array(chckRange(mulInt((t_1677721827.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1677721827.data).length, 2), 0, 2147483647) ; ++i) { n_1677721828[0][i] = {Field0: [], Field1: [], Field2: false}; }    Label1: {
      F.line = 233;
      var i_1677721845 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__3120562996 = 0;
      F.line = 233;
      F.filename = "strtabs.nim";
      colontmp__3120562996 = (t_1677721827.data).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_3120562997 = 0;
      Label2: {
        F.line = 66;
          Label3: while (true) {
          if (!(res_3120562997 <= colontmp__3120562996)) break Label3;
            F.line = 233;
            F.filename = "strtabs.nim";
            i_1677721845 = res_3120562997;
            if (t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field2) {
            F.line = 234;
            Temporary4 = t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field0;
            t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field0 = genericReset(t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field0, NTI33554449);
            Temporary5 = t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field1;
            t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field1 = genericReset(t_1677721827.data[chckIndx(i_1677721845, 0, (t_1677721827.data).length - 1)].Field1, NTI33554449);
            rawInsert_1677721814(t_1677721827, n_1677721828, 0, Temporary4, Temporary5);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_3120562997 = addInt(res_3120562997, 1);
          }
      };
    };
    F.line = 235;
    F.filename = "strtabs.nim";
    var Temporary6 = t_1677721827.data; t_1677721827.data = n_1677721828[0]; n_1677721828[0] = Temporary6;  framePtr = F.prev;

  
}

function nstPut(t_1677721875, key_1677721876, val_1677721877) {
  var F = {procname: "strtabs.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 249;
    F.filename = "strtabs.nim";
    var index_1677721878 = rawGet_1677721759(t_1677721875, key_1677721876);
    if ((0 <= index_1677721878)) {
    F.line = 251;
    t_1677721875.data[chckIndx(index_1677721878, 0, (t_1677721875.data).length - 1)].Field1 = nimCopy(null, val_1677721877, NTI33554449);
    }
    else {
      if (mustRehash_1677721746((t_1677721875.data).length, t_1677721875.counter)) {
      F.line = 253;
      enlarge_1677721826(t_1677721875);
      }
      
      F.line = 254;
      rawInsert_1677721814(t_1677721875, t_1677721875, "data", key_1677721876, val_1677721877);
      F.line = 255;
      t_1677721875.counter = addInt(t_1677721875.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function nstnewStringTableWithTableConstr(keyValuePairs_1677721952, mode_1677721953) {
  var result_1677721954 = null;

  var F = {procname: "strtabs.newStringTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strtabs.nim", line: 0};
  framePtr = F;
    F.line = 294;
    F.filename = "strtabs.nim";
    result_1677721954 = nstnewStringTable(mode_1677721953);
    Label1: {
      F.line = 295;
      var key_1677721968 = [];
      F.line = 295;
      var val_1677721969 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_3120562993 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_3120562993 < (keyValuePairs_1677721952).length)) break Label3;
            F.line = 295;
            F.filename = "strtabs.nim";
            key_1677721968 = keyValuePairs_1677721952[chckIndx(i_3120562993, 0, (keyValuePairs_1677721952).length - 1)]["Field0"];
            F.line = 295;
            val_1677721969 = keyValuePairs_1677721952[chckIndx(i_3120562993, 0, (keyValuePairs_1677721952).length - 1)]["Field1"];
            F.line = 295;
            nstPut(result_1677721954, key_1677721968, val_1677721969);
            F.line = 16;
            F.filename = "iterators.nim";
            i_3120562993 = addInt(i_3120562993, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_1677721954;

}
var F = {procname: "module lessonTarget", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/lessonTarget.nim", line: 0};
framePtr = F;
F.line = 8;
F.filename = "lessonTarget.nim";
var lessonCriteria_3120562984 = tg2([100,105,118], [tg2([100,105,118], [tg1([117,108], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("display: flex; flex-direction: column; justify-content: space-between; padding: 0.5em;")}], 0), [tg2([108,105], [tg4([73,32,99,97,110,32,115,111,108,118,101,32,97,110,100,32,103,114,97,112,104,32,105,110,101,113,117,97,108,105,116,105,101,115,32,111,110,32,97,32,110,117,109,98,101,114,32,108,105,110,101,46], true, [], false)], false), tg2([108,105], [tg4([73,32,99,97,110,32,119,114,105,116,101,32,100,105,114,101,99,116,32,99,111,109,112,97,114,105,115,111,110,115,32,97,115,32,105,110,101,113,117,97,108,105,116,105,101,115,32,111,114,32,101,113,117,97,116,105,111,110,115,46], true, [], false)], false), tg2([108,105], [tg4([73,32,99,97,110,32,114,101,99,111,103,110,105,122,101,32,115,111,108,117,116,105,111,110,115,32,97,110,100,32,110,111,110,45,115,111,108,117,116,105,111,110,115,32,111,102,32,105,110,101,113,117,97,108,105,116,105,101,115,46], true, [], false)], false)], false)], false)], true);
framePtr = F.prev;
var F = {procname: "module lessonTarget", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/lessonTarget.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsecsv", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parsecsv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsecsv", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parsecsv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module csv", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/csv-0.3-c7c352d7a354be145289219a5db805791e2174b1/csv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module csv", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/csv-0.3-c7c352d7a354be145289219a5db805791e2174b1/csv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsxGraph", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/jsxGraph.nim", line: 0};
framePtr = F;
F.line = 15;
F.filename = "jsxGraph.nim";
var boards_3170893856 = [[]];
framePtr = F.prev;
var F = {procname: "module jsxGraph", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/jsxGraph.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module expectations", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/slides/expectations.nim", line: 0};
framePtr = F;
F.line = 3;
F.filename = "expectations.nim";
var g9Expectations_3187671782 = tg2([100,105,118], [tg1([117,108], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [100,105,115,112,108,97,121,58,32,102,108,101,120,59,32,106,117,115,116,105,102,121,45,99,111,110,116,101,110,116,58,32,115,112,97,99,101,45,98,101,116,119,101,101,110,59]}], 0), [tg2([108,105], [tg4([75,101,101,112,32,109,121,32,104,97,110,100,115,32,97,110,100,32,109,121,32,98,101,108,111,110,103,105,110,103,115,32,116,111,32,109,121,115,101,108,102,46], true, [], false)], false), tg2([108,105], [tg4([66,101,32,112,114,101,115,101,110,116,32,97,110,100,32,97,110,32,97,99,116,105,118,101,32,112,97,114,116,105,99,105,112,97,110,116,46], true, [], false)], false), tg2([108,105], [tg4([82,101,109,97,105,110,32,105,110,32,109,121,32,97,115,115,105,103,110,101,100,32,115,101,97,116,46], true, [], false)], false), tg2([108,105], [tg4([66,101,32,111,110,32,116,105,109,101,44,32,115,117,98,109,105,116,32,119,111,114,107,32,111,110,32,116,105,109,101,46], true, [], false)], false), tg2([108,105], [tg4([67,108,101,97,110,32,117,112,32,97,102,116,101,114,32,109,121,115,101,108,102], true, [], false)], false)], false)], true);
F.line = 11;
var s1Expectations_3187672157 = tg2([100,105,118], [tg2([117,108], [tg2([108,105], [tg4([83,116,97,121,32,111,110,32,116,97,115,107], true, [], false)], false), tg2([108,105], [tg4([75,101,101,112,32,110,111,105,115,101,32,116,111,32,109,121,32,111,119,110,32,115,112,97,99,101], true, [], false)], false)], false)], true);
F.line = 16;
var s2Expectations_3187672768 = tg2([100,105,118], [tg2([117,108], [tg2([108,105], [tg4([83,116,97,121,32,111,110,32,116,97,115,107], true, [], false)], false), tg2([108,105], [tg4([67,111,108,108,97,98,111,114,97,116,101,32,119,105,116,104,32,109,121,32,103,114,111,117,112,32,111,110,32,100,101,102,105,110,105,116,105,111,110,115,32,111,102,32,119,111,114,100,115,32,97,110,100,32,101,120,97,109,112,108,101,115], true, [], false)], false), tg2([108,105], [tg4([82,101,116,117,114,110,32,109,97,116,101,114,105,97,108,115,32,116,111,32,109,97,116,101,114,105,97,108,115,32,98,97,115,107,101,116], true, [], false)], false), tg2([108,105], [tg4([80,105,99,107,32,117,112,32,115,116,114,97,121,32,112,97,112,101,114,115,32,102,114,111,109,32,116,97,98,108,101,32,97,110,100,32,102,108,111,111,114], true, [], false)], false)], false)], true);
F.line = 23;
var s3Expectations_3187673261 = tg2([100,105,118], [tg2([117,108], [tg2([108,105], [tg4([83,116,97,121,32,111,110,32,116,97,115,107], true, [], false)], false), tg2([108,105], [tg4([67,111,108,108,97,98,111,114,97,116,101,32,119,105,116,104,32,109,121,32,103,114,111,117,112,32,111,110,32,104,111,119,32,116,111,32,102,105,110,100,32,116,104,101,32,97,110,115,119,101,114,115], true, [], false)], false), tg2([108,105], [tg4([84,117,114,110,32,105,110,32,109,121,32,111,119,110,32,112,97,112,101,114,32,119,105,116,104,32,109,121,32,111,119,110,32,119,111,114,107], true, [], false)], false)], false)], true);
F.line = 29;
var s4Expectations_3187673754 = tg2([100,105,118], [tg2([117,108], [tg2([108,105], [tg4(makeNimstrLit("Collaborate with my group. If I\'m not using the materials, then I should be talking about what to do or why to do it."), true, [], false)], false), tg2([108,105], [tg4([82,101,116,117,114,110,32,109,97,116,101,114,105,97,108,115,32,116,111,32,116,104,101,32,98,105,110,46], true, [], false)], false), tg2([108,105], [tg4([82,101,116,117,114,110,32,119,111,114,107,32,119,105,116,104,32,103,114,111,117,112,39,115,32,110,97,109,101,115,32,111,110,32,105,116,46], true, [], false)], false)], false)], true);
F.line = 35;
var s5Expectations_3187674365 = tg2([100,105,118], [tg2([117,108], [tg2([108,105], [tg4([67,111,109,112,108,101,116,101,32,97,116,32,108,101,97,115,116,32,49,32,112,114,97,99,116,105,99,101,32,102,114,111,109,32,116,104,101,32,98,97,115,107,101,116,46], true, [], false)], false), tg2([108,105], [tg4([86,97,114,121,32,116,104,101,32,112,114,97,99,116,105,99,101,115,32,121,111,117,32,119,111,114,107,32,111,110,46], true, [], false)], false), tg2([108,105], [tg4([80,105,99,107,32,117,112,32,115,116,114,97,121,32,112,97,112,101,114,115,32,102,114,111,109,32,116,97,98,108,101,32,97,110,100,32,102,108,111,111,114,46], true, [], false)], false), tg2([108,105], [tg4([75,101,101,112,32,112,114,97,99,116,105,99,101,115,32,111,114,103,97,110,105,122,101,100,32,105,110,32,116,104,101,32,98,97,115,107,101,116,46], true, [], false)], false)], false)], true);
framePtr = F.prev;
var F = {procname: "module expectations", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/slides/expectations.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function toFloat_33556008(i_33556009) {
  var result_33556010 = 0.0;

  var F = {procname: "system.toFloat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1292;
    F.filename = "system.nim";
    result_33556010 = i_33556009;
  framePtr = F.prev;

  return result_33556010;

}

function HEX2F_33556020(x_33556021, y_33556022) {
  var result_33556023 = 0.0;

  var F = {procname: "system./", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1340;
    F.filename = "system.nim";
    result_33556023 = (toFloat_33556008(x_33556021) / toFloat_33556008(y_33556022));
  framePtr = F.prev;

  return result_33556023;

}

function epochTime_2533363935() {
  var result_2533363936 = 0.0;

  var F = {procname: "times.epochTime", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2808;
    F.filename = "times.nim";
    result_2533363936 = HEX2F_33556020(new Date().getTime(), 1000);
  framePtr = F.prev;

  return result_2533363936;

}

function rotl_2516582423(x_2516582424, k_2516582425) {
  var result_2516582426 = 0;

  var F = {procname: "random.rotl", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 134;
    F.filename = "random.nim";
    result_2516582426 = ((((x_2516582424 << k_2516582425) >>> 0) | (x_2516582424 >>> ((64 - k_2516582425) >>> 0))) >>> 0);
  framePtr = F.prev;

  return result_2516582426;

}

function next_2516582435(r_2516582436) {
  var result_2516582437 = 0n;

  var F = {procname: "random.next", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 152;
    F.filename = "random.nim";
    var s0_2516582438 = r_2516582436.a0;
    F.line = 153;
    var s1_2516582439 = r_2516582436.a1;
    F.line = 154;
    result_2516582437 = BigInt(((s0_2516582438 + s1_2516582439) >>> 0));
    F.line = 155;
    s1_2516582439 = ((s1_2516582439 ^ s0_2516582438) >>> 0);
    F.line = 156;
    r_2516582436.a0 = ((((rotl_2516582423(s0_2516582438, 55) ^ s1_2516582439) >>> 0) ^ ((s1_2516582439 << 14) >>> 0)) >>> 0);
    F.line = 157;
    r_2516582436.a1 = rotl_2516582423(s1_2516582439, 36);
  framePtr = F.prev;

  return result_2516582437;

}

function skipRandomNumbers_2516582444(s_2516582445) {
  var F = {procname: "random.skipRandomNumbers", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 216;
    F.filename = "random.nim";
    var s0_2516582447 = 0;
    F.line = 217;
    var s1_2516582448 = 0;
    Label1: {
      F.line = 218;
      var i_2516582457 = 0;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536871206 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536871206 <= 1)) break Label3;
            F.line = 218;
            F.filename = "random.nim";
            i_2516582457 = res_536871206;
            Label4: {
              F.line = 219;
              var b_2516582462 = 0;
              F.line = 119;
              F.filename = "iterators_1.nim";
              var i_536871204 = 0;
              Label5: {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_536871204 < 64)) break Label6;
                    F.line = 219;
                    F.filename = "random.nim";
                    b_2516582462 = i_536871204;
                    if (!((((helper_2516582446[chckIndx(i_2516582457, 0, (helper_2516582446).length - 1)] & ((1 << b_2516582462) >>> 0)) >>> 0) == 0))) {
                    F.line = 221;
                    s0_2516582447 = ((s0_2516582447 ^ s_2516582445.a0) >>> 0);
                    F.line = 222;
                    s1_2516582448 = ((s1_2516582448 ^ s_2516582445.a1) >>> 0);
                    }
                    
                    F.line = 219;
                    var _ = next_2516582435(s_2516582445);
                    F.line = 122;
                    F.filename = "iterators_1.nim";
                    i_536871204 = addInt(i_536871204, 1);
                  }
              };
            };
            F.line = 93;
            res_536871206 = addInt(res_536871206, 1);
          }
      };
    };
    F.line = 224;
    F.filename = "random.nim";
    s_2516582445.a0 = s0_2516582447;
    F.line = 225;
    s_2516582445.a1 = s1_2516582448;
  framePtr = F.prev;

  
}

function initRand_2516582649(seed_2516582650) {
    var Temporary1;

  var result_2516582651 = [({a0: 0, a1: 0})];

  var F = {procname: "random.initRand", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 601;
    F.filename = "random.nim";
    if (!((seed_2516582650 == 0n))) {
    Temporary1 = seed_2516582650;
    }
    else {
    Temporary1 = 2147483647n;
    }
    
    var seed_2516582657 = Temporary1;
    F.line = 602;
    result_2516582651[0].a0 = Number((seed_2516582657 >> BigInt(16)));
    F.line = 603;
    result_2516582651[0].a1 = Number((seed_2516582657 & 65535n));
    F.line = 607;
    skipRandomNumbers_2516582444(result_2516582651[0]);
    F.line = 608;
    var _ = next_2516582435(result_2516582651[0]);
  framePtr = F.prev;

  return result_2516582651[0];

}

function initRand_2516582691() {
  var result_2516582692 = ({a0: 0, a1: 0});

  var F = {procname: "random.initRand", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 694;
    F.filename = "random.nim";
    var time_2516582693 = (BigInt(Math.trunc((epochTime_2533363935() * 1000.0))) & 2147483647n);
    F.line = 695;
    result_2516582692 = nimCopy(result_2516582692, initRand_2516582649(time_2516582693), NTI2516582404);
  framePtr = F.prev;

  return result_2516582692;

}

function randomize_2516582698() {
  var F = {procname: "random.randomize", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 748;
    F.filename = "random.nim";
    state_2516582414[0] = nimCopy(state_2516582414[0], initRand_2516582691(), NTI2516582404);
  framePtr = F.prev;

  
}

function HEX2EHEX2E_788529202(a_788529205, b_788529206) {
  var result_788529207 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 416;
    F.filename = "system.nim";
    result_788529207 = nimCopy(result_788529207, {a: a_788529205, b: b_788529206}, NTI788529176);
  framePtr = F.prev;

  return result_788529207;

}

function newSeq_1409286382(len_1409286384) {
  var result_1409286385 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_1409286385 = new Array(len_1409286384); for (var i = 0 ; i < len_1409286384 ; ++i) { result_1409286385[i] = 0; }  framePtr = F.prev;

  return result_1409286385;

}

function len_2717909192(x_2717909195) {
  var result_2717909196 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1443;
    F.filename = "system.nim";
    result_2717909196 = nimMax(0, addInt(subInt(x_2717909195.b, x_2717909195.a), 1));
  framePtr = F.prev;

  return result_2717909196;

}

function rand_2516582511(r_2516582513, max_2516582514) {
  var result_2516582515 = 0n;

  var F = {procname: "rand.rand", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((max_2516582514 == 0n)) {
    F.line = 229;
    F.filename = "random.nim";
    break BeforeRet;
    }
    else {
      F.line = 231;
      var max_2516582516 = max_2516582514;
      if ((max_2516582516 == 18446744073709551615n)) {
      F.line = 233;
      result_2516582515 = next_2516582435(r_2516582513);
      break BeforeRet;
      }
      
      F.line = 234;
      var iters_2516582529 = 0;
      Label1: {
        F.line = 235;
          Label2: while (true) {
          if (!true) break Label2;
            F.line = 236;
            var x_2516582530 = next_2516582435(r_2516582513);
            if (((x_2516582530 <= BigInt.asUintN(64, (4294967295n - (4294967295n % max_2516582516)))) || (20 < iters_2516582529))) {
            F.line = 239;
            result_2516582515 = (x_2516582530 % BigInt.asUintN(64, (max_2516582516 + 1n)));
            break BeforeRet;
            }
            else {
              F.line = 241;
            iters_2516582529 = addInt(iters_2516582529, 1);
            }
            
          }
      };
    }
    
  };
  framePtr = F.prev;

  return result_2516582515;

}

function rand_2516582507(r_2516582508, max_2516582509) {
  var result_2516582510 = 0;

  var F = {procname: "random.rand", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 244;
    F.filename = "random.nim";
    result_2516582510 = Number(BigInt.asIntN(32, rand_2516582511(r_2516582508, BigInt.asUintN(64, BigInt(max_2516582509)))));
  framePtr = F.prev;

  return result_2516582510;

}

function shuffle_2717909987(r_2717909989, x_2717909990) {
  var F = {procname: "shuffle.shuffle", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 643;
      F.filename = "random.nim";
      var i_2717909999 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881369 = 0;
      F.line = 643;
      F.filename = "random.nim";
      colontmp__536881369 = (x_2717909990).length - 1;
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881370 = colontmp__536881369;
      Label2: {
        F.line = 34;
          Label3: while (true) {
          if (!(1 <= res_536881370)) break Label3;
            F.line = 643;
            F.filename = "random.nim";
            i_2717909999 = res_536881370;
            F.line = 644;
            var j_2717910000 = rand_2516582507(r_2717909989, chckRange(i_2717909999, 0, 2147483647));
            F.line = 643;
            var Temporary4 = x_2717909990[chckIndx(i_2717909999, 0, (x_2717909990).length - 1)]; x_2717909990[chckIndx(i_2717909999, 0, (x_2717909990).length - 1)] = x_2717909990[chckIndx(j_2717910000, 0, (x_2717909990).length - 1)]; x_2717909990[chckIndx(j_2717910000, 0, (x_2717909990).length - 1)] = Temporary4;            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881370 = subInt(res_536881370, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function shuffle_2717909984(x_2717909986) {
  var F = {procname: "shuffle.shuffle", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/random.nim", line: 0};
  framePtr = F;
    F.line = 664;
    F.filename = "random.nim";
    shuffle_2717909987(state_2516582414[0], x_2717909986);
  framePtr = F.prev;

  
}

function newSeq_3003121964(len_3003121966) {
  var result_3003121967 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_3003121967 = new Array(len_3003121966); for (var i = 0 ; i < len_3003121966 ; ++i) { result_3003121967[i] = []; }  framePtr = F.prev;

  return result_3003121967;

}

function choose_536871208(s_536871210, n_536871211) {
  var result_536871212 = [];

  var F = {procname: "choose.choose", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/sampling.nim", line: 0};
  framePtr = F;
    F.line = 4;
    F.filename = "sampling.nim";
    Label1: {
      F.line = 4;
      var HEX3Atmp_536871733 = HEX2EHEX2E_788529202(0, subInt((s_536871210).length, 1));
      F.line = 795;
      F.filename = "sequtils.nim";
      var iHEX60gensym5_536871736 = 0;
      F.line = 796;
      var resultHEX60gensym5_536871894 = newSeq_1409286382(chckRange(len_2717909192(HEX3Atmp_536871733), 0, 2147483647));
      Label2: {
        F.line = 797;
        var itHEX60gensym5_536871898 = 0;
        Label3: {
          F.line = 135;
          F.filename = "iterators.nim";
          var x_536881361 = 0;
          F.line = 90;
          F.filename = "iterators_1.nim";
          var res_536881362 = HEX3Atmp_536871733.a;
          Label4: {
            F.line = 91;
              Label5: while (true) {
              if (!(res_536881362 <= HEX3Atmp_536871733.b)) break Label5;
                F.line = 135;
                F.filename = "iterators.nim";
                x_536881361 = res_536881362;
                F.line = 797;
                F.filename = "sequtils.nim";
                itHEX60gensym5_536871898 = x_536881361;
                F.line = 798;
                resultHEX60gensym5_536871894[chckIndx(iHEX60gensym5_536871736, 0, (resultHEX60gensym5_536871894).length - 1)] = itHEX60gensym5_536871898;
                F.line = 797;
                iHEX60gensym5_536871736 = addInt(iHEX60gensym5_536871736, 1);
                F.line = 93;
                F.filename = "iterators_1.nim";
                res_536881362 = addInt(res_536881362, 1);
              }
          };
        };
      };
    };
    var indices_536871903 = nimCopy(null, resultHEX60gensym5_536871894, NTI1409286321);
    F.line = 5;
    F.filename = "sampling.nim";
    shuffle_2717909984(indices_536871903);
    F.line = 6;
    result_536871212 = nimCopy(null, newSeq_3003121964(chckRange(n_536871211, 0, 2147483647)), NTI3003121915);
    Label6: {
      F.line = 7;
      var i_536871914 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881365 = 0;
      F.line = 7;
      F.filename = "sampling.nim";
      colontmp__536881365 = subInt(n_536871211, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881366 = 0;
      Label7: {
        F.line = 91;
          Label8: while (true) {
          if (!(res_536881366 <= colontmp__536881365)) break Label8;
            F.line = 7;
            F.filename = "sampling.nim";
            i_536871914 = res_536881366;
            F.line = 7;
            result_536871212[chckIndx(i_536871914, 0, (result_536871212).length - 1)] = nimCopy(null, s_536871210[chckIndx(indices_536871903[chckIndx(i_536871914, 0, (indices_536871903).length - 1)], 0, (s_536871210).length - 1)], NTI3137339529);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881366 = addInt(res_536881366, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_536871212;

}

function newSeq_503317028(len_503317030) {
  var result_503317031 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_503317031 = new Array(len_503317030); for (var i = 0 ; i < len_503317030 ; ++i) { result_503317031[i] = []; }  framePtr = F.prev;

  return result_503317031;

}

function HEX5BHEX5D_536871981(s_536871983, i_536871984) {
  var result_536871985 = null;
  var result_536871985_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_536871985 = s_536871983; result_536871985_Idx = chckIndx(subInt((s_536871983).length, i_536871984), 0, (s_536871983).length - 1);
  framePtr = F.prev;

  return [result_536871985, result_536871985_Idx];

}

function initLessonTargets_3036676106(uniqCompId_3036676107) {
    
function HEX3Aanonymous_3036676110(self_3036676111, ev_3036676112) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676113(self_3036676114, ev_3036676115) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676116(self_3036676117, ev_3036676118) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676119(self_3036676120, ev_3036676121) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676122(self_3036676123, ev_3036676124) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676125(self_3036676126, ev_3036676127) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676128(self_3036676129, ev_3036676130) {
      var F = {procname: "initLessonTargets.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3036676108 = null;

  var F = {procname: "slides24.initLessonTargets", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 15;
    F.filename = "slides24.nim";
    var self_3036676109 = {uniqCompId: nimCopy(null, uniqCompId_3036676107, NTI33554449), m_type: NTI3036676108, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 18;
    self_3036676109.beforeUpdated = HEX3Aanonymous_3036676110;
    F.line = 18;
    self_3036676109.pageShow = HEX3Aanonymous_3036676113;
    F.line = 18;
    self_3036676109.pageHide = HEX3Aanonymous_3036676116;
    F.line = 18;
    self_3036676109.rendered = HEX3Aanonymous_3036676119;
    F.line = 18;
    self_3036676109.exited = HEX3Aanonymous_3036676122;
    F.line = 18;
    self_3036676109.created = HEX3Aanonymous_3036676125;
    F.line = 18;
    self_3036676109.updated = HEX3Aanonymous_3036676128;
    F.line = 15;
    createdComponentsList_1644168819[0].push(self_3036676109);;
    F.line = 779;
    F.filename = "components.nim";
    result_3036676108 = self_3036676109;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3036676108;

}

function initSlideTarget_3036676631(uniqCompId_3036676632) {
    
function HEX3Aanonymous_3036676635(self_3036676636, ev_3036676637) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676638(self_3036676639, ev_3036676640) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676641(self_3036676642, ev_3036676643) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676644(self_3036676645, ev_3036676646) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676647(self_3036676648, ev_3036676649) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676650(self_3036676651, ev_3036676652) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036676653(self_3036676654, ev_3036676655) {
      var F = {procname: "initSlideTarget.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3036676633 = null;

  var F = {procname: "slides24.initSlideTarget", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 20;
    F.filename = "slides24.nim";
    var self_3036676634 = {uniqCompId: nimCopy(null, uniqCompId_3036676632, NTI33554449), m_type: NTI3036676404, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 24;
    self_3036676634.beforeUpdated = HEX3Aanonymous_3036676635;
    F.line = 24;
    self_3036676634.pageShow = HEX3Aanonymous_3036676638;
    F.line = 24;
    self_3036676634.pageHide = HEX3Aanonymous_3036676641;
    F.line = 24;
    self_3036676634.rendered = HEX3Aanonymous_3036676644;
    F.line = 24;
    self_3036676634.exited = HEX3Aanonymous_3036676647;
    F.line = 24;
    self_3036676634.created = HEX3Aanonymous_3036676650;
    F.line = 24;
    self_3036676634.updated = HEX3Aanonymous_3036676653;
    F.line = 20;
    createdComponentsList_1644168819[0].push(self_3036676634);;
    F.line = 779;
    F.filename = "components.nim";
    result_3036676633 = self_3036676634;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3036676633;

}

function lessonTarget_3120562222() {
  var result_3120562223 = null;

  var F = {procname: "lessonTarget.lessonTarget", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/lessonTarget.nim", line: 0};
  framePtr = F;
    F.line = 4;
    F.filename = "lessonTarget.nim";
    result_3120562223 = tg2([100,105,118], [tg2([100,105,118], [tg4(makeNimstrLit("I understand how to solve for an unknown amount in a linear relationship."), true, [], false)], false)], true);
  framePtr = F.prev;

  return result_3120562223;

}

function addArgIter_1694499355(self_1694499356, arg_1694499357) {
  var F = {procname: "tag.addArgIter", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    F.line = 466;
    F.filename = "tag.nim";
    self_1694499356.setAttribute(toJSStr(arg_1694499357), "");
    Label1: {
      F.line = 470;
      var i_1694499361 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881374 = 0;
      F.line = 242;
      var L_536881375 = (self_1694499356.children).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881374 < L_536881375)) break Label3;
            F.line = 470;
            F.filename = "tag.nim";
            i_1694499361 = self_1694499356.children[chckIndx(i_536881374, 0, (self_1694499356.children).length - 1)];
            F.line = 470;
            addArgIter_1694499355(i_1694499361, arg_1694499357);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881374 = addInt(i_536881374, 1);
            if (!(((self_1694499356.children).length == L_536881375))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function initSlideCriteria_3036677405(uniqCompId_3036677406) {
    
function HEX3Aanonymous_3036677409(self_3036677410, ev_3036677411) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036677412(self_3036677413, ev_3036677414) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036677415(self_3036677416, ev_3036677417) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036677418(self_3036677419, ev_3036677420) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036677421(self_3036677422, ev_3036677423) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036677424(self_3036677425, ev_3036677426) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036677427(self_3036677428, ev_3036677429) {
      var F = {procname: "initSlideCriteria.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3036677407 = null;

  var F = {procname: "slides24.initSlideCriteria", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 26;
    F.filename = "slides24.nim";
    var self_3036677408 = {uniqCompId: nimCopy(null, uniqCompId_3036677406, NTI33554449), m_type: NTI3036676831, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 30;
    self_3036677408.beforeUpdated = HEX3Aanonymous_3036677409;
    F.line = 30;
    self_3036677408.pageShow = HEX3Aanonymous_3036677412;
    F.line = 30;
    self_3036677408.pageHide = HEX3Aanonymous_3036677415;
    F.line = 30;
    self_3036677408.rendered = HEX3Aanonymous_3036677418;
    F.line = 30;
    self_3036677408.exited = HEX3Aanonymous_3036677421;
    F.line = 30;
    self_3036677408.created = HEX3Aanonymous_3036677424;
    F.line = 30;
    self_3036677408.updated = HEX3Aanonymous_3036677427;
    F.line = 26;
    createdComponentsList_1644168819[0].push(self_3036677408);;
    F.line = 779;
    F.filename = "components.nim";
    result_3036677407 = self_3036677408;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3036677407;

}

function initSlideBody_3036678179(uniqCompId_3036678180) {
    
function HEX3Aanonymous_3036678183(self_3036678184, ev_3036678185) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036678186(self_3036678187, ev_3036678188) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036678189(self_3036678190, ev_3036678191) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036678192(self_3036678193, ev_3036678194) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036678195(self_3036678196, ev_3036678197) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036678198(self_3036678199, ev_3036678200) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3036678201(self_3036678202, ev_3036678203) {
      var F = {procname: "initSlideBody.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3036678181 = null;

  var F = {procname: "slides24.initSlideBody", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 32;
    F.filename = "slides24.nim";
    var self_3036678182 = {uniqCompId: nimCopy(null, uniqCompId_3036678180, NTI33554449), m_type: NTI3036677258, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 35;
    self_3036678182.beforeUpdated = HEX3Aanonymous_3036678183;
    F.line = 35;
    self_3036678182.pageShow = HEX3Aanonymous_3036678186;
    F.line = 35;
    self_3036678182.pageHide = HEX3Aanonymous_3036678189;
    F.line = 35;
    self_3036678182.rendered = HEX3Aanonymous_3036678192;
    F.line = 35;
    self_3036678182.exited = HEX3Aanonymous_3036678195;
    F.line = 35;
    self_3036678182.created = HEX3Aanonymous_3036678198;
    F.line = 35;
    self_3036678182.updated = HEX3Aanonymous_3036678201;
    F.line = 32;
    createdComponentsList_1644168819[0].push(self_3036678182);;
    F.line = 779;
    F.filename = "components.nim";
    result_3036678181 = self_3036678182;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3036678181;

}

function remember_2785019842(val_2785019844) {
  var result_2785019845 = null;

  var F = {procname: "remember.remember", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "state.nim";
    result_2785019845 = {val: nimCopy(null, val_2785019844, NTI33554449), watchers: []};
  framePtr = F.prev;

  return result_2785019845;

}

function initSlideHeader_3103785094(uniqCompId_3103785095, css_3103785096) {
    
function HEX3Aanonymous_3103785102(self_3103785103, ev_3103785104) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3103785105(self_3103785106, ev_3103785107) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3103785108(self_3103785109, ev_3103785110) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3103785111(self_3103785112, ev_3103785113) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3103785114(self_3103785115, ev_3103785116) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3103785117(self_3103785118, ev_3103785119) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3103785120(self_3103785121, ev_3103785122) {
      var F = {procname: "initSlideHeader.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3103785097 = null;

  var F = {procname: "slides.initSlideHeader", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "slides.nim";
    var self_3103785101 = {uniqCompId: nimCopy(null, uniqCompId_3103785095, NTI33554449), css: remember_2785019842(css_3103785096), m_type: NTI3103785060, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 60;
    self_3103785101.beforeUpdated = HEX3Aanonymous_3103785102;
    F.line = 60;
    self_3103785101.pageShow = HEX3Aanonymous_3103785105;
    F.line = 60;
    self_3103785101.pageHide = HEX3Aanonymous_3103785108;
    F.line = 60;
    self_3103785101.rendered = HEX3Aanonymous_3103785111;
    F.line = 60;
    self_3103785101.exited = HEX3Aanonymous_3103785114;
    F.line = 60;
    self_3103785101.created = HEX3Aanonymous_3103785117;
    F.line = 60;
    self_3103785101.updated = HEX3Aanonymous_3103785120;
    if (eqStrings(css_3103785096, [])) {
    F.line = 56;
    self_3103785101.css = remember_2785019842(css_3103785096);
    }
    
    F.line = 56;
    createdComponentsList_1644168819[0].push(self_3103785101);;
    F.line = 779;
    F.filename = "components.nim";
    result_3103785097 = self_3103785101;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3103785097;

}

function registerApp_1644170418(appId_1644170419) {
  var result_1644170420 = null;

  var F = {procname: "renderer.registerApp", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "renderer.nim";
    F.line = 230;
    application_1644167268[0] = {appId: appId_1644170419, router: null};
    result_1644170420 = application_1644167268[0];
  framePtr = F.prev;

  return result_1644170420;

}

function nsuStartsWith(s_721421742, prefix_721421743) {
  var result_721421744 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "strimpl.nim";
    var prefixLenHEX60gensym146_721421749 = (prefix_721421743).length;
    F.line = 57;
    var sLenHEX60gensym146_721421750 = (s_721421742).length;
    F.line = 58;
    var iHEX60gensym146_721421751 = 0;
    Label1: {
      F.line = 1624;
      F.filename = "strutils.nim";
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_721421749 <= iHEX60gensym146_721421751)) {
          F.line = 60;
          F.filename = "strimpl.nim";
          result_721421744 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_721421750 <= iHEX60gensym146_721421751) || !((s_721421742[chckIndx(iHEX60gensym146_721421751, 0, (s_721421742).length - 1)] == prefix_721421743[chckIndx(iHEX60gensym146_721421751, 0, (prefix_721421743).length - 1)])))) {
          F.line = 61;
          result_721421744 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym146_721421751 = addInt(iHEX60gensym146_721421751, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_721421744;

}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2658;
    F.filename = "system.nim";
    var first_33558084 = nimMax(first_33558081, 0);
    F.line = 2659;
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    F.line = 2660;
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2661;
      var i_33558090 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__1862271404 = 0;
      F.line = 2661;
      F.filename = "system.nim";
      colontmp__1862271404 = subInt(L_33558085, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_1862271405 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_1862271405 <= colontmp__1862271404)) break Label3;
            F.line = 2661;
            F.filename = "system.nim";
            i_33558090 = res_1862271405;
            F.line = 2661;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_1862271405 = addInt(res_1862271405, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558083;

}

function nsuSplitChar(s_721420833, sep_721420834, maxsplit_721420835) {
  var result_721420836 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_721420836 = nimCopy(null, [], NTI721420661);
    Label1: {
      F.line = 418;
      var xHEX60gensym67_721420842 = [];
      F.line = 389;
      var lastHEX60gensym34_536881386 = 0;
      F.line = 390;
      var splitsHEX60gensym34_536881387 = maxsplit_721420835;
      Label2: {
        F.line = 450;
          Label3: while (true) {
          if (!(lastHEX60gensym34_536881386 <= (s_721420833).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym34_536881389 = lastHEX60gensym34_536881386;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym34_536881386 < (s_721420833).length) && !((s_721420833[chckIndx(lastHEX60gensym34_536881386, 0, (s_721420833).length - 1)] == sep_721420834)))) break Label5;
                  F.line = 395;
                  lastHEX60gensym34_536881386 = addInt(lastHEX60gensym34_536881386, 1);
                }
            };
            if ((splitsHEX60gensym34_536881387 == 0)) {
            F.line = 396;
            lastHEX60gensym34_536881386 = (s_721420833).length;
            }
            
            F.line = 743;
            xHEX60gensym67_721420842 = substr_33558079(s_721420833, firstHEX60gensym34_536881389, subInt(lastHEX60gensym34_536881386, 1));
            F.line = 743;
            var Temporary6 = nimCopy(null, xHEX60gensym67_721420842, NTI33554449);
            result_721420836.push(Temporary6);;
            if ((splitsHEX60gensym34_536881387 == 0)) {
            F.line = 398;
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym34_536881387 = subInt(splitsHEX60gensym34_536881387, 1);
            F.line = 400;
            lastHEX60gensym34_536881386 = addInt(lastHEX60gensym34_536881386, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_721420836;

}

function nsuEndsWith(s_721421762, suffix_721421763) {
  var result_721421764 = false;

  var F = {procname: "strutils.endsWith", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 65;
    F.filename = "strimpl.nim";
    var suffixLenHEX60gensym153_721421770 = (suffix_721421763).length;
    F.line = 66;
    var sLenHEX60gensym153_721421771 = (s_721421762).length;
    F.line = 67;
    var iHEX60gensym153_721421772 = 0;
    F.line = 68;
    var jHEX60gensym153_721421773 = subInt(sLenHEX60gensym153_721421771, suffixLenHEX60gensym153_721421770);
    Label1: {
      F.line = 69;
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_721421772, jHEX60gensym153_721421773)) && (addInt(iHEX60gensym153_721421772, jHEX60gensym153_721421773) < sLenHEX60gensym153_721421771))) break Label2;
          if (!((s_721421762[chckIndx(addInt(iHEX60gensym153_721421772, jHEX60gensym153_721421773), 0, (s_721421762).length - 1)] == suffix_721421763[chckIndx(iHEX60gensym153_721421772, 0, (suffix_721421763).length - 1)]))) {
          F.line = 70;
          result_721421764 = false;
          break BeforeRet;
          }
          
          F.line = 71;
          iHEX60gensym153_721421772 = addInt(iHEX60gensym153_721421772, 1);
        }
    };
    if ((suffixLenHEX60gensym153_721421770 <= iHEX60gensym153_721421772)) {
    F.line = 72;
    result_721421764 = true;
    break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_721421764;

}

function parseQuery_2449473541(q_2449473542) {
    var Temporary1;

  var result_2449473543 = null;

  var F = {procname: "queries.parseQuery", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/queries.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "queries.nim";
    if (nsuStartsWith(q_2449473542, [63])) {
    Temporary1 = HEX5BHEX5D_721421595(q_2449473542, HEX2EHEX2E_956301416(1, 1));
    }
    else {
    Temporary1 = q_2449473542;
    }
    
    var query_2449473562 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 24;
    result_2449473543 = nstnewStringTableWithTableConstr([], 0);
    Label2: {
      F.line = 25;
      var i_2449473563 = [];
      F.line = 389;
      F.filename = "strutils.nim";
      var lastHEX60gensym34_536881380 = 0;
      F.line = 390;
      var splitsHEX60gensym34_536881381 = (-1);
      Label3: {
        F.line = 450;
          Label4: while (true) {
          if (!(lastHEX60gensym34_536881380 <= (query_2449473562).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym34_536881383 = lastHEX60gensym34_536881380;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym34_536881380 < (query_2449473562).length) && !((query_2449473562[chckIndx(lastHEX60gensym34_536881380, 0, (query_2449473562).length - 1)] == 38)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym34_536881380 = addInt(lastHEX60gensym34_536881380, 1);
                }
            };
            if ((splitsHEX60gensym34_536881381 == 0)) {
            F.line = 396;
            lastHEX60gensym34_536881380 = (query_2449473562).length;
            }
            
            F.line = 25;
            F.filename = "queries.nim";
            i_2449473563 = substr_33558079(query_2449473562, firstHEX60gensym34_536881383, subInt(lastHEX60gensym34_536881380, 1));
            F.line = 26;
            var splitted_2449473564 = nsuSplitChar(i_2449473563, 61, (-1));
            if (((2 <= (splitted_2449473564).length) && !(nsuEndsWith(splitted_2449473564[chckIndx(0, 0, (splitted_2449473564).length - 1)], [91,93])))) {
            F.line = 28;
            nstPut(result_2449473543, splitted_2449473564[chckIndx(0, 0, (splitted_2449473564).length - 1)], splitted_2449473564[chckIndx(1, 0, (splitted_2449473564).length - 1)]);
            }
            
            if ((splitsHEX60gensym34_536881381 == 0)) {
            F.line = 398;
            F.filename = "strutils.nim";
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym34_536881381 = subInt(splitsHEX60gensym34_536881381, 1);
            F.line = 400;
            lastHEX60gensym34_536881380 = addInt(lastHEX60gensym34_536881380, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_2449473543;

}

function initTable_1124076088(initialSize_1124076091) {
  var result_1124076092 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym58_1124076094 = slotsNeeded_1140850730(chckRange(initialSize_1124076091, 0, 2147483647));
    F.line = 169;
    result_1124076092.counter = 0;
    F.line = 170;
    result_1124076092.data = new Array(chckRange(correctSizeHEX60gensym58_1124076094, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_1124076094, 0, 2147483647) ; ++i) { result_1124076092.data[i] = {Field0: 0, Field1: [], Field2: []}; }  framePtr = F.prev;

  return result_1124076092;

}

function newTable_1124076054(initialSize_1124076057) {
  var result_1124076058 = null;

  var F = {procname: "newTable.newTable", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 828;
    F.filename = "tables.nim";
    result_1124076058 = ({data: [], counter: 0});
    F.line = 830;
    result_1124076058 = nimCopy(result_1124076058, initTable_1124076088(initialSize_1124076057), NTI1124073492);
  framePtr = F.prev;

  return result_1124076058;

}

function rawGet_1124074096(t_1124074099, key_1124074100, hc_1124074101, hc_1124074101_Idx) {
  var result_1124074102 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_1124074101[hc_1124074101_Idx] = hash_1157628368(key_1124074100);
    if ((hc_1124074101[hc_1124074101_Idx] == 0)) {
    F.line = 61;
    hc_1124074101[hc_1124074101_Idx] = 314159265;
    }
    
    if (((t_1124074099.data).length == 0)) {
    F.line = 43;
    result_1124074102 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1124074154 = (hc_1124074101[hc_1124074101_Idx] & (t_1124074099.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1140850719(t_1124074099.data[chckIndx(h_1124074154, 0, (t_1124074099.data).length - 1)].Field0)) break Label2;
          if (((t_1124074099.data[chckIndx(h_1124074154, 0, (t_1124074099.data).length - 1)].Field0 == hc_1124074101[hc_1124074101_Idx]) && eqStrings(t_1124074099.data[chckIndx(h_1124074154, 0, (t_1124074099.data).length - 1)].Field1, key_1124074100))) {
          F.line = 51;
          result_1124074102 = h_1124074154;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1124074154 = nextTry_1140850722(h_1124074154, (t_1124074099.data).length - 1);
        }
    };
    F.line = 53;
    result_1124074102 = subInt((-1), h_1124074154);
  };
  framePtr = F.prev;

  return result_1124074102;

}

function hasKey_1124074089(t_1124074092, key_1124074093) {
  var result_1124074094 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 372;
    F.filename = "tables.nim";
    var hc_1124074095 = [0];
    F.line = 373;
    result_1124074094 = (0 <= rawGet_1124074096(t_1124074092, key_1124074093, hc_1124074095, 0));
  framePtr = F.prev;

  return result_1124074094;

}

function hasKey_1124073990(t_1124073993, key_1124073994) {
  var result_1124073995 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 913;
    F.filename = "tables.nim";
    result_1124073995 = hasKey_1124074089(t_1124073993, key_1124073994);
  framePtr = F.prev;

  return result_1124073995;

}

function raiseKeyError_1224737176(key_1224737178) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 235;
    F.filename = "tables.nim";
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1224737178 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1124074521(t_1124074524, key_1124074525) {
  var result_1124074526 = null;
  var result_1124074526_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 243;
    F.filename = "tables.nim";
    var hcHEX60gensym22_1124074527 = [0];
    F.line = 244;
    var indexHEX60gensym22_1124074534 = rawGet_1124074096(t_1124074524, key_1124074525, hcHEX60gensym22_1124074527, 0);
    if ((0 <= indexHEX60gensym22_1124074534)) {
    F.line = 245;
    result_1124074526 = t_1124074524.data[chckIndx(indexHEX60gensym22_1124074534, 0, (t_1124074524.data).length - 1)]; result_1124074526_Idx = "Field2";
    }
    else {
      F.line = 247;
    raiseKeyError_1224737176(key_1124074525);
    }
    
  framePtr = F.prev;

  return [result_1124074526, result_1124074526_Idx];

}

function HEX5BHEX5D_1124074409(t_1124074412, key_1124074413) {
    var Temporary1;

  var result_1124074414 = null;
  var result_1124074414_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 879;
    F.filename = "tables.nim";
    result_1124074414 = (Temporary1 = HEX5BHEX5D_1124074521(t_1124074412, key_1124074413), Temporary1)[0]; result_1124074414_Idx = Temporary1[1];
  framePtr = F.prev;

  return [result_1124074414, result_1124074414_Idx];

}

function mustRehash_1124075059(t_1124075061) {
  var result_1124075062 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1124075061.counter < (t_1124075061.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_1124075062 = ((mulInt((t_1124075061.data).length, 2) < mulInt(t_1124075061.counter, 3)) || (subInt((t_1124075061.data).length, t_1124075061.counter) < 4));
  framePtr = F.prev;

  return result_1124075062;

}

function rawInsert_1124075508(t_1124075512, data_1124075513, data_1124075513_Idx, key_1124075514, val_1124075515, hc_1124075516, h_1124075517) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_1124075513[data_1124075513_Idx][chckIndx(h_1124075517, 0, (data_1124075513[data_1124075513_Idx]).length - 1)].Field1 = nimCopy(null, key_1124075514, NTI33554449);
    F.line = 26;
    data_1124075513[data_1124075513_Idx][chckIndx(h_1124075517, 0, (data_1124075513[data_1124075513_Idx]).length - 1)].Field2 = nimCopy(null, val_1124075515, NTI1124073483);
    F.line = 27;
    data_1124075513[data_1124075513_Idx][chckIndx(h_1124075517, 0, (data_1124075513[data_1124075513_Idx]).length - 1)].Field0 = hc_1124075516;
  framePtr = F.prev;

  
}

function enlarge_1124075214(t_1124075217) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 250;
    F.filename = "tables.nim";
    var n_1124075220 = [];
    F.line = 251;
    n_1124075220 = new Array(chckRange(mulInt((t_1124075217.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1124075217.data).length, 2), 0, 2147483647) ; ++i) { n_1124075220[i] = {Field0: 0, Field1: [], Field2: []}; }    F.line = 252;
    var Temporary1 = t_1124075217.data; t_1124075217.data = n_1124075220; n_1124075220 = Temporary1;    Label2: {
      F.line = 253;
      var i_1124075284 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__536881400 = 0;
      F.line = 253;
      F.filename = "tables.nim";
      colontmp__536881400 = (n_1124075220).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_536881401 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_536881401 <= colontmp__536881400)) break Label4;
            F.line = 253;
            F.filename = "tables.nim";
            i_1124075284 = res_536881401;
            F.line = 254;
            var eh_1124075338 = n_1124075220[chckIndx(i_1124075284, 0, (n_1124075220).length - 1)].Field0;
            if (isFilled_1140850719(eh_1124075338)) {
            F.line = 256;
            var j_1124075342 = (eh_1124075338 & (t_1124075217.data).length - 1);
            Label5: {
              F.line = 257;
                Label6: while (true) {
                if (!isFilled_1140850719(t_1124075217.data[chckIndx(j_1124075342, 0, (t_1124075217.data).length - 1)].Field0)) break Label6;
                  F.line = 258;
                  j_1124075342 = nextTry_1140850722(j_1124075342, (t_1124075217.data).length - 1);
                }
            };
            F.line = 260;
            rawInsert_1124075508(t_1124075217, t_1124075217, "data", n_1124075220[chckIndx(i_1124075284, 0, (n_1124075220).length - 1)].Field1, n_1124075220[chckIndx(i_1124075284, 0, (n_1124075220).length - 1)].Field2, eh_1124075338, j_1124075342);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_536881401 = addInt(res_536881401, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_1124075677(t_1124075680, key_1124075681, hc_1124075682) {
  var result_1124075683 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_1124075680.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_1124075683 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_1124075734 = (hc_1124075682 & (t_1124075680.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1140850719(t_1124075680.data[chckIndx(h_1124075734, 0, (t_1124075680.data).length - 1)].Field0)) break Label2;
          if (((t_1124075680.data[chckIndx(h_1124075734, 0, (t_1124075680.data).length - 1)].Field0 == hc_1124075682) && eqStrings(t_1124075680.data[chckIndx(h_1124075734, 0, (t_1124075680.data).length - 1)].Field1, key_1124075681))) {
          F.line = 51;
          result_1124075683 = h_1124075734;
          break BeforeRet;
          }
          
          F.line = 52;
          h_1124075734 = nextTry_1140850722(h_1124075734, (t_1124075680.data).length - 1);
        }
    };
    F.line = 53;
    result_1124075683 = subInt((-1), h_1124075734);
  };
  framePtr = F.prev;

  return result_1124075683;

}

function HEX5BHEX5DHEX3D_1124074886(t_1124074889, key_1124074890, val_1124074891) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1124074889.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym42_1124074940 = slotsNeeded_1140850730(32);
    F.line = 169;
    t_1124074889.counter = 0;
    F.line = 170;
    t_1124074889.data = new Array(chckRange(correctSizeHEX60gensym42_1124074940, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_1124074940, 0, 2147483647) ; ++i) { t_1124074889.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    F.line = 59;
    var hc_1124074945 = [0];
    F.line = 60;
    var index_1124074952 = rawGet_1124074096(t_1124074889, key_1124074890, hc_1124074945, 0);
    if ((0 <= index_1124074952)) {
    F.line = 61;
    t_1124074889.data[chckIndx(index_1124074952, 0, (t_1124074889.data).length - 1)].Field2 = nimCopy(null, val_1124074891, NTI1124073483);
    }
    else {
      if (((t_1124074889.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym45_1124075054 = slotsNeeded_1140850730(32);
      F.line = 169;
      t_1124074889.counter = 0;
      F.line = 170;
      t_1124074889.data = new Array(chckRange(correctSizeHEX60gensym45_1124075054, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym45_1124075054, 0, 2147483647) ; ++i) { t_1124074889.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1124075059(t_1124074889)) {
      F.line = 51;
      enlarge_1124075214(t_1124074889);
      F.line = 52;
      index_1124074952 = rawGetKnownHC_1124075677(t_1124074889, key_1124074890, hc_1124074945[0]);
      }
      
      F.line = 53;
      index_1124074952 = subInt((-1), index_1124074952);
      F.line = 54;
      rawInsert_1124075508(t_1124074889, t_1124074889, "data", key_1124074890, val_1124074891, hc_1124074945[0], index_1124074952);
      F.line = 62;
      t_1124074889.counter = addInt(t_1124074889.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_1124074787(t_1124074790, key_1124074791, val_1124074792) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 895;
    F.filename = "tables.nim";
    HEX5BHEX5DHEX3D_1124074886(t_1124074790, key_1124074791, val_1124074792);
  framePtr = F.prev;

  
}

function parseQueryArrays_2449473568(query_2449473569) {
    var Temporary1;
            var Temporary7;

  var result_2449473572 = null;

  var F = {procname: "queries.parseQueryArrays", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/core/queries.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "queries.nim";
    result_2449473572 = newTable_1124076054(32);
    F.line = 40;
    if (nsuStartsWith(query_2449473569, [63])) {
    Temporary1 = HEX5BHEX5D_721421595(query_2449473569, HEX2EHEX2E_956301416(1, 1));
    }
    else {
    Temporary1 = query_2449473569;
    }
    
    var query_2449473599 = nimCopy(null, Temporary1, NTI33554449);
    Label2: {
      F.line = 45;
      var i_2449473600 = [];
      F.line = 389;
      F.filename = "strutils.nim";
      var lastHEX60gensym34_536881392 = 0;
      F.line = 390;
      var splitsHEX60gensym34_536881393 = (-1);
      Label3: {
        F.line = 450;
          Label4: while (true) {
          if (!(lastHEX60gensym34_536881392 <= (query_2449473599).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym34_536881395 = lastHEX60gensym34_536881392;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym34_536881392 < (query_2449473599).length) && !((query_2449473599[chckIndx(lastHEX60gensym34_536881392, 0, (query_2449473599).length - 1)] == 38)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym34_536881392 = addInt(lastHEX60gensym34_536881392, 1);
                }
            };
            if ((splitsHEX60gensym34_536881393 == 0)) {
            F.line = 396;
            lastHEX60gensym34_536881392 = (query_2449473599).length;
            }
            
            F.line = 45;
            F.filename = "queries.nim";
            i_2449473600 = substr_33558079(query_2449473599, firstHEX60gensym34_536881395, subInt(lastHEX60gensym34_536881392, 1));
            F.line = 46;
            var splitted_2449473601 = nsuSplitChar(i_2449473600, 61, (-1));
            if (((2 <= (splitted_2449473601).length) && nsuEndsWith(splitted_2449473601[chckIndx(0, 0, (splitted_2449473601).length - 1)], [91,93]))) {
            F.line = 48;
            var key_2449473623 = HEX5BHEX5D_721421595(splitted_2449473601[chckIndx(0, 0, (splitted_2449473601).length - 1)], HEX2EHEX2E_956301416(0, 3));
            if (hasKey_1124073990(result_2449473572, key_2449473623)) {
            F.line = 50;
            var Temporary8 = nimCopy(null, splitted_2449473601[chckIndx(1, 0, (splitted_2449473601).length - 1)], NTI33554449);
            (Temporary7 = HEX5BHEX5D_1124074409(result_2449473572, key_2449473623), Temporary7)[0][Temporary7[1]].push(Temporary8);;
            }
            else {
              F.line = 52;
            HEX5BHEX5DHEX3D_1124074787(result_2449473572, key_2449473623, [nimCopy(null, splitted_2449473601[chckIndx(1, 0, (splitted_2449473601).length - 1)], NTI33554449)]);
            }
            
            }
            
            if ((splitsHEX60gensym34_536881393 == 0)) {
            F.line = 398;
            F.filename = "strutils.nim";
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym34_536881393 = subInt(splitsHEX60gensym34_536881393, 1);
            F.line = 400;
            lastHEX60gensym34_536881392 = addInt(lastHEX60gensym34_536881392, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_2449473572;

}

function nsuStrip(s_721422810, leading_721422811, trailing_721422812, chars_721422813) {
  var result_721422814 = [];

  var F = {procname: "strutils.strip", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2917;
    F.filename = "strutils.nim";
    var first_721422815 = 0;
    F.line = 2918;
    var last_721422816 = subInt((s_721422810).length, 1);
    if (leading_721422811) {
    Label1: {
      F.line = 2920;
        Label2: while (true) {
        if (!((first_721422815 <= last_721422816) && (chars_721422813[s_721422810[chckIndx(first_721422815, 0, (s_721422810).length - 1)]] != undefined))) break Label2;
          F.line = 2920;
          first_721422815 = addInt(first_721422815, 1);
        }
    };
    }
    
    if (trailing_721422812) {
    Label3: {
      F.line = 2922;
        Label4: while (true) {
        if (!((first_721422815 <= last_721422816) && (chars_721422813[s_721422810[chckIndx(last_721422816, 0, (s_721422810).length - 1)]] != undefined))) break Label4;
          F.line = 2922;
          last_721422816 = subInt(last_721422816, 1);
        }
    };
    }
    
    F.line = 2923;
    result_721422814 = nimCopy(null, substr_33558079(s_721422810, first_721422815, last_721422816), NTI33554449);
  framePtr = F.prev;

  return result_721422814;

}

function skip_754974865(s_754974866, token_754974867) {
  var result_754974868 = 0;

  var F = {procname: "parseutils.skip", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 278;
    F.filename = "parseutils.nim";
    result_754974868 = 0;
    Label1: {
      F.line = 279;
        Label2: while (true) {
        if (!(((result_754974868 < (s_754974866).length) && (result_754974868 < (token_754974867).length)) && (s_754974866[chckIndx(result_754974868, 0, (s_754974866).length - 1)] == token_754974867[chckIndx(result_754974868, 0, (token_754974867).length - 1)]))) break Label2;
          F.line = 281;
          result_754974868 = addInt(result_754974868, 1);
        }
    };
    if (!((result_754974868 == (token_754974867).length))) {
    F.line = 282;
    result_754974868 = 0;
    }
    
  framePtr = F.prev;

  return result_754974868;

}

function skip_754975567(s_754975568, token_754975569, start_754975570) {
  var result_754975571 = 0;

  var F = {procname: "parseutils.skip", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 876;
    F.filename = "parseutils.nim";
    result_754975571 = skip_754974865((s_754975568.slice(start_754975570, (s_754975568).length - 1 + 1)), token_754975569);
  framePtr = F.prev;

  return result_754975571;

}

function integerOutOfRangeError_754975045() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "parseutils.nim";
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_754975047(s_754975048, b_754975049, b_754975049_Idx) {
      var Temporary1;
          var Temporary4;

  var result_754975050 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    F.filename = "parseutils.nim";
    var sign_754975051 = (-1n);
    F.line = 430;
    var i_754975052 = 0;
    if ((i_754975052 < (s_754975048).length)) {
    if ((s_754975048[chckIndx(i_754975052, 0, (s_754975048).length - 1)] == 43)) {
    F.line = 432;
    i_754975052 += 1;
    }
    else {
    if ((s_754975048[chckIndx(i_754975052, 0, (s_754975048).length - 1)] == 45)) {
    F.line = 434;
    i_754975052 += 1;
    F.line = 435;
    sign_754975051 = 1n;
    }
    }
    }
    
      if (!(i_754975052 < (s_754975048).length)) Temporary1 = false; else {        Temporary1 = (ConstSet13[s_754975048[chckIndx(i_754975052, 0, (s_754975048).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 437;
    b_754975049[b_754975049_Idx] = 0n;
    Label2: {
      F.line = 438;
        Label3: while (true) {
          if (!(i_754975052 < (s_754975048).length)) Temporary4 = false; else {            Temporary4 = (ConstSet14[s_754975048[chckIndx(i_754975052, 0, (s_754975048).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 439;
          var c_754975086 = (s_754975048[chckIndx(i_754975052, 0, (s_754975048).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_754975086)) / 10n <= b_754975049[b_754975049_Idx])) {
          F.line = 441;
          b_754975049[b_754975049_Idx] = ((b_754975049[b_754975049_Idx] * 10n) - BigInt(c_754975086));
          }
          else {
            F.line = 443;
          integerOutOfRangeError_754975045();
          }
          
          F.line = 444;
          i_754975052 += 1;
          Label5: {
            F.line = 445;
              Label6: while (true) {
              if (!((i_754975052 < (s_754975048).length) && (s_754975048[chckIndx(i_754975052, 0, (s_754975048).length - 1)] == 95))) break Label6;
                F.line = 445;
                i_754975052 += 1;
              }
          };
        }
    };
    if (((sign_754975051 == (-1n)) && (b_754975049[b_754975049_Idx] == (-9223372036854775808n)))) {
    F.line = 447;
    integerOutOfRangeError_754975045();
    }
    else {
      F.line = 449;
      b_754975049[b_754975049_Idx] = (b_754975049[b_754975049_Idx] * sign_754975051);
      F.line = 450;
      result_754975050 = i_754975052;
    }
    
    }
    
  framePtr = F.prev;

  return result_754975050;

}

function npuParseBiggestInt(s_754975109, number_754975110, number_754975110_Idx) {
  var result_754975111 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 464;
    F.filename = "parseutils.nim";
    var res_754975112 = [0n];
    F.line = 467;
    result_754975111 = rawParseInt_754975047(s_754975109, res_754975112, 0);
    if (!((result_754975111 == 0))) {
    F.line = 469;
    number_754975110[number_754975110_Idx] = res_754975112[0];
    }
    
  framePtr = F.prev;

  return result_754975111;

}

function npuParseInt(s_754975114, number_754975115, number_754975115_Idx) {
  var result_754975116 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    F.filename = "parseutils.nim";
    var res_754975117 = [0n];
    F.line = 483;
    result_754975116 = npuParseBiggestInt(s_754975114, res_754975117, 0);
    if (((res_754975117[0] < (-2147483648n)) || (2147483647n < res_754975117[0]))) {
    F.line = 486;
    integerOutOfRangeError_754975045();
    }
    
    if (!((result_754975116 == 0))) {
    F.line = 488;
    number_754975115[number_754975115_Idx] = chckRange(Number(res_754975117[0]), (-2147483648), 2147483647);
    }
    
  framePtr = F.prev;

  return result_754975116;

}

function parseInt_754975627(s_754975628, number_754975629, number_754975629_Idx, start_754975630) {
  var result_754975631 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 999;
    F.filename = "parseutils.nim";
    result_754975631 = npuParseInt((s_754975628.slice(start_754975630, (s_754975628).length - 1 + 1)), number_754975629, number_754975629_Idx);
  framePtr = F.prev;

  return result_754975631;

}

function callRouter_536880630(force_536880631) {
    var Temporary1;

  var F = {procname: "a1_slides_1_5_1.callRouter", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 868;
    F.filename = "renderer.nim";
    var elem_536880632 = document.getElementById(app_536880546[0].appId);
    F.line = 868;
    var activeElement_536880633 = document.activeElement;
    F.line = 868;
    var query_536880634 = parseQuery_2449473541(cstrToNimstr(window.location.search));
    F.line = 868;
    var queryArr_536880635 = parseQueryArrays_2449473568(cstrToNimstr(window.location.search));
    F.line = 868;
    var path_536880636 = nsuStrip(cstrToNimstr(window.location.hash), true, false, ConstSet12);
    F.line = 868;
    var html_536880637 = null;
    if ((!(force_536880631) && (0 < (currentComponent_1644168809[0]).length))) {
    F.line = 868;
    reRender_1644175067((Temporary1 = HEX5BHEX5D_1644170662(components_1644170371[0], toJSStr(currentComponent_1644168809[0])), Temporary1)[0][Temporary1[1]]);
    F.line = 868;
    break BeforeRet;
    }
    
    if (eqStrings(path_536880636, [47])) {
    F.line = 53;
    F.filename = "a1_slides_1_5_1.nim";
    html_536880637 = tg2([100,105,118], [allTheSlides_3103784978[0][chckIndx(0, 0, (allTheSlides_3103784978[0]).length - 1)][chckIndx(0, 0, (allTheSlides_3103784978[0][chckIndx(0, 0, (allTheSlides_3103784978[0]).length - 1)]).length - 1)]], true);
    }
    else {
      F.line = 54;
      var slideX_536880938 = [0];
      F.line = 54;
      var slideY_536880939 = [0];
      F.line = 624;
      F.filename = "renderer.nim";
      var inp_536880943 = nimCopy(null, path_536880636, NTI33554449);
      F.line = 624;
      var idx_536880941 = 0;
      F.line = 624;
      var res_536880942 = false;
      F.line = 624;
      var resLen_536880944 = skip_754975567(inp_536880943, [115,108,105,100,101,115,45], idx_536880941);
      if (!((resLen_536880944 == 0))) {
      F.line = 624;
      idx_536880941 = addInt(idx_536880941, resLen_536880944);
      F.line = 624;
      var resLen_536880946 = parseInt_754975627(inp_536880943, slideX_536880938, 0, idx_536880941);
      if (!((resLen_536880946 == 0))) {
      F.line = 624;
      idx_536880941 = addInt(idx_536880941, resLen_536880946);
      F.line = 624;
      var resLen_536880947 = skip_754975567(inp_536880943, [45], idx_536880941);
      if (!((resLen_536880947 == 0))) {
      F.line = 624;
      idx_536880941 = addInt(idx_536880941, resLen_536880947);
      F.line = 624;
      var resLen_536880949 = parseInt_754975627(inp_536880943, slideY_536880939, 0, idx_536880941);
      if (!((resLen_536880949 == 0))) {
      F.line = 624;
      idx_536880941 = addInt(idx_536880941, resLen_536880949);
      F.line = 796;
      F.filename = "macros.nim";
      res_536880942 = true;
      }
      
      }
      
      }
      
      }
      
    if ((res_536880942 && ((inp_536880943).length <= idx_536880941))) {
    F.line = 55;
    F.filename = "a1_slides_1_5_1.nim";
    html_536880637 = tg2([100,105,118], [allTheSlides_3103784978[0][chckIndx(slideX_536880938[0], 0, (allTheSlides_3103784978[0]).length - 1)][chckIndx(slideY_536880939[0], 0, (allTheSlides_3103784978[0][chckIndx(slideX_536880938[0], 0, (allTheSlides_3103784978[0]).length - 1)]).length - 1)]], true);
    }
    }
    if (!((html_536880637 == null))) {
    F.line = 868;
    F.filename = "renderer.nim";
    rndrvd(application_1644167268[0], html_536880637, force_536880631);
    if (activeElement_536880633.hasAttribute("id")) {
    F.line = 868;
    var _activeElement__536880998 = document.getElementById(activeElement_536880633.id);
    if (!((_activeElement__536880998 == null))) {
    F.line = 868;
    _activeElement__536880998.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], _activeElement__536880998.nodeName)) {
    F.line = 868;
    var oldActiveElement_536881126 = activeElement_536880633;
    F.line = 868;
    var currentActiveElement_536881127 = _activeElement__536880998;
    F.line = 868;
    currentActiveElement_536881127.setSelectionRange(oldActiveElement_536881126.selectionStart, oldActiveElement_536881126.selectionEnd, oldActiveElement_536881126.selectionDirection);
    }
    
    }
    
    }
    
    }
    
  };
  framePtr = F.prev;

  
}

function onDOMContentLoaded_536881128(ev_536881129) {
  var F = {procname: "a1_slides_1_5_1.onDOMContentLoaded", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 868;
    F.filename = "renderer.nim";
    callRouter_536880630(false);
  framePtr = F.prev;

  
}
var Temporary16;
var Temporary17;
var Temporary18;

function HEX3Aanonymous_536872418(scopeSelf_536872419, inComponent_536872420, compName_536872421, inCycle_536872422, cycleCounter_536872423, cycleCounter_536872423_Idx, compCounter_536872424) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    
function HEX3Aanonymous_536872556(scopeSelf_536872557, inComponent_536872558, compName_536872559, inCycle_536872560, cycleCounter_536872561, cycleCounter_536872561_Idx, compCounter_536872562) {
        var Temporary1;

      var result_536872563 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 41;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 41;
        if ((inCycle_536872560 && inComponent_536872558)) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        if (inCycle_536872560) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        if (inComponent_536872558) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        }}
        var _res_536872672 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp404_536872555.slotData = _res_536872672;
        result_536872563 = _res_536872672;
      framePtr = F.prev;

      return result_536872563;

    }
    var Temporary4;
    var Temporary5;
    
function HEX3Aanonymous_536872802(scopeSelf_536872803, inComponent_536872804, compName_536872805, inCycle_536872806, cycleCounter_536872807, cycleCounter_536872807_Idx, compCounter_536872808) {
        var Temporary1;

      var result_536872809 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 42;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 42;
        if ((inCycle_536872806 && inComponent_536872804)) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        if (inCycle_536872806) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        if (inComponent_536872804) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        }}
        var _res_536872918 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp405_536872801.slotData = _res_536872918;
        result_536872809 = _res_536872918;
      framePtr = F.prev;

      return result_536872809;

    }
    var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_536873074(scopeSelf_536873075, inComponent_536873076, compName_536873077, inCycle_536873078, cycleCounter_536873079, cycleCounter_536873079_Idx, compCounter_536873080) {
        var Temporary1;

      var result_536873081 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 41;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 41;
        if ((inCycle_536873078 && inComponent_536873076)) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        if (inCycle_536873078) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        if (inComponent_536873076) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        }}
        var _res_536873190 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp406_536873073.slotData = _res_536873190;
        result_536873081 = _res_536873190;
      framePtr = F.prev;

      return result_536873081;

    }
    var Temporary8;
    var Temporary9;
    
function HEX3Aanonymous_536873320(scopeSelf_536873321, inComponent_536873322, compName_536873323, inCycle_536873324, cycleCounter_536873325, cycleCounter_536873325_Idx, compCounter_536873326) {
        var Temporary1;

      var result_536873327 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 42;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 42;
        if ((inCycle_536873324 && inComponent_536873322)) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        if (inCycle_536873324) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        if (inComponent_536873322) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        }}
        var _res_536873436 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp407_536873319.slotData = _res_536873436;
        result_536873327 = _res_536873436;
      framePtr = F.prev;

      return result_536873327;

    }
    var Temporary10;
    var Temporary11;
    
function HEX3Aanonymous_536873592(scopeSelf_536873593, inComponent_536873594, compName_536873595, inCycle_536873596, cycleCounter_536873597, cycleCounter_536873597_Idx, compCounter_536873598) {
        var Temporary1;

      var result_536873599 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 41;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 41;
        if ((inCycle_536873596 && inComponent_536873594)) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        if (inCycle_536873596) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        if (inComponent_536873594) {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
        }
        }}
        var _res_536873708 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp408_536873591.slotData = _res_536873708;
        result_536873599 = _res_536873708;
      framePtr = F.prev;

      return result_536873599;

    }
    var Temporary12;
    var Temporary13;
    
function HEX3Aanonymous_536873838(scopeSelf_536873839, inComponent_536873840, compName_536873841, inCycle_536873842, cycleCounter_536873843, cycleCounter_536873843_Idx, compCounter_536873844) {
        var Temporary1;

      var result_536873845 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 42;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 42;
        if ((inCycle_536873842 && inComponent_536873840)) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        if (inCycle_536873842) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        if (inComponent_536873840) {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
        }
        }}
        var _res_536873954 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp409_536873837.slotData = _res_536873954;
        result_536873845 = _res_536873954;
      framePtr = F.prev;

      return result_536873845;

    }
      var Temporary14;
      var Temporary15;
      
function HEX3Aanonymous_536874110(scopeSelf_536874111, inComponent_536874112, compName_536874113, inCycle_536874114, cycleCounter_536874115, cycleCounter_536874115_Idx, compCounter_536874116) {
          var Temporary1;

        var result_536874117 = null;

        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
        framePtr = F;
          F.line = 41;
          F.filename = "a1_slides_1_5_1.nim";
          F.line = 41;
          if ((inCycle_536874114 && inComponent_536874112)) {
          Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
          }
          else {
          if (inCycle_536874114) {
          Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
          }
          else {
          if (inComponent_536874112) {
          Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
          }
          else {
          Temporary1 = tg2([100,105,118], [lessonTarget_3120562222()], true);
          }
          }}
          var _res_536874226 = Temporary1;
          F.line = 293;
          F.filename = "macro_utils.nim";
          comp410_536874109.slotData = _res_536874226;
          result_536874117 = _res_536874226;
        framePtr = F.prev;

        return result_536874117;

      }
      var Temporary16;
      var Temporary17;
      
function HEX3Aanonymous_536874356(scopeSelf_536874357, inComponent_536874358, compName_536874359, inCycle_536874360, cycleCounter_536874361, cycleCounter_536874361_Idx, compCounter_536874362) {
          var Temporary1;

        var result_536874363 = null;

        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
        framePtr = F;
          F.line = 42;
          F.filename = "a1_slides_1_5_1.nim";
          F.line = 42;
          if ((inCycle_536874360 && inComponent_536874358)) {
          Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
          }
          else {
          if (inCycle_536874360) {
          Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
          }
          else {
          if (inComponent_536874358) {
          Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
          }
          else {
          Temporary1 = tg2([100,105,118], [lessonCriteria_3120562984], true);
          }
          }}
          var _res_536874472 = Temporary1;
          F.line = 293;
          F.filename = "macro_utils.nim";
          comp411_536874355.slotData = _res_536874472;
          result_536874363 = _res_536874472;
        framePtr = F.prev;

        return result_536874363;

      }

  var result_536872425 = null;

  var F = {procname: "a1_slides_1_5_1.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
  framePtr = F;
    F.line = 42;
    F.filename = "a1_slides_1_5_1.nim";
    F.line = 42;
    if ((inCycle_536872422 && inComponent_536872420)) {
    F.line = 41;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,52,48,52] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary2 = ([99,111,109,112,52,48,52] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp404_536872554 = initSlideTarget_3036676631(Temporary2);
    F.line = 41;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary3 = ([99,111,109,112,52,48,52] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary3 = ([99,111,109,112,52,48,52] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp404_536872555 = rgcmp(toJSStr(Temporary3), _comp404_536872554);
    F.line = 41;
    comp404_536872555.slot = HEX3Aanonymous_536872556;
    F.line = 41;
    var data_comp404_536872673 = render_1644175063(comp404_536872555);
    F.line = 41;
    addArgIter_1694499355(data_comp404_536872673, ([100,97,116,97,45] || []).concat(comp404_536872555.uniqCompId || []));
    F.line = 41;
    window.addEventListener('beforeunload', data_comp404_536872673.exited);
    F.line = 41;
    window.addEventListener('pagehide', data_comp404_536872673.pageHide);
    F.line = 41;
    window.addEventListener('pageshow', data_comp404_536872673.pageShow);
    F.line = 42;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary4 = ([99,111,109,112,52,48,53] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary4 = ([99,111,109,112,52,48,53] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp405_536872800 = initSlideCriteria_3036677405(Temporary4);
    F.line = 42;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary5 = ([99,111,109,112,52,48,53] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary5 = ([99,111,109,112,52,48,53] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp405_536872801 = rgcmp(toJSStr(Temporary5), _comp405_536872800);
    F.line = 42;
    comp405_536872801.slot = HEX3Aanonymous_536872802;
    F.line = 42;
    var data_comp405_536872919 = render_1644175063(comp405_536872801);
    F.line = 42;
    addArgIter_1694499355(data_comp405_536872919, ([100,97,116,97,45] || []).concat(comp405_536872801.uniqCompId || []));
    F.line = 42;
    window.addEventListener('beforeunload', data_comp405_536872919.exited);
    F.line = 42;
    window.addEventListener('pagehide', data_comp405_536872919.pageHide);
    F.line = 42;
    window.addEventListener('pageshow', data_comp405_536872919.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp404_536872673, data_comp405_536872919], true);
    }
    else {
    if (inCycle_536872422) {
    F.line = 41;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary6 = ([99,111,109,112,52,48,54] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary6 = ([99,111,109,112,52,48,54] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp406_536873072 = initSlideTarget_3036676631(Temporary6);
    F.line = 41;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary7 = ([99,111,109,112,52,48,54] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary7 = ([99,111,109,112,52,48,54] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp406_536873073 = rgcmp(toJSStr(Temporary7), _comp406_536873072);
    F.line = 41;
    comp406_536873073.slot = HEX3Aanonymous_536873074;
    F.line = 41;
    var data_comp406_536873191 = render_1644175063(comp406_536873073);
    F.line = 41;
    addArgIter_1694499355(data_comp406_536873191, ([100,97,116,97,45] || []).concat(comp406_536873073.uniqCompId || []));
    F.line = 41;
    window.addEventListener('beforeunload', data_comp406_536873191.exited);
    F.line = 41;
    window.addEventListener('pagehide', data_comp406_536873191.pageHide);
    F.line = 41;
    window.addEventListener('pageshow', data_comp406_536873191.pageShow);
    F.line = 42;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary8 = ([99,111,109,112,52,48,55] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary8 = ([99,111,109,112,52,48,55] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp407_536873318 = initSlideCriteria_3036677405(Temporary8);
    F.line = 42;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary9 = ([99,111,109,112,52,48,55] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary9 = ([99,111,109,112,52,48,55] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp407_536873319 = rgcmp(toJSStr(Temporary9), _comp407_536873318);
    F.line = 42;
    comp407_536873319.slot = HEX3Aanonymous_536873320;
    F.line = 42;
    var data_comp407_536873437 = render_1644175063(comp407_536873319);
    F.line = 42;
    addArgIter_1694499355(data_comp407_536873437, ([100,97,116,97,45] || []).concat(comp407_536873319.uniqCompId || []));
    F.line = 42;
    window.addEventListener('beforeunload', data_comp407_536873437.exited);
    F.line = 42;
    window.addEventListener('pagehide', data_comp407_536873437.pageHide);
    F.line = 42;
    window.addEventListener('pageshow', data_comp407_536873437.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp406_536873191, data_comp407_536873437], true);
    }
    else {
    if (inComponent_536872420) {
    F.line = 41;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary10 = ([99,111,109,112,52,48,56] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary10 = ([99,111,109,112,52,48,56] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp408_536873590 = initSlideTarget_3036676631(Temporary10);
    F.line = 41;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary11 = ([99,111,109,112,52,48,56] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary11 = ([99,111,109,112,52,48,56] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp408_536873591 = rgcmp(toJSStr(Temporary11), _comp408_536873590);
    F.line = 41;
    comp408_536873591.slot = HEX3Aanonymous_536873592;
    F.line = 41;
    var data_comp408_536873709 = render_1644175063(comp408_536873591);
    F.line = 41;
    addArgIter_1694499355(data_comp408_536873709, ([100,97,116,97,45] || []).concat(comp408_536873591.uniqCompId || []));
    F.line = 41;
    window.addEventListener('beforeunload', data_comp408_536873709.exited);
    F.line = 41;
    window.addEventListener('pagehide', data_comp408_536873709.pageHide);
    F.line = 41;
    window.addEventListener('pageshow', data_comp408_536873709.pageShow);
    F.line = 42;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary12 = ([99,111,109,112,52,48,57] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary12 = ([99,111,109,112,52,48,57] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp409_536873836 = initSlideCriteria_3036677405(Temporary12);
    F.line = 42;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary13 = ([99,111,109,112,52,48,57] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || []);
    }
    else {
    Temporary13 = ([99,111,109,112,52,48,57] || []).concat(compCounter_536872424 || [],[95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536872423[cycleCounter_536872423_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp409_536873837 = rgcmp(toJSStr(Temporary13), _comp409_536873836);
    F.line = 42;
    comp409_536873837.slot = HEX3Aanonymous_536873838;
    F.line = 42;
    var data_comp409_536873955 = render_1644175063(comp409_536873837);
    F.line = 42;
    addArgIter_1694499355(data_comp409_536873955, ([100,97,116,97,45] || []).concat(comp409_536873837.uniqCompId || []));
    F.line = 42;
    window.addEventListener('beforeunload', data_comp409_536873955.exited);
    F.line = 42;
    window.addEventListener('pagehide', data_comp409_536873955.pageHide);
    F.line = 42;
    window.addEventListener('pageshow', data_comp409_536873955.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp408_536873709, data_comp409_536873955], true);
    }
    else {
      F.line = 41;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary14 = [99,111,109,112,52,49,48];
      }
      else {
      Temporary14 = ([99,111,109,112,52,49,48] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var _comp410_536874108 = initSlideTarget_3036676631(Temporary14);
      F.line = 41;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary15 = [99,111,109,112,52,49,48];
      }
      else {
      Temporary15 = ([99,111,109,112,52,49,48] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var comp410_536874109 = rgcmp(toJSStr(Temporary15), _comp410_536874108);
      F.line = 41;
      comp410_536874109.slot = HEX3Aanonymous_536874110;
      F.line = 41;
      var data_comp410_536874227 = render_1644175063(comp410_536874109);
      F.line = 41;
      addArgIter_1694499355(data_comp410_536874227, ([100,97,116,97,45] || []).concat(comp410_536874109.uniqCompId || []));
      F.line = 41;
      window.addEventListener('beforeunload', data_comp410_536874227.exited);
      F.line = 41;
      window.addEventListener('pagehide', data_comp410_536874227.pageHide);
      F.line = 41;
      window.addEventListener('pageshow', data_comp410_536874227.pageShow);
      F.line = 42;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary16 = [99,111,109,112,52,49,49];
      }
      else {
      Temporary16 = ([99,111,109,112,52,49,49] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var _comp411_536874354 = initSlideCriteria_3036677405(Temporary16);
      F.line = 42;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary17 = [99,111,109,112,52,49,49];
      }
      else {
      Temporary17 = ([99,111,109,112,52,49,49] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var comp411_536874355 = rgcmp(toJSStr(Temporary17), _comp411_536874354);
      F.line = 42;
      comp411_536874355.slot = HEX3Aanonymous_536874356;
      F.line = 42;
      var data_comp411_536874473 = render_1644175063(comp411_536874355);
      F.line = 42;
      addArgIter_1694499355(data_comp411_536874473, ([100,97,116,97,45] || []).concat(comp411_536874355.uniqCompId || []));
      F.line = 42;
      window.addEventListener('beforeunload', data_comp411_536874473.exited);
      F.line = 42;
      window.addEventListener('pagehide', data_comp411_536874473.pageHide);
      F.line = 42;
      window.addEventListener('pageshow', data_comp411_536874473.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp410_536874227, data_comp411_536874473], true);
    }
    }}
    var _res_536874498 = Temporary1;
    F.line = 293;
    F.filename = "macro_utils.nim";
    comp397_536872417[0].slotData = _res_536874498;
    result_536872425 = _res_536874498;
  framePtr = F.prev;

  return result_536872425;

}
var Temporary19;
var Temporary20;

function HEX3Aanonymous_536874628(scopeSelf_536874629, inComponent_536874630, compName_536874631, inCycle_536874632, cycleCounter_536874633, cycleCounter_536874633_Idx, compCounter_536874634) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    
function HEX3Aanonymous_536874766(scopeSelf_536874767, inComponent_536874768, compName_536874769, inCycle_536874770, cycleCounter_536874771, cycleCounter_536874771_Idx, compCounter_536874772) {
        var Temporary1;

      var result_536874773 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 46;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 46;
        if ((inCycle_536874770 && inComponent_536874768)) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        if (inCycle_536874770) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        if (inComponent_536874768) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        }}
        var _res_536876062 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp414_536874765.slotData = _res_536876062;
        result_536874773 = _res_536876062;
      framePtr = F.prev;

      return result_536874773;

    }
    var Temporary4;
    var Temporary5;
    
function HEX3Aanonymous_536876218(scopeSelf_536876219, inComponent_536876220, compName_536876221, inCycle_536876222, cycleCounter_536876223, cycleCounter_536876223_Idx, compCounter_536876224) {
        var Temporary1;

      var result_536876225 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 46;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 46;
        if ((inCycle_536876222 && inComponent_536876220)) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        if (inCycle_536876222) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        if (inComponent_536876220) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        }}
        var _res_536877514 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp425_536876217.slotData = _res_536877514;
        result_536876225 = _res_536877514;
      framePtr = F.prev;

      return result_536876225;

    }
    var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_536877670(scopeSelf_536877671, inComponent_536877672, compName_536877673, inCycle_536877674, cycleCounter_536877675, cycleCounter_536877675_Idx, compCounter_536877676) {
        var Temporary1;

      var result_536877677 = null;

      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
      framePtr = F;
        F.line = 46;
        F.filename = "a1_slides_1_5_1.nim";
        F.line = 46;
        if ((inCycle_536877674 && inComponent_536877672)) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        if (inCycle_536877674) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        if (inComponent_536877672) {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
        }
        }}
        var _res_536878966 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp436_536877669.slotData = _res_536878966;
        result_536877677 = _res_536878966;
      framePtr = F.prev;

      return result_536877677;

    }
      var Temporary8;
      var Temporary9;
      
function HEX3Aanonymous_536879122(scopeSelf_536879123, inComponent_536879124, compName_536879125, inCycle_536879126, cycleCounter_536879127, cycleCounter_536879127_Idx, compCounter_536879128) {
          var Temporary1;

        var result_536879129 = null;

        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
        framePtr = F;
          F.line = 46;
          F.filename = "a1_slides_1_5_1.nim";
          F.line = 46;
          if ((inCycle_536879126 && inComponent_536879124)) {
          Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
          }
          else {
          if (inCycle_536879126) {
          Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
          }
          else {
          if (inComponent_536879124) {
          Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
          }
          else {
          Temporary1 = tg2([100,105,118], [tg2([100,105,118], [tg4([84,111,112,105,99,32,49,46,53,32,76,101,115,115,111,110,32,49], true, [], false)], false), tg2([100,105,118], [tg4([115,111,108,118,101,32,108,105,110,101,97,114,32,105,110,101,113,117,97,108,105,116,105,101,115], true, [], false)], false)], true);
          }
          }}
          var _res_536880418 = Temporary1;
          F.line = 293;
          F.filename = "macro_utils.nim";
          comp447_536879121.slotData = _res_536880418;
          result_536879129 = _res_536880418;
        framePtr = F.prev;

        return result_536879129;

      }

  var result_536874635 = null;

  var F = {procname: "a1_slides_1_5_1.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "a1_slides_1_5_1.nim";
    F.line = 44;
    if ((inCycle_536874632 && inComponent_536874630)) {
    F.line = 45;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,52,49,52] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || []);
    }
    else {
    Temporary2 = ([99,111,109,112,52,49,52] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp414_536874764 = initSlideHeader_3103785094(Temporary2, [118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,32,109,105,100,100,108,101,59]);
    F.line = 45;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary3 = ([99,111,109,112,52,49,52] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || []);
    }
    else {
    Temporary3 = ([99,111,109,112,52,49,52] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp414_536874765 = rgcmp(toJSStr(Temporary3), _comp414_536874764);
    F.line = 46;
    comp414_536874765.slot = HEX3Aanonymous_536874766;
    F.line = 46;
    var data_comp414_536876063 = render_1644175063(comp414_536874765);
    F.line = 46;
    addArgIter_1694499355(data_comp414_536876063, ([100,97,116,97,45] || []).concat(comp414_536874765.uniqCompId || []));
    F.line = 46;
    window.addEventListener('beforeunload', data_comp414_536876063.exited);
    F.line = 46;
    window.addEventListener('pagehide', data_comp414_536876063.pageHide);
    F.line = 46;
    window.addEventListener('pageshow', data_comp414_536876063.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp414_536876063], true);
    }
    else {
    if (inCycle_536874632) {
    F.line = 45;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary4 = ([99,111,109,112,52,50,53] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || []);
    }
    else {
    Temporary4 = ([99,111,109,112,52,50,53] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp425_536876216 = initSlideHeader_3103785094(Temporary4, [118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,32,109,105,100,100,108,101,59]);
    F.line = 45;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary5 = ([99,111,109,112,52,50,53] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || []);
    }
    else {
    Temporary5 = ([99,111,109,112,52,50,53] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp425_536876217 = rgcmp(toJSStr(Temporary5), _comp425_536876216);
    F.line = 46;
    comp425_536876217.slot = HEX3Aanonymous_536876218;
    F.line = 46;
    var data_comp425_536877515 = render_1644175063(comp425_536876217);
    F.line = 46;
    addArgIter_1694499355(data_comp425_536877515, ([100,97,116,97,45] || []).concat(comp425_536876217.uniqCompId || []));
    F.line = 46;
    window.addEventListener('beforeunload', data_comp425_536877515.exited);
    F.line = 46;
    window.addEventListener('pagehide', data_comp425_536877515.pageHide);
    F.line = 46;
    window.addEventListener('pageshow', data_comp425_536877515.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp425_536877515], true);
    }
    else {
    if (inComponent_536874630) {
    F.line = 45;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary6 = ([99,111,109,112,52,51,54] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || []);
    }
    else {
    Temporary6 = ([99,111,109,112,52,51,54] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp436_536877668 = initSlideHeader_3103785094(Temporary6, [118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,32,109,105,100,100,108,101,59]);
    F.line = 45;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary7 = ([99,111,109,112,52,51,54] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || []);
    }
    else {
    Temporary7 = ([99,111,109,112,52,51,54] || []).concat(compCounter_536874634 || [],[95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_536874633[cycleCounter_536874633_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp436_536877669 = rgcmp(toJSStr(Temporary7), _comp436_536877668);
    F.line = 46;
    comp436_536877669.slot = HEX3Aanonymous_536877670;
    F.line = 46;
    var data_comp436_536878967 = render_1644175063(comp436_536877669);
    F.line = 46;
    addArgIter_1694499355(data_comp436_536878967, ([100,97,116,97,45] || []).concat(comp436_536877669.uniqCompId || []));
    F.line = 46;
    window.addEventListener('beforeunload', data_comp436_536878967.exited);
    F.line = 46;
    window.addEventListener('pagehide', data_comp436_536878967.pageHide);
    F.line = 46;
    window.addEventListener('pageshow', data_comp436_536878967.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp436_536878967], true);
    }
    else {
      F.line = 45;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary8 = [99,111,109,112,52,52,55];
      }
      else {
      Temporary8 = ([99,111,109,112,52,52,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var _comp447_536879120 = initSlideHeader_3103785094(Temporary8, [118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,32,109,105,100,100,108,101,59]);
      F.line = 45;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary9 = [99,111,109,112,52,52,55];
      }
      else {
      Temporary9 = ([99,111,109,112,52,52,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var comp447_536879121 = rgcmp(toJSStr(Temporary9), _comp447_536879120);
      F.line = 46;
      comp447_536879121.slot = HEX3Aanonymous_536879122;
      F.line = 46;
      var data_comp447_536880419 = render_1644175063(comp447_536879121);
      F.line = 46;
      addArgIter_1694499355(data_comp447_536880419, ([100,97,116,97,45] || []).concat(comp447_536879121.uniqCompId || []));
      F.line = 46;
      window.addEventListener('beforeunload', data_comp447_536880419.exited);
      F.line = 46;
      window.addEventListener('pagehide', data_comp447_536880419.pageHide);
      F.line = 46;
      window.addEventListener('pageshow', data_comp447_536880419.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp447_536880419], true);
    }
    }}
    var _res_536880444 = Temporary1;
    F.line = 293;
    F.filename = "macro_utils.nim";
    comp401_536874627[0].slotData = _res_536880444;
    result_536874635 = _res_536880444;
  framePtr = F.prev;

  return result_536874635;

}
var Temporary21;
  var Temporary22;
var F = {procname: "module a1_slides_1_5_1", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
framePtr = F;
F.line = 29;
F.filename = "a1_slides_1_5_1.nim";
randomize_2516582698();
F.line = 30;
F.line = 35;
Label12: {
  F.line = 35;
  var HEX3Atmp_536871933 = choose_536871208(lessonJokeCsv_536871019, 5);
  F.line = 1024;
  F.filename = "sequtils.nim";
  var iHEX60gensym8_536871936 = [0];
  F.line = 1025;
  var resultHEX60gensym8_536871943 = [newSeq_503317028(chckRange((HEX3Atmp_536871933).length, 0, 2147483647))];
  Label13: {
    F.line = 1026;
    var it_536871947 = [[]];
    F.line = 241;
    F.filename = "iterators.nim";
    var i_536881352 = 0;
    F.line = 242;
    var L_536881353 = (HEX3Atmp_536871933).length;
    Label14: {
      F.line = 243;
        Label15: while (true) {
        if (!(i_536881352 < L_536881353)) break Label15;
          F.line = 1026;
          F.filename = "sequtils.nim";
          it_536871947[0] = HEX3Atmp_536871933[chckIndx(i_536881352, 0, (HEX3Atmp_536871933).length - 1)];
          F.line = 35;
          F.filename = "a1_slides_1_5_1.nim";
          resultHEX60gensym8_536871943[0][chckIndx(iHEX60gensym8_536871936[0], 0, (resultHEX60gensym8_536871943[0]).length - 1)] = nimCopy(null, it_536871947[0][chckIndx(1, 0, (it_536871947[0]).length - 1)], NTI33554449);
          F.line = 1026;
          F.filename = "sequtils.nim";
          iHEX60gensym8_536871936[0] = addInt(iHEX60gensym8_536871936[0], 1);
          F.line = 245;
          F.filename = "iterators.nim";
          i_536881352 = addInt(i_536881352, 1);
          if (!(((HEX3Atmp_536871933).length == L_536881353))) {
          F.line = 246;
          failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    };
  };
};
var jokes_536871952 = nimCopy(null, resultHEX60gensym8_536871943[0], NTI503316800);
F.line = 43;
F.filename = "slides.nim";
allTheSlides_3103784978[0].push([]);;
F.line = 38;
F.filename = "a1_slides_1_5_1.nim";
F.line = 41;
if ((scopedCycleCounter_1644167270[0] == 0)) {
Temporary17 = [99,111,109,112,51,57,55];
}
else {
Temporary17 = ([99,111,109,112,51,57,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
}

var _comp397_536872416 = [initLessonTargets_3036676106(Temporary17)];
F.line = 41;
if ((scopedCycleCounter_1644167270[0] == 0)) {
Temporary18 = [99,111,109,112,51,57,55];
}
else {
Temporary18 = ([99,111,109,112,51,57,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
}

var comp397_536872417 = [rgcmp(toJSStr(Temporary18), _comp397_536872416[0])];
F.line = 42;
comp397_536872417[0].slot = HEX3Aanonymous_536872418;
F.line = 42;
var data_comp397_536874499 = render_1644175063(comp397_536872417[0]);
F.line = 42;
addArgIter_1694499355(data_comp397_536874499, ([100,97,116,97,45] || []).concat(comp397_536872417[0].uniqCompId || []));
F.line = 42;
window.addEventListener('beforeunload', data_comp397_536874499.exited);
F.line = 42;
window.addEventListener('pagehide', data_comp397_536874499.pageHide);
F.line = 42;
window.addEventListener('pageshow', data_comp397_536874499.pageShow);
F.line = 44;
if ((scopedCycleCounter_1644167270[0] == 0)) {
Temporary19 = [99,111,109,112,52,48,49];
}
else {
Temporary19 = ([99,111,109,112,52,48,49] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
}

var _comp401_536874626 = [initSlideBody_3036678179(Temporary19)];
F.line = 44;
if ((scopedCycleCounter_1644167270[0] == 0)) {
Temporary20 = [99,111,109,112,52,48,49];
}
else {
Temporary20 = ([99,111,109,112,52,48,49] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
}

var comp401_536874627 = [rgcmp(toJSStr(Temporary20), _comp401_536874626[0])];
F.line = 44;
comp401_536874627[0].slot = HEX3Aanonymous_536874628;
F.line = 44;
var data_comp401_536880445 = render_1644175063(comp401_536874627[0]);
F.line = 44;
addArgIter_1694499355(data_comp401_536880445, ([100,97,116,97,45] || []).concat(comp401_536874627[0].uniqCompId || []));
F.line = 44;
window.addEventListener('beforeunload', data_comp401_536880445.exited);
F.line = 44;
window.addEventListener('pagehide', data_comp401_536880445.pageHide);
F.line = 44;
window.addEventListener('pageshow', data_comp401_536880445.pageShow);
(Temporary16 = HEX5BHEX5D_536871981(allTheSlides_3103784978[0], 1), Temporary16)[0][Temporary16[1]].push(tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("height: 100vh; width: 100vw; font-size: 400%; padding: 1em;padding: 0em;")}], 0), [tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [119,105,100,116,104,58,32,49,48,48,118,119,59,32,100,105,115,112,108,97,121,58,32,102,108,101,120,59]}], 0), [data_comp397_536874499, data_comp401_536880445], false)], false)], false)], true));;
F.line = 51;
var app_536880546 = [registerApp_1644170418("ROOT")];
F.line = 626;
F.filename = "renderer.nim";
app_536880546[0].router = callRouter_536880630;
F.line = 2624;
F.filename = "system.nim";
if (globalThis.alreadyExecutedHEX60gensym21_536881133 === undefined) {
  globalThis.alreadyExecutedHEX60gensym21_536881133 = [false];
}
if (!(alreadyExecutedHEX60gensym21_536881133[0])) {
F.line = 2626;
alreadyExecutedHEX60gensym21_536881133[0] = true;
F.line = 401;
F.filename = "renderer.nim";
document.addEventListener("hashchange", onDOMContentLoaded_536881128, false);
}

F.line = 413;
function onHashChangeCallback() {
  
F.line = 405;
if (((Temporary22 = cstrToNimstr(window.location.hash), Temporary22)[chckIndx(0, 0, (Temporary22).length - 1)] == 35)) {
Temporary21 = toJSStr(HEX5BHEX5D_721421595(cstrToNimstr(window.location.hash), HEX2EHEX2E_956301416(1, 1)));
}
else {
Temporary21 = window.location.hash;
}

var rHEX60gensym20_536881286 = Temporary21;
if (!(eqStrings(cstrToNimstr(rHEX60gensym20_536881286), cstrToNimstr(currentRoute_1644167269[0])))) {
F.line = 411;
rawEcho([114,111,117,116,101,32,102,114,111,109,32], cstrToNimstr(currentRoute_1644167269[0]), [32,116,111,32], cstrToNimstr(rHEX60gensym20_536881286));
F.line = 412;
rt(rHEX60gensym20_536881286);
}

F.line = 413;

}
window.addEventListener("hashchange", onHashChangeCallback);

if ((((window.location.hash) == null ? 0 : (window.location.hash).length) == 0)) {
F.line = 415;
rt("/");
}
else {
  F.line = 417;
  if(window.location.hash[0]=='#'){rt(window.location.hash.substr(1));}else{rt(window.location.hash);}
}

framePtr = F.prev;
var F = {procname: "module a1_slides_1_5_1", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/algebra1/lesson1.5.1/a1_slides_1_5_1/a1_slides_1_5_1.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal_33557113(message_33557116) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_33557116, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");
  framePtr = F.prev;

  
}

function chckNilDisp(p_33557112, p_33557112_Idx) {
    if ((p_33557112 == null && p_33557112_Idx == 0)) {
    sysFatal_33557113([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function script_2835351105(self_2835351106) {
  var F = {procname: "images.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function nucruneLen(s_771751964) {
  var result_771751965 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "unicode.nim";
    result_771751965 = 0;
    F.line = 53;
    var i_771751966 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_771751966 < (s_771751964).length)) break Label2;
          if ((s_771751964[chckIndx(i_771751966, 0, (s_771751964).length - 1)] <= 127)) {
          F.line = 55;
          i_771751966 = addInt(i_771751966, 1);
          }
          else {
          if (((s_771751964[chckIndx(i_771751966, 0, (s_771751964).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_771751966 = addInt(i_771751966, 2);
          }
          else {
          if (((s_771751964[chckIndx(i_771751966, 0, (s_771751964).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_771751966 = addInt(i_771751966, 3);
          }
          else {
          if (((s_771751964[chckIndx(i_771751966, 0, (s_771751964).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_771751966 = addInt(i_771751966, 4);
          }
          else {
          if (((s_771751964[chckIndx(i_771751966, 0, (s_771751964).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_771751966 = addInt(i_771751966, 5);
          }
          else {
          if (((s_771751964[chckIndx(i_771751966, 0, (s_771751964).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_771751966 = addInt(i_771751966, 6);
          }
          else {
            F.line = 61;
          i_771751966 = addInt(i_771751966, 1);
          }
          }}}}}
          F.line = 62;
          result_771751965 = addInt(result_771751965, 1);
        }
    };
  framePtr = F.prev;

  return result_771751965;

}

function runeLen_771759125(s_771759126) {
  var result_771759127 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1153;
    F.filename = "unicode.nim";
    result_771759127 = nucruneLen((s_771759126.slice(0, (s_771759126).length - 1 + 1)));
  framePtr = F.prev;

  return result_771759127;

}

function runeLenAt_771752030(s_771752031, i_771752032) {
  var result_771752033 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_771752031[chckIndx(i_771752032, 0, (s_771752031).length - 1)] <= 127)) {
    F.line = 74;
    F.filename = "unicode.nim";
    result_771752033 = 1;
    }
    else {
    if (((s_771752031[chckIndx(i_771752032, 0, (s_771752031).length - 1)] >>> 5) == 6)) {
    F.line = 75;
    result_771752033 = 2;
    }
    else {
    if (((s_771752031[chckIndx(i_771752032, 0, (s_771752031).length - 1)] >>> 4) == 14)) {
    F.line = 76;
    result_771752033 = 3;
    }
    else {
    if (((s_771752031[chckIndx(i_771752032, 0, (s_771752031).length - 1)] >>> 3) == 30)) {
    F.line = 77;
    result_771752033 = 4;
    }
    else {
    if (((s_771752031[chckIndx(i_771752032, 0, (s_771752031).length - 1)] >>> 2) == 62)) {
    F.line = 78;
    result_771752033 = 5;
    }
    else {
    if (((s_771752031[chckIndx(i_771752032, 0, (s_771752031).length - 1)] >>> 1) == 126)) {
    F.line = 79;
    result_771752033 = 6;
    }
    else {
      F.line = 80;
      result_771752033 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_771752033;

}

function runeOffset_771752654(s_771752655, pos_771752656, start_771752657) {
  var result_771752658 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 331;
    F.filename = "unicode.nim";
    var i_771752659 = 0;
    F.line = 332;
    var o_771752660 = start_771752657;
    Label1: {
      F.line = 333;
        Label2: while (true) {
        if (!(i_771752659 < pos_771752656)) break Label2;
          F.line = 334;
          o_771752660 = addInt(o_771752660, chckRange(runeLenAt_771752030(s_771752655, o_771752660), 0, 2147483647));
          if (((s_771752655).length <= o_771752660)) {
          F.line = 336;
          result_771752658 = (-1);
          break BeforeRet;
          }
          
          F.line = 337;
          i_771752659 = addInt(i_771752659, 1);
        }
    };
    F.line = 338;
    result_771752658 = o_771752660;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_771752658;

}

function runeOffset_771759300(s_771759301, pos_771759302, start_771759303) {
  var result_771759304 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1196;
    F.filename = "unicode.nim";
    result_771759304 = runeOffset_771752654((s_771759301.slice(0, (s_771759301).length - 1 + 1)), pos_771759302, start_771759303);
  framePtr = F.prev;

  return result_771759304;

}

function validateUtf8_771752272(s_771752273) {
  var result_771752274 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    F.filename = "unicode.nim";
    var i_771752275 = 0;
    F.line = 185;
    var L_771752279 = (s_771752273).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_771752275 < L_771752279)) break Label2;
          if ((s_771752273[chckIndx(i_771752275, 0, (s_771752273).length - 1)] <= 127)) {
          F.line = 188;
          i_771752275 = addInt(i_771752275, 1);
          }
          else {
          if (((s_771752273[chckIndx(i_771752275, 0, (s_771752273).length - 1)] >>> 5) == 6)) {
          if ((s_771752273[chckIndx(i_771752275, 0, (s_771752273).length - 1)] < 194)) {
          F.line = 190;
          result_771752274 = i_771752275;
          break BeforeRet;
          }
          
          if (((addInt(i_771752275, 1) < L_771752279) && ((s_771752273[chckIndx(addInt(i_771752275, 1), 0, (s_771752273).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_771752275 = addInt(i_771752275, 2);
          }
          else {
            F.line = 192;
            result_771752274 = i_771752275;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_771752273[chckIndx(i_771752275, 0, (s_771752273).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_771752275, 2) < L_771752279) && ((s_771752273[chckIndx(addInt(i_771752275, 1), 0, (s_771752273).length - 1)] >>> 6) == 2)) && ((s_771752273[chckIndx(addInt(i_771752275, 2), 0, (s_771752273).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_771752275 = addInt(i_771752275, 3);
          }
          else {
            F.line = 196;
            result_771752274 = i_771752275;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_771752273[chckIndx(i_771752275, 0, (s_771752273).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_771752275, 3) < L_771752279) && ((s_771752273[chckIndx(addInt(i_771752275, 1), 0, (s_771752273).length - 1)] >>> 6) == 2)) && ((s_771752273[chckIndx(addInt(i_771752275, 2), 0, (s_771752273).length - 1)] >>> 6) == 2)) && ((s_771752273[chckIndx(addInt(i_771752275, 3), 0, (s_771752273).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_771752275 = addInt(i_771752275, 4);
          }
          else {
            F.line = 202;
            result_771752274 = i_771752275;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_771752274 = i_771752275;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_771752274 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_771752274;

}

function validateUtf8_771759297(s_771759298) {
  var result_771759299 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1186;
    F.filename = "unicode.nim";
    result_771759299 = validateUtf8_771752272((s_771759298.slice(0, (s_771759298).length - 1 + 1)));
  framePtr = F.prev;

  return result_771759299;

}

function alignString_704643092(s_704643093, minimumWidth_704643094, align_704643095, fill_704643096) {
      var Temporary1;

  var result_704643097 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_704643094 == 0)) {
    F.line = 335;
    F.filename = "strformat.nim";
    result_704643097 = nimCopy(null, s_704643093, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_771759297(s_704643093) == (-1))) {
      Temporary1 = runeLen_771759125(s_704643093);
      }
      else {
      Temporary1 = (s_704643093).length;
      }
      
      var sRuneLen_704643098 = Temporary1;
      F.line = 338;
      var toFill_704643099 = subInt(minimumWidth_704643094, sRuneLen_704643098);
      if ((toFill_704643099 <= 0)) {
      F.line = 340;
      result_704643097 = nimCopy(null, s_704643093, NTI33554449);
      }
      else {
      if (((align_704643095 == 60) || (align_704643095 == 0))) {
      F.line = 342;
      result_704643097 = nimCopy(null, (s_704643093 || []).concat(nsuRepeatChar(fill_704643096, chckRange(toFill_704643099, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_704643095 == 94)) {
      F.line = 344;
      var half_704643100 = divInt(toFill_704643099, 2);
      F.line = 345;
      result_704643097 = nimCopy(null, (nsuRepeatChar(fill_704643096, chckRange(half_704643100, 0, 2147483647)) || []).concat(s_704643093 || [],nsuRepeatChar(fill_704643096, chckRange(subInt(toFill_704643099, half_704643100), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_704643097 = nimCopy(null, (nsuRepeatChar(fill_704643096, chckRange(toFill_704643099, 0, 2147483647)) || []).concat(s_704643093 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_704643097;

}

function formatValue_704643243(result_704643244, result_704643244_Idx, value_704643245, specifier_704643246) {
    var Temporary1;

  var F = {procname: "strformat.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 557;
    F.filename = "strformat.nim";
    var spec_704643247 = parseStandardFormatSpecifier_704643130(specifier_704643246, 0, false);
    F.line = 558;
    var value_704643248 = nimCopy(null, value_704643245, NTI33554449);
    F.line = 559;
    switch (spec_704643247.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 562;
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_704643247.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_704643247.precision == (-1)))) {
    if ((spec_704643247.precision < runeLen_771759125(value_704643248))) {
    F.line = 567;
    if (value_704643248.length < (Temporary1 = chckRange(runeOffset_771759300(value_704643248, chckRange(spec_704643247.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_704643248.length; i < Temporary1; ++i) value_704643248.push(0); }
         else {value_704643248.length = Temporary1; };
    }
    
    }
    
    F.line = 568;
    result_704643244[result_704643244_Idx].push.apply(result_704643244[result_704643244_Idx], alignString_704643092(value_704643248, spec_704643247.minimumWidth, spec_704643247.align, spec_704643247.fill));;
  framePtr = F.prev;

  
}

function HEX24_2785020465(self_2785020467) {
  var result_2785020468 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "state.nim";
    result_2785020468 = nimCopy(null, self_2785020467.val, NTI33554449);
  framePtr = F.prev;

  return result_2785020468;

}

function formatValue_2785020246(result_2785020248, result_2785020248_Idx, value_2785020249, specifier_2785020250) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_704643243(result_2785020248, result_2785020248_Idx, HEX24_2785020465(value_2785020249), specifier_2785020250);
  framePtr = F.prev;

  
}

function renderTag_2835351110(self_2835351111) {
  var result_2835351112 = null;

  var F = {procname: "images.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "images.nim";
    F.line = 31;
    Label1: {
      F.line = 31;
      var fmtRes_2835351117 = [mnewString(0)];
      F.line = 31;
      fmtRes_2835351117[0].push.apply(fmtRes_2835351117[0], [119,105,100,116,104,58,32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2835351117, 0, self_2835351111.width, []);
      F.line = 31;
      fmtRes_2835351117[0].push.apply(fmtRes_2835351117[0], [59,32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2835351117, 0, self_2835351111.css, []);
    };
    var css_2835351144 = nimCopy(null, fmtRes_2835351117[0], NTI33554449);
    result_2835351112 = tg2([100,105,118], [tg2([100,105,118], [], true), tg1([105,109,103], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,114,99], Field1: nimCopy(null, self_2835351111.file.val, NTI33554449)}, NTI2835350562), nimCopy(null, {Field0: [97,108,116], Field1: nimCopy(null, self_2835351111.file.val, NTI33554449)}, NTI2835350562), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, css_2835351144, NTI33554449)}, NTI2835350562)], 0), [], false)], true);
  framePtr = F.prev;

  return result_2835351112;

}

function textTag_1694499242(text_1694499243) {
  var result_1694499244 = null;

  var F = {procname: "tag.textTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/tag.nim", line: 0};
  framePtr = F;
    F.line = 378;
    F.filename = "tag.nim";
    result_1694499244 = document.createTextNode(toJSStr(text_1694499243));
    F.line = 379;
    result_1694499244.onlyChildren = false;
  framePtr = F.prev;

  return result_1694499244;

}

function style_2835351107(self_2835351108) {
  var result_2835351109 = [];

  var F = {procname: "images.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "images.nim";
    result_2835351109 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2835351109;

}

function render_2835351295(self_2835351296) {
  var result_2835351297 = null;

  var F = {procname: "images.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "images.nim";
    currentComponentsList_1644168814[0].push(self_2835351296);;
    F.line = 25;
    currentComponent_1644168809[0] = nimCopy(null, self_2835351296.uniqCompId, NTI33554449);
    F.line = 25;
    script_2835351105(self_2835351296);
    if ((self_2835351296.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2835351296.created(self_2835351296, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2835351296.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2835351296.beforeUpdated(self_2835351296, null);
    F.line = 25;
    F.filename = "images.nim";
    result_2835351297 = renderTag_2835351110(self_2835351296);
    F.line = 25;
    tgadd(result_2835351297, [tg2([115,116,121,108,101], [textTag_1694499242(style_2835351107(self_2835351296))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2835351296.rendered(self_2835351296, null);
    F.line = 25;
    F.filename = "images.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2835351297;

}

function script_2852128547(self_2852128548) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function nimFloatToString_385876121(a_385876122) {
  var result_385876123 = null;

  var F = {procname: "formatfloat.nimFloatToString", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 106;
    F.filename = "formatfloat.nim";
        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876122))
      result_385876123 = a_385876122 === 0 && 1 / a_385876122 < 0 ? "-0.0" : a_385876122+".0"
    else {
      result_385876123 = a_385876122+""
      if(nimOnlyDigitsOrMinus(result_385876123)){
        result_385876123 = a_385876122+".0"
      }
    }
  
  framePtr = F.prev;

  return result_385876123;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
  var F = {procname: "addFloat.addFloat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/std/formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 136;
    F.filename = "formatfloat.nim";
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_385876121(x_33557566));
  framePtr = F.prev;

  
}

function HEX24_33557559(x_33557561) {
  var result_33557562 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 14;
    F.filename = "dollars.nim";
    addFloat_33557563(result_33557562, 0, x_33557561);
  framePtr = F.prev;

  return result_33557562[0];

}

function HEX24_2835350083(self_2835350085) {
  var result_2835350086 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "state.nim";
    result_2835350086 = nimCopy(null, HEX24_33557559(self_2835350085.val), NTI33554449);
  framePtr = F.prev;

  return result_2835350086;

}

function formatValue_2835349864(result_2835349866, result_2835349866_Idx, value_2835349867, specifier_2835349868) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_704643243(result_2835349866, result_2835349866_Idx, HEX24_2835350083(value_2835349867), specifier_2835349868);
  framePtr = F.prev;

  
}

function HEX24_2785022651(self_2785022653) {
  var result_2785022654 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "state.nim";
    result_2785022654 = nimCopy(null, HEX24_369098760(self_2785022653.val), NTI33554449);
  framePtr = F.prev;

  return result_2785022654;

}

function formatValue_2852127860(result_2852127862, result_2852127862_Idx, value_2852127863, specifier_2852127864) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_704643243(result_2852127862, result_2852127862_Idx, HEX24_2785022651(value_2852127863), specifier_2852127864);
  framePtr = F.prev;

  
}

function renderTag_2852128552(self_2852128553) {
  var result_2852128554 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "layout.nim";
    Label1: {
      F.line = 47;
      var fmtRes_2852128657 = [mnewString(0)];
      F.line = 47;
      fmtRes_2852128657[0].push.apply(fmtRes_2852128657[0], [102,108,101,120,58,32]);;
      F.line = 47;
      formatValue_2835349864(fmtRes_2852128657, 0, self_2852128553.stretch, []);
      F.line = 47;
      fmtRes_2852128657[0].push.apply(fmtRes_2852128657[0], [32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,103,114,105,100,59,32,103,114,105,100,45,116,101,109,112,108,97,116,101,45,99,111,108,117,109,110,115,58,32,114,101,112,101,97,116,40]);;
      F.line = 47;
      formatValue_2852127860(fmtRes_2852128657, 0, self_2852128553.n, []);
      F.line = 47;
      fmtRes_2852128657[0].push.apply(fmtRes_2852128657[0], [44,32,49,102,114,41,59,32,103,114,105,100,45,103,97,112,58,32,50,37,59,103,114,105,100,45,97,117,116,111,45,114,111,119,115,58,32,97,117,116,111,59,32]);;
      F.line = 47;
      formatValue_2785020246(fmtRes_2852128657, 0, self_2852128553.css, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2852128807 = [0];
    result_2852128554 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852128657[0], NTI33554449)}, NTI2852127814)], 0), [self_2852128553.slot(self_2852128553, true, [80,114,111,98,71,114,105,100], false, cclCounter_2852128807, 0, self_2852128553.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2852128554;

}

function style_2852128549(self_2852128550) {
  var result_2852128551 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "layout.nim";
    result_2852128551 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852128551;

}

function render_2852128850(self_2852128851) {
  var result_2852128852 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852128851);;
    F.line = 41;
    currentComponent_1644168809[0] = nimCopy(null, self_2852128851.uniqCompId, NTI33554449);
    F.line = 41;
    script_2852128547(self_2852128851);
    if ((self_2852128851.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852128851.created(self_2852128851, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852128851.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852128851.beforeUpdated(self_2852128851, null);
    F.line = 41;
    F.filename = "layout.nim";
    result_2852128852 = renderTag_2852128552(self_2852128851);
    F.line = 41;
    tgadd(result_2852128852, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852128549(self_2852128851))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852128851.rendered(self_2852128851, null);
    F.line = 41;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852128852;

}

function script_2852127728(self_2852127729) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2852127733(self_2852127734) {
  var result_2852127735 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "layout.nim";
    Label1: {
      F.line = 38;
      var fmtRes_2852127838 = [mnewString(0)];
      F.line = 38;
      fmtRes_2852127838[0].push.apply(fmtRes_2852127838[0], [102,108,101,120,58,32]);;
      F.line = 38;
      formatValue_2835349864(fmtRes_2852127838, 0, self_2852127734.stretch, []);
      F.line = 38;
      fmtRes_2852127838[0].push.apply(fmtRes_2852127838[0], [32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,103,114,105,100,59,32,103,114,105,100,45,116,101,109,112,108,97,116,101,45,99,111,108,117,109,110,115,58,32,114,101,112,101,97,116,40]);;
      F.line = 38;
      formatValue_2852127860(fmtRes_2852127838, 0, self_2852127734.n, []);
      F.line = 38;
      fmtRes_2852127838[0].push.apply(fmtRes_2852127838[0], [44,32,49,102,114,41,59,103,114,105,100,45,97,117,116,111,45,114,111,119,115,58,32,97,117,116,111,59,32]);;
      F.line = 38;
      formatValue_2785020246(fmtRes_2852127838, 0, self_2852127734.css, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2852128201 = [0];
    result_2852127735 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852127838[0], NTI33554449)}, NTI2852127357)], 0), [self_2852127734.slot(self_2852127734, true, [71,114,105,100], false, cclCounter_2852128201, 0, self_2852127734.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2852127735;

}

function style_2852127730(self_2852127731) {
  var result_2852127732 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "layout.nim";
    result_2852127732 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852127732;

}

function render_2852128244(self_2852128245) {
  var result_2852128246 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852128245);;
    F.line = 33;
    currentComponent_1644168809[0] = nimCopy(null, self_2852128245.uniqCompId, NTI33554449);
    F.line = 33;
    script_2852127728(self_2852128245);
    if ((self_2852128245.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852128245.created(self_2852128245, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852128245.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852128245.beforeUpdated(self_2852128245, null);
    F.line = 33;
    F.filename = "layout.nim";
    result_2852128246 = renderTag_2852127733(self_2852128245);
    F.line = 33;
    tgadd(result_2852128246, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852127730(self_2852128245))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852128245.rendered(self_2852128245, null);
    F.line = 33;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852128246;

}

function script_2852127119(self_2852127120) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function printUnit_2852126857() {
    var Temporary1;

  var result_2852126858 = [];

  var F = {procname: "layout.printUnit", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "layout.nim";
    if (printStatus_2852126753[0].val) {
    Temporary1 = [118,104];
    }
    else {
    Temporary1 = [101,109];
    }
    
    result_2852126858 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_2852126858;

}

function renderTag_2852127124(self_2852127125) {
  var result_2852127126 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 31;
    F.filename = "layout.nim";
    Label1: {
      F.line = 30;
      var fmtRes_2852127229 = [mnewString(0)];
      F.line = 30;
      fmtRes_2852127229[0].push.apply(fmtRes_2852127229[0], [104,101,105,103,104,116,32,58,32]);;
      F.line = 30;
      formatValue_1040187595(fmtRes_2852127229, 0, mulInt(self_2852127125.n.val, 100), []);
      F.line = 30;
      formatValue_704643243(fmtRes_2852127229, 0, printUnit_2852126857(), []);
      F.line = 30;
      fmtRes_2852127229[0].push.apply(fmtRes_2852127229[0], makeNimstrLit("; display : flex; flex-direction: column; page-break-inside: avoid; page-break-after: avoid; overflow : hidden; padding-left: 0.25in; padding-right: 0.25in; padding-top: 0.25in; padding-bottom: 0.25in; "));;
      F.line = 30;
      formatValue_2785020246(fmtRes_2852127229, 0, self_2852127125.css, []);
    };
    Label2: {
      F.line = 30;
      var fmtRes_2852127252 = [mnewString(0)];
      F.line = 30;
      formatValue_2785020246(fmtRes_2852127252, 0, self_2852127125.class, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2852127376 = [0];
    result_2852127126 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852127229[0], NTI33554449)}, NTI2852126997), nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2852127252[0], NTI33554449)}, NTI2852126997)], 0), [self_2852127125.slot(self_2852127125, true, [80,97,103,101,115], false, cclCounter_2852127376, 0, self_2852127125.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2852127126;

}

function style_2852127121(self_2852127122) {
  var result_2852127123 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "layout.nim";
    result_2852127123 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852127123;

}

function render_2852127435(self_2852127436) {
  var result_2852127437 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852127436);;
    F.line = 25;
    currentComponent_1644168809[0] = nimCopy(null, self_2852127436.uniqCompId, NTI33554449);
    F.line = 25;
    script_2852127119(self_2852127436);
    if ((self_2852127436.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852127436.created(self_2852127436, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852127436.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852127436.beforeUpdated(self_2852127436, null);
    F.line = 25;
    F.filename = "layout.nim";
    result_2852127437 = renderTag_2852127124(self_2852127436);
    F.line = 25;
    tgadd(result_2852127437, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852127121(self_2852127436))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852127436.rendered(self_2852127436, null);
    F.line = 25;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852127437;

}

function script_2852129146(self_2852129147) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2852129151(self_2852129152) {
  var result_2852129153 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "layout.nim";
    Label1: {
      F.line = 55;
      var fmtRes_2852129256 = [mnewString(0)];
      F.line = 55;
      fmtRes_2852129256[0].push.apply(fmtRes_2852129256[0], [102,108,101,120,58,32]);;
      F.line = 55;
      formatValue_2835349864(fmtRes_2852129256, 0, self_2852129152.stretch, []);
      F.line = 55;
      fmtRes_2852129256[0].push.apply(fmtRes_2852129256[0], [32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,102,108,101,120,59,32]);;
      F.line = 55;
      formatValue_2785020246(fmtRes_2852129256, 0, self_2852129152.css, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2852129393 = [0];
    result_2852129153 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852129256[0], NTI33554449)}, NTI2852128160)], 0), [self_2852129152.slot(self_2852129152, true, [80,114,111,98,82,111,119], false, cclCounter_2852129393, 0, self_2852129152.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2852129153;

}

function style_2852129148(self_2852129149) {
  var result_2852129150 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "layout.nim";
    result_2852129150 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852129150;

}

function render_2852129436(self_2852129437) {
  var result_2852129438 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852129437);;
    F.line = 50;
    currentComponent_1644168809[0] = nimCopy(null, self_2852129437.uniqCompId, NTI33554449);
    F.line = 50;
    script_2852129146(self_2852129437);
    if ((self_2852129437.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852129437.created(self_2852129437, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852129437.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852129437.beforeUpdated(self_2852129437, null);
    F.line = 50;
    F.filename = "layout.nim";
    result_2852129438 = renderTag_2852129151(self_2852129437);
    F.line = 50;
    tgadd(result_2852129438, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852129148(self_2852129437))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852129437.rendered(self_2852129437, null);
    F.line = 50;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852129438;

}

function script_2852130766(self_2852130767) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2852130771(self_2852130772) {
  var result_2852130773 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "layout.nim";
    Label1: {
      F.line = 77;
      var fmtRes_2852130876 = [mnewString(0)];
      F.line = 77;
      fmtRes_2852130876[0].push.apply(fmtRes_2852130876[0], [102,108,101,120,58,32]);;
      F.line = 77;
      formatValue_2835349864(fmtRes_2852130876, 0, self_2852130772.scale, []);
      F.line = 77;
      fmtRes_2852130876[0].push.apply(fmtRes_2852130876[0], [32,48,32,48,59,32]);;
      F.line = 77;
      formatValue_2785020246(fmtRes_2852130876, 0, self_2852130772.css, []);
    };
    result_2852130773 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852130876[0], NTI33554449)}, NTI2852129097)], 0), [], false)], true);
  framePtr = F.prev;

  return result_2852130773;

}

function style_2852130768(self_2852130769) {
  var result_2852130770 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 73;
    F.filename = "layout.nim";
    result_2852130770 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852130770;

}

function render_2852130935(self_2852130936) {
  var result_2852130937 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 73;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852130936);;
    F.line = 73;
    currentComponent_1644168809[0] = nimCopy(null, self_2852130936.uniqCompId, NTI33554449);
    F.line = 73;
    script_2852130766(self_2852130936);
    if ((self_2852130936.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852130936.created(self_2852130936, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852130936.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852130936.beforeUpdated(self_2852130936, null);
    F.line = 73;
    F.filename = "layout.nim";
    result_2852130937 = renderTag_2852130771(self_2852130936);
    F.line = 73;
    tgadd(result_2852130937, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852130768(self_2852130936))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852130936.rendered(self_2852130936, null);
    F.line = 73;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852130937;

}

function script_2852130298(self_2852130299) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2852130303(self_2852130304) {
  var result_2852130305 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 70;
    F.filename = "layout.nim";
    Label1: {
      F.line = 70;
      var fmtRes_2852130408 = [mnewString(0)];
      F.line = 70;
      fmtRes_2852130408[0].push.apply(fmtRes_2852130408[0], [104,101,105,103,104,116,58,32]);;
      F.line = 70;
      formatValue_2785020246(fmtRes_2852130408, 0, self_2852130304.height, []);
      F.line = 70;
      fmtRes_2852130408[0].push.apply(fmtRes_2852130408[0], [59,32,119,105,100,116,104,58,32]);;
      F.line = 70;
      formatValue_2785020246(fmtRes_2852130408, 0, self_2852130304.width, []);
      F.line = 70;
      fmtRes_2852130408[0].push.apply(fmtRes_2852130408[0], [59,32]);;
      F.line = 70;
      formatValue_2785020246(fmtRes_2852130408, 0, self_2852130304.css, []);
    };
    result_2852130305 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852130408[0], NTI33554449)}, NTI2852128826)], 0), [], false)], true);
  framePtr = F.prev;

  return result_2852130305;

}

function style_2852130300(self_2852130301) {
  var result_2852130302 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 65;
    F.filename = "layout.nim";
    result_2852130302 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852130302;

}

function render_2852130480(self_2852130481) {
  var result_2852130482 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 65;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852130481);;
    F.line = 65;
    currentComponent_1644168809[0] = nimCopy(null, self_2852130481.uniqCompId, NTI33554449);
    F.line = 65;
    script_2852130298(self_2852130481);
    if ((self_2852130481.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852130481.created(self_2852130481, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852130481.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852130481.beforeUpdated(self_2852130481, null);
    F.line = 65;
    F.filename = "layout.nim";
    result_2852130482 = renderTag_2852130303(self_2852130481);
    F.line = 65;
    tgadd(result_2852130482, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852130300(self_2852130481))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852130481.rendered(self_2852130481, null);
    F.line = 65;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852130482;

}

function script_2852129712(self_2852129713) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function HEX24_2785019199(self_2785019201) {
  var result_2785019202 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "state.nim";
    result_2785019202 = nimCopy(null, cstrToNimstr(self_2785019201.val), NTI33554449);
  framePtr = F.prev;

  return result_2785019202;

}

function formatValue_2785018980(result_2785018982, result_2785018982_Idx, value_2785018983, specifier_2785018984) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_704643243(result_2785018982, result_2785018982_Idx, HEX24_2785019199(value_2785018983), specifier_2785018984);
  framePtr = F.prev;

  
}

function renderTag_2852129717(self_2852129718) {
  var result_2852129719 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 63;
    F.filename = "layout.nim";
    Label1: {
      F.line = 63;
      var fmtRes_2852129932 = [mnewString(0)];
      F.line = 63;
      formatValue_2785018980(fmtRes_2852129932, 0, self_2852129718.css, []);
      F.line = 63;
      fmtRes_2852129932[0].push.apply(fmtRes_2852129932[0], [32]);;
      F.line = 63;
      formatValue_704643243(fmtRes_2852129932, 0, [98,111,114,100,101,114,58,32,49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48,59], []);
    };
    result_2852129719 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [99,108,97,115,115], Field1: [110,111,45,115,99,114,101,101,110]}], 0), [tg1([104,114], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852129932[0], NTI33554449)}, NTI2852128539)], 0), [], false)], false)], true);
  framePtr = F.prev;

  return result_2852129719;

}

function style_2852129714(self_2852129715) {
  var result_2852129716 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 59;
    F.filename = "layout.nim";
    result_2852129716 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852129716;

}

function render_2852130002(self_2852130003) {
  var result_2852130004 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 59;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852130003);;
    F.line = 59;
    currentComponent_1644168809[0] = nimCopy(null, self_2852130003.uniqCompId, NTI33554449);
    F.line = 59;
    script_2852129712(self_2852130003);
    if ((self_2852130003.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852130003.created(self_2852130003, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852130003.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852130003.beforeUpdated(self_2852130003, null);
    F.line = 59;
    F.filename = "layout.nim";
    result_2852130004 = renderTag_2852129717(self_2852130003);
    F.line = 59;
    tgadd(result_2852130004, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852129714(self_2852130003))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852130003.rendered(self_2852130003, null);
    F.line = 59;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852130004;

}

function script_2852131208(self_2852131209) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initStrut_2852130043(uniqCompId_2852130044, height_2852130045, width_2852130046, css_2852130047) {
    
function HEX3Aanonymous_2852130059(self_2852130060, ev_2852130061) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852130062(self_2852130063, ev_2852130064) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852130065(self_2852130066, ev_2852130067) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852130068(self_2852130069, ev_2852130070) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852130071(self_2852130072, ev_2852130073) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852130074(self_2852130075, ev_2852130076) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852130077(self_2852130078, ev_2852130079) {
      var F = {procname: "initStrut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2852130048 = null;

  var F = {procname: "layout.initStrut", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 68;
    F.filename = "layout.nim";
    var self_2852130058 = {uniqCompId: nimCopy(null, uniqCompId_2852130044, NTI33554449), height: remember_2785019842(height_2852130045), width: remember_2785019842(width_2852130046), css: remember_2785019842(css_2852130047), m_type: NTI2852128623, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 70;
    self_2852130058.beforeUpdated = HEX3Aanonymous_2852130059;
    F.line = 70;
    self_2852130058.pageShow = HEX3Aanonymous_2852130062;
    F.line = 70;
    self_2852130058.pageHide = HEX3Aanonymous_2852130065;
    F.line = 70;
    self_2852130058.rendered = HEX3Aanonymous_2852130068;
    F.line = 70;
    self_2852130058.exited = HEX3Aanonymous_2852130071;
    F.line = 70;
    self_2852130058.created = HEX3Aanonymous_2852130074;
    F.line = 70;
    self_2852130058.updated = HEX3Aanonymous_2852130077;
    if (eqStrings(height_2852130045, [49,101,109])) {
    F.line = 66;
    self_2852130058.height = remember_2785019842(height_2852130045);
    }
    
    if (eqStrings(width_2852130046, [49,101,109])) {
    F.line = 67;
    self_2852130058.width = remember_2785019842(width_2852130046);
    }
    
    if (eqStrings(css_2852130047, [])) {
    F.line = 68;
    self_2852130058.css = remember_2785019842(css_2852130047);
    }
    
    F.line = 68;
    createdComponentsList_1644168819[0].push(self_2852130058);;
    F.line = 779;
    F.filename = "components.nim";
    result_2852130048 = self_2852130058;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2852130048;

}

function renderTag_2852131213(self_2852131214) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      
function HEX3Aanonymous_2852131437(scopeSelf_2852131438, inComponent_2852131439, compName_2852131440, inCycle_2852131441, cycleCounter_2852131442, cycleCounter_2852131442_Idx, compCounter_2852131443) {
          var Temporary1;

        var result_2852131444 = null;

        var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
        framePtr = F;
          F.line = 85;
          F.filename = "layout.nim";
          F.line = 85;
          if ((inCycle_2852131441 && inComponent_2852131439)) {
          Temporary1 = tg2([100,105,118], [], true);
          }
          else {
          if (inCycle_2852131441) {
          Temporary1 = tg2([100,105,118], [], true);
          }
          else {
          if (inComponent_2852131439) {
          Temporary1 = tg2([100,105,118], [], true);
          }
          else {
          Temporary1 = tg2([100,105,118], [], true);
          }
          }}
          var _res_2852131453 = Temporary1;
          F.line = 293;
          F.filename = "macro_utils.nim";
          comp37_2852131436.slotData = _res_2852131453;
          result_2852131444 = _res_2852131453;
        framePtr = F.prev;

        return result_2852131444;

      }

  var result_2852131215 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 85;
    F.filename = "layout.nim";
    if (self_2852131214.p.val) {
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2852131314 = [0];
    Temporary1 = tg2([100,105,118], [self_2852131214.slot(self_2852131214, true, [83,116,114,117,116,73,102], false, cclCounter_2852131314, 0, self_2852131214.uniqCompId)], true);
    }
    else {
      F.line = 85;
      F.filename = "layout.nim";
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary2 = ([99,111,109,112,51,55] || []).concat(self_2852131214.uniqCompId || []);
      }
      else {
      Temporary2 = ([99,111,109,112,51,55] || []).concat(self_2852131214.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var _comp37_2852131435 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
      F.line = 85;
      if ((scopedCycleCounter_1644167270[0] == 0)) {
      Temporary3 = ([99,111,109,112,51,55] || []).concat(self_2852131214.uniqCompId || []);
      }
      else {
      Temporary3 = ([99,111,109,112,51,55] || []).concat(self_2852131214.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
      }
      
      var comp37_2852131436 = rgcmp(toJSStr(Temporary3), _comp37_2852131435);
      F.line = 85;
      comp37_2852131436.slot = HEX3Aanonymous_2852131437;
      F.line = 85;
      var data_comp37_2852131454 = render_1644175063(comp37_2852131436);
      F.line = 85;
      addArgIter_1694499355(data_comp37_2852131454, ([100,97,116,97,45] || []).concat(comp37_2852131436.uniqCompId || []));
      F.line = 85;
      window.addEventListener('beforeunload', data_comp37_2852131454.exited);
      F.line = 85;
      window.addEventListener('pagehide', data_comp37_2852131454.pageHide);
      F.line = 85;
      window.addEventListener('pageshow', data_comp37_2852131454.pageShow);
    Temporary1 = tg2([100,105,118], [data_comp37_2852131454], true);
    }
    
    result_2852131215 = tg2([100,105,118], [Temporary1], true);
  framePtr = F.prev;

  return result_2852131215;

}

function style_2852131210(self_2852131211) {
  var result_2852131212 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 79;
    F.filename = "layout.nim";
    result_2852131212 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852131212;

}

function render_2852131512(self_2852131513) {
  var result_2852131514 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 79;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852131513);;
    F.line = 79;
    currentComponent_1644168809[0] = nimCopy(null, self_2852131513.uniqCompId, NTI33554449);
    F.line = 79;
    script_2852131208(self_2852131513);
    if ((self_2852131513.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852131513.created(self_2852131513, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852131513.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852131513.beforeUpdated(self_2852131513, null);
    F.line = 79;
    F.filename = "layout.nim";
    result_2852131514 = renderTag_2852131213(self_2852131513);
    F.line = 79;
    tgadd(result_2852131514, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852131210(self_2852131513))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852131513.rendered(self_2852131513, null);
    F.line = 79;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852131514;

}

function script_2835349804(self_2835349805) {
  var F = {procname: "images.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2835349809(self_2835349810) {
  var result_2835349811 = null;

  var F = {procname: "images.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 13;
    F.filename = "images.nim";
    F.line = 11;
    Label1: {
      F.line = 11;
      var fmtRes_2835349816 = [mnewString(0)];
      F.line = 11;
      fmtRes_2835349816[0].push.apply(fmtRes_2835349816[0], [46,46,47,46,46,47,46,46,47,105,109,97,103,101,115,47]);;
      F.line = 11;
      formatValue_2785020246(fmtRes_2835349816, 0, self_2835349810.stem, []);
      F.line = 11;
      fmtRes_2835349816[0].push.apply(fmtRes_2835349816[0], [46,115,118,103]);;
    };
    var source_2835349830 = nimCopy(null, fmtRes_2835349816[0], NTI33554449);
    F.line = 12;
    Label2: {
      F.line = 12;
      var fmtRes_2835349855 = [mnewString(0)];
      F.line = 12;
      fmtRes_2835349855[0].push.apply(fmtRes_2835349855[0], [119,105,100,116,104,58,32]);;
      F.line = 12;
      formatValue_2835349864(fmtRes_2835349855, 0, self_2835349810.scale, []);
      F.line = 12;
      fmtRes_2835349855[0].push.apply(fmtRes_2835349855[0], [101,109,59,32]);;
      F.line = 12;
      formatValue_2785020246(fmtRes_2835349855, 0, self_2835349810.css, []);
    };
    var css_2835350103 = nimCopy(null, fmtRes_2835349855[0], NTI33554449);
    result_2835349811 = tg2([100,105,118], [tg2([100,105,118], [], true), tg2([100,105,118], [], true), tg1([105,109,103], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,114,99], Field1: nimCopy(null, source_2835349830, NTI33554449)}, NTI2835349915), nimCopy(null, {Field0: [97,108,116], Field1: nimCopy(null, self_2835349810.stem.val, NTI33554449)}, NTI2835349915), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, css_2835350103, NTI33554449)}, NTI2835349915)], 0), [], false)], true);
  framePtr = F.prev;

  return result_2835349811;

}

function style_2835349806(self_2835349807) {
  var result_2835349808 = [];

  var F = {procname: "images.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 5;
    F.filename = "images.nim";
    result_2835349808 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2835349808;

}

function render_2835350270(self_2835350271) {
  var result_2835350272 = null;

  var F = {procname: "images.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 5;
    F.filename = "images.nim";
    currentComponentsList_1644168814[0].push(self_2835350271);;
    F.line = 5;
    currentComponent_1644168809[0] = nimCopy(null, self_2835350271.uniqCompId, NTI33554449);
    F.line = 5;
    script_2835349804(self_2835350271);
    if ((self_2835350271.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2835350271.created(self_2835350271, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2835350271.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2835350271.beforeUpdated(self_2835350271, null);
    F.line = 5;
    F.filename = "images.nim";
    result_2835350272 = renderTag_2835349809(self_2835350271);
    F.line = 5;
    tgadd(result_2835350272, [tg2([115,116,121,108,101], [textTag_1694499242(style_2835349806(self_2835350271))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2835350271.rendered(self_2835350271, null);
    F.line = 5;
    F.filename = "images.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2835350272;

}

function script_2818572704(self_2818572705) {
  var F = {procname: "fonts.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function newSeq_2818572815(len_2818572817) {
  var result_2818572818 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_2818572818 = new Array(len_2818572817); for (var i = 0 ; i < len_2818572817 ; ++i) { result_2818572818[i] = null; }  framePtr = F.prev;

  return result_2818572818;

}

function HEX5BHEX5D_2818572921(s_2818572925, x_2818572926) {
  var result_2818572927 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_2818572929 = x_2818572926.a;
    F.line = 140;
    var L_2818572931 = addInt(subInt(x_2818572926.b, a_2818572929), 1);
    F.line = 141;
    result_2818572927 = new Array(chckRange(L_2818572931, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818572931, 0, 2147483647) ; ++i) { result_2818572927[i] = []; }    Label1: {
      F.line = 142;
      var i_2818572940 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536871198 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536871198 < L_2818572931)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_2818572940 = i_536871198;
            F.line = 142;
            result_2818572927[chckIndx(i_2818572940, 0, (result_2818572927).length - 1)] = nimCopy(null, s_2818572925[chckIndx(addInt(i_2818572940, a_2818572929), 0, (s_2818572925).length - 1)], NTI33554449);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536871198 = addInt(i_536871198, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_2818572927;

}

function toInt_1996489607(self_1996489609) {
  var result_1996489610 = 0;

  var F = {procname: "state.toInt", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 491;
    F.filename = "state.nim";
    result_1996489610 = self_1996489609.val;
  framePtr = F.prev;

  return result_1996489610;

}

function googleFontImport_2818572308(fontUrl_2818572309) {
  var result_2818572310 = [];

  var F = {procname: "fonts.googleFontImport", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/fonts.nim", line: 0};
  framePtr = F;
    F.line = 13;
    F.filename = "fonts.nim";
    Label1: {
      F.line = 13;
      var fmtRes_2818572315 = [mnewString(0)];
      F.line = 13;
      fmtRes_2818572315[0].push.apply(fmtRes_2818572315[0], [64,105,109,112,111,114,116,32,117,114,108,40,39]);;
      F.line = 13;
      formatValue_704643243(fmtRes_2818572315, 0, fontUrl_2818572309, []);
      F.line = 13;
      fmtRes_2818572315[0].push.apply(fmtRes_2818572315[0], [39,41,59]);;
    };
    result_2818572310 = nimCopy(null, fmtRes_2818572315[0], NTI33554449);
  framePtr = F.prev;

  return result_2818572310;

}

function renderTag_2818572709(self_2818572710) {
  var result_2818572711 = null;

  var F = {procname: "fonts.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 62;
    F.filename = "fonts.nim";
    F.line = 54;
    var c15_2818572810 = 0;
    F.line = 54;
    var __r15_2818572823 = newSeq_2818572815(0);
    Label1: {
      F.line = 53;
      var i_2818572944 = [];
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536881422 = [];
      F.line = 53;
      F.filename = "fonts.nim";
      colontmp__536881422 = HEX5BHEX5D_2818572921(teacherUrls_2818572336, HEX2EHEX2E_788529202(0, subInt(toInt_1996489607(self_2818572710.teacher), 1)));
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881423 = 0;
      F.line = 242;
      var L_536881424 = (colontmp__536881422).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881423 < L_536881424)) break Label3;
            F.line = 53;
            F.filename = "fonts.nim";
            i_2818572944 = colontmp__536881422[chckIndx(i_536881423, 0, (colontmp__536881422).length - 1)];
            F.line = 53;
            c15_2818572810 = addInt(c15_2818572810, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c15_2818572810;
            F.line = 53;
            F.filename = "fonts.nim";
            __r15_2818572823.push(tg2([100,105,118], [tg4(googleFontImport_2818572308(i_2818572944), true, [], false)], true));;
            F.line = 54;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881423 = addInt(i_536881423, 1);
            if (!(((colontmp__536881422).length == L_536881424))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 56;
    F.filename = "fonts.nim";
    var c16_2818572977 = 0;
    F.line = 56;
    var __r16_2818572985 = newSeq_2818572815(0);
    Label4: {
      F.line = 55;
      var i_2818573092 = [];
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536881427 = [];
      F.line = 55;
      F.filename = "fonts.nim";
      colontmp__536881427 = HEX5BHEX5D_2818572921(studentUrls_2818572357, HEX2EHEX2E_788529202(0, subInt(toInt_1996489607(self_2818572710.student), 1)));
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881428 = 0;
      F.line = 242;
      var L_536881429 = (colontmp__536881427).length;
      Label5: {
        F.line = 243;
          Label6: while (true) {
          if (!(i_536881428 < L_536881429)) break Label6;
            F.line = 55;
            F.filename = "fonts.nim";
            i_2818573092 = colontmp__536881427[chckIndx(i_536881428, 0, (colontmp__536881427).length - 1)];
            F.line = 55;
            c16_2818572977 = addInt(c16_2818572977, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c16_2818572977;
            F.line = 55;
            F.filename = "fonts.nim";
            __r16_2818572985.push(tg2([100,105,118], [tg4(googleFontImport_2818572308(i_2818573092), true, [], false)], true));;
            F.line = 56;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881428 = addInt(i_536881428, 1);
            if (!(((colontmp__536881427).length == L_536881429))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 58;
    F.filename = "fonts.nim";
    var c17_2818573125 = 0;
    F.line = 58;
    var __r17_2818573133 = newSeq_2818572815(0);
    Label7: {
      F.line = 57;
      var i_2818573240 = [];
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536881432 = [];
      F.line = 57;
      F.filename = "fonts.nim";
      colontmp__536881432 = HEX5BHEX5D_2818572921(ellUrls_2818572378, HEX2EHEX2E_788529202(0, subInt(toInt_1996489607(self_2818572710.ell), 1)));
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881433 = 0;
      F.line = 242;
      var L_536881434 = (colontmp__536881432).length;
      Label8: {
        F.line = 243;
          Label9: while (true) {
          if (!(i_536881433 < L_536881434)) break Label9;
            F.line = 57;
            F.filename = "fonts.nim";
            i_2818573240 = colontmp__536881432[chckIndx(i_536881433, 0, (colontmp__536881432).length - 1)];
            F.line = 57;
            c17_2818573125 = addInt(c17_2818573125, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c17_2818573125;
            F.line = 57;
            F.filename = "fonts.nim";
            __r17_2818573133.push(tg2([100,105,118], [tg4(googleFontImport_2818572308(i_2818573240), true, [], false)], true));;
            F.line = 58;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881433 = addInt(i_536881433, 1);
            if (!(((colontmp__536881432).length == L_536881434))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 60;
    F.filename = "fonts.nim";
    var c18_2818573273 = 0;
    F.line = 60;
    var __r18_2818573281 = newSeq_2818572815(0);
    Label10: {
      F.line = 59;
      var i_2818573388 = [];
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536881437 = [];
      F.line = 59;
      F.filename = "fonts.nim";
      colontmp__536881437 = HEX5BHEX5D_2818572921(mathUrls_2818572399, HEX2EHEX2E_788529202(0, subInt(toInt_1996489607(self_2818572710.math), 1)));
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881438 = 0;
      F.line = 242;
      var L_536881439 = (colontmp__536881437).length;
      Label11: {
        F.line = 243;
          Label12: while (true) {
          if (!(i_536881438 < L_536881439)) break Label12;
            F.line = 59;
            F.filename = "fonts.nim";
            i_2818573388 = colontmp__536881437[chckIndx(i_536881438, 0, (colontmp__536881437).length - 1)];
            F.line = 59;
            c18_2818573273 = addInt(c18_2818573273, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c18_2818573273;
            F.line = 59;
            F.filename = "fonts.nim";
            __r18_2818573281.push(tg2([100,105,118], [tg4(googleFontImport_2818572308(i_2818573388), true, [], false)], true));;
            F.line = 60;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881438 = addInt(i_536881438, 1);
            if (!(((colontmp__536881437).length == L_536881439))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 62;
    F.filename = "fonts.nim";
    var c19_2818573421 = 0;
    F.line = 62;
    var __r19_2818573429 = newSeq_2818572815(0);
    Label13: {
      F.line = 61;
      var i_2818573536 = [];
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536881442 = [];
      F.line = 61;
      F.filename = "fonts.nim";
      colontmp__536881442 = HEX5BHEX5D_2818572921(monoUrls_2818572420, HEX2EHEX2E_788529202(0, subInt(toInt_1996489607(self_2818572710.mono), 1)));
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881443 = 0;
      F.line = 242;
      var L_536881444 = (colontmp__536881442).length;
      Label14: {
        F.line = 243;
          Label15: while (true) {
          if (!(i_536881443 < L_536881444)) break Label15;
            F.line = 61;
            F.filename = "fonts.nim";
            i_2818573536 = colontmp__536881442[chckIndx(i_536881443, 0, (colontmp__536881442).length - 1)];
            F.line = 61;
            c19_2818573421 = addInt(c19_2818573421, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c19_2818573421;
            F.line = 61;
            F.filename = "fonts.nim";
            __r19_2818573429.push(tg2([100,105,118], [tg4(googleFontImport_2818572308(i_2818573536), true, [], false)], true));;
            F.line = 62;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881443 = addInt(i_536881443, 1);
            if (!(((colontmp__536881442).length == L_536881444))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818572711 = tg2([100,105,118], [tg2([115,116,121,108,101], [tg2([100,105,118], __r15_2818572823, true), tg2([100,105,118], __r16_2818572985, true), tg2([100,105,118], __r17_2818573133, true), tg2([100,105,118], __r18_2818573281, true), tg2([100,105,118], __r19_2818573429, true)], false)], true);
  framePtr = F.prev;

  return result_2818572711;

}

function style_2818572706(self_2818572707) {
  var result_2818572708 = [];

  var F = {procname: "fonts.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 45;
    F.filename = "fonts.nim";
    result_2818572708 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2818572708;

}

function render_2818573625(self_2818573626) {
  var result_2818573627 = null;

  var F = {procname: "fonts.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 45;
    F.filename = "fonts.nim";
    currentComponentsList_1644168814[0].push(self_2818573626);;
    F.line = 45;
    currentComponent_1644168809[0] = nimCopy(null, self_2818573626.uniqCompId, NTI33554449);
    F.line = 45;
    script_2818572704(self_2818573626);
    if ((self_2818573626.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2818573626.created(self_2818573626, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2818573626.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2818573626.beforeUpdated(self_2818573626, null);
    F.line = 45;
    F.filename = "fonts.nim";
    result_2818573627 = renderTag_2818572709(self_2818573626);
    F.line = 45;
    tgadd(result_2818573627, [tg2([115,116,121,108,101], [textTag_1694499242(style_2818572706(self_2818573626))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2818573626.rendered(self_2818573626, null);
    F.line = 45;
    F.filename = "fonts.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2818573627;

}

function script_2852131778(self_2852131779) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function remember_2785018236(val_2785018238) {
  var result_2785018239 = null;

  var F = {procname: "remember.remember", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "state.nim";
    result_2785018239 = {val: val_2785018238, watchers: []};
  framePtr = F.prev;

  return result_2785018239;

}

function initCutRule_2852129473(uniqCompId_2852129474, css_2852129475) {
    
function HEX3Aanonymous_2852129481(self_2852129482, ev_2852129483) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852129484(self_2852129485, ev_2852129486) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852129487(self_2852129488, ev_2852129489) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852129490(self_2852129491, ev_2852129492) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852129493(self_2852129494, ev_2852129495) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852129496(self_2852129497, ev_2852129498) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852129499(self_2852129500, ev_2852129501) {
      var F = {procname: "initCutRule.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2852129476 = null;

  var F = {procname: "layout.initCutRule", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 60;
    F.filename = "layout.nim";
    var self_2852129480 = {uniqCompId: nimCopy(null, uniqCompId_2852129474, NTI33554449), css: remember_2785018236(css_2852129475), m_type: NTI2852128299, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 63;
    self_2852129480.beforeUpdated = HEX3Aanonymous_2852129481;
    F.line = 63;
    self_2852129480.pageShow = HEX3Aanonymous_2852129484;
    F.line = 63;
    self_2852129480.pageHide = HEX3Aanonymous_2852129487;
    F.line = 63;
    self_2852129480.rendered = HEX3Aanonymous_2852129490;
    F.line = 63;
    self_2852129480.exited = HEX3Aanonymous_2852129493;
    F.line = 63;
    self_2852129480.created = HEX3Aanonymous_2852129496;
    F.line = 63;
    self_2852129480.updated = HEX3Aanonymous_2852129499;
    if ((css_2852129475 == "")) {
    F.line = 60;
    self_2852129480.css = remember_2785018236(css_2852129475);
    }
    
    F.line = 60;
    createdComponentsList_1644168819[0].push(self_2852129480);;
    F.line = 779;
    F.filename = "components.nim";
    result_2852129476 = self_2852129480;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2852129476;

}

function renderTag_2852131783(self_2852131784) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_2852131788(scopeSelf_2852131789, inComponent_2852131790, compName_2852131791, inCycle_2852131792, cycleCounter_2852131793, cycleCounter_2852131793_Idx, compCounter_2852131794) {
        var Temporary1;

      var result_2852131795 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
        F.line = 89;
        F.filename = "layout.nim";
        F.line = 89;
        if ((inCycle_2852131792 && inComponent_2852131790)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_2852131792) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_2852131790) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_2852131804 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp38_2852131787.slotData = _res_2852131804;
        result_2852131795 = _res_2852131804;
      framePtr = F.prev;

      return result_2852131795;

    }
    var Temporary3;
    var Temporary4;
    
function HEX3Aanonymous_2852131809(scopeSelf_2852131810, inComponent_2852131811, compName_2852131812, inCycle_2852131813, cycleCounter_2852131814, cycleCounter_2852131814_Idx, compCounter_2852131815) {
        var Temporary1;

      var result_2852131816 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
        F.line = 90;
        F.filename = "layout.nim";
        F.line = 90;
        if ((inCycle_2852131813 && inComponent_2852131811)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_2852131813) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_2852131811) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_2852131825 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp39_2852131808.slotData = _res_2852131825;
        result_2852131816 = _res_2852131825;
      framePtr = F.prev;

      return result_2852131816;

    }
    var Temporary5;
    var Temporary6;
    
function HEX3Aanonymous_2852131829(scopeSelf_2852131830, inComponent_2852131831, compName_2852131832, inCycle_2852131833, cycleCounter_2852131834, cycleCounter_2852131834_Idx, compCounter_2852131835) {
        var Temporary1;

      var result_2852131836 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
        F.line = 91;
        F.filename = "layout.nim";
        F.line = 91;
        if ((inCycle_2852131833 && inComponent_2852131831)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_2852131833) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_2852131831) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_2852131845 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp40_2852131828.slotData = _res_2852131845;
        result_2852131836 = _res_2852131845;
      framePtr = F.prev;

      return result_2852131836;

    }

  var result_2852131785 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "layout.nim";
    F.line = 89;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,56] || []).concat(self_2852131784.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,56] || []).concat(self_2852131784.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp38_2852131786 = initStrut_2852130043(Temporary1, topPageMargin_2852126731[0], [49,101,109], []);
    F.line = 89;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,56] || []).concat(self_2852131784.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,56] || []).concat(self_2852131784.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp38_2852131787 = rgcmp(toJSStr(Temporary2), _comp38_2852131786);
    F.line = 89;
    comp38_2852131787.slot = HEX3Aanonymous_2852131788;
    F.line = 89;
    var data_comp38_2852131805 = render_1644175063(comp38_2852131787);
    F.line = 89;
    addArgIter_1694499355(data_comp38_2852131805, ([100,97,116,97,45] || []).concat(comp38_2852131787.uniqCompId || []));
    F.line = 89;
    window.addEventListener('beforeunload', data_comp38_2852131805.exited);
    F.line = 89;
    window.addEventListener('pagehide', data_comp38_2852131805.pageHide);
    F.line = 89;
    window.addEventListener('pageshow', data_comp38_2852131805.pageShow);
    F.line = 90;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary3 = ([99,111,109,112,51,57] || []).concat(self_2852131784.uniqCompId || []);
    }
    else {
    Temporary3 = ([99,111,109,112,51,57] || []).concat(self_2852131784.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp39_2852131807 = initCutRule_2852129473(Temporary3, "");
    F.line = 90;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary4 = ([99,111,109,112,51,57] || []).concat(self_2852131784.uniqCompId || []);
    }
    else {
    Temporary4 = ([99,111,109,112,51,57] || []).concat(self_2852131784.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp39_2852131808 = rgcmp(toJSStr(Temporary4), _comp39_2852131807);
    F.line = 90;
    comp39_2852131808.slot = HEX3Aanonymous_2852131809;
    F.line = 90;
    var data_comp39_2852131826 = render_1644175063(comp39_2852131808);
    F.line = 90;
    addArgIter_1694499355(data_comp39_2852131826, ([100,97,116,97,45] || []).concat(comp39_2852131808.uniqCompId || []));
    F.line = 90;
    window.addEventListener('beforeunload', data_comp39_2852131826.exited);
    F.line = 90;
    window.addEventListener('pagehide', data_comp39_2852131826.pageHide);
    F.line = 90;
    window.addEventListener('pageshow', data_comp39_2852131826.pageShow);
    F.line = 91;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary5 = ([99,111,109,112,52,48] || []).concat(self_2852131784.uniqCompId || []);
    }
    else {
    Temporary5 = ([99,111,109,112,52,48] || []).concat(self_2852131784.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp40_2852131827 = initStrut_2852130043(Temporary5, topPageMargin_2852126731[0], [49,101,109], []);
    F.line = 91;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary6 = ([99,111,109,112,52,48] || []).concat(self_2852131784.uniqCompId || []);
    }
    else {
    Temporary6 = ([99,111,109,112,52,48] || []).concat(self_2852131784.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp40_2852131828 = rgcmp(toJSStr(Temporary6), _comp40_2852131827);
    F.line = 91;
    comp40_2852131828.slot = HEX3Aanonymous_2852131829;
    F.line = 91;
    var data_comp40_2852131846 = render_1644175063(comp40_2852131828);
    F.line = 91;
    addArgIter_1694499355(data_comp40_2852131846, ([100,97,116,97,45] || []).concat(comp40_2852131828.uniqCompId || []));
    F.line = 91;
    window.addEventListener('beforeunload', data_comp40_2852131846.exited);
    F.line = 91;
    window.addEventListener('pagehide', data_comp40_2852131846.pageHide);
    F.line = 91;
    window.addEventListener('pageshow', data_comp40_2852131846.pageShow);
    result_2852131785 = tg2([100,105,118], [data_comp38_2852131805, data_comp39_2852131826, data_comp40_2852131846], true);
  framePtr = F.prev;

  return result_2852131785;

}

function style_2852131780(self_2852131781) {
  var result_2852131782 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "layout.nim";
    result_2852131782 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852131782;

}

function render_2852131867(self_2852131868) {
  var result_2852131869 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852131868);;
    F.line = 87;
    currentComponent_1644168809[0] = nimCopy(null, self_2852131868.uniqCompId, NTI33554449);
    F.line = 87;
    script_2852131778(self_2852131868);
    if ((self_2852131868.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852131868.created(self_2852131868, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852131868.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852131868.beforeUpdated(self_2852131868, null);
    F.line = 87;
    F.filename = "layout.nim";
    result_2852131869 = renderTag_2852131783(self_2852131868);
    F.line = 87;
    tgadd(result_2852131869, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852131780(self_2852131868))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852131868.rendered(self_2852131868, null);
    F.line = 87;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852131869;

}

function script_2835350573(self_2835350574) {
  var F = {procname: "images.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2835350578(self_2835350579) {
  var result_2835350580 = null;

  var F = {procname: "images.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 23;
    F.filename = "images.nim";
    F.line = 21;
    Label1: {
      F.line = 21;
      var fmtRes_2835350585 = [mnewString(0)];
      F.line = 21;
      fmtRes_2835350585[0].push.apply(fmtRes_2835350585[0], [46,46,47,46,46,47,46,46,47,105,109,97,103,101,115,47]);;
      F.line = 21;
      formatValue_2785020246(fmtRes_2835350585, 0, self_2835350579.stem, []);
      F.line = 21;
      fmtRes_2835350585[0].push.apply(fmtRes_2835350585[0], [46,115,118,103]);;
    };
    var source_2835350599 = nimCopy(null, fmtRes_2835350585[0], NTI33554449);
    F.line = 22;
    Label2: {
      F.line = 22;
      var fmtRes_2835350624 = [mnewString(0)];
      F.line = 22;
      fmtRes_2835350624[0].push.apply(fmtRes_2835350624[0], [119,105,100,116,104,58,32]);;
      F.line = 22;
      formatValue_2785020246(fmtRes_2835350624, 0, self_2835350579.width, []);
      F.line = 22;
      fmtRes_2835350624[0].push.apply(fmtRes_2835350624[0], [59,32]);;
      F.line = 22;
      formatValue_2785020246(fmtRes_2835350624, 0, self_2835350579.css, []);
    };
    var css_2835350651 = nimCopy(null, fmtRes_2835350624[0], NTI33554449);
    result_2835350580 = tg2([100,105,118], [tg2([100,105,118], [], true), tg2([100,105,118], [], true), tg1([105,109,103], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,114,99], Field1: nimCopy(null, source_2835350599, NTI33554449)}, NTI2835350260), nimCopy(null, {Field0: [97,108,116], Field1: nimCopy(null, self_2835350579.stem.val, NTI33554449)}, NTI2835350260), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, css_2835350651, NTI33554449)}, NTI2835350260)], 0), [], false)], true);
  framePtr = F.prev;

  return result_2835350580;

}

function style_2835350575(self_2835350576) {
  var result_2835350577 = [];

  var F = {procname: "images.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 15;
    F.filename = "images.nim";
    result_2835350577 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2835350577;

}

function render_2835350802(self_2835350803) {
  var result_2835350804 = null;

  var F = {procname: "images.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 15;
    F.filename = "images.nim";
    currentComponentsList_1644168814[0].push(self_2835350803);;
    F.line = 15;
    currentComponent_1644168809[0] = nimCopy(null, self_2835350803.uniqCompId, NTI33554449);
    F.line = 15;
    script_2835350573(self_2835350803);
    if ((self_2835350803.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2835350803.created(self_2835350803, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2835350803.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2835350803.beforeUpdated(self_2835350803, null);
    F.line = 15;
    F.filename = "images.nim";
    result_2835350804 = renderTag_2835350578(self_2835350803);
    F.line = 15;
    tgadd(result_2835350804, [tg2([115,116,121,108,101], [textTag_1694499242(style_2835350575(self_2835350803))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2835350803.rendered(self_2835350803, null);
    F.line = 15;
    F.filename = "images.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2835350804;

}

function script_2785018585(self_2785018586) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785018590(self_2785018591) {
  var result_2785018592 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 69;
    F.filename = "numbering.nim";
    Label1: {
      F.line = 69;
      var fmtRes_2785018967 = [mnewString(0)];
      F.line = 69;
      fmtRes_2785018967[0].push.apply(fmtRes_2785018967[0], [40]);;
      F.line = 69;
      formatValue_2785018980(fmtRes_2785018967, 0, self_2785018591.text, []);
      F.line = 69;
      fmtRes_2785018967[0].push.apply(fmtRes_2785018967[0], [41,32]);;
    };
    result_2785018592 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,119,101,105,103,104,116,58,53,48,48,59,109,97,114,103,105,110,45,108,101,102,116,58,49,101,109,59]}], 0), [tg2([115,109,97,108,108], [tg4(fmtRes_2785018967[0], true, [], false)], false)], false)], true);
  framePtr = F.prev;

  return result_2785018592;

}

function style_2785018587(self_2785018588) {
  var result_2785018589 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 62;
    F.filename = "numbering.nim";
    result_2785018589 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785018589;

}

function render_2785019279(self_2785019280) {
  var result_2785019281 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 62;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785019280);;
    F.line = 62;
    currentComponent_1644168809[0] = nimCopy(null, self_2785019280.uniqCompId, NTI33554449);
    F.line = 62;
    script_2785018585(self_2785019280);
    if ((self_2785019280.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785019280.created(self_2785019280, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785019280.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785019280.beforeUpdated(self_2785019280, null);
    F.line = 62;
    F.filename = "numbering.nim";
    result_2785019281 = renderTag_2785018590(self_2785019280);
    F.line = 62;
    tgadd(result_2785019281, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785018587(self_2785019280))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785019280.rendered(self_2785019280, null);
    F.line = 62;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785019281;

}

function script_2902459659(self_2902459660) {
  var F = {procname: "paper.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2902459664(self_2902459665) {
  var result_2902459666 = null;

  var F = {procname: "paper.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 38;
    F.filename = "paper.nim";
    F.line = 31;
    Label1: {
      F.line = 31;
      var fmtRes_2902459671 = [mnewString(0)];
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], makeNimstrLit("print-color-adjust: exact; -webkit-print-color-adjust: exact;\x0A      width: "));;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.width, []);
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], [59,32,104,101,105,103,104,116,58,32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.height, []);
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], makeNimstrLit(";\x0A      background-color: var(--paper-color);\x0A      opacity: 0.8;\x0A      background:  radial-gradient(var(--ts-color-body) "));;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.dotWidth, []);
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], [44,32,118,97,114,40,45,45,112,97,112,101,114,45,99,111,108,111,114,41,32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.dotWidth, []);
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], [41,59,10,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,45,115,105,122,101,58,32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.boxWidth, []);
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], [32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.boxWidth, []);
      F.line = 31;
      fmtRes_2902459671[0].push.apply(fmtRes_2902459671[0], [59,32]);;
      F.line = 31;
      formatValue_2785020246(fmtRes_2902459671, 0, self_2902459665.css, []);
    };
    var style_2902459763 = nimCopy(null, fmtRes_2902459671[0], NTI33554449);
    Label2: {
      F.line = 38;
      var fmtRes_2902459886 = [mnewString(0)];
      F.line = 38;
      fmtRes_2902459886[0].push.apply(fmtRes_2902459886[0], [100,114,97,119,105,110,103,45,112,97,112,101,114,32]);;
      F.line = 38;
      formatValue_2785020246(fmtRes_2902459886, 0, self_2902459665.class, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2902460010 = [0];
    result_2902459666 = tg2([100,105,118], [tg2([100,105,118], [], true), tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2902459886[0], NTI33554449)}, NTI2902459292), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, style_2902459763, NTI33554449)}, NTI2902459292)], 0), [self_2902459665.slot(self_2902459665, true, [68,111,116,80,97,112,101,114], false, cclCounter_2902460010, 0, self_2902459665.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2902459666;

}

function style_2902459661(self_2902459662) {
  var result_2902459663 = [];

  var F = {procname: "paper.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "paper.nim";
    result_2902459663 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902459663;

}

function render_2902460053(self_2902460054) {
  var result_2902460055 = null;

  var F = {procname: "paper.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "paper.nim";
    currentComponentsList_1644168814[0].push(self_2902460054);;
    F.line = 21;
    currentComponent_1644168809[0] = nimCopy(null, self_2902460054.uniqCompId, NTI33554449);
    F.line = 21;
    script_2902459659(self_2902460054);
    if ((self_2902460054.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2902460054.created(self_2902460054, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2902460054.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2902460054.beforeUpdated(self_2902460054, null);
    F.line = 21;
    F.filename = "paper.nim";
    result_2902460055 = renderTag_2902459664(self_2902460054);
    F.line = 21;
    tgadd(result_2902460055, [tg2([115,116,121,108,101], [textTag_1694499242(style_2902459661(self_2902460054))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2902460054.rendered(self_2902460054, null);
    F.line = 21;
    F.filename = "paper.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902460055;

}

function script_2986344778(self_2986344779) {
  var F = {procname: "mBlocks.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function HEX24_2986345314(self_2986345316) {
  var result_2986345317 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 75;
    F.filename = "state.nim";
    result_2986345317 = nimCopy(null, reprEnum(self_2986345316.val, NTI2986344451), NTI33554449);
  framePtr = F.prev;

  return result_2986345317;

}

function formatValue_2986345091(result_2986345093, result_2986345093_Idx, value_2986345094, specifier_2986345095) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 572;
    F.filename = "strformat.nim";
    formatValue_704643243(result_2986345093, result_2986345093_Idx, HEX24_2986345314(value_2986345094), specifier_2986345095);
  framePtr = F.prev;

  
}

function renderTag_2986344783(self_2986344784) {
  var result_2986344785 = null;

  var F = {procname: "mBlocks.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "mBlocks.nim";
    Label1: {
      F.line = 15;
      var fmtRes_2986344888 = [mnewString(0)];
      F.line = 15;
      fmtRes_2986344888[0].push.apply(fmtRes_2986344888[0], [114,101,112,114,101,115,101,110,116,97,116,105,111,110,32]);;
      F.line = 15;
      formatValue_2785018980(fmtRes_2986344888, 0, self_2986344784.class, []);
    };
    Label2: {
      F.line = 15;
      var fmtRes_2986344910 = [mnewString(0)];
      F.line = 15;
      fmtRes_2986344910[0].push.apply(fmtRes_2986344910[0], [100,105,115,112,108,97,121,58,32,102,108,101,120,59,32,119,105,100,116,104,58]);;
      F.line = 15;
      formatValue_2785018980(fmtRes_2986344910, 0, self_2986344784.width, []);
      F.line = 15;
      fmtRes_2986344910[0].push.apply(fmtRes_2986344910[0], [59,32]);;
      F.line = 15;
      formatValue_2785018980(fmtRes_2986344910, 0, self_2986344784.css, []);
    };
    F.line = 17;
    var c269_2986344957 = 0;
    F.line = 17;
    var __r269_2986344965 = newSeq_2818572815(0);
    Label3: {
      F.line = 16;
      var j_2986344970 = 0;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881456 = 1;
      Label4: {
        F.line = 91;
          Label5: while (true) {
          if (!(res_536881456 <= self_2986344784.n.val)) break Label5;
            F.line = 16;
            F.filename = "mBlocks.nim";
            j_2986344970 = res_536881456;
            F.line = 16;
            c269_2986344957 = addInt(c269_2986344957, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c269_2986344957;
            F.line = 16;
            F.filename = "mBlocks.nim";
            Label6: {
              F.line = 17;
              var fmtRes_2986345078 = [mnewString(0)];
              F.line = 17;
              fmtRes_2986345078[0].push.apply(fmtRes_2986345078[0], [102,108,101,120,58,32,49,32,48,32,48,59,32,98,111,114,100,101,114,58,32,48,46,49,101,109,32,115,111,108,105,100,32,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,98,111,100,121,41,59,32]);;
              F.line = 17;
              formatValue_2986345091(fmtRes_2986345078, 0, self_2986344784.mode, []);
              F.line = 17;
              fmtRes_2986345078[0].push.apply(fmtRes_2986345078[0], [32,116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]);;
            };
            F.line = 574;
            F.filename = "components.nim";
            var cclCounter_2986345431 = [c269_2986344957];
            __r269_2986344965.push(tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2986345078[0], NTI33554449)}, NTI2986344814)], 0), [self_2986344784.slot(self_2986344784, true, [109,66,108,111,99,107,115], true, cclCounter_2986345431, 0, self_2986344784.uniqCompId)], false)], true));;
            F.line = 17;
            F.filename = "mBlocks.nim";
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881456 = addInt(res_536881456, 1);
          }
      };
    };
    result_2986344785 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2986344888[0], NTI33554449)}, NTI2986344695), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2986344910[0], NTI33554449)}, NTI2986344695)], 0), [tg2([100,105,118], __r269_2986344965, true)], false)], true);
  framePtr = F.prev;

  return result_2986344785;

}

function style_2986344780(self_2986344781) {
  var result_2986344782 = [];

  var F = {procname: "mBlocks.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 8;
    F.filename = "mBlocks.nim";
    result_2986344782 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2986344782;

}

function render_2986345518(self_2986345519) {
  var result_2986345520 = null;

  var F = {procname: "mBlocks.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 8;
    F.filename = "mBlocks.nim";
    currentComponentsList_1644168814[0].push(self_2986345519);;
    F.line = 8;
    currentComponent_1644168809[0] = nimCopy(null, self_2986345519.uniqCompId, NTI33554449);
    F.line = 8;
    script_2986344778(self_2986345519);
    if ((self_2986345519.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2986345519.created(self_2986345519, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2986345519.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2986345519.beforeUpdated(self_2986345519, null);
    F.line = 8;
    F.filename = "mBlocks.nim";
    result_2986345520 = renderTag_2986344783(self_2986345519);
    F.line = 8;
    tgadd(result_2986345520, [tg2([115,116,121,108,101], [textTag_1694499242(style_2986344780(self_2986345519))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2986345519.rendered(self_2986345519, null);
    F.line = 8;
    F.filename = "mBlocks.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2986345520;

}

function script_2785019595(self_2785019596) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785019600(self_2785019601) {
  var result_2785019602 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "numbering.nim";
    Label1: {
      F.line = 77;
      var fmtRes_2785019717 = [mnewString(0)];
      F.line = 77;
      formatValue_2785018980(fmtRes_2785019717, 0, self_2785019601.text, []);
      F.line = 77;
      fmtRes_2785019717[0].push.apply(fmtRes_2785019717[0], [41,32]);;
    };
    result_2785019602 = tg2([100,105,118], [tg1([115,112,97,110,105], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,119,101,105,103,104,116,58,49,48,48,48,59,109,97,114,103,105,110,45,108,101,102,116,58,48,46,53,101,109,59]}], 0), [tg4(fmtRes_2785019717[0], true, [], false)], false)], true);
  framePtr = F.prev;

  return result_2785019602;

}

function style_2785019597(self_2785019598) {
  var result_2785019599 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "numbering.nim";
    result_2785019599 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785019599;

}

function render_2785019775(self_2785019776) {
  var result_2785019777 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785019776);;
    F.line = 71;
    currentComponent_1644168809[0] = nimCopy(null, self_2785019776.uniqCompId, NTI33554449);
    F.line = 71;
    script_2785019595(self_2785019776);
    if ((self_2785019776.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785019776.created(self_2785019776, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785019776.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785019776.beforeUpdated(self_2785019776, null);
    F.line = 71;
    F.filename = "numbering.nim";
    result_2785019777 = renderTag_2785019600(self_2785019776);
    F.line = 71;
    tgadd(result_2785019777, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785019597(self_2785019776))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785019776.rendered(self_2785019776, null);
    F.line = 71;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785019777;

}

function script_2785021759(self_2785021760) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785021764(self_2785021765) {
  var result_2785021766 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 107;
    F.filename = "numbering.nim";
    result_2785021766 = tg2([100,105,118], [tg2([101,109], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,102,97,109,105,108,121,58,32,118,97,114,40,45,45,116,115,45,102,111,110,116,45,102,97,109,105,108,121,45,115,97,110,115,45,97,108,116,41,59,109,97,114,103,105,110,45,108,101,102,116,58,32,48,46,53,101,109,59]}], 0), [tg4(HEX24_2785019199(self_2785021765.text), true, [], false), tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [99,111,108,111,114,58,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,109,117,116,101,100,41,59]}], 0), [tg4([226,150,182,32], true, [], false)], false)], false)], false)], true);
  framePtr = F.prev;

  return result_2785021766;

}

function style_2785021761(self_2785021762) {
  var result_2785021763 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 98;
    F.filename = "numbering.nim";
    result_2785021763 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785021763;

}

function render_2785022361(self_2785022362) {
  var result_2785022363 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 98;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785022362);;
    F.line = 98;
    currentComponent_1644168809[0] = nimCopy(null, self_2785022362.uniqCompId, NTI33554449);
    F.line = 98;
    script_2785021759(self_2785022362);
    if ((self_2785022362.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785022362.created(self_2785022362, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785022362.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785022362.beforeUpdated(self_2785022362, null);
    F.line = 98;
    F.filename = "numbering.nim";
    result_2785022363 = renderTag_2785021764(self_2785022362);
    F.line = 98;
    tgadd(result_2785022363, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785021761(self_2785022362))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785022362.rendered(self_2785022362, null);
    F.line = 98;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785022363;

}

function script_2785020825(self_2785020826) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785020830(self_2785020831) {
  var result_2785020832 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 96;
    F.filename = "numbering.nim";
    result_2785020832 = tg2([100,105,118], [tg2([101,109], [tg1([115,109,97,108,108], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,102,97,109,105,108,121,58,32,118,97,114,40,45,45,116,115,45,102,111,110,116,45,102,97,109,105,108,121,45,115,97,110,115,45,97,108,116,41,59,109,97,114,103,105,110,45,108,101,102,116,58,49,101,109,59]}], 0), [tg4(HEX24_2785019199(self_2785020831.text), true, [], false), tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [99,111,108,111,114,58,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,109,117,116,101,100,41,59]}], 0), [tg4([226,150,184,32], true, [], false)], false)], false)], false)], true);
  framePtr = F.prev;

  return result_2785020832;

}

function style_2785020827(self_2785020828) {
  var result_2785020829 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "numbering.nim";
    result_2785020829 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785020829;

}

function render_2785021443(self_2785021444) {
  var result_2785021445 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785021444);;
    F.line = 87;
    currentComponent_1644168809[0] = nimCopy(null, self_2785021444.uniqCompId, NTI33554449);
    F.line = 87;
    script_2785020825(self_2785021444);
    if ((self_2785021444.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785021444.created(self_2785021444, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785021444.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785021444.beforeUpdated(self_2785021444, null);
    F.line = 87;
    F.filename = "numbering.nim";
    result_2785021445 = renderTag_2785020830(self_2785021444);
    F.line = 87;
    tgadd(result_2785021445, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785020827(self_2785021444))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785021444.rendered(self_2785021444, null);
    F.line = 87;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785021445;

}

function script_2785020115(self_2785020116) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785020120(self_2785020121) {
  var result_2785020122 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 85;
    F.filename = "numbering.nim";
    Label1: {
      F.line = 85;
      var fmtRes_2785020237 = [mnewString(0)];
      F.line = 85;
      formatValue_2785020246(fmtRes_2785020237, 0, self_2785020121.text, []);
      F.line = 85;
      fmtRes_2785020237[0].push.apply(fmtRes_2785020237[0], [41,32]);;
    };
    result_2785020122 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,119,101,105,103,104,116,58,49,48,48,48,59]}], 0), [tg4(fmtRes_2785020237[0], true, [], false)], false)], true);
  framePtr = F.prev;

  return result_2785020122;

}

function style_2785020117(self_2785020118) {
  var result_2785020119 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 79;
    F.filename = "numbering.nim";
    result_2785020119 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785020119;

}

function render_2785020509(self_2785020510) {
  var result_2785020511 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 79;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785020510);;
    F.line = 79;
    currentComponent_1644168809[0] = nimCopy(null, self_2785020510.uniqCompId, NTI33554449);
    F.line = 79;
    script_2785020115(self_2785020510);
    if ((self_2785020510.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785020510.created(self_2785020510, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785020510.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785020510.beforeUpdated(self_2785020510, null);
    F.line = 79;
    F.filename = "numbering.nim";
    result_2785020511 = renderTag_2785020120(self_2785020510);
    F.line = 79;
    tgadd(result_2785020511, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785020117(self_2785020510))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785020510.rendered(self_2785020510, null);
    F.line = 79;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785020511;

}

function script_2785022867(self_2785022868) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785022872(self_2785022873) {
  var result_2785022874 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 120;
    F.filename = "numbering.nim";
    result_2785022874 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,102,97,109,105,108,121,58,32,118,97,114,40,45,45,116,115,45,102,111,110,116,45,102,97,109,105,108,121,45,115,97,110,115,45,97,108,116,41,59]}], 0), [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [99,111,108,111,114,58,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,109,117,116,101,100,41,59]}], 0), [tg4([226,151,162], true, [], false)], false), tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,119,101,105,103,104,116,58,49,48,48,48,59]}], 0), [tg4(HEX24_2785019199(self_2785022873.text), true, [], false)], false), tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [99,111,108,111,114,58,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,109,117,116,101,100,41,59]}], 0), [tg4([226,151,163,32], true, [], false)], false)], false)], true);
  framePtr = F.prev;

  return result_2785022874;

}

function style_2785022869(self_2785022870) {
  var result_2785022871 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 109;
    F.filename = "numbering.nim";
    result_2785022871 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785022871;

}

function render_2785023627(self_2785023628) {
  var result_2785023629 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 109;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785023628);;
    F.line = 109;
    currentComponent_1644168809[0] = nimCopy(null, self_2785023628.uniqCompId, NTI33554449);
    F.line = 109;
    script_2785022867(self_2785023628);
    if ((self_2785023628.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785023628.created(self_2785023628, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785023628.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785023628.beforeUpdated(self_2785023628, null);
    F.line = 109;
    F.filename = "numbering.nim";
    result_2785023629 = renderTag_2785022872(self_2785023628);
    F.line = 109;
    tgadd(result_2785023629, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785022869(self_2785023628))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785023628.rendered(self_2785023628, null);
    F.line = 109;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785023629;

}

function script_2919235847(self_2919235848) {
  var F = {procname: "videos.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2919235852(self_2919235853) {
  var result_2919235854 = null;

  var F = {procname: "videos.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 9;
    F.filename = "videos.nim";
    Label1: {
      F.line = 9;
      var fmtRes_2919236260 = [mnewString(0)];
      F.line = 9;
      fmtRes_2919236260[0].push.apply(fmtRes_2919236260[0], [116,105,116,108,101,58,34,89,111,117,84,117,98,101,32,118,105,100,101,111,32,112,108,97,121,101,114,34,59,32,119,105,100,116,104,58]);;
      F.line = 9;
      formatValue_2785018980(fmtRes_2919236260, 0, self_2919235853.width, []);
      F.line = 9;
      fmtRes_2919236260[0].push.apply(fmtRes_2919236260[0], [59,32,104,101,105,103,104,116,58]);;
      F.line = 9;
      formatValue_2785018980(fmtRes_2919236260, 0, self_2919235853.height, []);
      F.line = 9;
      fmtRes_2919236260[0].push.apply(fmtRes_2919236260[0], makeNimstrLit("; frameborder:0; allow: accelerometer autoplay clipboard-write encrypted-media gyroscope picture-in-picture web-share;"));;
    };
    result_2919235854 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("display:flex; align-items:center; justify-content: center; width: 100%;")}], 0), [tg1([105,102,114,97,109,101], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,114,99], Field1: ([104,116,116,112,115,58,47,47,119,119,119,46,121,111,117,116,117,98,101,45,110,111,99,111,111,107,105,101,46,99,111,109,47,101,109,98,101,100,47] || []).concat(HEX24_2785019199(self_2919235853.query) || [])}, NTI2919235842), nimCopy(null, {Field0: [99,108,97,115,115], Field1: [110,111,45,112,114,105,110,116]}, NTI2919235842), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2919236260[0], NTI33554449)}, NTI2919235842)], 0), [], false)], false)], true);
  framePtr = F.prev;

  return result_2919235854;

}

function style_2919235849(self_2919235850) {
  var result_2919235851 = [];

  var F = {procname: "videos.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 3;
    F.filename = "videos.nim";
    result_2919235851 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2919235851;

}

function render_2919236347(self_2919236348) {
  var result_2919236349 = null;

  var F = {procname: "videos.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 3;
    F.filename = "videos.nim";
    currentComponentsList_1644168814[0].push(self_2919236348);;
    F.line = 3;
    currentComponent_1644168809[0] = nimCopy(null, self_2919236348.uniqCompId, NTI33554449);
    F.line = 3;
    script_2919235847(self_2919236348);
    if ((self_2919236348.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2919236348.created(self_2919236348, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2919236348.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2919236348.beforeUpdated(self_2919236348, null);
    F.line = 3;
    F.filename = "videos.nim";
    result_2919236349 = renderTag_2919235852(self_2919236348);
    F.line = 3;
    tgadd(result_2919236349, [tg2([115,116,121,108,101], [textTag_1694499242(style_2919235849(self_2919236348))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2919236348.rendered(self_2919236348, null);
    F.line = 3;
    F.filename = "videos.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2919236349;

}

function script_2801795361(self_2801795362) {
  var F = {procname: "eMathjax.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2801795366(self_2801795367) {
  var result_2801795368 = null;

  var F = {procname: "eMathjax.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "eMathjax.nim";
    result_2801795368 = tg2([100,105,118], [], false);
  framePtr = F.prev;

  return result_2801795368;

}

function style_2801795363(self_2801795364) {
  var result_2801795365 = [];

  var F = {procname: "eMathjax.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "eMathjax.nim";
    result_2801795365 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2801795365;

}

function render_2801795369(self_2801795370) {
  var result_2801795371 = null;

  var F = {procname: "eMathjax.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.filename = "eMathjax.nim";
    currentComponentsList_1644168814[0].push(self_2801795370);;
    F.line = 12;
    currentComponent_1644168809[0] = nimCopy(null, self_2801795370.uniqCompId, NTI33554449);
    F.line = 12;
    script_2801795361(self_2801795370);
    if ((self_2801795370.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2801795370.created(self_2801795370, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2801795370.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2801795370.beforeUpdated(self_2801795370, null);
    F.line = 12;
    F.filename = "eMathjax.nim";
    result_2801795371 = renderTag_2801795366(self_2801795370);
    F.line = 12;
    tgadd(result_2801795371, [tg2([115,116,121,108,101], [textTag_1694499242(style_2801795363(self_2801795370))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2801795370.rendered(self_2801795370, null);
    F.line = 12;
    F.filename = "eMathjax.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2801795371;

}

function script_2785023943(self_2785023944) {
  var F = {procname: "numbering.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2785023948(self_2785023949) {
  var result_2785023950 = null;

  var F = {procname: "numbering.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 128;
    F.filename = "numbering.nim";
    Label1: {
      F.line = 128;
      var fmtRes_2785024065 = [mnewString(0)];
      F.line = 128;
      formatValue_2785018980(fmtRes_2785024065, 0, self_2785023949.text, []);
      F.line = 128;
      fmtRes_2785024065[0].push.apply(fmtRes_2785024065[0], [46,32]);;
    };
    result_2785023950 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [109,97,114,103,105,110,45,108,101,102,116,58,49,46,53,101,109,59]}], 0), [tg4(fmtRes_2785024065[0], true, [], false)], false)], true);
  framePtr = F.prev;

  return result_2785023950;

}

function style_2785023945(self_2785023946) {
  var result_2785023947 = [];

  var F = {procname: "numbering.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 122;
    F.filename = "numbering.nim";
    result_2785023947 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785023947;

}

function render_2785024123(self_2785024124) {
  var result_2785024125 = null;

  var F = {procname: "numbering.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 122;
    F.filename = "numbering.nim";
    currentComponentsList_1644168814[0].push(self_2785024124);;
    F.line = 122;
    currentComponent_1644168809[0] = nimCopy(null, self_2785024124.uniqCompId, NTI33554449);
    F.line = 122;
    script_2785023943(self_2785024124);
    if ((self_2785024124.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2785024124.created(self_2785024124, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2785024124.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2785024124.beforeUpdated(self_2785024124, null);
    F.line = 122;
    F.filename = "numbering.nim";
    result_2785024125 = renderTag_2785023948(self_2785024124);
    F.line = 122;
    tgadd(result_2785024125, [tg2([115,116,121,108,101], [textTag_1694499242(style_2785023945(self_2785024124))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2785024124.rendered(self_2785024124, null);
    F.line = 122;
    F.filename = "numbering.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2785024125;

}

function script_2919236620(self_2919236621) {
  var F = {procname: "videos.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initYTvideo_2919235595(uniqCompId_2919235596, query_2919235597, width_2919235598, height_2919235599) {
    
function HEX3Aanonymous_2919235611(self_2919235612, ev_2919235613) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2919235614(self_2919235615, ev_2919235616) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2919235617(self_2919235618, ev_2919235619) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2919235620(self_2919235621, ev_2919235622) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2919235623(self_2919235624, ev_2919235625) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2919235626(self_2919235627, ev_2919235628) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2919235629(self_2919235630, ev_2919235631) {
      var F = {procname: "initYTvideo.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2919235600 = null;

  var F = {procname: "videos.initYTvideo", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 6;
    F.filename = "videos.nim";
    var self_2919235610 = {uniqCompId: nimCopy(null, uniqCompId_2919235596, NTI33554449), query: remember_2785018236(query_2919235597), width: remember_2785018236(width_2919235598), height: remember_2785018236(height_2919235599), m_type: NTI2919235587, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 9;
    self_2919235610.beforeUpdated = HEX3Aanonymous_2919235611;
    F.line = 9;
    self_2919235610.pageShow = HEX3Aanonymous_2919235614;
    F.line = 9;
    self_2919235610.pageHide = HEX3Aanonymous_2919235617;
    F.line = 9;
    self_2919235610.rendered = HEX3Aanonymous_2919235620;
    F.line = 9;
    self_2919235610.exited = HEX3Aanonymous_2919235623;
    F.line = 9;
    self_2919235610.created = HEX3Aanonymous_2919235626;
    F.line = 9;
    self_2919235610.updated = HEX3Aanonymous_2919235629;
    if ((width_2919235598 == "1200px")) {
    F.line = 5;
    self_2919235610.width = remember_2785018236(width_2919235598);
    }
    
    if ((height_2919235599 == "630px")) {
    F.line = 6;
    self_2919235610.height = remember_2785018236(height_2919235599);
    }
    
    F.line = 6;
    createdComponentsList_1644168819[0].push(self_2919235610);;
    F.line = 779;
    F.filename = "components.nim";
    result_2919235600 = self_2919235610;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2919235600;

}

function renderTag_2919236625(self_2919236626) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_2919236823(scopeSelf_2919236824, inComponent_2919236825, compName_2919236826, inCycle_2919236827, cycleCounter_2919236828, cycleCounter_2919236828_Idx, compCounter_2919236829) {
        var Temporary1;

      var result_2919236830 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/videos.nim", line: 0};
      framePtr = F;
        F.line = 14;
        F.filename = "videos.nim";
        F.line = 14;
        if ((inCycle_2919236827 && inComponent_2919236825)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_2919236827) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_2919236825) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_2919236839 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp252_2919236822.slotData = _res_2919236839;
        result_2919236830 = _res_2919236839;
      framePtr = F.prev;

      return result_2919236830;

    }

  var result_2919236627 = null;

  var F = {procname: "videos.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 14;
    F.filename = "videos.nim";
    F.line = 14;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,50,53,50] || []).concat(self_2919236626.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,50,53,50] || []).concat(self_2919236626.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp252_2919236821 = initYTvideo_2919235595(Temporary1, toJSStr(HEX24_2785019199(self_2919236626.query)), "200px", "100px");
    F.line = 14;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,50,53,50] || []).concat(self_2919236626.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,50,53,50] || []).concat(self_2919236626.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp252_2919236822 = rgcmp(toJSStr(Temporary2), _comp252_2919236821);
    F.line = 14;
    comp252_2919236822.slot = HEX3Aanonymous_2919236823;
    F.line = 14;
    var data_comp252_2919236840 = render_1644175063(comp252_2919236822);
    F.line = 14;
    addArgIter_1694499355(data_comp252_2919236840, ([100,97,116,97,45] || []).concat(comp252_2919236822.uniqCompId || []));
    F.line = 14;
    window.addEventListener('beforeunload', data_comp252_2919236840.exited);
    F.line = 14;
    window.addEventListener('pagehide', data_comp252_2919236840.pageHide);
    F.line = 14;
    window.addEventListener('pageshow', data_comp252_2919236840.pageShow);
    result_2919236627 = tg2([100,105,118], [data_comp252_2919236840], true);
  framePtr = F.prev;

  return result_2919236627;

}

function style_2919236622(self_2919236623) {
  var result_2919236624 = [];

  var F = {procname: "videos.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 11;
    F.filename = "videos.nim";
    result_2919236624 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2919236624;

}

function render_2919236861(self_2919236862) {
  var result_2919236863 = null;

  var F = {procname: "videos.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 11;
    F.filename = "videos.nim";
    currentComponentsList_1644168814[0].push(self_2919236862);;
    F.line = 11;
    currentComponent_1644168809[0] = nimCopy(null, self_2919236862.uniqCompId, NTI33554449);
    F.line = 11;
    script_2919236620(self_2919236862);
    if ((self_2919236862.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2919236862.created(self_2919236862, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2919236862.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2919236862.beforeUpdated(self_2919236862, null);
    F.line = 11;
    F.filename = "videos.nim";
    result_2919236863 = renderTag_2919236625(self_2919236862);
    F.line = 11;
    tgadd(result_2919236863, [tg2([115,116,121,108,101], [textTag_1694499242(style_2919236622(self_2919236862))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2919236862.rendered(self_2919236862, null);
    F.line = 11;
    F.filename = "videos.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2919236863;

}

function script_3019909984(self_3019909985) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initURKey_3019909098(uniqCompId_3019909099) {
    
function HEX3Aanonymous_3019909102(self_3019909103, ev_3019909104) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019909105(self_3019909106, ev_3019909107) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019909108(self_3019909109, ev_3019909110) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019909111(self_3019909112, ev_3019909113) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019909114(self_3019909115, ev_3019909116) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019909117(self_3019909118, ev_3019909119) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019909120(self_3019909121, ev_3019909122) {
      var F = {procname: "initURKey.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3019909100 = null;

  var F = {procname: "base24.initURKey", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 107;
    F.filename = "base24.nim";
    var self_3019909101 = {uniqCompId: nimCopy(null, uniqCompId_3019909099, NTI33554449), m_type: NTI3019904593, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 111;
    self_3019909101.beforeUpdated = HEX3Aanonymous_3019909102;
    F.line = 111;
    self_3019909101.pageShow = HEX3Aanonymous_3019909105;
    F.line = 111;
    self_3019909101.pageHide = HEX3Aanonymous_3019909108;
    F.line = 111;
    self_3019909101.rendered = HEX3Aanonymous_3019909111;
    F.line = 111;
    self_3019909101.exited = HEX3Aanonymous_3019909114;
    F.line = 111;
    self_3019909101.created = HEX3Aanonymous_3019909117;
    F.line = 111;
    self_3019909101.updated = HEX3Aanonymous_3019909120;
    F.line = 107;
    createdComponentsList_1644168819[0].push(self_3019909101);;
    F.line = 779;
    F.filename = "components.nim";
    result_3019909100 = self_3019909101;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3019909100;

}

function initClassworkList_3019907832(uniqCompId_3019907833) {
    
function HEX3Aanonymous_3019907836(self_3019907837, ev_3019907838) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019907839(self_3019907840, ev_3019907841) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019907842(self_3019907843, ev_3019907844) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019907845(self_3019907846, ev_3019907847) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019907848(self_3019907849, ev_3019907850) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019907851(self_3019907852, ev_3019907853) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019907854(self_3019907855, ev_3019907856) {
      var F = {procname: "initClassworkList.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3019907834 = null;

  var F = {procname: "base24.initClassworkList", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 96;
    F.filename = "base24.nim";
    var self_3019907835 = {uniqCompId: nimCopy(null, uniqCompId_3019907833, NTI33554449), m_type: NTI3019903908, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 105;
    self_3019907835.beforeUpdated = HEX3Aanonymous_3019907836;
    F.line = 105;
    self_3019907835.pageShow = HEX3Aanonymous_3019907839;
    F.line = 105;
    self_3019907835.pageHide = HEX3Aanonymous_3019907842;
    F.line = 105;
    self_3019907835.rendered = HEX3Aanonymous_3019907845;
    F.line = 105;
    self_3019907835.exited = HEX3Aanonymous_3019907848;
    F.line = 105;
    self_3019907835.created = HEX3Aanonymous_3019907851;
    F.line = 105;
    self_3019907835.updated = HEX3Aanonymous_3019907854;
    F.line = 96;
    createdComponentsList_1644168819[0].push(self_3019907835);;
    F.line = 779;
    F.filename = "components.nim";
    result_3019907834 = self_3019907835;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3019907834;

}

function renderTag_3019909989(self_3019909990) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3019910094(scopeSelf_3019910095, inComponent_3019910096, compName_3019910097, inCycle_3019910098, cycleCounter_3019910099, cycleCounter_3019910099_Idx, compCounter_3019910100) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        
function HEX3Aanonymous_3019910206(scopeSelf_3019910207, inComponent_3019910208, compName_3019910209, inCycle_3019910210, cycleCounter_3019910211, cycleCounter_3019910211_Idx, compCounter_3019910212) {
            var Temporary1;

          var result_3019910213 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
          framePtr = F;
            F.line = 116;
            F.filename = "base24.nim";
            F.line = 116;
            if ((inCycle_3019910210 && inComponent_3019910208)) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            if (inCycle_3019910210) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            if (inComponent_3019910208) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            Temporary1 = tg2([100,105,118], [], true);
            }
            }}
            var _res_3019910222 = Temporary1;
            F.line = 293;
            F.filename = "macro_utils.nim";
            comp340_3019910205.slotData = _res_3019910222;
            result_3019910213 = _res_3019910222;
          framePtr = F.prev;

          return result_3019910213;

        }
        var Temporary4;
        var Temporary5;
        
function HEX3Aanonymous_3019910348(scopeSelf_3019910349, inComponent_3019910350, compName_3019910351, inCycle_3019910352, cycleCounter_3019910353, cycleCounter_3019910353_Idx, compCounter_3019910354) {
            var Temporary1;

          var result_3019910355 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
          framePtr = F;
            F.line = 116;
            F.filename = "base24.nim";
            F.line = 116;
            if ((inCycle_3019910352 && inComponent_3019910350)) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            if (inCycle_3019910352) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            if (inComponent_3019910350) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            Temporary1 = tg2([100,105,118], [], true);
            }
            }}
            var _res_3019910364 = Temporary1;
            F.line = 293;
            F.filename = "macro_utils.nim";
            comp341_3019910347.slotData = _res_3019910364;
            result_3019910355 = _res_3019910364;
          framePtr = F.prev;

          return result_3019910355;

        }
        var Temporary6;
        var Temporary7;
        
function HEX3Aanonymous_3019910490(scopeSelf_3019910491, inComponent_3019910492, compName_3019910493, inCycle_3019910494, cycleCounter_3019910495, cycleCounter_3019910495_Idx, compCounter_3019910496) {
            var Temporary1;

          var result_3019910497 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
          framePtr = F;
            F.line = 116;
            F.filename = "base24.nim";
            F.line = 116;
            if ((inCycle_3019910494 && inComponent_3019910492)) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            if (inCycle_3019910494) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            if (inComponent_3019910492) {
            Temporary1 = tg2([100,105,118], [], true);
            }
            else {
            Temporary1 = tg2([100,105,118], [], true);
            }
            }}
            var _res_3019910506 = Temporary1;
            F.line = 293;
            F.filename = "macro_utils.nim";
            comp342_3019910489.slotData = _res_3019910506;
            result_3019910497 = _res_3019910506;
          framePtr = F.prev;

          return result_3019910497;

        }
          var Temporary8;
          var Temporary9;
          
function HEX3Aanonymous_3019910632(scopeSelf_3019910633, inComponent_3019910634, compName_3019910635, inCycle_3019910636, cycleCounter_3019910637, cycleCounter_3019910637_Idx, compCounter_3019910638) {
              var Temporary1;

            var result_3019910639 = null;

            var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
            framePtr = F;
              F.line = 116;
              F.filename = "base24.nim";
              F.line = 116;
              if ((inCycle_3019910636 && inComponent_3019910634)) {
              Temporary1 = tg2([100,105,118], [], true);
              }
              else {
              if (inCycle_3019910636) {
              Temporary1 = tg2([100,105,118], [], true);
              }
              else {
              if (inComponent_3019910634) {
              Temporary1 = tg2([100,105,118], [], true);
              }
              else {
              Temporary1 = tg2([100,105,118], [], true);
              }
              }}
              var _res_3019910648 = Temporary1;
              F.line = 293;
              F.filename = "macro_utils.nim";
              comp343_3019910631.slotData = _res_3019910648;
              result_3019910639 = _res_3019910648;
            framePtr = F.prev;

            return result_3019910639;

          }

      var result_3019910101 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
        F.line = 116;
        F.filename = "base24.nim";
        F.line = 116;
        if ((inCycle_3019910098 && inComponent_3019910096)) {
        F.line = 116;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary2 = ([99,111,109,112,51,52,48] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || []);
        }
        else {
        Temporary2 = ([99,111,109,112,51,52,48] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var _comp340_3019910204 = initClassworkList_3019907832(Temporary2);
        F.line = 116;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary3 = ([99,111,109,112,51,52,48] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || []);
        }
        else {
        Temporary3 = ([99,111,109,112,51,52,48] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var comp340_3019910205 = rgcmp(toJSStr(Temporary3), _comp340_3019910204);
        F.line = 116;
        comp340_3019910205.slot = HEX3Aanonymous_3019910206;
        F.line = 116;
        var data_comp340_3019910223 = render_1644175063(comp340_3019910205);
        F.line = 116;
        addArgIter_1694499355(data_comp340_3019910223, ([100,97,116,97,45] || []).concat(comp340_3019910205.uniqCompId || []));
        F.line = 116;
        window.addEventListener('beforeunload', data_comp340_3019910223.exited);
        F.line = 116;
        window.addEventListener('pagehide', data_comp340_3019910223.pageHide);
        F.line = 116;
        window.addEventListener('pageshow', data_comp340_3019910223.pageShow);
        Temporary1 = tg2([100,105,118], [data_comp340_3019910223], true);
        }
        else {
        if (inCycle_3019910098) {
        F.line = 116;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary4 = ([99,111,109,112,51,52,49] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || []);
        }
        else {
        Temporary4 = ([99,111,109,112,51,52,49] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var _comp341_3019910346 = initClassworkList_3019907832(Temporary4);
        F.line = 116;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary5 = ([99,111,109,112,51,52,49] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || []);
        }
        else {
        Temporary5 = ([99,111,109,112,51,52,49] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var comp341_3019910347 = rgcmp(toJSStr(Temporary5), _comp341_3019910346);
        F.line = 116;
        comp341_3019910347.slot = HEX3Aanonymous_3019910348;
        F.line = 116;
        var data_comp341_3019910365 = render_1644175063(comp341_3019910347);
        F.line = 116;
        addArgIter_1694499355(data_comp341_3019910365, ([100,97,116,97,45] || []).concat(comp341_3019910347.uniqCompId || []));
        F.line = 116;
        window.addEventListener('beforeunload', data_comp341_3019910365.exited);
        F.line = 116;
        window.addEventListener('pagehide', data_comp341_3019910365.pageHide);
        F.line = 116;
        window.addEventListener('pageshow', data_comp341_3019910365.pageShow);
        Temporary1 = tg2([100,105,118], [data_comp341_3019910365], true);
        }
        else {
        if (inComponent_3019910096) {
        F.line = 116;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary6 = ([99,111,109,112,51,52,50] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || []);
        }
        else {
        Temporary6 = ([99,111,109,112,51,52,50] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var _comp342_3019910488 = initClassworkList_3019907832(Temporary6);
        F.line = 116;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary7 = ([99,111,109,112,51,52,50] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || []);
        }
        else {
        Temporary7 = ([99,111,109,112,51,52,50] || []).concat(compCounter_3019910100 || [],[95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_3019910099[cycleCounter_3019910099_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var comp342_3019910489 = rgcmp(toJSStr(Temporary7), _comp342_3019910488);
        F.line = 116;
        comp342_3019910489.slot = HEX3Aanonymous_3019910490;
        F.line = 116;
        var data_comp342_3019910507 = render_1644175063(comp342_3019910489);
        F.line = 116;
        addArgIter_1694499355(data_comp342_3019910507, ([100,97,116,97,45] || []).concat(comp342_3019910489.uniqCompId || []));
        F.line = 116;
        window.addEventListener('beforeunload', data_comp342_3019910507.exited);
        F.line = 116;
        window.addEventListener('pagehide', data_comp342_3019910507.pageHide);
        F.line = 116;
        window.addEventListener('pageshow', data_comp342_3019910507.pageShow);
        Temporary1 = tg2([100,105,118], [data_comp342_3019910507], true);
        }
        else {
          F.line = 116;
          if ((scopedCycleCounter_1644167270[0] == 0)) {
          Temporary8 = [99,111,109,112,51,52,51];
          }
          else {
          Temporary8 = ([99,111,109,112,51,52,51] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
          }
          
          var _comp343_3019910630 = initClassworkList_3019907832(Temporary8);
          F.line = 116;
          if ((scopedCycleCounter_1644167270[0] == 0)) {
          Temporary9 = [99,111,109,112,51,52,51];
          }
          else {
          Temporary9 = ([99,111,109,112,51,52,51] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
          }
          
          var comp343_3019910631 = rgcmp(toJSStr(Temporary9), _comp343_3019910630);
          F.line = 116;
          comp343_3019910631.slot = HEX3Aanonymous_3019910632;
          F.line = 116;
          var data_comp343_3019910649 = render_1644175063(comp343_3019910631);
          F.line = 116;
          addArgIter_1694499355(data_comp343_3019910649, ([100,97,116,97,45] || []).concat(comp343_3019910631.uniqCompId || []));
          F.line = 116;
          window.addEventListener('beforeunload', data_comp343_3019910649.exited);
          F.line = 116;
          window.addEventListener('pagehide', data_comp343_3019910649.pageHide);
          F.line = 116;
          window.addEventListener('pageshow', data_comp343_3019910649.pageShow);
        Temporary1 = tg2([100,105,118], [data_comp343_3019910649], true);
        }
        }}
        var _res_3019910670 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp339_3019910093.slotData = _res_3019910670;
        result_3019910101 = _res_3019910670;
      framePtr = F.prev;

      return result_3019910101;

    }

  var result_3019909991 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "base24.nim";
    F.line = 116;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,51,57] || []).concat(self_3019909990.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,51,57] || []).concat(self_3019909990.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp339_3019910092 = initURKey_3019909098(Temporary1);
    F.line = 116;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,51,57] || []).concat(self_3019909990.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,51,57] || []).concat(self_3019909990.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp339_3019910093 = rgcmp(toJSStr(Temporary2), _comp339_3019910092);
    F.line = 116;
    comp339_3019910093.slot = HEX3Aanonymous_3019910094;
    F.line = 116;
    var data_comp339_3019910671 = render_1644175063(comp339_3019910093);
    F.line = 116;
    addArgIter_1694499355(data_comp339_3019910671, ([100,97,116,97,45] || []).concat(comp339_3019910093.uniqCompId || []));
    F.line = 116;
    window.addEventListener('beforeunload', data_comp339_3019910671.exited);
    F.line = 116;
    window.addEventListener('pagehide', data_comp339_3019910671.pageHide);
    F.line = 116;
    window.addEventListener('pageshow', data_comp339_3019910671.pageShow);
    result_3019909991 = tg2([100,105,118], [data_comp339_3019910671], true);
  framePtr = F.prev;

  return result_3019909991;

}

function style_3019909986(self_3019909987) {
  var result_3019909988 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 113;
    F.filename = "base24.nim";
    result_3019909988 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019909988;

}

function render_3019910692(self_3019910693) {
  var result_3019910694 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 113;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019910693);;
    F.line = 113;
    currentComponent_1644168809[0] = nimCopy(null, self_3019910693.uniqCompId, NTI33554449);
    F.line = 113;
    script_3019909984(self_3019910693);
    if ((self_3019910693.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019910693.created(self_3019910693, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019910693.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019910693.beforeUpdated(self_3019910693, null);
    F.line = 113;
    F.filename = "base24.nim";
    result_3019910694 = renderTag_3019909989(self_3019910693);
    F.line = 113;
    tgadd(result_3019910694, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019909986(self_3019910693))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019910693.rendered(self_3019910693, null);
    F.line = 113;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019910694;

}

function script_2902458788(self_2902458789) {
  var F = {procname: "paper.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2902458793(self_2902458794) {
  var result_2902458795 = null;

  var F = {procname: "paper.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "paper.nim";
    F.line = 13;
    Label1: {
      F.line = 13;
      var fmtRes_2902458800 = [mnewString(0)];
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], makeNimstrLit("print-color-adjust: exact; -webkit-print-color-adjust: exact;\x0A      width: "));;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.width, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [59,32,104,101,105,103,104,116,58,32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.height, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], makeNimstrLit(";\x0A      background-color: var(--paper-color);\x0A      opacity: 0.8;\x0A      background:  linear-gradient(var(--ts-color-body) "));;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.lineWidth, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [44,32,116,114,97,110,115,112,97,114,101,110,116,32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.lineWidth, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [41,44,32,108,105,110,101,97,114,45,103,114,97,100,105,101,110,116,40,116,111,32,114,105,103,104,116,44,32,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,98,111,100,121,41,32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.lineWidth, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [44,32,118,97,114,40,45,45,112,97,112,101,114,45,99,111,108,111,114,41,32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.lineWidth, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [41,59,10,32,32,32,32,32,32,98,97,99,107,103,114,111,117,110,100,45,115,105,122,101,58,32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.boxWidth, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.boxWidth, []);
      F.line = 13;
      fmtRes_2902458800[0].push.apply(fmtRes_2902458800[0], [59,32]);;
      F.line = 13;
      formatValue_2785020246(fmtRes_2902458800, 0, self_2902458794.css, []);
    };
    var style_2902458918 = nimCopy(null, fmtRes_2902458800[0], NTI33554449);
    Label2: {
      F.line = 19;
      var fmtRes_2902459041 = [mnewString(0)];
      F.line = 19;
      formatValue_2785020246(fmtRes_2902459041, 0, self_2902458794.class, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2902459165 = [0];
    result_2902458795 = tg2([100,105,118], [tg2([100,105,118], [], true), tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2902459041[0], NTI33554449)}, NTI2902458764), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, style_2902458918, NTI33554449)}, NTI2902458764)], 0), [self_2902458794.slot(self_2902458794, true, [71,114,97,112,104,80,97,112,101,114], false, cclCounter_2902459165, 0, self_2902458794.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2902458795;

}

function style_2902458790(self_2902458791) {
  var result_2902458792 = [];

  var F = {procname: "paper.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 3;
    F.filename = "paper.nim";
    result_2902458792 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902458792;

}

function render_2902459208(self_2902459209) {
  var result_2902459210 = null;

  var F = {procname: "paper.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 3;
    F.filename = "paper.nim";
    currentComponentsList_1644168814[0].push(self_2902459209);;
    F.line = 3;
    currentComponent_1644168809[0] = nimCopy(null, self_2902459209.uniqCompId, NTI33554449);
    F.line = 3;
    script_2902458788(self_2902459209);
    if ((self_2902459209.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2902459209.created(self_2902459209, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2902459209.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2902459209.beforeUpdated(self_2902459209, null);
    F.line = 3;
    F.filename = "paper.nim";
    result_2902459210 = renderTag_2902458793(self_2902459209);
    F.line = 3;
    tgadd(result_2902459210, [tg2([115,116,121,108,101], [textTag_1694499242(style_2902458790(self_2902459209))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2902459209.rendered(self_2902459209, null);
    F.line = 3;
    F.filename = "paper.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902459210;

}

function script_2919237214(self_2919237215) {
  var F = {procname: "videos.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2919237219(self_2919237220) {
  var result_2919237221 = null;

  var F = {procname: "videos.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "videos.nim";
    Label1: {
      F.line = 27;
      var fmtRes_2919237434 = [mnewString(0)];
      F.line = 27;
      fmtRes_2919237434[0].push.apply(fmtRes_2919237434[0], [116,105,116,108,101,58,34,89,111,117,84,117,98,101,32,118,105,100,101,111,32,112,108,97,121,101,114,34,59,32,119,105,100,116,104,58]);;
      F.line = 27;
      formatValue_2785018980(fmtRes_2919237434, 0, self_2919237220.width, []);
      F.line = 27;
      fmtRes_2919237434[0].push.apply(fmtRes_2919237434[0], [59,32,104,101,105,103,104,116,58]);;
      F.line = 27;
      formatValue_2785018980(fmtRes_2919237434, 0, self_2919237220.height, []);
      F.line = 27;
      fmtRes_2919237434[0].push.apply(fmtRes_2919237434[0], makeNimstrLit("; frameborder:0; allow: accelerometer autoplay clipboard-write encrypted-media gyroscope picture-in-picture web-share;"));;
    };
    result_2919237221 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("display:flex; align-items:center; justify-content: center; width: 100%;")}], 0), [tg1([105,102,114,97,109,101], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,114,99], Field1: cstrToNimstr(self_2919237220.url.val)}, NTI2919236608), nimCopy(null, {Field0: [99,108,97,115,115], Field1: [110,111,45,112,114,105,110,116]}, NTI2919236608), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2919237434[0], NTI33554449)}, NTI2919236608)], 0), [], false)], false)], true);
  framePtr = F.prev;

  return result_2919237221;

}

function style_2919237216(self_2919237217) {
  var result_2919237218 = [];

  var F = {procname: "videos.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "videos.nim";
    result_2919237218 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2919237218;

}

function render_2919237521(self_2919237522) {
  var result_2919237523 = null;

  var F = {procname: "videos.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "videos.nim";
    currentComponentsList_1644168814[0].push(self_2919237522);;
    F.line = 20;
    currentComponent_1644168809[0] = nimCopy(null, self_2919237522.uniqCompId, NTI33554449);
    F.line = 20;
    script_2919237214(self_2919237522);
    if ((self_2919237522.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2919237522.created(self_2919237522, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2919237522.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2919237522.beforeUpdated(self_2919237522, null);
    F.line = 20;
    F.filename = "videos.nim";
    result_2919237523 = renderTag_2919237219(self_2919237522);
    F.line = 20;
    tgadd(result_2919237523, [tg2([115,116,121,108,101], [textTag_1694499242(style_2919237216(self_2919237522))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2919237522.rendered(self_2919237522, null);
    F.line = 20;
    F.filename = "videos.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2919237523;

}

function script_2902460416(self_2902460417) {
  var F = {procname: "paper.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2902460421(self_2902460422) {
  var result_2902460423 = null;

  var F = {procname: "paper.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "paper.nim";
    F.line = 49;
    Label1: {
      F.line = 49;
      var fmtRes_2902460428 = [mnewString(0)];
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], makeNimstrLit("print-color-adjust: exact; -webkit-print-color-adjust: exact;\x0A        width: "));;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.width, []);
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], [59,32,104,101,105,103,104,116,58,32]);;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.height, []);
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], makeNimstrLit(";\x0A        background-color: var(--paper-color);\x0A        opacity: 0.8;\x0A        background-size: "));;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.lineSpacing, []);
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], [32]);;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.lineSpacing, []);
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], makeNimstrLit(";\x0A        background-image:  repeating-linear-gradient(0deg, var(--ts-color-body), var(--ts-color-body) "));;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.lineHeight, []);
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], [44,32,118,97,114,40,45,45,112,97,112,101,114,45,99,111,108,111,114,41,32]);;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.lineHeight, []);
      F.line = 49;
      fmtRes_2902460428[0].push.apply(fmtRes_2902460428[0], [44,32,118,97,114,40,45,45,112,97,112,101,114,45,99,111,108,111,114,41,41,59,32]);;
      F.line = 49;
      formatValue_2785020246(fmtRes_2902460428, 0, self_2902460422.css, []);
    };
    var style_2902460520 = nimCopy(null, fmtRes_2902460428[0], NTI33554449);
    Label2: {
      F.line = 55;
      var fmtRes_2902460643 = [mnewString(0)];
      F.line = 55;
      fmtRes_2902460643[0].push.apply(fmtRes_2902460643[0], [100,114,97,119,105,110,103,45,112,97,112,101,114,32]);;
      F.line = 55;
      formatValue_2785020246(fmtRes_2902460643, 0, self_2902460422.class, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2902460767 = [0];
    result_2902460423 = tg2([100,105,118], [tg2([100,105,118], [], true), tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2902460643[0], NTI33554449)}, NTI2902459763), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, style_2902460520, NTI33554449)}, NTI2902459763)], 0), [self_2902460422.slot(self_2902460422, true, [76,105,110,101,100,80,97,112,101,114], false, cclCounter_2902460767, 0, self_2902460422.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2902460423;

}

function style_2902460418(self_2902460419) {
  var result_2902460420 = [];

  var F = {procname: "paper.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 40;
    F.filename = "paper.nim";
    result_2902460420 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902460420;

}

function render_2902460810(self_2902460811) {
  var result_2902460812 = null;

  var F = {procname: "paper.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 40;
    F.filename = "paper.nim";
    currentComponentsList_1644168814[0].push(self_2902460811);;
    F.line = 40;
    currentComponent_1644168809[0] = nimCopy(null, self_2902460811.uniqCompId, NTI33554449);
    F.line = 40;
    script_2902460416(self_2902460811);
    if ((self_2902460811.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2902460811.created(self_2902460811, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2902460811.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2902460811.beforeUpdated(self_2902460811, null);
    F.line = 40;
    F.filename = "paper.nim";
    result_2902460812 = renderTag_2902460421(self_2902460811);
    F.line = 40;
    tgadd(result_2902460812, [tg2([115,116,121,108,101], [textTag_1694499242(style_2902460418(self_2902460811))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2902460811.rendered(self_2902460811, null);
    F.line = 40;
    F.filename = "paper.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902460812;

}

function script_2885683107(self_2885683108) {
  var F = {procname: "markup.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2885683112(self_2885683113) {
  var result_2885683114 = null;

  var F = {procname: "markup.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 40;
    F.filename = "markup.nim";
    Label1: {
      F.line = 39;
      var fmtRes_2885683327 = [mnewString(0)];
      F.line = 39;
      fmtRes_2885683327[0].push.apply(fmtRes_2885683327[0], makeNimstrLit("border:solid 0.01em var(--ts-color-border); background-color: white; height: 1.7em; width: "));;
      F.line = 39;
      formatValue_2785020246(fmtRes_2885683327, 0, self_2885683113.width, []);
      F.line = 39;
      fmtRes_2885683327[0].push.apply(fmtRes_2885683327[0], [59,32]);;
      F.line = 39;
      formatValue_2785020246(fmtRes_2885683327, 0, self_2885683113.css, []);
    };
    Label2: {
      F.line = 39;
      var fmtRes_2885683358 = [mnewString(0)];
      F.line = 39;
      formatValue_2785020246(fmtRes_2885683358, 0, self_2885683113.class, []);
      F.line = 39;
      fmtRes_2885683358[0].push.apply(fmtRes_2885683358[0], [32,102,105,108,108,101,100,73,110,112,117,116]);;
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2885683482 = [0];
    result_2885683114 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("display:inline-block; padding-left: 0.2em; padding-right: 0.1em; box-sizing: border-box;")}], 0), [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885683327[0], NTI33554449)}, NTI2885682352), nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2885683358[0], NTI33554449)}, NTI2885682352)], 0), [self_2885683113.slot(self_2885683113, true, [70,105,108,108,101,100], false, cclCounter_2885683482, 0, self_2885683113.uniqCompId)], false)], false)], true);
  framePtr = F.prev;

  return result_2885683114;

}

function style_2885683109(self_2885683110) {
  var result_2885683111 = [];

  var F = {procname: "markup.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "markup.nim";
    result_2885683111 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885683111;

}

function render_2885683545(self_2885683546) {
  var result_2885683547 = null;

  var F = {procname: "markup.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "markup.nim";
    currentComponentsList_1644168814[0].push(self_2885683546);;
    F.line = 32;
    currentComponent_1644168809[0] = nimCopy(null, self_2885683546.uniqCompId, NTI33554449);
    F.line = 32;
    script_2885683107(self_2885683546);
    if ((self_2885683546.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2885683546.created(self_2885683546, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2885683546.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2885683546.beforeUpdated(self_2885683546, null);
    F.line = 32;
    F.filename = "markup.nim";
    result_2885683547 = renderTag_2885683112(self_2885683546);
    F.line = 32;
    tgadd(result_2885683547, [tg2([115,116,121,108,101], [textTag_1694499242(style_2885683109(self_2885683546))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2885683546.rendered(self_2885683546, null);
    F.line = 32;
    F.filename = "markup.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885683547;

}

function script_2885682135(self_2885682136) {
  var F = {procname: "markup.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2885682140(self_2885682141) {
  var result_2885682142 = null;

  var F = {procname: "markup.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 28;
    F.filename = "markup.nim";
    Label1: {
      F.line = 26;
      var fmtRes_2885682245 = [mnewString(0)];
      F.line = 26;
      formatValue_2785020246(fmtRes_2885682245, 0, self_2885682141.class, []);
    };
    Label2: {
      F.line = 26;
      var fmtRes_2885682263 = [mnewString(0)];
      F.line = 26;
      fmtRes_2885682263[0].push.apply(fmtRes_2885682263[0], makeNimstrLit("padding: 0.2em; background-color: white; border: solid 0.05em var(--ts-color-border); "));;
      F.line = 26;
      formatValue_2785020246(fmtRes_2885682263, 0, self_2885682141.css, []);
    };
    Label3: {
      F.line = 28;
      var fmtRes_2885682717 = [mnewString(0)];
      F.line = 28;
      formatValue_2785020246(fmtRes_2885682717, 0, self_2885682141.prompt, []);
    };
    Label4: {
      F.line = 28;
      var fmtRes_2885682735 = [mnewString(0)];
      F.line = 28;
      fmtRes_2885682735[0].push.apply(fmtRes_2885682735[0], [119,105,100,116,104,58,32]);;
      F.line = 28;
      formatValue_2785020246(fmtRes_2885682735, 0, self_2885682141.width, []);
      F.line = 28;
      fmtRes_2885682735[0].push.apply(fmtRes_2885682735[0], [59,32,98,111,114,100,101,114,58,32,110,111,110,101,59,32,98,97,99,107,103,114,111,117,110,100,45,99,111,108,111,114,58,32,110,111,110,101,59]);;
    };
    result_2885682142 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2885682245[0], NTI33554449)}, NTI2885681722), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885682263[0], NTI33554449)}, NTI2885681722)], 0), [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [99,111,108,111,114,58,32,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,109,117,116,101,100,41,59,32,112,97,100,100,105,110,103,45,114,105,103,104,116,58,32,48,46,53,101,109,59,32,98,111,114,100,101,114,58,110,111,110,101,59]}], 0), [tg4(HEX24_2785020465(self_2885682141.prefix), true, [], false)], false), tg1([105,110,112,117,116], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [116,121,112,101], Field1: [116,101,120,116]}, NTI2885681984), nimCopy(null, {Field0: [112,108,97,99,101,104,111,108,100,101,114], Field1: nimCopy(null, fmtRes_2885682717[0], NTI33554449)}, NTI2885681984), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885682735[0], NTI33554449)}, NTI2885681984)], 0), [], false)], false)], true);
  framePtr = F.prev;

  return result_2885682142;

}

function style_2885682137(self_2885682138) {
  var result_2885682139 = [];

  var F = {procname: "markup.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "markup.nim";
    result_2885682139 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885682139;

}

function render_2885682801(self_2885682802) {
  var result_2885682803 = null;

  var F = {procname: "markup.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 19;
    F.filename = "markup.nim";
    currentComponentsList_1644168814[0].push(self_2885682802);;
    F.line = 19;
    currentComponent_1644168809[0] = nimCopy(null, self_2885682802.uniqCompId, NTI33554449);
    F.line = 19;
    script_2885682135(self_2885682802);
    if ((self_2885682802.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2885682802.created(self_2885682802, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2885682802.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2885682802.beforeUpdated(self_2885682802, null);
    F.line = 19;
    F.filename = "markup.nim";
    result_2885682803 = renderTag_2885682140(self_2885682802);
    F.line = 19;
    tgadd(result_2885682803, [tg2([115,116,121,108,101], [textTag_1694499242(style_2885682137(self_2885682802))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2885682802.rendered(self_2885682802, null);
    F.line = 19;
    F.filename = "markup.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885682803;

}

function script_2902461154(self_2902461155) {
  var F = {procname: "paper.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2902461159(self_2902461160) {
  var result_2902461161 = null;

  var F = {procname: "paper.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "paper.nim";
    F.line = 65;
    Label1: {
      F.line = 65;
      var fmtRes_2902461166 = [mnewString(0)];
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], makeNimstrLit("print-color-adjust: exact; -webkit-print-color-adjust: exact;\x0A        width: "));;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.width, []);
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], [59,32,104,101,105,103,104,116,58,32]);;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.height, []);
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], makeNimstrLit(";\x0A        background-color: var(--paper-color);\x0A        opacity: 0.8;\x0A        background-size: "));;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.lineSpacing, []);
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], [32]);;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.lineSpacing, []);
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], makeNimstrLit(";\x0A        background-image:  repeating-linear-gradient(90deg, var(--ts-color-body), var(--ts-color-body) "));;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.lineHeight, []);
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], [44,32,118,97,114,40,45,45,112,97,112,101,114,45,99,111,108,111,114,41,32]);;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.lineHeight, []);
      F.line = 65;
      fmtRes_2902461166[0].push.apply(fmtRes_2902461166[0], [44,32,118,97,114,40,45,45,112,97,112,101,114,45,99,111,108,111,114,41,41,59,32]);;
      F.line = 65;
      formatValue_2785020246(fmtRes_2902461166, 0, self_2902461160.css, []);
    };
    var style_2902461258 = nimCopy(null, fmtRes_2902461166[0], NTI33554449);
    Label2: {
      F.line = 71;
      var fmtRes_2902461381 = [mnewString(0)];
      F.line = 71;
      fmtRes_2902461381[0].push.apply(fmtRes_2902461381[0], [100,114,97,119,105,110,103,45,112,97,112,101,114,32]);;
      F.line = 71;
      formatValue_2785020246(fmtRes_2902461381, 0, self_2902461160.class, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2902461505 = [0];
    result_2902461161 = tg2([100,105,118], [tg2([100,105,118], [], true), tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2902461381[0], NTI33554449)}, NTI2902460220), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, style_2902461258, NTI33554449)}, NTI2902460220)], 0), [self_2902461160.slot(self_2902461160, true, [86,101,114,116,105,99,97,108,76,105,110,101,100,80,97,112,101,114], false, cclCounter_2902461505, 0, self_2902461160.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2902461161;

}

function style_2902461156(self_2902461157) {
  var result_2902461158 = [];

  var F = {procname: "paper.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 57;
    F.filename = "paper.nim";
    result_2902461158 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902461158;

}

function render_2902461548(self_2902461549) {
  var result_2902461550 = null;

  var F = {procname: "paper.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 57;
    F.filename = "paper.nim";
    currentComponentsList_1644168814[0].push(self_2902461549);;
    F.line = 57;
    currentComponent_1644168809[0] = nimCopy(null, self_2902461549.uniqCompId, NTI33554449);
    F.line = 57;
    script_2902461154(self_2902461549);
    if ((self_2902461549.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2902461549.created(self_2902461549, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2902461549.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2902461549.beforeUpdated(self_2902461549, null);
    F.line = 57;
    F.filename = "paper.nim";
    result_2902461550 = renderTag_2902461159(self_2902461549);
    F.line = 57;
    tgadd(result_2902461550, [tg2([115,116,121,108,101], [textTag_1694499242(style_2902461156(self_2902461549))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2902461549.rendered(self_2902461549, null);
    F.line = 57;
    F.filename = "paper.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2902461550;

}

function script_2885683831(self_2885683832) {
  var F = {procname: "markup.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2885683836(self_2885683837) {
  var result_2885683838 = null;

  var F = {procname: "markup.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 47;
    F.filename = "markup.nim";
    Label1: {
      F.line = 46;
      var fmtRes_2885683941 = [mnewString(0)];
      F.line = 46;
      formatValue_2785020246(fmtRes_2885683941, 0, self_2885683837.class, []);
    };
    Label2: {
      F.line = 46;
      var fmtRes_2885683959 = [mnewString(0)];
      F.line = 46;
      fmtRes_2885683959[0].push.apply(fmtRes_2885683959[0], makeNimstrLit("page-break-inside: avoid; display:flex; flex-direction: column; border: 0.4em dotted var(--ts-color-border); "));;
      F.line = 46;
      formatValue_2785020246(fmtRes_2885683959, 0, self_2885683837.css, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2885684083 = [0];
    result_2885683838 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2885683941[0], NTI33554449)}, NTI2885682717), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885683959[0], NTI33554449)}, NTI2885682717)], 0), [self_2885683837.slot(self_2885683837, true, [80,114,111,98,71,114,111,117,112], false, cclCounter_2885684083, 0, self_2885683837.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2885683838;

}

function style_2885683833(self_2885683834) {
  var result_2885683835 = [];

  var F = {procname: "markup.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 42;
    F.filename = "markup.nim";
    result_2885683835 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885683835;

}

function render_2885684126(self_2885684127) {
  var result_2885684128 = null;

  var F = {procname: "markup.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 42;
    F.filename = "markup.nim";
    currentComponentsList_1644168814[0].push(self_2885684127);;
    F.line = 42;
    currentComponent_1644168809[0] = nimCopy(null, self_2885684127.uniqCompId, NTI33554449);
    F.line = 42;
    script_2885683831(self_2885684127);
    if ((self_2885684127.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2885684127.created(self_2885684127, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2885684127.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2885684127.beforeUpdated(self_2885684127, null);
    F.line = 42;
    F.filename = "markup.nim";
    result_2885684128 = renderTag_2885683836(self_2885684127);
    F.line = 42;
    tgadd(result_2885684128, [tg2([115,116,121,108,101], [textTag_1694499242(style_2885683833(self_2885684127))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2885684127.rendered(self_2885684127, null);
    F.line = 42;
    F.filename = "markup.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885684128;

}

function script_2885686546(self_2885686547) {
  var F = {procname: "markup.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function HEX5BHEX5D_2852135334(s_2852135338, x_2852135339) {
  var result_2852135340 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 139;
    F.filename = "indices.nim";
    var a_2852135342 = x_2852135339.a;
    F.line = 140;
    var L_2852135347 = addInt(subInt(subInt((s_2852135338).length, x_2852135339.b), a_2852135342), 1);
    F.line = 141;
    result_2852135340 = new Array(chckRange(L_2852135347, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2852135347, 0, 2147483647) ; ++i) { result_2852135340[i] = []; }    Label1: {
      F.line = 142;
      var i_2852135356 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536881488 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536881488 < L_2852135347)) break Label3;
            F.line = 142;
            F.filename = "indices.nim";
            i_2852135356 = i_536881488;
            F.line = 142;
            result_2852135340[chckIndx(i_2852135356, 0, (result_2852135340).length - 1)] = nimCopy(null, s_2852135338[chckIndx(addInt(i_2852135356, a_2852135342), 0, (s_2852135338).length - 1)], NTI33554449);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536881488 = addInt(i_536881488, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_2852135340;

}

function HEX5BHEX5D_2885687044(s_2885687046, i_2885687047) {
  var result_2885687048 = null;
  var result_2885687048_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_2885687048 = s_2885687046; result_2885687048_Idx = chckIndx(subInt((s_2885687046).length, i_2885687047), 0, (s_2885687046).length - 1);
  framePtr = F.prev;

  return [result_2885687048, result_2885687048_Idx];

}

function renderTag_2885686551(self_2885686552) {
    var Temporary4;
    var Temporary9;

  var result_2885686553 = null;

  var F = {procname: "markup.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 90;
    F.filename = "markup.nim";
    F.line = 81;
    var keys_2885686554 = nimCopy(null, self_2885686552.words.val, NTI2852131523);
    F.line = 83;
    var c245_2885686575 = 0;
    F.line = 83;
    var __r245_2885686583 = newSeq_2818572815(0);
    Label1: {
      F.line = 82;
      var letter_2885686584 = 0;
      F.line = 259;
      F.filename = "iterators.nim";
      var i_536881478 = 0;
      F.line = 260;
      var L_536881479 = (self_2885686552.letters.val).length;
      Label2: {
        F.line = 261;
          Label3: while (true) {
          if (!(i_536881478 < L_536881479)) break Label3;
            F.line = 82;
            F.filename = "markup.nim";
            letter_2885686584 = self_2885686552.letters.val[chckIndx(i_536881478, 0, (self_2885686552.letters.val).length - 1)];
            F.line = 82;
            c245_2885686575 = addInt(c245_2885686575, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c245_2885686575;
            F.line = 82;
            F.filename = "markup.nim";
            F.line = 83;
            keys_2885686554.push(nimCharToStr(letter_2885686584));;
            __r245_2885686583.push(tg2([100,105,118], [tg2([100,105,118], [], true)], true));;
            F.line = 83;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 263;
            F.filename = "iterators.nim";
            i_536881478 = addInt(i_536881478, 1);
            if (!(((self_2885686552.letters.val).length == L_536881479))) {
            F.line = 264;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(((keys_2885686554).length == 0))) {
    F.line = 87;
    F.filename = "markup.nim";
    var c246_2885686742 = 0;
    F.line = 87;
    var __r246_2885686750 = newSeq_2818572815(0);
    Label5: {
      F.line = 86;
      var word_2885686777 = [];
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536881483 = [];
      F.line = 86;
      F.filename = "markup.nim";
      colontmp__536881483 = HEX5BHEX5D_2852135334(keys_2885686554, HEX2EHEX2E_956301416(0, 2));
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881484 = 0;
      F.line = 242;
      var L_536881485 = (colontmp__536881483).length;
      Label6: {
        F.line = 243;
          Label7: while (true) {
          if (!(i_536881484 < L_536881485)) break Label7;
            F.line = 86;
            F.filename = "markup.nim";
            word_2885686777 = colontmp__536881483[chckIndx(i_536881484, 0, (colontmp__536881483).length - 1)];
            F.line = 86;
            c246_2885686742 = addInt(c246_2885686742, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c246_2885686742;
            F.line = 86;
            F.filename = "markup.nim";
            Label8: {
              F.line = 88;
              var fmtRes_2885686908 = [mnewString(0)];
              F.line = 88;
              fmtRes_2885686908[0].push.apply(fmtRes_2885686908[0], [32]);;
              F.line = 88;
              formatValue_2785020246(fmtRes_2885686908, 0, self_2885686552.sep, []);
              F.line = 88;
              fmtRes_2885686908[0].push.apply(fmtRes_2885686908[0], [32]);;
            };
            __r246_2885686750.push(tg2([100,105,118], [tg2([107,98,100], [tg4(word_2885686777, true, [], false)], false), tg4(fmtRes_2885686908[0], true, [], false)], true));;
            F.line = 87;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881484 = addInt(i_536881484, 1);
            if (!(((colontmp__536881483).length == L_536881485))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Temporary4 = tg2([100,105,118], [tg2([115,112,97,110], [tg2([100,105,118], __r246_2885686750, true), tg2([107,98,100], [tg4((Temporary9 = HEX5BHEX5D_2885687044(keys_2885686554, 1), Temporary9)[0][Temporary9[1]], true, [], false)], false), tg4([32], true, [], false)], false)], true);
    }
    else {
    Temporary4 = null;
    }
    
    result_2885686553 = tg2([100,105,118], [tg2([100,105,118], [], true), tg2([100,105,118], __r245_2885686583, true), Temporary4], true);
  framePtr = F.prev;

  return result_2885686553;

}

function style_2885686548(self_2885686549) {
  var result_2885686550 = [];

  var F = {procname: "markup.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 76;
    F.filename = "markup.nim";
    result_2885686550 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885686550;

}

function render_2885687143(self_2885687144) {
  var result_2885687145 = null;

  var F = {procname: "markup.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 76;
    F.filename = "markup.nim";
    currentComponentsList_1644168814[0].push(self_2885687144);;
    F.line = 76;
    currentComponent_1644168809[0] = nimCopy(null, self_2885687144.uniqCompId, NTI33554449);
    F.line = 76;
    script_2885686546(self_2885687144);
    if ((self_2885687144.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2885687144.created(self_2885687144, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2885687144.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2885687144.beforeUpdated(self_2885687144, null);
    F.line = 76;
    F.filename = "markup.nim";
    result_2885687145 = renderTag_2885686551(self_2885687144);
    F.line = 76;
    tgadd(result_2885687145, [tg2([115,116,121,108,101], [textTag_1694499242(style_2885686548(self_2885687144))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2885687144.rendered(self_2885687144, null);
    F.line = 76;
    F.filename = "markup.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885687145;

}

function script_2885685517(self_2885685518) {
  var F = {procname: "markup.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2885685522(self_2885685523) {
  var result_2885685524 = null;

  var F = {procname: "markup.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 74;
    F.filename = "markup.nim";
    F.line = 72;
    var svgWidth_2885685525 = ((Math.ceil((8.571428571428571 * (((self_2885685523.text.val) == null ? 0 : (self_2885685523.text.val).length) + 0.5)))) | 0);
    Label1: {
      F.line = 73;
      var fmtRes_2885685758 = [mnewString(0)];
      F.line = 73;
      fmtRes_2885685758[0].push.apply(fmtRes_2885685758[0], [48,32,48,32]);;
      F.line = 73;
      formatValue_1040187595(fmtRes_2885685758, 0, svgWidth_2885685525, []);
      F.line = 73;
      fmtRes_2885685758[0].push.apply(fmtRes_2885685758[0], [32,49,56]);;
    };
    Label2: {
      F.line = 74;
      var fmtRes_2885685878 = [mnewString(0)];
      F.line = 74;
      fmtRes_2885685878[0].push.apply(fmtRes_2885685878[0], [109,111,110,111,32]);;
      F.line = 74;
      formatValue_2785018980(fmtRes_2885685878, 0, self_2885685523.class, []);
    };
    Label3: {
      F.line = 74;
      var fmtRes_2885685900 = [mnewString(0)];
      F.line = 74;
      fmtRes_2885685900[0].push.apply(fmtRes_2885685900[0], [119,105,100,116,104,58,32,49,48,48,37,59,32]);;
      F.line = 74;
      formatValue_2785018980(fmtRes_2885685900, 0, self_2885685523.css, []);
    };
    result_2885685524 = tg2([100,105,118], [tg2([100,105,118], [], true), tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [119,105,100,116,104,58,49,48,48,37,59,32,97,108,105,103,110,58,99,101,110,116,101,114,59]}], 0), [tg1([115,118,103], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [118,105,101,119,66,111,120], Field1: nimCopy(null, fmtRes_2885685758[0], NTI33554449)}, NTI2885683796)], 0), [tg1([116,101,120,116], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2885685878[0], NTI33554449)}, NTI2885683865), nimCopy(null, {Field0: [120], Field1: [48]}, NTI2885683865), nimCopy(null, {Field0: [121], Field1: [49,53]}, NTI2885683865), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885685900[0], NTI33554449)}, NTI2885683865)], 0), [tg4(HEX24_2785019199(self_2885685523.text), true, [], false)], false)], false)], false)], true);
  framePtr = F.prev;

  return result_2885685524;

}

function style_2885685519(self_2885685520) {
  var result_2885685521 = [];

  var F = {procname: "markup.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 67;
    F.filename = "markup.nim";
    result_2885685521 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885685521;

}

function render_2885686222(self_2885686223) {
  var result_2885686224 = null;

  var F = {procname: "markup.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 67;
    F.filename = "markup.nim";
    currentComponentsList_1644168814[0].push(self_2885686223);;
    F.line = 67;
    currentComponent_1644168809[0] = nimCopy(null, self_2885686223.uniqCompId, NTI33554449);
    F.line = 67;
    script_2885685517(self_2885686223);
    if ((self_2885686223.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2885686223.created(self_2885686223, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2885686223.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2885686223.beforeUpdated(self_2885686223, null);
    F.line = 67;
    F.filename = "markup.nim";
    result_2885686224 = renderTag_2885685522(self_2885686223);
    F.line = 67;
    tgadd(result_2885686224, [tg2([115,116,121,108,101], [textTag_1694499242(style_2885685519(self_2885686223))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2885686223.rendered(self_2885686223, null);
    F.line = 67;
    F.filename = "markup.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885686224;

}

function script_2885684429(self_2885684430) {
  var F = {procname: "markup.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function nsuformatBiggestFloat(f_721422403, format_721422404, precision_721422405, decimalSep_721422406) {
  var result_721422407 = [];

  var F = {procname: "strutils.formatBiggestFloat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2452;
    F.filename = "strutils.nim";
    var precision_721422408 = precision_721422405;
    if ((precision_721422408 == (-1))) {
    F.line = 2455;
    precision_721422408 = 6;
    }
    
    F.line = 2456;
    var res_721422409 = null;
    F.line = 2457;
    switch (format_721422404) {
    case 0:
      F.line = 2459;
      res_721422409 = f_721422403.toString();
      break;
    case 1:
      F.line = 2461;
      res_721422409 = f_721422403.toFixed(precision_721422408);
      break;
    case 2:
      F.line = 2463;
      res_721422409 = f_721422403.toExponential(precision_721422408);
      break;
    }
    F.line = 2464;
    result_721422407 = nimCopy(null, cstrToNimstr(res_721422409), NTI33554449);
    if (((1.0 / f_721422403) == -Infinity)) {
    F.line = 2467;
    result_721422407 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_721422409) || []), NTI33554449);
    }
    
    Label1: {
      F.line = 2468;
      var i_721422414 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__536881498 = 0;
      F.line = 2468;
      F.filename = "strutils.nim";
      colontmp__536881498 = (result_721422407).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536881499 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536881499 < colontmp__536881498)) break Label3;
            F.line = 2468;
            F.filename = "strutils.nim";
            i_721422414 = i_536881499;
            if ((ConstSet15[result_721422407[chckIndx(i_721422414, 0, (result_721422407).length - 1)]] != undefined)) {
            F.line = 2471;
            result_721422407[chckIndx(i_721422414, 0, (result_721422407).length - 1)] = decimalSep_721422406;
            }
            
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536881499 = addInt(i_536881499, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_721422407;

}

function insert_33558003(x_33558004, x_33558004_Idx, item_33558005, i_33558006) {
    var Temporary1;

  var F = {procname: "system.insert", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2415;
    F.filename = "system.nim";
    var xl_33558007 = (x_33558004[x_33558004_Idx]).length;
    F.line = 2416;
    if (x_33558004[x_33558004_Idx].length < (Temporary1 = chckRange(addInt(xl_33558007, (item_33558005).length), 0, 2147483647), Temporary1)) { for (var i = x_33558004[x_33558004_Idx].length; i < Temporary1; ++i) x_33558004[x_33558004_Idx].push(0); }
         else {x_33558004[x_33558004_Idx].length = Temporary1; };
    F.line = 2417;
    var j_33558008 = subInt(xl_33558007, 1);
    Label2: {
      F.line = 2418;
        Label3: while (true) {
        if (!(i_33558006 <= j_33558008)) break Label3;
          F.line = 2422;
          x_33558004[x_33558004_Idx][chckIndx(addInt(j_33558008, (item_33558005).length), 0, (x_33558004[x_33558004_Idx]).length - 1)] = x_33558004[x_33558004_Idx][chckIndx(j_33558008, 0, (x_33558004[x_33558004_Idx]).length - 1)];
          F.line = 2423;
          j_33558008 = subInt(j_33558008, 1);
        }
    };
    F.line = 2424;
    j_33558008 = 0;
    Label4: {
      F.line = 2425;
        Label5: while (true) {
        if (!(j_33558008 < (item_33558005).length)) break Label5;
          F.line = 2426;
          x_33558004[x_33558004_Idx][chckIndx(addInt(j_33558008, i_33558006), 0, (x_33558004[x_33558004_Idx]).length - 1)] = item_33558005[chckIndx(j_33558008, 0, (item_33558005).length - 1)];
          F.line = 2427;
          j_33558008 = addInt(j_33558008, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuToUpperAsciiChar(c_721420392) {
  var result_721420393 = 0;

  var F = {procname: "strutils.toUpperAscii", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((ConstSet17[c_721420392] != undefined)) {
    F.line = 255;
    F.filename = "strutils.nim";
    result_721420393 = (c_721420392 ^ 32);
    }
    else {
      F.line = 257;
      result_721420393 = c_721420392;
    }
    
  framePtr = F.prev;

  return result_721420393;

}

function nsuToUpperAsciiStr(s_721420399) {
  var result_721420400 = [];

  var F = {procname: "strutils.toUpperAscii", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 223;
    F.filename = "strutils.nim";
    result_721420400 = nimCopy(null, mnewString(chckRange((s_721420399).length, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 224;
      var iHEX60gensym11_721420406 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__2734687175 = 0;
      F.line = 224;
      F.filename = "strutils.nim";
      colontmp__2734687175 = subInt((s_721420399).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_2734687176 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_2734687176 <= colontmp__2734687175)) break Label3;
            F.line = 270;
            F.filename = "strutils.nim";
            iHEX60gensym11_721420406 = res_2734687176;
            F.line = 270;
            result_721420400[chckIndx(iHEX60gensym11_721420406, 0, (result_721420400).length - 1)] = nsuToUpperAsciiChar(s_721420399[chckIndx(iHEX60gensym11_721420406, 0, (s_721420399).length - 1)]);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_2734687176 = addInt(res_2734687176, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_721420400;

}

function formatValue_2902459345(result_2902459347, result_2902459347_Idx, value_2902459348, specifier_2902459349) {
    var Temporary1;

  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/strformat.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((specifier_2902459349).length == 0)) {
    F.line = 501;
    F.filename = "strformat.nim";
    result_2902459347[result_2902459347_Idx].push.apply(result_2902459347[result_2902459347_Idx], HEX24_33557559(value_2902459348));;
    F.line = 502;
    break BeforeRet;
    }
    
    F.line = 503;
    var spec_2902459353 = parseStandardFormatSpecifier_704643130(specifier_2902459349, 0, false);
    F.line = 505;
    var fmode_2902459354 = 0;
    F.line = 506;
    switch (spec_2902459353.typ) {
    case 101:
    case 69:
      F.line = 508;
      fmode_2902459354 = 2;
      break;
    case 102:
    case 70:
      F.line = 510;
      fmode_2902459354 = 1;
      break;
    case 103:
    case 71:
      F.line = 512;
      fmode_2902459354 = 0;
      break;
    case 0:
      break;
    default: 
      F.line = 515;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2902459353.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    F.line = 519;
    var f_2902459356 = [nsuformatBiggestFloat(value_2902459348, fmode_2902459354, chckRange(spec_2902459353.precision, (-1), 32), 46)];
    F.line = 520;
    var sign_2902459357 = false;
    if ((0.0 <= value_2902459348)) {
    if (!((spec_2902459353.sign == 45))) {
    F.line = 523;
    sign_2902459357 = true;
    if ((value_2902459348 == 0.0)) {
    if (((1.0 / value_2902459348) == Infinity)) {
    F.line = 527;
    insert_33558003(f_2902459356, 0, nimCharToStr(spec_2902459353.sign), 0);
    }
    
    }
    else {
      F.line = 529;
    insert_33558003(f_2902459356, 0, nimCharToStr(spec_2902459353.sign), 0);
    }
    
    }
    
    }
    else {
      F.line = 531;
      sign_2902459357 = true;
    }
    
    if (spec_2902459353.padWithZero) {
    F.line = 534;
    var signStr_2902459358 = [];
    if (sign_2902459357) {
    F.line = 536;
    signStr_2902459358 = nimCopy(null, nimCharToStr(f_2902459356[0][chckIndx(0, 0, (f_2902459356[0]).length - 1)]), NTI33554449);
    F.line = 537;
    f_2902459356[0] = nimCopy(null, HEX5BHEX5D_721421595(f_2902459356[0], HEX2EHEX2E_956301416(1, 1)), NTI33554449);
    }
    
    F.line = 539;
    var toFill_2902459396 = subInt(subInt(spec_2902459353.minimumWidth, (f_2902459356[0]).length), (sign_2902459357 ? 1 : 0));
    if ((0 < toFill_2902459396)) {
    F.line = 541;
    f_2902459356[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2902459396, 0, 2147483647)) || []).concat(f_2902459356[0] || []), NTI33554449);
    }
    
    if (sign_2902459357) {
    F.line = 543;
    f_2902459356[0] = nimCopy(null, (signStr_2902459358 || []).concat(f_2902459356[0] || []), NTI33554449);
    }
    
    }
    
    F.line = 546;
    if ((spec_2902459353.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2902459353.align;
    }
    
    var align_2902459397 = Temporary1;
    F.line = 547;
    var res_2902459398 = alignString_704643092(f_2902459356[0], spec_2902459353.minimumWidth, align_2902459397, spec_2902459353.fill);
    if ((ConstSet16[spec_2902459353.typ] != undefined)) {
    F.line = 549;
    result_2902459347[result_2902459347_Idx].push.apply(result_2902459347[result_2902459347_Idx], nsuToUpperAsciiStr(res_2902459398));;
    }
    else {
      F.line = 551;
    result_2902459347[result_2902459347_Idx].push.apply(result_2902459347[result_2902459347_Idx], res_2902459398);;
    }
    
  };
  framePtr = F.prev;

  
}

function renderTag_2885684434(self_2885684435) {
  var result_2885684436 = null;

  var F = {procname: "markup.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 64;
    F.filename = "markup.nim";
    F.line = 56;
    var initial_2885684437 = self_2885684435.word.val[chckIndx(0, 0, (self_2885684435.word.val).length - 1)];
    F.line = 57;
    var rest_2885684492 = HEX5BHEX5D_721421595(self_2885684435.word.val, HEX2EHEX2E_956301416(1, 1));
    Label1: {
      F.line = 58;
      var fmtRes_2885684615 = [mnewString(0)];
      F.line = 58;
      formatValue_2785018980(fmtRes_2885684615, 0, self_2885684435.class, []);
    };
    Label2: {
      F.line = 59;
      var fmtRes_2885684747 = [mnewString(0)];
      F.line = 59;
      fmtRes_2885684747[0].push.apply(fmtRes_2885684747[0], [100,105,115,112,108,97,121,58,32,99,111,110,116,101,110,116,115,59,32]);;
      F.line = 59;
      formatValue_2785018980(fmtRes_2885684747, 0, self_2885684435.css, []);
    };
    Label3: {
      F.line = 60;
      var fmtRes_2885684879 = [mnewString(0)];
      F.line = 60;
      fmtRes_2885684879[0].push.apply(fmtRes_2885684879[0], [102,111,110,116,45,115,105,122,101,58,32]);;
      F.line = 60;
      formatValue_2902459345(fmtRes_2885684879, 0, (100.0 * self_2885684435.scale.val), []);
      F.line = 60;
      fmtRes_2885684879[0].push.apply(fmtRes_2885684879[0], [37,59,32,102,111,110,116,45,119,101,105,103,104,116,58,32,56,48,48,59]);;
    };
    Label4: {
      F.line = 62;
      var fmtRes_2885685022 = [mnewString(0)];
      F.line = 62;
      fmtRes_2885685022[0].push.apply(fmtRes_2885685022[0], [102,111,110,116,45,119,101,105,103,104,116,58,32,54,48,48,59,32,102,111,110,116,45,115,105,122,101,58,32]);;
      F.line = 62;
      formatValue_2902459345(fmtRes_2885685022, 0, (100.0 * Math.pow(self_2885684435.scale.val, 0.25)), []);
      F.line = 62;
      fmtRes_2885685022[0].push.apply(fmtRes_2885685022[0], [37]);;
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2885685181 = [0];
    result_2885684436 = tg2([100,105,118], [tg2([100,105,118], [], true), tg2([100,105,118], [], true), tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: nimCopy(null, fmtRes_2885684615[0], NTI33554449)}, NTI2885683126)], 0), [tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885684747[0], NTI33554449)}, NTI2885683200)], 0), [tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885684879[0], NTI33554449)}, NTI2885683275)], 0), [tg4(nimCharToStr(initial_2885684437), true, [], false)], false), tg1([115,112,97,110], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2885685022[0], NTI33554449)}, NTI2885683363)], 0), [tg4(rest_2885684492, true, [], false)], false)], false), tg4([32,45,45,45,32], true, [], false), self_2885684435.slot(self_2885684435, true, [65,99,114,111,115,116,105,99,87,111,114,100], false, cclCounter_2885685181, 0, self_2885684435.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_2885684436;

}

function style_2885684431(self_2885684432) {
  var result_2885684433 = [];

  var F = {procname: "markup.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "markup.nim";
    result_2885684433 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885684433;

}

function render_2885685224(self_2885685225) {
  var result_2885685226 = null;

  var F = {procname: "markup.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "markup.nim";
    currentComponentsList_1644168814[0].push(self_2885685225);;
    F.line = 50;
    currentComponent_1644168809[0] = nimCopy(null, self_2885685225.uniqCompId, NTI33554449);
    F.line = 50;
    script_2885684429(self_2885685225);
    if ((self_2885685225.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2885685225.created(self_2885685225, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2885685225.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2885685225.beforeUpdated(self_2885685225, null);
    F.line = 50;
    F.filename = "markup.nim";
    result_2885685226 = renderTag_2885684434(self_2885685225);
    F.line = 50;
    tgadd(result_2885685226, [tg2([115,116,121,108,101], [textTag_1694499242(style_2885684431(self_2885685225))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2885685225.rendered(self_2885685225, null);
    F.line = 50;
    F.filename = "markup.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2885685226;

}

function script_2852135042(self_2852135043) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function add_2868903967(x_2868903969, x_2868903969_Idx, y_2868903970) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1204;
    F.filename = "system.nim";
    var xl_2868903974 = (x_2868903969[x_2868903969_Idx]).length;
    F.line = 1205;
    if (x_2868903969[x_2868903969_Idx].length < (Temporary1 = chckRange(addInt(xl_2868903974, (y_2868903970).length), 0, 2147483647), Temporary1)) { for (var i = x_2868903969[x_2868903969_Idx].length ; i < Temporary1 ; ++i) x_2868903969[x_2868903969_Idx].push(0); }
               else { x_2868903969[x_2868903969_Idx].length = Temporary1; };
    Label2: {
      F.line = 1206;
      var i_2868903989 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881607 = 0;
      F.line = 1206;
      F.filename = "system.nim";
      colontmp__536881607 = (y_2868903970).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881608 = 0;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536881608 <= colontmp__536881607)) break Label4;
            F.line = 1206;
            F.filename = "system.nim";
            i_2868903989 = res_536881608;
            F.line = 1206;
            x_2868903969[x_2868903969_Idx][chckIndx(addInt(xl_2868903974, i_2868903989), 0, (x_2868903969[x_2868903969_Idx]).length - 1)] = y_2868903970[chckIndx(i_2868903989, 0, (y_2868903970).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881608 = addInt(res_536881608, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function repeat_2868903954(x_2868903956, n_2868903957) {
  var result_2868903958 = [];

  var F = {procname: "repeat.repeat", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/pure/collections/sequtils.nim", line: 0};
  framePtr = F;
    F.line = 185;
    F.filename = "sequtils.nim";
    result_2868903958 = nimCopy(null, newSeq_1409286382(n_2868903957), NTI1409286321);
    Label1: {
      F.line = 186;
      var i_2868903966 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__536881611 = 0;
      F.line = 186;
      F.filename = "sequtils.nim";
      colontmp__536881611 = n_2868903957;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536881612 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536881612 < colontmp__536881611)) break Label3;
            F.line = 186;
            F.filename = "sequtils.nim";
            i_2868903966 = i_536881612;
            F.line = 186;
            result_2868903958[chckIndx(i_2868903966, 0, (result_2868903958).length - 1)] = x_2868903956;
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536881612 = addInt(i_536881612, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_2868903958;

}

function packsIndices_2868903941(N_2868903942, k_2868903943) {
  var result_2868903944 = [[]];

  var F = {procname: "grouping.packsIndices", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/grouping.nim", line: 0};
  framePtr = F;
    F.line = 6;
    F.filename = "grouping.nim";
    result_2868903944[0] = nimCopy(null, [], NTI2466250774);
    Label1: {
      F.line = 7;
      var i_2868903953 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881603 = 0;
      F.line = 7;
      F.filename = "grouping.nim";
      colontmp__536881603 = subInt(divInt(N_2868903942, k_2868903943), 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881604 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536881604 <= colontmp__536881603)) break Label3;
            F.line = 7;
            F.filename = "grouping.nim";
            i_2868903953 = res_536881604;
            F.line = 7;
            add_2868903967(result_2868903944, 0, repeat_2868903954(i_2868903953, chckRange(k_2868903943, 0, 2147483647)));
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881604 = addInt(res_536881604, 1);
          }
      };
    };
    if (!((modInt(N_2868903942, k_2868903943) == 0))) {
    F.line = 10;
    F.filename = "grouping.nim";
    add_2868903967(result_2868903944, 0, repeat_2868903954(divInt(N_2868903942, k_2868903943), chckRange(modInt(N_2868903942, k_2868903943), 0, 2147483647)));
    }
    
  framePtr = F.prev;

  return result_2868903944[0];

}

function packsOf_2852135057(S_2852135059, k_2852135060, random_2852135061) {
  var result_2852135062 = [];

  var F = {procname: "packsOf.packsOf", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/algExt-0.1.0-692d9fc3b83612b74543cb54888e4661f0340587/algExt/grouping.nim", line: 0};
  framePtr = F;
    F.line = 14;
    F.filename = "grouping.nim";
    result_2852135062 = nimCopy(null, [], NTI2852131687);
    Label1: {
      F.line = 15;
      var i_2852135090 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881595 = 0;
      F.line = 15;
      F.filename = "grouping.nim";
      colontmp__536881595 = divInt((S_2852135059).length, k_2852135060);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881596 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536881596 <= colontmp__536881595)) break Label3;
            F.line = 15;
            F.filename = "grouping.nim";
            i_2852135090 = res_536881596;
            F.line = 15;
            result_2852135062.push([]);;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881596 = addInt(res_536881596, 1);
          }
      };
    };
    if (!((modInt((S_2852135059).length, k_2852135060) == 0))) {
    F.line = 18;
    F.filename = "grouping.nim";
    result_2852135062.push([]);;
    }
    
    F.line = 19;
    var indices_2852135145 = packsIndices_2868903941((S_2852135059).length, k_2852135060);
    if (random_2852135061) {
    F.line = 21;
    shuffle_2717909984(indices_2852135145);
    }
    
    Label4: {
      F.line = 22;
      var i_2852135156 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881599 = 0;
      F.line = 22;
      F.filename = "grouping.nim";
      colontmp__536881599 = subInt((S_2852135059).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881600 = 0;
      Label5: {
        F.line = 91;
          Label6: while (true) {
          if (!(res_536881600 <= colontmp__536881599)) break Label6;
            F.line = 22;
            F.filename = "grouping.nim";
            i_2852135156 = res_536881600;
            F.line = 22;
            var Temporary7 = nimCopy(null, S_2852135059[chckIndx(i_2852135156, 0, (S_2852135059).length - 1)], NTI33554449);
            result_2852135062[chckIndx(indices_2852135145[chckIndx(i_2852135156, 0, (indices_2852135145).length - 1)], 0, (result_2852135062).length - 1)].push(Temporary7);;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881600 = addInt(res_536881600, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_2852135062;

}

function HEX5BHEX5D_2852135198(s_2852135200, i_2852135201) {
  var result_2852135202 = null;
  var result_2852135202_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_2852135202 = s_2852135200; result_2852135202_Idx = chckIndx(subInt((s_2852135200).length, i_2852135201), 0, (s_2852135200).length - 1);
  framePtr = F.prev;

  return [result_2852135202, result_2852135202_Idx];

}

function remember_2785018215(val_2785018217) {
  var result_2785018218 = null;

  var F = {procname: "remember.remember", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "state.nim";
    result_2785018218 = {val: val_2785018217, watchers: []};
  framePtr = F.prev;

  return result_2785018218;

}

function initPages_2852126867(uniqCompId_2852126868, n_2852126869, css_2852126870, class_2852126871) {
    
function HEX3Aanonymous_2852126883(self_2852126884, ev_2852126885) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852126886(self_2852126887, ev_2852126888) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852126889(self_2852126890, ev_2852126891) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852126892(self_2852126893, ev_2852126894) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852126895(self_2852126896, ev_2852126897) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852126898(self_2852126899, ev_2852126900) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852126901(self_2852126902, ev_2852126903) {
      var F = {procname: "initPages.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2852126872 = null;

  var F = {procname: "layout.initPages", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 28;
    F.filename = "layout.nim";
    var self_2852126882 = {uniqCompId: nimCopy(null, uniqCompId_2852126868, NTI33554449), n: remember_2785018215(n_2852126869), css: remember_2785019842(css_2852126870), class: remember_2785019842(class_2852126871), m_type: NTI2852126796, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 31;
    self_2852126882.beforeUpdated = HEX3Aanonymous_2852126883;
    F.line = 31;
    self_2852126882.pageShow = HEX3Aanonymous_2852126886;
    F.line = 31;
    self_2852126882.pageHide = HEX3Aanonymous_2852126889;
    F.line = 31;
    self_2852126882.rendered = HEX3Aanonymous_2852126892;
    F.line = 31;
    self_2852126882.exited = HEX3Aanonymous_2852126895;
    F.line = 31;
    self_2852126882.created = HEX3Aanonymous_2852126898;
    F.line = 31;
    self_2852126882.updated = HEX3Aanonymous_2852126901;
    if (eqStrings(css_2852126870, [])) {
    F.line = 27;
    self_2852126882.css = remember_2785019842(css_2852126870);
    }
    
    if (eqStrings(class_2852126871, [])) {
    F.line = 28;
    self_2852126882.class = remember_2785019842(class_2852126871);
    }
    
    F.line = 28;
    createdComponentsList_1644168819[0].push(self_2852126882);;
    F.line = 779;
    F.filename = "components.nim";
    result_2852126872 = self_2852126882;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2852126872;

}

function remember_2835349536(val_2835349538) {
  var result_2835349539 = null;

  var F = {procname: "remember.remember", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/state.nim", line: 0};
  framePtr = F;
    F.line = 48;
    F.filename = "state.nim";
    result_2835349539 = {val: val_2835349538, watchers: []};
  framePtr = F.prev;

  return result_2835349539;

}

function initProbGrid_2852128287(uniqCompId_2852128288, n_2852128289, stretch_2852128290, css_2852128291, class_2852128292) {
    
function HEX3Aanonymous_2852128307(self_2852128308, ev_2852128309) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128310(self_2852128311, ev_2852128312) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128313(self_2852128314, ev_2852128315) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128316(self_2852128317, ev_2852128318) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128319(self_2852128320, ev_2852128321) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128322(self_2852128323, ev_2852128324) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128325(self_2852128326, ev_2852128327) {
      var F = {procname: "initProbGrid.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2852128293 = null;

  var F = {procname: "layout.initProbGrid", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 45;
    F.filename = "layout.nim";
    var self_2852128306 = {uniqCompId: nimCopy(null, uniqCompId_2852128288, NTI33554449), n: remember_2785018215(n_2852128289), stretch: remember_2835349536(stretch_2852128290), css: remember_2785019842(css_2852128291), class: remember_2785019842(class_2852128292), m_type: NTI2852127608, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 48;
    self_2852128306.beforeUpdated = HEX3Aanonymous_2852128307;
    F.line = 48;
    self_2852128306.pageShow = HEX3Aanonymous_2852128310;
    F.line = 48;
    self_2852128306.pageHide = HEX3Aanonymous_2852128313;
    F.line = 48;
    self_2852128306.rendered = HEX3Aanonymous_2852128316;
    F.line = 48;
    self_2852128306.exited = HEX3Aanonymous_2852128319;
    F.line = 48;
    self_2852128306.created = HEX3Aanonymous_2852128322;
    F.line = 48;
    self_2852128306.updated = HEX3Aanonymous_2852128325;
    if ((stretch_2852128290 == 0.0)) {
    F.line = 43;
    self_2852128306.stretch = remember_2835349536(stretch_2852128290);
    }
    
    if (eqStrings(css_2852128291, [])) {
    F.line = 44;
    self_2852128306.css = remember_2785019842(css_2852128291);
    }
    
    if (eqStrings(class_2852128292, [])) {
    F.line = 45;
    self_2852128306.class = remember_2785019842(class_2852128292);
    }
    
    F.line = 45;
    createdComponentsList_1644168819[0].push(self_2852128306);;
    F.line = 779;
    F.filename = "components.nim";
    result_2852128293 = self_2852128306;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2852128293;

}

function initPageCut_2852131547(uniqCompId_2852131548) {
    
function HEX3Aanonymous_2852131551(self_2852131552, ev_2852131553) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852131554(self_2852131555, ev_2852131556) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852131557(self_2852131558, ev_2852131559) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852131560(self_2852131561, ev_2852131562) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852131563(self_2852131564, ev_2852131565) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852131566(self_2852131567, ev_2852131568) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852131569(self_2852131570, ev_2852131571) {
      var F = {procname: "initPageCut.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2852131549 = null;

  var F = {procname: "layout.initPageCut", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 87;
    F.filename = "layout.nim";
    var self_2852131550 = {uniqCompId: nimCopy(null, uniqCompId_2852131548, NTI33554449), m_type: NTI2852129501, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 91;
    self_2852131550.beforeUpdated = HEX3Aanonymous_2852131551;
    F.line = 91;
    self_2852131550.pageShow = HEX3Aanonymous_2852131554;
    F.line = 91;
    self_2852131550.pageHide = HEX3Aanonymous_2852131557;
    F.line = 91;
    self_2852131550.rendered = HEX3Aanonymous_2852131560;
    F.line = 91;
    self_2852131550.exited = HEX3Aanonymous_2852131563;
    F.line = 91;
    self_2852131550.created = HEX3Aanonymous_2852131566;
    F.line = 91;
    self_2852131550.updated = HEX3Aanonymous_2852131569;
    F.line = 87;
    createdComponentsList_1644168819[0].push(self_2852131550);;
    F.line = 779;
    F.filename = "components.nim";
    result_2852131549 = self_2852131550;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2852131549;

}

function HEX5BHEX5D_2852137727(s_2852137729, i_2852137730) {
  var result_2852137731 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 23;
    F.filename = "indices.nim";
    result_2852137731 = nimCopy(null, s_2852137729[chckIndx(subInt((s_2852137729).length, i_2852137730), 0, (s_2852137729).length - 1)], NTI33554449);
  framePtr = F.prev;

  return result_2852137731;

}

function renderTag_2852135047(self_2852135048) {
    var Temporary1;
            var Temporary5;
            var Temporary9;
            var Temporary10;
            
function HEX3Aanonymous_2852135302(scopeSelf_2852135303, inComponent_2852135304, compName_2852135305, inCycle_2852135306, cycleCounter_2852135307, cycleCounter_2852135307_Idx, compCounter_2852135308) {
                var Temporary1;
                        var Temporary5;
                        var Temporary6;
                        
function HEX3Aanonymous_2852135468(scopeSelf_2852135469, inComponent_2852135470, compName_2852135471, inCycle_2852135472, cycleCounter_2852135473, cycleCounter_2852135473_Idx, compCounter_2852135474) {
                            var Temporary1;
                            var Temporary2;
                            var Temporary3;
                            
function HEX3Aanonymous_2852135579(scopeSelf_2852135580, inComponent_2852135581, compName_2852135582, inCycle_2852135583, cycleCounter_2852135584, cycleCounter_2852135584_Idx, compCounter_2852135585) {
                                var Temporary1;

                              var result_2852135586 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852135583 && inComponent_2852135581)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852135583) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852135581) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852135595 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp74_2852135578.slotData = _res_2852135595;
                                result_2852135586 = _res_2852135595;
                              framePtr = F.prev;

                              return result_2852135586;

                            }
                            var Temporary6;
                            var Temporary7;
                            
function HEX3Aanonymous_2852135990(scopeSelf_2852135991, inComponent_2852135992, compName_2852135993, inCycle_2852135994, cycleCounter_2852135995, cycleCounter_2852135995_Idx, compCounter_2852135996) {
                                var Temporary1;

                              var result_2852135997 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852135994 && inComponent_2852135992)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852135994) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852135992) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852136006 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp77_2852135989.slotData = _res_2852136006;
                                result_2852135997 = _res_2852136006;
                              framePtr = F.prev;

                              return result_2852135997;

                            }
                            var Temporary10;
                            var Temporary11;
                            
function HEX3Aanonymous_2852136401(scopeSelf_2852136402, inComponent_2852136403, compName_2852136404, inCycle_2852136405, cycleCounter_2852136406, cycleCounter_2852136406_Idx, compCounter_2852136407) {
                                var Temporary1;

                              var result_2852136408 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852136405 && inComponent_2852136403)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852136405) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852136403) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852136417 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp80_2852136400.slotData = _res_2852136417;
                                result_2852136408 = _res_2852136417;
                              framePtr = F.prev;

                              return result_2852136408;

                            }
                              var Temporary14;
                              var Temporary15;
                              
function HEX3Aanonymous_2852136812(scopeSelf_2852136813, inComponent_2852136814, compName_2852136815, inCycle_2852136816, cycleCounter_2852136817, cycleCounter_2852136817_Idx, compCounter_2852136818) {
                                  var Temporary1;

                                var result_2852136819 = null;

                                var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                framePtr = F;
                                  F.line = 126;
                                  F.filename = "layout.nim";
                                  F.line = 126;
                                  if ((inCycle_2852136816 && inComponent_2852136814)) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inCycle_2852136816) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inComponent_2852136814) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  }}
                                  var _res_2852136828 = Temporary1;
                                  F.line = 293;
                                  F.filename = "macro_utils.nim";
                                  comp83_2852136811.slotData = _res_2852136828;
                                  result_2852136819 = _res_2852136828;
                                framePtr = F.prev;

                                return result_2852136819;

                              }

                          var result_2852135475 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 127;
                            F.filename = "layout.nim";
                            F.line = 127;
                            if ((inCycle_2852135472 && inComponent_2852135470)) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary2 = ([99,111,109,112,55,52] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || []);
                            }
                            else {
                            Temporary2 = ([99,111,109,112,55,52] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp74_2852135577 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary3 = ([99,111,109,112,55,52] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || []);
                            }
                            else {
                            Temporary3 = ([99,111,109,112,55,52] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp74_2852135578 = rgcmp(toJSStr(Temporary3), _comp74_2852135577);
                            F.line = 126;
                            comp74_2852135578.slot = HEX3Aanonymous_2852135579;
                            F.line = 126;
                            var data_comp74_2852135596 = render_1644175063(comp74_2852135578);
                            F.line = 126;
                            addArgIter_1694499355(data_comp74_2852135596, ([100,97,116,97,45] || []).concat(comp74_2852135578.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp74_2852135596.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp74_2852135596.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp74_2852135596.pageShow);
                            Label4: {
                              F.line = 127;
                              var fmtRes_2852135699 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852135699[0].push.apply(fmtRes_2852135699[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852135699, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852135699[0].push.apply(fmtRes_2852135699[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label5: {
                              F.line = 128;
                              var fmtRes_2852135826 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852135826, 0, d_2852135360, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp74_2852135596, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852135699[0], NTI33554449)}, NTI2852132144)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852135826[0], true, [], false)], false)], false)], true);
                            }
                            else {
                            if (inCycle_2852135472) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary6 = ([99,111,109,112,55,55] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || []);
                            }
                            else {
                            Temporary6 = ([99,111,109,112,55,55] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp77_2852135988 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary7 = ([99,111,109,112,55,55] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || []);
                            }
                            else {
                            Temporary7 = ([99,111,109,112,55,55] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp77_2852135989 = rgcmp(toJSStr(Temporary7), _comp77_2852135988);
                            F.line = 126;
                            comp77_2852135989.slot = HEX3Aanonymous_2852135990;
                            F.line = 126;
                            var data_comp77_2852136007 = render_1644175063(comp77_2852135989);
                            F.line = 126;
                            addArgIter_1694499355(data_comp77_2852136007, ([100,97,116,97,45] || []).concat(comp77_2852135989.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp77_2852136007.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp77_2852136007.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp77_2852136007.pageShow);
                            Label8: {
                              F.line = 127;
                              var fmtRes_2852136110 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852136110[0].push.apply(fmtRes_2852136110[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852136110, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852136110[0].push.apply(fmtRes_2852136110[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label9: {
                              F.line = 128;
                              var fmtRes_2852136237 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852136237, 0, d_2852135360, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp77_2852136007, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852136110[0], NTI33554449)}, NTI2852132388)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852136237[0], true, [], false)], false)], false)], true);
                            }
                            else {
                            if (inComponent_2852135470) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary10 = ([99,111,109,112,56,48] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || []);
                            }
                            else {
                            Temporary10 = ([99,111,109,112,56,48] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp80_2852136399 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary11 = ([99,111,109,112,56,48] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || []);
                            }
                            else {
                            Temporary11 = ([99,111,109,112,56,48] || []).concat(compCounter_2852135474 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135473[cycleCounter_2852135473_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp80_2852136400 = rgcmp(toJSStr(Temporary11), _comp80_2852136399);
                            F.line = 126;
                            comp80_2852136400.slot = HEX3Aanonymous_2852136401;
                            F.line = 126;
                            var data_comp80_2852136418 = render_1644175063(comp80_2852136400);
                            F.line = 126;
                            addArgIter_1694499355(data_comp80_2852136418, ([100,97,116,97,45] || []).concat(comp80_2852136400.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp80_2852136418.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp80_2852136418.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp80_2852136418.pageShow);
                            Label12: {
                              F.line = 127;
                              var fmtRes_2852136521 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852136521[0].push.apply(fmtRes_2852136521[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852136521, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852136521[0].push.apply(fmtRes_2852136521[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label13: {
                              F.line = 128;
                              var fmtRes_2852136648 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852136648, 0, d_2852135360, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp80_2852136418, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852136521[0], NTI33554449)}, NTI2852132631)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852136648[0], true, [], false)], false)], false)], true);
                            }
                            else {
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary14 = [99,111,109,112,56,51];
                              }
                              else {
                              Temporary14 = ([99,111,109,112,56,51] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var _comp83_2852136810 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary15 = [99,111,109,112,56,51];
                              }
                              else {
                              Temporary15 = ([99,111,109,112,56,51] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var comp83_2852136811 = rgcmp(toJSStr(Temporary15), _comp83_2852136810);
                              F.line = 126;
                              comp83_2852136811.slot = HEX3Aanonymous_2852136812;
                              F.line = 126;
                              var data_comp83_2852136829 = render_1644175063(comp83_2852136811);
                              F.line = 126;
                              addArgIter_1694499355(data_comp83_2852136829, ([100,97,116,97,45] || []).concat(comp83_2852136811.uniqCompId || []));
                              F.line = 126;
                              window.addEventListener('beforeunload', data_comp83_2852136829.exited);
                              F.line = 126;
                              window.addEventListener('pagehide', data_comp83_2852136829.pageHide);
                              F.line = 126;
                              window.addEventListener('pageshow', data_comp83_2852136829.pageShow);
                              Label16: {
                                F.line = 127;
                                var fmtRes_2852136932 = [mnewString(0)];
                                F.line = 127;
                                fmtRes_2852136932[0].push.apply(fmtRes_2852136932[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                F.line = 127;
                                formatValue_704643243(fmtRes_2852136932, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                F.line = 127;
                                fmtRes_2852136932[0].push.apply(fmtRes_2852136932[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                              };
                              Label17: {
                                F.line = 128;
                                var fmtRes_2852137059 = [mnewString(0)];
                                F.line = 128;
                                formatValue_704643243(fmtRes_2852137059, 0, d_2852135360, []);
                              };
                            Temporary1 = tg2([100,105,118], [data_comp83_2852136829, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852136932[0], NTI33554449)}, NTI2852132873)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852137059[0], true, [], false)], false)], false)], true);
                            }
                            }}
                            var _res_2852137120 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp68_2852135467.slotData = _res_2852137120;
                            result_2852135475 = _res_2852137120;
                          framePtr = F.prev;

                          return result_2852135475;

                        }
                        var Temporary7;
                        var Temporary8;
                        
function HEX3Aanonymous_2852137224(scopeSelf_2852137225, inComponent_2852137226, compName_2852137227, inCycle_2852137228, cycleCounter_2852137229, cycleCounter_2852137229_Idx, compCounter_2852137230) {
                            var Temporary1;

                          var result_2852137231 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 129;
                            F.filename = "layout.nim";
                            F.line = 129;
                            if ((inCycle_2852137228 && inComponent_2852137226)) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inCycle_2852137228) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inComponent_2852137226) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            }}
                            var _res_2852137240 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp69_2852137223.slotData = _res_2852137240;
                            result_2852137231 = _res_2852137240;
                          framePtr = F.prev;

                          return result_2852137231;

                        }
                var Temporary9;
                var Temporary10;
                
function HEX3Aanonymous_2852137368(scopeSelf_2852137369, inComponent_2852137370, compName_2852137371, inCycle_2852137372, cycleCounter_2852137373, cycleCounter_2852137373_Idx, compCounter_2852137374) {
                    var Temporary1;
                    var Temporary2;
                    var Temporary3;
                    
function HEX3Aanonymous_2852137479(scopeSelf_2852137480, inComponent_2852137481, compName_2852137482, inCycle_2852137483, cycleCounter_2852137484, cycleCounter_2852137484_Idx, compCounter_2852137485) {
                        var Temporary1;

                      var result_2852137486 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852137483 && inComponent_2852137481)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852137483) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852137481) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852137495 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp86_2852137478.slotData = _res_2852137495;
                        result_2852137486 = _res_2852137495;
                      framePtr = F.prev;

                      return result_2852137486;

                    }
                    var Temporary6;
                    var Temporary7;
                    
function HEX3Aanonymous_2852137898(scopeSelf_2852137899, inComponent_2852137900, compName_2852137901, inCycle_2852137902, cycleCounter_2852137903, cycleCounter_2852137903_Idx, compCounter_2852137904) {
                        var Temporary1;

                      var result_2852137905 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852137902 && inComponent_2852137900)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852137902) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852137900) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852137914 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp89_2852137897.slotData = _res_2852137914;
                        result_2852137905 = _res_2852137914;
                      framePtr = F.prev;

                      return result_2852137905;

                    }
                    var Temporary10;
                    var Temporary11;
                    
function HEX3Aanonymous_2852138313(scopeSelf_2852138314, inComponent_2852138315, compName_2852138316, inCycle_2852138317, cycleCounter_2852138318, cycleCounter_2852138318_Idx, compCounter_2852138319) {
                        var Temporary1;

                      var result_2852138320 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852138317 && inComponent_2852138315)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852138317) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852138315) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852138329 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp92_2852138312.slotData = _res_2852138329;
                        result_2852138320 = _res_2852138329;
                      framePtr = F.prev;

                      return result_2852138320;

                    }
                      var Temporary14;
                      var Temporary15;
                      
function HEX3Aanonymous_2852138728(scopeSelf_2852138729, inComponent_2852138730, compName_2852138731, inCycle_2852138732, cycleCounter_2852138733, cycleCounter_2852138733_Idx, compCounter_2852138734) {
                          var Temporary1;

                        var result_2852138735 = null;

                        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                        framePtr = F;
                          F.line = 131;
                          F.filename = "layout.nim";
                          F.line = 131;
                          if ((inCycle_2852138732 && inComponent_2852138730)) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inCycle_2852138732) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inComponent_2852138730) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          }}
                          var _res_2852138744 = Temporary1;
                          F.line = 293;
                          F.filename = "macro_utils.nim";
                          comp95_2852138727.slotData = _res_2852138744;
                          result_2852138735 = _res_2852138744;
                        framePtr = F.prev;

                        return result_2852138735;

                      }

                  var result_2852137375 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 132;
                    F.filename = "layout.nim";
                    F.line = 132;
                    if ((inCycle_2852137372 && inComponent_2852137370)) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary2 = ([99,111,109,112,56,54] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || []);
                    }
                    else {
                    Temporary2 = ([99,111,109,112,56,54] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp86_2852137477 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary3 = ([99,111,109,112,56,54] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || []);
                    }
                    else {
                    Temporary3 = ([99,111,109,112,56,54] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp86_2852137478 = rgcmp(toJSStr(Temporary3), _comp86_2852137477);
                    F.line = 131;
                    comp86_2852137478.slot = HEX3Aanonymous_2852137479;
                    F.line = 131;
                    var data_comp86_2852137496 = render_1644175063(comp86_2852137478);
                    F.line = 131;
                    addArgIter_1694499355(data_comp86_2852137496, ([100,97,116,97,45] || []).concat(comp86_2852137478.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp86_2852137496.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp86_2852137496.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp86_2852137496.pageShow);
                    Label4: {
                      F.line = 132;
                      var fmtRes_2852137599 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852137599[0].push.apply(fmtRes_2852137599[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852137599, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852137599[0].push.apply(fmtRes_2852137599[0], [59]);;
                    };
                    Label5: {
                      F.line = 133;
                      var fmtRes_2852137726 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852137726, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp86_2852137496, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852137599[0], NTI33554449)}, NTI2852133257)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852137726[0], true, [], false)], false)], false)], true);
                    }
                    else {
                    if (inCycle_2852137372) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary6 = ([99,111,109,112,56,57] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || []);
                    }
                    else {
                    Temporary6 = ([99,111,109,112,56,57] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp89_2852137896 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary7 = ([99,111,109,112,56,57] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || []);
                    }
                    else {
                    Temporary7 = ([99,111,109,112,56,57] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp89_2852137897 = rgcmp(toJSStr(Temporary7), _comp89_2852137896);
                    F.line = 131;
                    comp89_2852137897.slot = HEX3Aanonymous_2852137898;
                    F.line = 131;
                    var data_comp89_2852137915 = render_1644175063(comp89_2852137897);
                    F.line = 131;
                    addArgIter_1694499355(data_comp89_2852137915, ([100,97,116,97,45] || []).concat(comp89_2852137897.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp89_2852137915.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp89_2852137915.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp89_2852137915.pageShow);
                    Label8: {
                      F.line = 132;
                      var fmtRes_2852138018 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852138018[0].push.apply(fmtRes_2852138018[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852138018, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852138018[0].push.apply(fmtRes_2852138018[0], [59]);;
                    };
                    Label9: {
                      F.line = 133;
                      var fmtRes_2852138145 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852138145, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp89_2852137915, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852138018[0], NTI33554449)}, NTI2852133510)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852138145[0], true, [], false)], false)], false)], true);
                    }
                    else {
                    if (inComponent_2852137370) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary10 = ([99,111,109,112,57,50] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || []);
                    }
                    else {
                    Temporary10 = ([99,111,109,112,57,50] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp92_2852138311 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary11 = ([99,111,109,112,57,50] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || []);
                    }
                    else {
                    Temporary11 = ([99,111,109,112,57,50] || []).concat(compCounter_2852137374 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852137373[cycleCounter_2852137373_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp92_2852138312 = rgcmp(toJSStr(Temporary11), _comp92_2852138311);
                    F.line = 131;
                    comp92_2852138312.slot = HEX3Aanonymous_2852138313;
                    F.line = 131;
                    var data_comp92_2852138330 = render_1644175063(comp92_2852138312);
                    F.line = 131;
                    addArgIter_1694499355(data_comp92_2852138330, ([100,97,116,97,45] || []).concat(comp92_2852138312.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp92_2852138330.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp92_2852138330.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp92_2852138330.pageShow);
                    Label12: {
                      F.line = 132;
                      var fmtRes_2852138433 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852138433[0].push.apply(fmtRes_2852138433[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852138433, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852138433[0].push.apply(fmtRes_2852138433[0], [59]);;
                    };
                    Label13: {
                      F.line = 133;
                      var fmtRes_2852138560 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852138560, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp92_2852138330, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852138433[0], NTI33554449)}, NTI2852133761)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852138560[0], true, [], false)], false)], false)], true);
                    }
                    else {
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary14 = [99,111,109,112,57,53];
                      }
                      else {
                      Temporary14 = ([99,111,109,112,57,53] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var _comp95_2852138726 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary15 = [99,111,109,112,57,53];
                      }
                      else {
                      Temporary15 = ([99,111,109,112,57,53] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var comp95_2852138727 = rgcmp(toJSStr(Temporary15), _comp95_2852138726);
                      F.line = 131;
                      comp95_2852138727.slot = HEX3Aanonymous_2852138728;
                      F.line = 131;
                      var data_comp95_2852138745 = render_1644175063(comp95_2852138727);
                      F.line = 131;
                      addArgIter_1694499355(data_comp95_2852138745, ([100,97,116,97,45] || []).concat(comp95_2852138727.uniqCompId || []));
                      F.line = 131;
                      window.addEventListener('beforeunload', data_comp95_2852138745.exited);
                      F.line = 131;
                      window.addEventListener('pagehide', data_comp95_2852138745.pageHide);
                      F.line = 131;
                      window.addEventListener('pageshow', data_comp95_2852138745.pageShow);
                      Label16: {
                        F.line = 132;
                        var fmtRes_2852138848 = [mnewString(0)];
                        F.line = 132;
                        fmtRes_2852138848[0].push.apply(fmtRes_2852138848[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                        F.line = 132;
                        formatValue_704643243(fmtRes_2852138848, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                        F.line = 132;
                        fmtRes_2852138848[0].push.apply(fmtRes_2852138848[0], [59]);;
                      };
                      Label17: {
                        F.line = 133;
                        var fmtRes_2852138975 = [mnewString(0)];
                        F.line = 133;
                        formatValue_704643243(fmtRes_2852138975, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                      };
                    Temporary1 = tg2([100,105,118], [data_comp95_2852138745, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852138848[0], NTI33554449)}, NTI2852134011)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852138975[0], true, [], false)], false)], false)], true);
                    }
                    }}
                    var _res_2852139040 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp73_2852137367.slotData = _res_2852139040;
                    result_2852137375 = _res_2852139040;
                  framePtr = F.prev;

                  return result_2852137375;

                }
                        var Temporary14;
                        var Temporary15;
                        
function HEX3Aanonymous_2852139203(scopeSelf_2852139204, inComponent_2852139205, compName_2852139206, inCycle_2852139207, cycleCounter_2852139208, cycleCounter_2852139208_Idx, compCounter_2852139209) {
                            var Temporary1;
                            var Temporary2;
                            var Temporary3;
                            
function HEX3Aanonymous_2852139314(scopeSelf_2852139315, inComponent_2852139316, compName_2852139317, inCycle_2852139318, cycleCounter_2852139319, cycleCounter_2852139319_Idx, compCounter_2852139320) {
                                var Temporary1;

                              var result_2852139321 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852139318 && inComponent_2852139316)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852139318) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852139316) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852139330 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp108_2852139313.slotData = _res_2852139330;
                                result_2852139321 = _res_2852139330;
                              framePtr = F.prev;

                              return result_2852139321;

                            }
                            var Temporary6;
                            var Temporary7;
                            
function HEX3Aanonymous_2852139725(scopeSelf_2852139726, inComponent_2852139727, compName_2852139728, inCycle_2852139729, cycleCounter_2852139730, cycleCounter_2852139730_Idx, compCounter_2852139731) {
                                var Temporary1;

                              var result_2852139732 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852139729 && inComponent_2852139727)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852139729) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852139727) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852139741 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp111_2852139724.slotData = _res_2852139741;
                                result_2852139732 = _res_2852139741;
                              framePtr = F.prev;

                              return result_2852139732;

                            }
                            var Temporary10;
                            var Temporary11;
                            
function HEX3Aanonymous_2852140136(scopeSelf_2852140137, inComponent_2852140138, compName_2852140139, inCycle_2852140140, cycleCounter_2852140141, cycleCounter_2852140141_Idx, compCounter_2852140142) {
                                var Temporary1;

                              var result_2852140143 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852140140 && inComponent_2852140138)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852140140) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852140138) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852140152 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp114_2852140135.slotData = _res_2852140152;
                                result_2852140143 = _res_2852140152;
                              framePtr = F.prev;

                              return result_2852140143;

                            }
                              var Temporary14;
                              var Temporary15;
                              
function HEX3Aanonymous_2852140547(scopeSelf_2852140548, inComponent_2852140549, compName_2852140550, inCycle_2852140551, cycleCounter_2852140552, cycleCounter_2852140552_Idx, compCounter_2852140553) {
                                  var Temporary1;

                                var result_2852140554 = null;

                                var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                framePtr = F;
                                  F.line = 126;
                                  F.filename = "layout.nim";
                                  F.line = 126;
                                  if ((inCycle_2852140551 && inComponent_2852140549)) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inCycle_2852140551) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inComponent_2852140549) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  }}
                                  var _res_2852140563 = Temporary1;
                                  F.line = 293;
                                  F.filename = "macro_utils.nim";
                                  comp117_2852140546.slotData = _res_2852140563;
                                  result_2852140554 = _res_2852140563;
                                framePtr = F.prev;

                                return result_2852140554;

                              }

                          var result_2852139210 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 127;
                            F.filename = "layout.nim";
                            F.line = 127;
                            if ((inCycle_2852139207 && inComponent_2852139205)) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary2 = ([99,111,109,112,49,48,56] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || []);
                            }
                            else {
                            Temporary2 = ([99,111,109,112,49,48,56] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp108_2852139312 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary3 = ([99,111,109,112,49,48,56] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || []);
                            }
                            else {
                            Temporary3 = ([99,111,109,112,49,48,56] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp108_2852139313 = rgcmp(toJSStr(Temporary3), _comp108_2852139312);
                            F.line = 126;
                            comp108_2852139313.slot = HEX3Aanonymous_2852139314;
                            F.line = 126;
                            var data_comp108_2852139331 = render_1644175063(comp108_2852139313);
                            F.line = 126;
                            addArgIter_1694499355(data_comp108_2852139331, ([100,97,116,97,45] || []).concat(comp108_2852139313.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp108_2852139331.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp108_2852139331.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp108_2852139331.pageShow);
                            Label4: {
                              F.line = 127;
                              var fmtRes_2852139434 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852139434[0].push.apply(fmtRes_2852139434[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852139434, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852139434[0].push.apply(fmtRes_2852139434[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label5: {
                              F.line = 128;
                              var fmtRes_2852139561 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852139561, 0, d_2852139095, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp108_2852139331, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852139434[0], NTI33554449)}, NTI2852134373)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852139561[0], true, [], false)], false)], false)], true);
                            }
                            else {
                            if (inCycle_2852139207) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary6 = ([99,111,109,112,49,49,49] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || []);
                            }
                            else {
                            Temporary6 = ([99,111,109,112,49,49,49] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp111_2852139723 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary7 = ([99,111,109,112,49,49,49] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || []);
                            }
                            else {
                            Temporary7 = ([99,111,109,112,49,49,49] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp111_2852139724 = rgcmp(toJSStr(Temporary7), _comp111_2852139723);
                            F.line = 126;
                            comp111_2852139724.slot = HEX3Aanonymous_2852139725;
                            F.line = 126;
                            var data_comp111_2852139742 = render_1644175063(comp111_2852139724);
                            F.line = 126;
                            addArgIter_1694499355(data_comp111_2852139742, ([100,97,116,97,45] || []).concat(comp111_2852139724.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp111_2852139742.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp111_2852139742.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp111_2852139742.pageShow);
                            Label8: {
                              F.line = 127;
                              var fmtRes_2852139845 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852139845[0].push.apply(fmtRes_2852139845[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852139845, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852139845[0].push.apply(fmtRes_2852139845[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label9: {
                              F.line = 128;
                              var fmtRes_2852139972 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852139972, 0, d_2852139095, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp111_2852139742, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852139845[0], NTI33554449)}, NTI2852134616)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852139972[0], true, [], false)], false)], false)], true);
                            }
                            else {
                            if (inComponent_2852139205) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary10 = ([99,111,109,112,49,49,52] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || []);
                            }
                            else {
                            Temporary10 = ([99,111,109,112,49,49,52] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp114_2852140134 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary11 = ([99,111,109,112,49,49,52] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || []);
                            }
                            else {
                            Temporary11 = ([99,111,109,112,49,49,52] || []).concat(compCounter_2852139209 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852139208[cycleCounter_2852139208_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp114_2852140135 = rgcmp(toJSStr(Temporary11), _comp114_2852140134);
                            F.line = 126;
                            comp114_2852140135.slot = HEX3Aanonymous_2852140136;
                            F.line = 126;
                            var data_comp114_2852140153 = render_1644175063(comp114_2852140135);
                            F.line = 126;
                            addArgIter_1694499355(data_comp114_2852140153, ([100,97,116,97,45] || []).concat(comp114_2852140135.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp114_2852140153.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp114_2852140153.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp114_2852140153.pageShow);
                            Label12: {
                              F.line = 127;
                              var fmtRes_2852140256 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852140256[0].push.apply(fmtRes_2852140256[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852140256, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852140256[0].push.apply(fmtRes_2852140256[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label13: {
                              F.line = 128;
                              var fmtRes_2852140383 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852140383, 0, d_2852139095, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp114_2852140153, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852140256[0], NTI33554449)}, NTI2852134859)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852140383[0], true, [], false)], false)], false)], true);
                            }
                            else {
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary14 = [99,111,109,112,49,49,55];
                              }
                              else {
                              Temporary14 = ([99,111,109,112,49,49,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var _comp117_2852140545 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary15 = [99,111,109,112,49,49,55];
                              }
                              else {
                              Temporary15 = ([99,111,109,112,49,49,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var comp117_2852140546 = rgcmp(toJSStr(Temporary15), _comp117_2852140545);
                              F.line = 126;
                              comp117_2852140546.slot = HEX3Aanonymous_2852140547;
                              F.line = 126;
                              var data_comp117_2852140564 = render_1644175063(comp117_2852140546);
                              F.line = 126;
                              addArgIter_1694499355(data_comp117_2852140564, ([100,97,116,97,45] || []).concat(comp117_2852140546.uniqCompId || []));
                              F.line = 126;
                              window.addEventListener('beforeunload', data_comp117_2852140564.exited);
                              F.line = 126;
                              window.addEventListener('pagehide', data_comp117_2852140564.pageHide);
                              F.line = 126;
                              window.addEventListener('pageshow', data_comp117_2852140564.pageShow);
                              Label16: {
                                F.line = 127;
                                var fmtRes_2852140667 = [mnewString(0)];
                                F.line = 127;
                                fmtRes_2852140667[0].push.apply(fmtRes_2852140667[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                F.line = 127;
                                formatValue_704643243(fmtRes_2852140667, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                F.line = 127;
                                fmtRes_2852140667[0].push.apply(fmtRes_2852140667[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                              };
                              Label17: {
                                F.line = 128;
                                var fmtRes_2852140794 = [mnewString(0)];
                                F.line = 128;
                                formatValue_704643243(fmtRes_2852140794, 0, d_2852139095, []);
                              };
                            Temporary1 = tg2([100,105,118], [data_comp117_2852140564, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852140667[0], NTI33554449)}, NTI2852135101)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852140794[0], true, [], false)], false)], false)], true);
                            }
                            }}
                            var _res_2852140855 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp102_2852139202.slotData = _res_2852140855;
                            result_2852139210 = _res_2852140855;
                          framePtr = F.prev;

                          return result_2852139210;

                        }
                        var Temporary16;
                        var Temporary17;
                        
function HEX3Aanonymous_2852140959(scopeSelf_2852140960, inComponent_2852140961, compName_2852140962, inCycle_2852140963, cycleCounter_2852140964, cycleCounter_2852140964_Idx, compCounter_2852140965) {
                            var Temporary1;

                          var result_2852140966 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 129;
                            F.filename = "layout.nim";
                            F.line = 129;
                            if ((inCycle_2852140963 && inComponent_2852140961)) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inCycle_2852140963) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inComponent_2852140961) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            }}
                            var _res_2852140975 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp103_2852140958.slotData = _res_2852140975;
                            result_2852140966 = _res_2852140975;
                          framePtr = F.prev;

                          return result_2852140966;

                        }
                var Temporary18;
                var Temporary19;
                
function HEX3Aanonymous_2852141103(scopeSelf_2852141104, inComponent_2852141105, compName_2852141106, inCycle_2852141107, cycleCounter_2852141108, cycleCounter_2852141108_Idx, compCounter_2852141109) {
                    var Temporary1;
                    var Temporary2;
                    var Temporary3;
                    
function HEX3Aanonymous_2852141214(scopeSelf_2852141215, inComponent_2852141216, compName_2852141217, inCycle_2852141218, cycleCounter_2852141219, cycleCounter_2852141219_Idx, compCounter_2852141220) {
                        var Temporary1;

                      var result_2852141221 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852141218 && inComponent_2852141216)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852141218) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852141216) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852141230 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp120_2852141213.slotData = _res_2852141230;
                        result_2852141221 = _res_2852141230;
                      framePtr = F.prev;

                      return result_2852141221;

                    }
                    var Temporary6;
                    var Temporary7;
                    
function HEX3Aanonymous_2852141629(scopeSelf_2852141630, inComponent_2852141631, compName_2852141632, inCycle_2852141633, cycleCounter_2852141634, cycleCounter_2852141634_Idx, compCounter_2852141635) {
                        var Temporary1;

                      var result_2852141636 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852141633 && inComponent_2852141631)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852141633) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852141631) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852141645 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp123_2852141628.slotData = _res_2852141645;
                        result_2852141636 = _res_2852141645;
                      framePtr = F.prev;

                      return result_2852141636;

                    }
                    var Temporary10;
                    var Temporary11;
                    
function HEX3Aanonymous_2852142044(scopeSelf_2852142045, inComponent_2852142046, compName_2852142047, inCycle_2852142048, cycleCounter_2852142049, cycleCounter_2852142049_Idx, compCounter_2852142050) {
                        var Temporary1;

                      var result_2852142051 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852142048 && inComponent_2852142046)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852142048) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852142046) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852142060 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp126_2852142043.slotData = _res_2852142060;
                        result_2852142051 = _res_2852142060;
                      framePtr = F.prev;

                      return result_2852142051;

                    }
                      var Temporary14;
                      var Temporary15;
                      
function HEX3Aanonymous_2852142459(scopeSelf_2852142460, inComponent_2852142461, compName_2852142462, inCycle_2852142463, cycleCounter_2852142464, cycleCounter_2852142464_Idx, compCounter_2852142465) {
                          var Temporary1;

                        var result_2852142466 = null;

                        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                        framePtr = F;
                          F.line = 131;
                          F.filename = "layout.nim";
                          F.line = 131;
                          if ((inCycle_2852142463 && inComponent_2852142461)) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inCycle_2852142463) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inComponent_2852142461) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          }}
                          var _res_2852142475 = Temporary1;
                          F.line = 293;
                          F.filename = "macro_utils.nim";
                          comp129_2852142458.slotData = _res_2852142475;
                          result_2852142466 = _res_2852142475;
                        framePtr = F.prev;

                        return result_2852142466;

                      }

                  var result_2852141110 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 132;
                    F.filename = "layout.nim";
                    F.line = 132;
                    if ((inCycle_2852141107 && inComponent_2852141105)) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary2 = ([99,111,109,112,49,50,48] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || []);
                    }
                    else {
                    Temporary2 = ([99,111,109,112,49,50,48] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp120_2852141212 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary3 = ([99,111,109,112,49,50,48] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || []);
                    }
                    else {
                    Temporary3 = ([99,111,109,112,49,50,48] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp120_2852141213 = rgcmp(toJSStr(Temporary3), _comp120_2852141212);
                    F.line = 131;
                    comp120_2852141213.slot = HEX3Aanonymous_2852141214;
                    F.line = 131;
                    var data_comp120_2852141231 = render_1644175063(comp120_2852141213);
                    F.line = 131;
                    addArgIter_1694499355(data_comp120_2852141231, ([100,97,116,97,45] || []).concat(comp120_2852141213.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp120_2852141231.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp120_2852141231.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp120_2852141231.pageShow);
                    Label4: {
                      F.line = 132;
                      var fmtRes_2852141334 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852141334[0].push.apply(fmtRes_2852141334[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852141334, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852141334[0].push.apply(fmtRes_2852141334[0], [59]);;
                    };
                    Label5: {
                      F.line = 133;
                      var fmtRes_2852141461 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852141461, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp120_2852141231, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852141334[0], NTI33554449)}, NTI2852135485)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852141461[0], true, [], false)], false)], false)], true);
                    }
                    else {
                    if (inCycle_2852141107) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary6 = ([99,111,109,112,49,50,51] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || []);
                    }
                    else {
                    Temporary6 = ([99,111,109,112,49,50,51] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp123_2852141627 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary7 = ([99,111,109,112,49,50,51] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || []);
                    }
                    else {
                    Temporary7 = ([99,111,109,112,49,50,51] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp123_2852141628 = rgcmp(toJSStr(Temporary7), _comp123_2852141627);
                    F.line = 131;
                    comp123_2852141628.slot = HEX3Aanonymous_2852141629;
                    F.line = 131;
                    var data_comp123_2852141646 = render_1644175063(comp123_2852141628);
                    F.line = 131;
                    addArgIter_1694499355(data_comp123_2852141646, ([100,97,116,97,45] || []).concat(comp123_2852141628.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp123_2852141646.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp123_2852141646.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp123_2852141646.pageShow);
                    Label8: {
                      F.line = 132;
                      var fmtRes_2852141749 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852141749[0].push.apply(fmtRes_2852141749[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852141749, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852141749[0].push.apply(fmtRes_2852141749[0], [59]);;
                    };
                    Label9: {
                      F.line = 133;
                      var fmtRes_2852141876 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852141876, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp123_2852141646, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852141749[0], NTI33554449)}, NTI2852135736)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852141876[0], true, [], false)], false)], false)], true);
                    }
                    else {
                    if (inComponent_2852141105) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary10 = ([99,111,109,112,49,50,54] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || []);
                    }
                    else {
                    Temporary10 = ([99,111,109,112,49,50,54] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp126_2852142042 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary11 = ([99,111,109,112,49,50,54] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || []);
                    }
                    else {
                    Temporary11 = ([99,111,109,112,49,50,54] || []).concat(compCounter_2852141109 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852141108[cycleCounter_2852141108_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp126_2852142043 = rgcmp(toJSStr(Temporary11), _comp126_2852142042);
                    F.line = 131;
                    comp126_2852142043.slot = HEX3Aanonymous_2852142044;
                    F.line = 131;
                    var data_comp126_2852142061 = render_1644175063(comp126_2852142043);
                    F.line = 131;
                    addArgIter_1694499355(data_comp126_2852142061, ([100,97,116,97,45] || []).concat(comp126_2852142043.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp126_2852142061.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp126_2852142061.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp126_2852142061.pageShow);
                    Label12: {
                      F.line = 132;
                      var fmtRes_2852142164 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852142164[0].push.apply(fmtRes_2852142164[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852142164, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852142164[0].push.apply(fmtRes_2852142164[0], [59]);;
                    };
                    Label13: {
                      F.line = 133;
                      var fmtRes_2852142291 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852142291, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp126_2852142061, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852142164[0], NTI33554449)}, NTI2852135987)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852142291[0], true, [], false)], false)], false)], true);
                    }
                    else {
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary14 = [99,111,109,112,49,50,57];
                      }
                      else {
                      Temporary14 = ([99,111,109,112,49,50,57] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var _comp129_2852142457 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary15 = [99,111,109,112,49,50,57];
                      }
                      else {
                      Temporary15 = ([99,111,109,112,49,50,57] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var comp129_2852142458 = rgcmp(toJSStr(Temporary15), _comp129_2852142457);
                      F.line = 131;
                      comp129_2852142458.slot = HEX3Aanonymous_2852142459;
                      F.line = 131;
                      var data_comp129_2852142476 = render_1644175063(comp129_2852142458);
                      F.line = 131;
                      addArgIter_1694499355(data_comp129_2852142476, ([100,97,116,97,45] || []).concat(comp129_2852142458.uniqCompId || []));
                      F.line = 131;
                      window.addEventListener('beforeunload', data_comp129_2852142476.exited);
                      F.line = 131;
                      window.addEventListener('pagehide', data_comp129_2852142476.pageHide);
                      F.line = 131;
                      window.addEventListener('pageshow', data_comp129_2852142476.pageShow);
                      Label16: {
                        F.line = 132;
                        var fmtRes_2852142579 = [mnewString(0)];
                        F.line = 132;
                        fmtRes_2852142579[0].push.apply(fmtRes_2852142579[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                        F.line = 132;
                        formatValue_704643243(fmtRes_2852142579, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                        F.line = 132;
                        fmtRes_2852142579[0].push.apply(fmtRes_2852142579[0], [59]);;
                      };
                      Label17: {
                        F.line = 133;
                        var fmtRes_2852142706 = [mnewString(0)];
                        F.line = 133;
                        formatValue_704643243(fmtRes_2852142706, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                      };
                    Temporary1 = tg2([100,105,118], [data_comp129_2852142476, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852142579[0], NTI33554449)}, NTI2852136237)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852142706[0], true, [], false)], false)], false)], true);
                    }
                    }}
                    var _res_2852142771 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp107_2852141102.slotData = _res_2852142771;
                    result_2852141110 = _res_2852142771;
                  framePtr = F.prev;

                  return result_2852141110;

                }
                        var Temporary23;
                        var Temporary24;
                        
function HEX3Aanonymous_2852142934(scopeSelf_2852142935, inComponent_2852142936, compName_2852142937, inCycle_2852142938, cycleCounter_2852142939, cycleCounter_2852142939_Idx, compCounter_2852142940) {
                            var Temporary1;
                            var Temporary2;
                            var Temporary3;
                            
function HEX3Aanonymous_2852143045(scopeSelf_2852143046, inComponent_2852143047, compName_2852143048, inCycle_2852143049, cycleCounter_2852143050, cycleCounter_2852143050_Idx, compCounter_2852143051) {
                                var Temporary1;

                              var result_2852143052 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852143049 && inComponent_2852143047)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852143049) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852143047) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852143061 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp142_2852143044.slotData = _res_2852143061;
                                result_2852143052 = _res_2852143061;
                              framePtr = F.prev;

                              return result_2852143052;

                            }
                            var Temporary6;
                            var Temporary7;
                            
function HEX3Aanonymous_2852143456(scopeSelf_2852143457, inComponent_2852143458, compName_2852143459, inCycle_2852143460, cycleCounter_2852143461, cycleCounter_2852143461_Idx, compCounter_2852143462) {
                                var Temporary1;

                              var result_2852143463 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852143460 && inComponent_2852143458)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852143460) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852143458) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852143472 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp145_2852143455.slotData = _res_2852143472;
                                result_2852143463 = _res_2852143472;
                              framePtr = F.prev;

                              return result_2852143463;

                            }
                            var Temporary10;
                            var Temporary11;
                            
function HEX3Aanonymous_2852143867(scopeSelf_2852143868, inComponent_2852143869, compName_2852143870, inCycle_2852143871, cycleCounter_2852143872, cycleCounter_2852143872_Idx, compCounter_2852143873) {
                                var Temporary1;

                              var result_2852143874 = null;

                              var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                              framePtr = F;
                                F.line = 126;
                                F.filename = "layout.nim";
                                F.line = 126;
                                if ((inCycle_2852143871 && inComponent_2852143869)) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inCycle_2852143871) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                if (inComponent_2852143869) {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                else {
                                Temporary1 = tg2([100,105,118], [], true);
                                }
                                }}
                                var _res_2852143883 = Temporary1;
                                F.line = 293;
                                F.filename = "macro_utils.nim";
                                comp148_2852143866.slotData = _res_2852143883;
                                result_2852143874 = _res_2852143883;
                              framePtr = F.prev;

                              return result_2852143874;

                            }
                              var Temporary14;
                              var Temporary15;
                              
function HEX3Aanonymous_2852144278(scopeSelf_2852144279, inComponent_2852144280, compName_2852144281, inCycle_2852144282, cycleCounter_2852144283, cycleCounter_2852144283_Idx, compCounter_2852144284) {
                                  var Temporary1;

                                var result_2852144285 = null;

                                var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                framePtr = F;
                                  F.line = 126;
                                  F.filename = "layout.nim";
                                  F.line = 126;
                                  if ((inCycle_2852144282 && inComponent_2852144280)) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inCycle_2852144282) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inComponent_2852144280) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  }}
                                  var _res_2852144294 = Temporary1;
                                  F.line = 293;
                                  F.filename = "macro_utils.nim";
                                  comp151_2852144277.slotData = _res_2852144294;
                                  result_2852144285 = _res_2852144294;
                                framePtr = F.prev;

                                return result_2852144285;

                              }

                          var result_2852142941 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 127;
                            F.filename = "layout.nim";
                            F.line = 127;
                            if ((inCycle_2852142938 && inComponent_2852142936)) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary2 = ([99,111,109,112,49,52,50] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || []);
                            }
                            else {
                            Temporary2 = ([99,111,109,112,49,52,50] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp142_2852143043 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary3 = ([99,111,109,112,49,52,50] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || []);
                            }
                            else {
                            Temporary3 = ([99,111,109,112,49,52,50] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp142_2852143044 = rgcmp(toJSStr(Temporary3), _comp142_2852143043);
                            F.line = 126;
                            comp142_2852143044.slot = HEX3Aanonymous_2852143045;
                            F.line = 126;
                            var data_comp142_2852143062 = render_1644175063(comp142_2852143044);
                            F.line = 126;
                            addArgIter_1694499355(data_comp142_2852143062, ([100,97,116,97,45] || []).concat(comp142_2852143044.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp142_2852143062.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp142_2852143062.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp142_2852143062.pageShow);
                            Label4: {
                              F.line = 127;
                              var fmtRes_2852143165 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852143165[0].push.apply(fmtRes_2852143165[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852143165, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852143165[0].push.apply(fmtRes_2852143165[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label5: {
                              F.line = 128;
                              var fmtRes_2852143292 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852143292, 0, d_2852142826, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp142_2852143062, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852143165[0], NTI33554449)}, NTI2852136599)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852143292[0], true, [], false)], false)], false)], true);
                            }
                            else {
                            if (inCycle_2852142938) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary6 = ([99,111,109,112,49,52,53] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || []);
                            }
                            else {
                            Temporary6 = ([99,111,109,112,49,52,53] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp145_2852143454 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary7 = ([99,111,109,112,49,52,53] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || []);
                            }
                            else {
                            Temporary7 = ([99,111,109,112,49,52,53] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp145_2852143455 = rgcmp(toJSStr(Temporary7), _comp145_2852143454);
                            F.line = 126;
                            comp145_2852143455.slot = HEX3Aanonymous_2852143456;
                            F.line = 126;
                            var data_comp145_2852143473 = render_1644175063(comp145_2852143455);
                            F.line = 126;
                            addArgIter_1694499355(data_comp145_2852143473, ([100,97,116,97,45] || []).concat(comp145_2852143455.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp145_2852143473.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp145_2852143473.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp145_2852143473.pageShow);
                            Label8: {
                              F.line = 127;
                              var fmtRes_2852143576 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852143576[0].push.apply(fmtRes_2852143576[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852143576, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852143576[0].push.apply(fmtRes_2852143576[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label9: {
                              F.line = 128;
                              var fmtRes_2852143703 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852143703, 0, d_2852142826, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp145_2852143473, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852143576[0], NTI33554449)}, NTI2852136842)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852143703[0], true, [], false)], false)], false)], true);
                            }
                            else {
                            if (inComponent_2852142936) {
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary10 = ([99,111,109,112,49,52,56] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || []);
                            }
                            else {
                            Temporary10 = ([99,111,109,112,49,52,56] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var _comp148_2852143865 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                            F.line = 126;
                            if ((scopedCycleCounter_1644167270[0] == 0)) {
                            Temporary11 = ([99,111,109,112,49,52,56] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || []);
                            }
                            else {
                            Temporary11 = ([99,111,109,112,49,52,56] || []).concat(compCounter_2852142940 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852142939[cycleCounter_2852142939_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                            }
                            
                            var comp148_2852143866 = rgcmp(toJSStr(Temporary11), _comp148_2852143865);
                            F.line = 126;
                            comp148_2852143866.slot = HEX3Aanonymous_2852143867;
                            F.line = 126;
                            var data_comp148_2852143884 = render_1644175063(comp148_2852143866);
                            F.line = 126;
                            addArgIter_1694499355(data_comp148_2852143884, ([100,97,116,97,45] || []).concat(comp148_2852143866.uniqCompId || []));
                            F.line = 126;
                            window.addEventListener('beforeunload', data_comp148_2852143884.exited);
                            F.line = 126;
                            window.addEventListener('pagehide', data_comp148_2852143884.pageHide);
                            F.line = 126;
                            window.addEventListener('pageshow', data_comp148_2852143884.pageShow);
                            Label12: {
                              F.line = 127;
                              var fmtRes_2852143987 = [mnewString(0)];
                              F.line = 127;
                              fmtRes_2852143987[0].push.apply(fmtRes_2852143987[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                              F.line = 127;
                              formatValue_704643243(fmtRes_2852143987, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                              F.line = 127;
                              fmtRes_2852143987[0].push.apply(fmtRes_2852143987[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                            };
                            Label13: {
                              F.line = 128;
                              var fmtRes_2852144114 = [mnewString(0)];
                              F.line = 128;
                              formatValue_704643243(fmtRes_2852144114, 0, d_2852142826, []);
                            };
                            Temporary1 = tg2([100,105,118], [data_comp148_2852143884, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852143987[0], NTI33554449)}, NTI2852137085)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852144114[0], true, [], false)], false)], false)], true);
                            }
                            else {
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary14 = [99,111,109,112,49,53,49];
                              }
                              else {
                              Temporary14 = ([99,111,109,112,49,53,49] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var _comp151_2852144276 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary15 = [99,111,109,112,49,53,49];
                              }
                              else {
                              Temporary15 = ([99,111,109,112,49,53,49] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var comp151_2852144277 = rgcmp(toJSStr(Temporary15), _comp151_2852144276);
                              F.line = 126;
                              comp151_2852144277.slot = HEX3Aanonymous_2852144278;
                              F.line = 126;
                              var data_comp151_2852144295 = render_1644175063(comp151_2852144277);
                              F.line = 126;
                              addArgIter_1694499355(data_comp151_2852144295, ([100,97,116,97,45] || []).concat(comp151_2852144277.uniqCompId || []));
                              F.line = 126;
                              window.addEventListener('beforeunload', data_comp151_2852144295.exited);
                              F.line = 126;
                              window.addEventListener('pagehide', data_comp151_2852144295.pageHide);
                              F.line = 126;
                              window.addEventListener('pageshow', data_comp151_2852144295.pageShow);
                              Label16: {
                                F.line = 127;
                                var fmtRes_2852144398 = [mnewString(0)];
                                F.line = 127;
                                fmtRes_2852144398[0].push.apply(fmtRes_2852144398[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                F.line = 127;
                                formatValue_704643243(fmtRes_2852144398, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                F.line = 127;
                                fmtRes_2852144398[0].push.apply(fmtRes_2852144398[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                              };
                              Label17: {
                                F.line = 128;
                                var fmtRes_2852144525 = [mnewString(0)];
                                F.line = 128;
                                formatValue_704643243(fmtRes_2852144525, 0, d_2852142826, []);
                              };
                            Temporary1 = tg2([100,105,118], [data_comp151_2852144295, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852144398[0], NTI33554449)}, NTI2852137327)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852144525[0], true, [], false)], false)], false)], true);
                            }
                            }}
                            var _res_2852144586 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp136_2852142933.slotData = _res_2852144586;
                            result_2852142941 = _res_2852144586;
                          framePtr = F.prev;

                          return result_2852142941;

                        }
                        var Temporary25;
                        var Temporary26;
                        
function HEX3Aanonymous_2852144690(scopeSelf_2852144691, inComponent_2852144692, compName_2852144693, inCycle_2852144694, cycleCounter_2852144695, cycleCounter_2852144695_Idx, compCounter_2852144696) {
                            var Temporary1;

                          var result_2852144697 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 129;
                            F.filename = "layout.nim";
                            F.line = 129;
                            if ((inCycle_2852144694 && inComponent_2852144692)) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inCycle_2852144694) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inComponent_2852144692) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            }}
                            var _res_2852144706 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp137_2852144689.slotData = _res_2852144706;
                            result_2852144697 = _res_2852144706;
                          framePtr = F.prev;

                          return result_2852144697;

                        }
                var Temporary27;
                var Temporary28;
                
function HEX3Aanonymous_2852144834(scopeSelf_2852144835, inComponent_2852144836, compName_2852144837, inCycle_2852144838, cycleCounter_2852144839, cycleCounter_2852144839_Idx, compCounter_2852144840) {
                    var Temporary1;
                    var Temporary2;
                    var Temporary3;
                    
function HEX3Aanonymous_2852144945(scopeSelf_2852144946, inComponent_2852144947, compName_2852144948, inCycle_2852144949, cycleCounter_2852144950, cycleCounter_2852144950_Idx, compCounter_2852144951) {
                        var Temporary1;

                      var result_2852144952 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852144949 && inComponent_2852144947)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852144949) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852144947) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852144961 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp154_2852144944.slotData = _res_2852144961;
                        result_2852144952 = _res_2852144961;
                      framePtr = F.prev;

                      return result_2852144952;

                    }
                    var Temporary6;
                    var Temporary7;
                    
function HEX3Aanonymous_2852145360(scopeSelf_2852145361, inComponent_2852145362, compName_2852145363, inCycle_2852145364, cycleCounter_2852145365, cycleCounter_2852145365_Idx, compCounter_2852145366) {
                        var Temporary1;

                      var result_2852145367 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852145364 && inComponent_2852145362)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852145364) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852145362) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852145376 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp157_2852145359.slotData = _res_2852145376;
                        result_2852145367 = _res_2852145376;
                      framePtr = F.prev;

                      return result_2852145367;

                    }
                    var Temporary10;
                    var Temporary11;
                    
function HEX3Aanonymous_2852145775(scopeSelf_2852145776, inComponent_2852145777, compName_2852145778, inCycle_2852145779, cycleCounter_2852145780, cycleCounter_2852145780_Idx, compCounter_2852145781) {
                        var Temporary1;

                      var result_2852145782 = null;

                      var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                      framePtr = F;
                        F.line = 131;
                        F.filename = "layout.nim";
                        F.line = 131;
                        if ((inCycle_2852145779 && inComponent_2852145777)) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inCycle_2852145779) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        if (inComponent_2852145777) {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        else {
                        Temporary1 = tg2([100,105,118], [], true);
                        }
                        }}
                        var _res_2852145791 = Temporary1;
                        F.line = 293;
                        F.filename = "macro_utils.nim";
                        comp160_2852145774.slotData = _res_2852145791;
                        result_2852145782 = _res_2852145791;
                      framePtr = F.prev;

                      return result_2852145782;

                    }
                      var Temporary14;
                      var Temporary15;
                      
function HEX3Aanonymous_2852146190(scopeSelf_2852146191, inComponent_2852146192, compName_2852146193, inCycle_2852146194, cycleCounter_2852146195, cycleCounter_2852146195_Idx, compCounter_2852146196) {
                          var Temporary1;

                        var result_2852146197 = null;

                        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                        framePtr = F;
                          F.line = 131;
                          F.filename = "layout.nim";
                          F.line = 131;
                          if ((inCycle_2852146194 && inComponent_2852146192)) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inCycle_2852146194) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inComponent_2852146192) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          }}
                          var _res_2852146206 = Temporary1;
                          F.line = 293;
                          F.filename = "macro_utils.nim";
                          comp163_2852146189.slotData = _res_2852146206;
                          result_2852146197 = _res_2852146206;
                        framePtr = F.prev;

                        return result_2852146197;

                      }

                  var result_2852144841 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 132;
                    F.filename = "layout.nim";
                    F.line = 132;
                    if ((inCycle_2852144838 && inComponent_2852144836)) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary2 = ([99,111,109,112,49,53,52] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || []);
                    }
                    else {
                    Temporary2 = ([99,111,109,112,49,53,52] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp154_2852144943 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary3 = ([99,111,109,112,49,53,52] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || []);
                    }
                    else {
                    Temporary3 = ([99,111,109,112,49,53,52] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp154_2852144944 = rgcmp(toJSStr(Temporary3), _comp154_2852144943);
                    F.line = 131;
                    comp154_2852144944.slot = HEX3Aanonymous_2852144945;
                    F.line = 131;
                    var data_comp154_2852144962 = render_1644175063(comp154_2852144944);
                    F.line = 131;
                    addArgIter_1694499355(data_comp154_2852144962, ([100,97,116,97,45] || []).concat(comp154_2852144944.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp154_2852144962.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp154_2852144962.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp154_2852144962.pageShow);
                    Label4: {
                      F.line = 132;
                      var fmtRes_2852145065 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852145065[0].push.apply(fmtRes_2852145065[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852145065, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852145065[0].push.apply(fmtRes_2852145065[0], [59]);;
                    };
                    Label5: {
                      F.line = 133;
                      var fmtRes_2852145192 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852145192, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp154_2852144962, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852145065[0], NTI33554449)}, NTI2852137711)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852145192[0], true, [], false)], false)], false)], true);
                    }
                    else {
                    if (inCycle_2852144838) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary6 = ([99,111,109,112,49,53,55] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || []);
                    }
                    else {
                    Temporary6 = ([99,111,109,112,49,53,55] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp157_2852145358 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary7 = ([99,111,109,112,49,53,55] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || []);
                    }
                    else {
                    Temporary7 = ([99,111,109,112,49,53,55] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp157_2852145359 = rgcmp(toJSStr(Temporary7), _comp157_2852145358);
                    F.line = 131;
                    comp157_2852145359.slot = HEX3Aanonymous_2852145360;
                    F.line = 131;
                    var data_comp157_2852145377 = render_1644175063(comp157_2852145359);
                    F.line = 131;
                    addArgIter_1694499355(data_comp157_2852145377, ([100,97,116,97,45] || []).concat(comp157_2852145359.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp157_2852145377.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp157_2852145377.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp157_2852145377.pageShow);
                    Label8: {
                      F.line = 132;
                      var fmtRes_2852145480 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852145480[0].push.apply(fmtRes_2852145480[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852145480, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852145480[0].push.apply(fmtRes_2852145480[0], [59]);;
                    };
                    Label9: {
                      F.line = 133;
                      var fmtRes_2852145607 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852145607, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp157_2852145377, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852145480[0], NTI33554449)}, NTI2852137962)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852145607[0], true, [], false)], false)], false)], true);
                    }
                    else {
                    if (inComponent_2852144836) {
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary10 = ([99,111,109,112,49,54,48] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || []);
                    }
                    else {
                    Temporary10 = ([99,111,109,112,49,54,48] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var _comp160_2852145773 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                    F.line = 131;
                    if ((scopedCycleCounter_1644167270[0] == 0)) {
                    Temporary11 = ([99,111,109,112,49,54,48] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || []);
                    }
                    else {
                    Temporary11 = ([99,111,109,112,49,54,48] || []).concat(compCounter_2852144840 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852144839[cycleCounter_2852144839_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                    }
                    
                    var comp160_2852145774 = rgcmp(toJSStr(Temporary11), _comp160_2852145773);
                    F.line = 131;
                    comp160_2852145774.slot = HEX3Aanonymous_2852145775;
                    F.line = 131;
                    var data_comp160_2852145792 = render_1644175063(comp160_2852145774);
                    F.line = 131;
                    addArgIter_1694499355(data_comp160_2852145792, ([100,97,116,97,45] || []).concat(comp160_2852145774.uniqCompId || []));
                    F.line = 131;
                    window.addEventListener('beforeunload', data_comp160_2852145792.exited);
                    F.line = 131;
                    window.addEventListener('pagehide', data_comp160_2852145792.pageHide);
                    F.line = 131;
                    window.addEventListener('pageshow', data_comp160_2852145792.pageShow);
                    Label12: {
                      F.line = 132;
                      var fmtRes_2852145895 = [mnewString(0)];
                      F.line = 132;
                      fmtRes_2852145895[0].push.apply(fmtRes_2852145895[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                      F.line = 132;
                      formatValue_704643243(fmtRes_2852145895, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                      F.line = 132;
                      fmtRes_2852145895[0].push.apply(fmtRes_2852145895[0], [59]);;
                    };
                    Label13: {
                      F.line = 133;
                      var fmtRes_2852146022 = [mnewString(0)];
                      F.line = 133;
                      formatValue_704643243(fmtRes_2852146022, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                    };
                    Temporary1 = tg2([100,105,118], [data_comp160_2852145792, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852145895[0], NTI33554449)}, NTI2852138213)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852146022[0], true, [], false)], false)], false)], true);
                    }
                    else {
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary14 = [99,111,109,112,49,54,51];
                      }
                      else {
                      Temporary14 = ([99,111,109,112,49,54,51] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var _comp163_2852146188 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary15 = [99,111,109,112,49,54,51];
                      }
                      else {
                      Temporary15 = ([99,111,109,112,49,54,51] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var comp163_2852146189 = rgcmp(toJSStr(Temporary15), _comp163_2852146188);
                      F.line = 131;
                      comp163_2852146189.slot = HEX3Aanonymous_2852146190;
                      F.line = 131;
                      var data_comp163_2852146207 = render_1644175063(comp163_2852146189);
                      F.line = 131;
                      addArgIter_1694499355(data_comp163_2852146207, ([100,97,116,97,45] || []).concat(comp163_2852146189.uniqCompId || []));
                      F.line = 131;
                      window.addEventListener('beforeunload', data_comp163_2852146207.exited);
                      F.line = 131;
                      window.addEventListener('pagehide', data_comp163_2852146207.pageHide);
                      F.line = 131;
                      window.addEventListener('pageshow', data_comp163_2852146207.pageShow);
                      Label16: {
                        F.line = 132;
                        var fmtRes_2852146310 = [mnewString(0)];
                        F.line = 132;
                        fmtRes_2852146310[0].push.apply(fmtRes_2852146310[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                        F.line = 132;
                        formatValue_704643243(fmtRes_2852146310, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                        F.line = 132;
                        fmtRes_2852146310[0].push.apply(fmtRes_2852146310[0], [59]);;
                      };
                      Label17: {
                        F.line = 133;
                        var fmtRes_2852146437 = [mnewString(0)];
                        F.line = 133;
                        formatValue_704643243(fmtRes_2852146437, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                      };
                    Temporary1 = tg2([100,105,118], [data_comp163_2852146207, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852146310[0], NTI33554449)}, NTI2852138463)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852146437[0], true, [], false)], false)], false)], true);
                    }
                    }}
                    var _res_2852146502 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp141_2852144833.slotData = _res_2852146502;
                    result_2852144841 = _res_2852146502;
                  framePtr = F.prev;

                  return result_2852144841;

                }
                          var Temporary32;
                          var Temporary33;
                          
function HEX3Aanonymous_2852146665(scopeSelf_2852146666, inComponent_2852146667, compName_2852146668, inCycle_2852146669, cycleCounter_2852146670, cycleCounter_2852146670_Idx, compCounter_2852146671) {
                              var Temporary1;
                              var Temporary2;
                              var Temporary3;
                              
function HEX3Aanonymous_2852146776(scopeSelf_2852146777, inComponent_2852146778, compName_2852146779, inCycle_2852146780, cycleCounter_2852146781, cycleCounter_2852146781_Idx, compCounter_2852146782) {
                                  var Temporary1;

                                var result_2852146783 = null;

                                var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                framePtr = F;
                                  F.line = 126;
                                  F.filename = "layout.nim";
                                  F.line = 126;
                                  if ((inCycle_2852146780 && inComponent_2852146778)) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inCycle_2852146780) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inComponent_2852146778) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  }}
                                  var _res_2852146792 = Temporary1;
                                  F.line = 293;
                                  F.filename = "macro_utils.nim";
                                  comp176_2852146775.slotData = _res_2852146792;
                                  result_2852146783 = _res_2852146792;
                                framePtr = F.prev;

                                return result_2852146783;

                              }
                              var Temporary6;
                              var Temporary7;
                              
function HEX3Aanonymous_2852147187(scopeSelf_2852147188, inComponent_2852147189, compName_2852147190, inCycle_2852147191, cycleCounter_2852147192, cycleCounter_2852147192_Idx, compCounter_2852147193) {
                                  var Temporary1;

                                var result_2852147194 = null;

                                var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                framePtr = F;
                                  F.line = 126;
                                  F.filename = "layout.nim";
                                  F.line = 126;
                                  if ((inCycle_2852147191 && inComponent_2852147189)) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inCycle_2852147191) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inComponent_2852147189) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  }}
                                  var _res_2852147203 = Temporary1;
                                  F.line = 293;
                                  F.filename = "macro_utils.nim";
                                  comp179_2852147186.slotData = _res_2852147203;
                                  result_2852147194 = _res_2852147203;
                                framePtr = F.prev;

                                return result_2852147194;

                              }
                              var Temporary10;
                              var Temporary11;
                              
function HEX3Aanonymous_2852147598(scopeSelf_2852147599, inComponent_2852147600, compName_2852147601, inCycle_2852147602, cycleCounter_2852147603, cycleCounter_2852147603_Idx, compCounter_2852147604) {
                                  var Temporary1;

                                var result_2852147605 = null;

                                var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                framePtr = F;
                                  F.line = 126;
                                  F.filename = "layout.nim";
                                  F.line = 126;
                                  if ((inCycle_2852147602 && inComponent_2852147600)) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inCycle_2852147602) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  if (inComponent_2852147600) {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  else {
                                  Temporary1 = tg2([100,105,118], [], true);
                                  }
                                  }}
                                  var _res_2852147614 = Temporary1;
                                  F.line = 293;
                                  F.filename = "macro_utils.nim";
                                  comp182_2852147597.slotData = _res_2852147614;
                                  result_2852147605 = _res_2852147614;
                                framePtr = F.prev;

                                return result_2852147605;

                              }
                                var Temporary14;
                                var Temporary15;
                                
function HEX3Aanonymous_2852148009(scopeSelf_2852148010, inComponent_2852148011, compName_2852148012, inCycle_2852148013, cycleCounter_2852148014, cycleCounter_2852148014_Idx, compCounter_2852148015) {
                                    var Temporary1;

                                  var result_2852148016 = null;

                                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                                  framePtr = F;
                                    F.line = 126;
                                    F.filename = "layout.nim";
                                    F.line = 126;
                                    if ((inCycle_2852148013 && inComponent_2852148011)) {
                                    Temporary1 = tg2([100,105,118], [], true);
                                    }
                                    else {
                                    if (inCycle_2852148013) {
                                    Temporary1 = tg2([100,105,118], [], true);
                                    }
                                    else {
                                    if (inComponent_2852148011) {
                                    Temporary1 = tg2([100,105,118], [], true);
                                    }
                                    else {
                                    Temporary1 = tg2([100,105,118], [], true);
                                    }
                                    }}
                                    var _res_2852148025 = Temporary1;
                                    F.line = 293;
                                    F.filename = "macro_utils.nim";
                                    comp185_2852148008.slotData = _res_2852148025;
                                    result_2852148016 = _res_2852148025;
                                  framePtr = F.prev;

                                  return result_2852148016;

                                }

                            var result_2852146672 = null;

                            var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                            framePtr = F;
                              F.line = 127;
                              F.filename = "layout.nim";
                              F.line = 127;
                              if ((inCycle_2852146669 && inComponent_2852146667)) {
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary2 = ([99,111,109,112,49,55,54] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || []);
                              }
                              else {
                              Temporary2 = ([99,111,109,112,49,55,54] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var _comp176_2852146774 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary3 = ([99,111,109,112,49,55,54] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || []);
                              }
                              else {
                              Temporary3 = ([99,111,109,112,49,55,54] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var comp176_2852146775 = rgcmp(toJSStr(Temporary3), _comp176_2852146774);
                              F.line = 126;
                              comp176_2852146775.slot = HEX3Aanonymous_2852146776;
                              F.line = 126;
                              var data_comp176_2852146793 = render_1644175063(comp176_2852146775);
                              F.line = 126;
                              addArgIter_1694499355(data_comp176_2852146793, ([100,97,116,97,45] || []).concat(comp176_2852146775.uniqCompId || []));
                              F.line = 126;
                              window.addEventListener('beforeunload', data_comp176_2852146793.exited);
                              F.line = 126;
                              window.addEventListener('pagehide', data_comp176_2852146793.pageHide);
                              F.line = 126;
                              window.addEventListener('pageshow', data_comp176_2852146793.pageShow);
                              Label4: {
                                F.line = 127;
                                var fmtRes_2852146896 = [mnewString(0)];
                                F.line = 127;
                                fmtRes_2852146896[0].push.apply(fmtRes_2852146896[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                F.line = 127;
                                formatValue_704643243(fmtRes_2852146896, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                F.line = 127;
                                fmtRes_2852146896[0].push.apply(fmtRes_2852146896[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                              };
                              Label5: {
                                F.line = 128;
                                var fmtRes_2852147023 = [mnewString(0)];
                                F.line = 128;
                                formatValue_704643243(fmtRes_2852147023, 0, d_2852146557, []);
                              };
                              Temporary1 = tg2([100,105,118], [data_comp176_2852146793, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852146896[0], NTI33554449)}, NTI2852138825)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852147023[0], true, [], false)], false)], false)], true);
                              }
                              else {
                              if (inCycle_2852146669) {
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary6 = ([99,111,109,112,49,55,57] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || []);
                              }
                              else {
                              Temporary6 = ([99,111,109,112,49,55,57] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var _comp179_2852147185 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary7 = ([99,111,109,112,49,55,57] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || []);
                              }
                              else {
                              Temporary7 = ([99,111,109,112,49,55,57] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var comp179_2852147186 = rgcmp(toJSStr(Temporary7), _comp179_2852147185);
                              F.line = 126;
                              comp179_2852147186.slot = HEX3Aanonymous_2852147187;
                              F.line = 126;
                              var data_comp179_2852147204 = render_1644175063(comp179_2852147186);
                              F.line = 126;
                              addArgIter_1694499355(data_comp179_2852147204, ([100,97,116,97,45] || []).concat(comp179_2852147186.uniqCompId || []));
                              F.line = 126;
                              window.addEventListener('beforeunload', data_comp179_2852147204.exited);
                              F.line = 126;
                              window.addEventListener('pagehide', data_comp179_2852147204.pageHide);
                              F.line = 126;
                              window.addEventListener('pageshow', data_comp179_2852147204.pageShow);
                              Label8: {
                                F.line = 127;
                                var fmtRes_2852147307 = [mnewString(0)];
                                F.line = 127;
                                fmtRes_2852147307[0].push.apply(fmtRes_2852147307[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                F.line = 127;
                                formatValue_704643243(fmtRes_2852147307, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                F.line = 127;
                                fmtRes_2852147307[0].push.apply(fmtRes_2852147307[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                              };
                              Label9: {
                                F.line = 128;
                                var fmtRes_2852147434 = [mnewString(0)];
                                F.line = 128;
                                formatValue_704643243(fmtRes_2852147434, 0, d_2852146557, []);
                              };
                              Temporary1 = tg2([100,105,118], [data_comp179_2852147204, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852147307[0], NTI33554449)}, NTI2852139068)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852147434[0], true, [], false)], false)], false)], true);
                              }
                              else {
                              if (inComponent_2852146667) {
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary10 = ([99,111,109,112,49,56,50] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || []);
                              }
                              else {
                              Temporary10 = ([99,111,109,112,49,56,50] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var _comp182_2852147596 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                              F.line = 126;
                              if ((scopedCycleCounter_1644167270[0] == 0)) {
                              Temporary11 = ([99,111,109,112,49,56,50] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || []);
                              }
                              else {
                              Temporary11 = ([99,111,109,112,49,56,50] || []).concat(compCounter_2852146671 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852146670[cycleCounter_2852146670_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                              }
                              
                              var comp182_2852147597 = rgcmp(toJSStr(Temporary11), _comp182_2852147596);
                              F.line = 126;
                              comp182_2852147597.slot = HEX3Aanonymous_2852147598;
                              F.line = 126;
                              var data_comp182_2852147615 = render_1644175063(comp182_2852147597);
                              F.line = 126;
                              addArgIter_1694499355(data_comp182_2852147615, ([100,97,116,97,45] || []).concat(comp182_2852147597.uniqCompId || []));
                              F.line = 126;
                              window.addEventListener('beforeunload', data_comp182_2852147615.exited);
                              F.line = 126;
                              window.addEventListener('pagehide', data_comp182_2852147615.pageHide);
                              F.line = 126;
                              window.addEventListener('pageshow', data_comp182_2852147615.pageShow);
                              Label12: {
                                F.line = 127;
                                var fmtRes_2852147718 = [mnewString(0)];
                                F.line = 127;
                                fmtRes_2852147718[0].push.apply(fmtRes_2852147718[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                F.line = 127;
                                formatValue_704643243(fmtRes_2852147718, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                F.line = 127;
                                fmtRes_2852147718[0].push.apply(fmtRes_2852147718[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                              };
                              Label13: {
                                F.line = 128;
                                var fmtRes_2852147845 = [mnewString(0)];
                                F.line = 128;
                                formatValue_704643243(fmtRes_2852147845, 0, d_2852146557, []);
                              };
                              Temporary1 = tg2([100,105,118], [data_comp182_2852147615, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852147718[0], NTI33554449)}, NTI2852139311)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852147845[0], true, [], false)], false)], false)], true);
                              }
                              else {
                                F.line = 126;
                                if ((scopedCycleCounter_1644167270[0] == 0)) {
                                Temporary14 = [99,111,109,112,49,56,53];
                                }
                                else {
                                Temporary14 = ([99,111,109,112,49,56,53] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                                }
                                
                                var _comp185_2852148007 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                                F.line = 126;
                                if ((scopedCycleCounter_1644167270[0] == 0)) {
                                Temporary15 = [99,111,109,112,49,56,53];
                                }
                                else {
                                Temporary15 = ([99,111,109,112,49,56,53] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                                }
                                
                                var comp185_2852148008 = rgcmp(toJSStr(Temporary15), _comp185_2852148007);
                                F.line = 126;
                                comp185_2852148008.slot = HEX3Aanonymous_2852148009;
                                F.line = 126;
                                var data_comp185_2852148026 = render_1644175063(comp185_2852148008);
                                F.line = 126;
                                addArgIter_1694499355(data_comp185_2852148026, ([100,97,116,97,45] || []).concat(comp185_2852148008.uniqCompId || []));
                                F.line = 126;
                                window.addEventListener('beforeunload', data_comp185_2852148026.exited);
                                F.line = 126;
                                window.addEventListener('pagehide', data_comp185_2852148026.pageHide);
                                F.line = 126;
                                window.addEventListener('pageshow', data_comp185_2852148026.pageShow);
                                Label16: {
                                  F.line = 127;
                                  var fmtRes_2852148129 = [mnewString(0)];
                                  F.line = 127;
                                  fmtRes_2852148129[0].push.apply(fmtRes_2852148129[0], makeNimstrLit("width: 100%; height: 100%; font-size: 200%; display: inline-block; border-left: "));;
                                  F.line = 127;
                                  formatValue_704643243(fmtRes_2852148129, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                                  F.line = 127;
                                  fmtRes_2852148129[0].push.apply(fmtRes_2852148129[0], [59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]);;
                                };
                                Label17: {
                                  F.line = 128;
                                  var fmtRes_2852148256 = [mnewString(0)];
                                  F.line = 128;
                                  formatValue_704643243(fmtRes_2852148256, 0, d_2852146557, []);
                                };
                              Temporary1 = tg2([100,105,118], [data_comp185_2852148026, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852148129[0], NTI33554449)}, NTI2852139553)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [tg4(fmtRes_2852148256[0], true, [], false)], false)], false)], true);
                              }
                              }}
                              var _res_2852148317 = Temporary1;
                              F.line = 293;
                              F.filename = "macro_utils.nim";
                              comp170_2852146664.slotData = _res_2852148317;
                              result_2852146672 = _res_2852148317;
                            framePtr = F.prev;

                            return result_2852146672;

                          }
                          var Temporary34;
                          var Temporary35;
                          
function HEX3Aanonymous_2852148421(scopeSelf_2852148422, inComponent_2852148423, compName_2852148424, inCycle_2852148425, cycleCounter_2852148426, cycleCounter_2852148426_Idx, compCounter_2852148427) {
                              var Temporary1;

                            var result_2852148428 = null;

                            var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                            framePtr = F;
                              F.line = 129;
                              F.filename = "layout.nim";
                              F.line = 129;
                              if ((inCycle_2852148425 && inComponent_2852148423)) {
                              Temporary1 = tg2([100,105,118], [], true);
                              }
                              else {
                              if (inCycle_2852148425) {
                              Temporary1 = tg2([100,105,118], [], true);
                              }
                              else {
                              if (inComponent_2852148423) {
                              Temporary1 = tg2([100,105,118], [], true);
                              }
                              else {
                              Temporary1 = tg2([100,105,118], [], true);
                              }
                              }}
                              var _res_2852148437 = Temporary1;
                              F.line = 293;
                              F.filename = "macro_utils.nim";
                              comp171_2852148420.slotData = _res_2852148437;
                              result_2852148428 = _res_2852148437;
                            framePtr = F.prev;

                            return result_2852148428;

                          }
                  var Temporary36;
                  var Temporary37;
                  
function HEX3Aanonymous_2852148565(scopeSelf_2852148566, inComponent_2852148567, compName_2852148568, inCycle_2852148569, cycleCounter_2852148570, cycleCounter_2852148570_Idx, compCounter_2852148571) {
                      var Temporary1;
                      var Temporary2;
                      var Temporary3;
                      
function HEX3Aanonymous_2852148676(scopeSelf_2852148677, inComponent_2852148678, compName_2852148679, inCycle_2852148680, cycleCounter_2852148681, cycleCounter_2852148681_Idx, compCounter_2852148682) {
                          var Temporary1;

                        var result_2852148683 = null;

                        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                        framePtr = F;
                          F.line = 131;
                          F.filename = "layout.nim";
                          F.line = 131;
                          if ((inCycle_2852148680 && inComponent_2852148678)) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inCycle_2852148680) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inComponent_2852148678) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          }}
                          var _res_2852148692 = Temporary1;
                          F.line = 293;
                          F.filename = "macro_utils.nim";
                          comp188_2852148675.slotData = _res_2852148692;
                          result_2852148683 = _res_2852148692;
                        framePtr = F.prev;

                        return result_2852148683;

                      }
                      var Temporary6;
                      var Temporary7;
                      
function HEX3Aanonymous_2852149091(scopeSelf_2852149092, inComponent_2852149093, compName_2852149094, inCycle_2852149095, cycleCounter_2852149096, cycleCounter_2852149096_Idx, compCounter_2852149097) {
                          var Temporary1;

                        var result_2852149098 = null;

                        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                        framePtr = F;
                          F.line = 131;
                          F.filename = "layout.nim";
                          F.line = 131;
                          if ((inCycle_2852149095 && inComponent_2852149093)) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inCycle_2852149095) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inComponent_2852149093) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          }}
                          var _res_2852149107 = Temporary1;
                          F.line = 293;
                          F.filename = "macro_utils.nim";
                          comp191_2852149090.slotData = _res_2852149107;
                          result_2852149098 = _res_2852149107;
                        framePtr = F.prev;

                        return result_2852149098;

                      }
                      var Temporary10;
                      var Temporary11;
                      
function HEX3Aanonymous_2852149506(scopeSelf_2852149507, inComponent_2852149508, compName_2852149509, inCycle_2852149510, cycleCounter_2852149511, cycleCounter_2852149511_Idx, compCounter_2852149512) {
                          var Temporary1;

                        var result_2852149513 = null;

                        var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                        framePtr = F;
                          F.line = 131;
                          F.filename = "layout.nim";
                          F.line = 131;
                          if ((inCycle_2852149510 && inComponent_2852149508)) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inCycle_2852149510) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          if (inComponent_2852149508) {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          else {
                          Temporary1 = tg2([100,105,118], [], true);
                          }
                          }}
                          var _res_2852149522 = Temporary1;
                          F.line = 293;
                          F.filename = "macro_utils.nim";
                          comp194_2852149505.slotData = _res_2852149522;
                          result_2852149513 = _res_2852149522;
                        framePtr = F.prev;

                        return result_2852149513;

                      }
                        var Temporary14;
                        var Temporary15;
                        
function HEX3Aanonymous_2852149921(scopeSelf_2852149922, inComponent_2852149923, compName_2852149924, inCycle_2852149925, cycleCounter_2852149926, cycleCounter_2852149926_Idx, compCounter_2852149927) {
                            var Temporary1;

                          var result_2852149928 = null;

                          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                          framePtr = F;
                            F.line = 131;
                            F.filename = "layout.nim";
                            F.line = 131;
                            if ((inCycle_2852149925 && inComponent_2852149923)) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inCycle_2852149925) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            if (inComponent_2852149923) {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            else {
                            Temporary1 = tg2([100,105,118], [], true);
                            }
                            }}
                            var _res_2852149937 = Temporary1;
                            F.line = 293;
                            F.filename = "macro_utils.nim";
                            comp197_2852149920.slotData = _res_2852149937;
                            result_2852149928 = _res_2852149937;
                          framePtr = F.prev;

                          return result_2852149928;

                        }

                    var result_2852148572 = null;

                    var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                    framePtr = F;
                      F.line = 132;
                      F.filename = "layout.nim";
                      F.line = 132;
                      if ((inCycle_2852148569 && inComponent_2852148567)) {
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary2 = ([99,111,109,112,49,56,56] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || []);
                      }
                      else {
                      Temporary2 = ([99,111,109,112,49,56,56] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var _comp188_2852148674 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary3 = ([99,111,109,112,49,56,56] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || []);
                      }
                      else {
                      Temporary3 = ([99,111,109,112,49,56,56] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var comp188_2852148675 = rgcmp(toJSStr(Temporary3), _comp188_2852148674);
                      F.line = 131;
                      comp188_2852148675.slot = HEX3Aanonymous_2852148676;
                      F.line = 131;
                      var data_comp188_2852148693 = render_1644175063(comp188_2852148675);
                      F.line = 131;
                      addArgIter_1694499355(data_comp188_2852148693, ([100,97,116,97,45] || []).concat(comp188_2852148675.uniqCompId || []));
                      F.line = 131;
                      window.addEventListener('beforeunload', data_comp188_2852148693.exited);
                      F.line = 131;
                      window.addEventListener('pagehide', data_comp188_2852148693.pageHide);
                      F.line = 131;
                      window.addEventListener('pageshow', data_comp188_2852148693.pageShow);
                      Label4: {
                        F.line = 132;
                        var fmtRes_2852148796 = [mnewString(0)];
                        F.line = 132;
                        fmtRes_2852148796[0].push.apply(fmtRes_2852148796[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                        F.line = 132;
                        formatValue_704643243(fmtRes_2852148796, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                        F.line = 132;
                        fmtRes_2852148796[0].push.apply(fmtRes_2852148796[0], [59]);;
                      };
                      Label5: {
                        F.line = 133;
                        var fmtRes_2852148923 = [mnewString(0)];
                        F.line = 133;
                        formatValue_704643243(fmtRes_2852148923, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                      };
                      Temporary1 = tg2([100,105,118], [data_comp188_2852148693, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852148796[0], NTI33554449)}, NTI2852139936)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852148923[0], true, [], false)], false)], false)], true);
                      }
                      else {
                      if (inCycle_2852148569) {
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary6 = ([99,111,109,112,49,57,49] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || []);
                      }
                      else {
                      Temporary6 = ([99,111,109,112,49,57,49] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var _comp191_2852149089 = initStrut_2852130043(Temporary6, [49,101,109], [49,101,109], []);
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary7 = ([99,111,109,112,49,57,49] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || []);
                      }
                      else {
                      Temporary7 = ([99,111,109,112,49,57,49] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var comp191_2852149090 = rgcmp(toJSStr(Temporary7), _comp191_2852149089);
                      F.line = 131;
                      comp191_2852149090.slot = HEX3Aanonymous_2852149091;
                      F.line = 131;
                      var data_comp191_2852149108 = render_1644175063(comp191_2852149090);
                      F.line = 131;
                      addArgIter_1694499355(data_comp191_2852149108, ([100,97,116,97,45] || []).concat(comp191_2852149090.uniqCompId || []));
                      F.line = 131;
                      window.addEventListener('beforeunload', data_comp191_2852149108.exited);
                      F.line = 131;
                      window.addEventListener('pagehide', data_comp191_2852149108.pageHide);
                      F.line = 131;
                      window.addEventListener('pageshow', data_comp191_2852149108.pageShow);
                      Label8: {
                        F.line = 132;
                        var fmtRes_2852149211 = [mnewString(0)];
                        F.line = 132;
                        fmtRes_2852149211[0].push.apply(fmtRes_2852149211[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                        F.line = 132;
                        formatValue_704643243(fmtRes_2852149211, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                        F.line = 132;
                        fmtRes_2852149211[0].push.apply(fmtRes_2852149211[0], [59]);;
                      };
                      Label9: {
                        F.line = 133;
                        var fmtRes_2852149338 = [mnewString(0)];
                        F.line = 133;
                        formatValue_704643243(fmtRes_2852149338, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                      };
                      Temporary1 = tg2([100,105,118], [data_comp191_2852149108, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852149211[0], NTI33554449)}, NTI2852140187)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852149338[0], true, [], false)], false)], false)], true);
                      }
                      else {
                      if (inComponent_2852148567) {
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary10 = ([99,111,109,112,49,57,52] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || []);
                      }
                      else {
                      Temporary10 = ([99,111,109,112,49,57,52] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var _comp194_2852149504 = initStrut_2852130043(Temporary10, [49,101,109], [49,101,109], []);
                      F.line = 131;
                      if ((scopedCycleCounter_1644167270[0] == 0)) {
                      Temporary11 = ([99,111,109,112,49,57,52] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || []);
                      }
                      else {
                      Temporary11 = ([99,111,109,112,49,57,52] || []).concat(compCounter_2852148571 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852148570[cycleCounter_2852148570_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                      }
                      
                      var comp194_2852149505 = rgcmp(toJSStr(Temporary11), _comp194_2852149504);
                      F.line = 131;
                      comp194_2852149505.slot = HEX3Aanonymous_2852149506;
                      F.line = 131;
                      var data_comp194_2852149523 = render_1644175063(comp194_2852149505);
                      F.line = 131;
                      addArgIter_1694499355(data_comp194_2852149523, ([100,97,116,97,45] || []).concat(comp194_2852149505.uniqCompId || []));
                      F.line = 131;
                      window.addEventListener('beforeunload', data_comp194_2852149523.exited);
                      F.line = 131;
                      window.addEventListener('pagehide', data_comp194_2852149523.pageHide);
                      F.line = 131;
                      window.addEventListener('pageshow', data_comp194_2852149523.pageShow);
                      Label12: {
                        F.line = 132;
                        var fmtRes_2852149626 = [mnewString(0)];
                        F.line = 132;
                        fmtRes_2852149626[0].push.apply(fmtRes_2852149626[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                        F.line = 132;
                        formatValue_704643243(fmtRes_2852149626, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                        F.line = 132;
                        fmtRes_2852149626[0].push.apply(fmtRes_2852149626[0], [59]);;
                      };
                      Label13: {
                        F.line = 133;
                        var fmtRes_2852149753 = [mnewString(0)];
                        F.line = 133;
                        formatValue_704643243(fmtRes_2852149753, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                      };
                      Temporary1 = tg2([100,105,118], [data_comp194_2852149523, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852149626[0], NTI33554449)}, NTI2852140438)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852149753[0], true, [], false)], false)], false)], true);
                      }
                      else {
                        F.line = 131;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary14 = [99,111,109,112,49,57,55];
                        }
                        else {
                        Temporary14 = ([99,111,109,112,49,57,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp197_2852149919 = initStrut_2852130043(Temporary14, [49,101,109], [49,101,109], []);
                        F.line = 131;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary15 = [99,111,109,112,49,57,55];
                        }
                        else {
                        Temporary15 = ([99,111,109,112,49,57,55] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp197_2852149920 = rgcmp(toJSStr(Temporary15), _comp197_2852149919);
                        F.line = 131;
                        comp197_2852149920.slot = HEX3Aanonymous_2852149921;
                        F.line = 131;
                        var data_comp197_2852149938 = render_1644175063(comp197_2852149920);
                        F.line = 131;
                        addArgIter_1694499355(data_comp197_2852149938, ([100,97,116,97,45] || []).concat(comp197_2852149920.uniqCompId || []));
                        F.line = 131;
                        window.addEventListener('beforeunload', data_comp197_2852149938.exited);
                        F.line = 131;
                        window.addEventListener('pagehide', data_comp197_2852149938.pageHide);
                        F.line = 131;
                        window.addEventListener('pageshow', data_comp197_2852149938.pageShow);
                        Label16: {
                          F.line = 132;
                          var fmtRes_2852150041 = [mnewString(0)];
                          F.line = 132;
                          fmtRes_2852150041[0].push.apply(fmtRes_2852150041[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,104,101,105,103,104,116,58,32,49,48,48,37,59,32,102,111,110,116,45,115,105,122,101,58,32,50,48,48,37,59,32,98,111,114,100,101,114,45,108,101,102,116,58,32]);;
                          F.line = 132;
                          formatValue_704643243(fmtRes_2852150041, 0, [49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48], []);
                          F.line = 132;
                          fmtRes_2852150041[0].push.apply(fmtRes_2852150041[0], [59]);;
                        };
                        Label17: {
                          F.line = 133;
                          var fmtRes_2852150168 = [mnewString(0)];
                          F.line = 133;
                          formatValue_704643243(fmtRes_2852150168, 0, HEX5BHEX5D_2852137727(pack_2852135294, 1), []);
                        };
                      Temporary1 = tg2([100,105,118], [data_comp197_2852149938, tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852150041[0], NTI33554449)}, NTI2852140688)], 0), [tg1([104,50], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,108,105,110,101,59]}], 0), [tg4(fmtRes_2852150168[0], true, [], false)], false)], false)], true);
                      }
                      }}
                      var _res_2852150233 = Temporary1;
                      F.line = 293;
                      F.filename = "macro_utils.nim";
                      comp175_2852148564.slotData = _res_2852150233;
                      result_2852148572 = _res_2852150233;
                    framePtr = F.prev;

                    return result_2852148572;

                  }

              var result_2852135309 = null;

              var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
              framePtr = F;
                F.line = 130;
                F.filename = "layout.nim";
                F.line = 130;
                if ((inCycle_2852135306 && inComponent_2852135304)) {
                F.line = 125;
                var c64_2852135312 = 0;
                F.line = 125;
                var __r64_2852135320 = newSeq_2818572815(0);
                Label2: {
                  F.line = 124;
                  var d_2852135360 = [];
                  F.line = 239;
                  F.filename = "iterators.nim";
                  var colontmp__536881516 = [];
                  F.line = 124;
                  F.filename = "layout.nim";
                  colontmp__536881516 = HEX5BHEX5D_2852135334(pack_2852135294, HEX2EHEX2E_956301416(0, 2));
                  F.line = 241;
                  F.filename = "iterators.nim";
                  var i_536881517 = 0;
                  F.line = 242;
                  var L_536881518 = (colontmp__536881516).length;
                  Label3: {
                    F.line = 243;
                      Label4: while (true) {
                      if (!(i_536881517 < L_536881518)) break Label4;
                        F.line = 124;
                        F.filename = "layout.nim";
                        d_2852135360 = colontmp__536881516[chckIndx(i_536881517, 0, (colontmp__536881516).length - 1)];
                        F.line = 124;
                        c64_2852135312 = addInt(c64_2852135312, 1);
                        F.line = 1418;
                        F.filename = "macro_utils.nim";
                        scopedCycleCounter_1644167270[0] = c64_2852135312;
                        F.line = 124;
                        F.filename = "layout.nim";
                        F.line = 126;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary5 = ([99,111,109,112,54,56] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary5 = ([99,111,109,112,54,56] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp68_2852135466 = initProbGrid_2852128287(Temporary5, 2, 1.0, [], []);
                        F.line = 126;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary6 = ([99,111,109,112,54,56] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary6 = ([99,111,109,112,54,56] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp68_2852135467 = rgcmp(toJSStr(Temporary6), _comp68_2852135466);
                        F.line = 127;
                        comp68_2852135467.slot = HEX3Aanonymous_2852135468;
                        F.line = 127;
                        var data_comp68_2852137121 = render_1644175063(comp68_2852135467);
                        F.line = 127;
                        addArgIter_1694499355(data_comp68_2852137121, ([100,97,116,97,45] || []).concat(comp68_2852135467.uniqCompId || []));
                        F.line = 127;
                        window.addEventListener('beforeunload', data_comp68_2852137121.exited);
                        F.line = 127;
                        window.addEventListener('pagehide', data_comp68_2852137121.pageHide);
                        F.line = 127;
                        window.addEventListener('pageshow', data_comp68_2852137121.pageShow);
                        F.line = 129;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary7 = ([99,111,109,112,54,57] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary7 = ([99,111,109,112,54,57] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp69_2852137222 = initPageCut_2852131547(Temporary7);
                        F.line = 129;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary8 = ([99,111,109,112,54,57] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary8 = ([99,111,109,112,54,57] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c64_2852135312) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp69_2852137223 = rgcmp(toJSStr(Temporary8), _comp69_2852137222);
                        F.line = 129;
                        comp69_2852137223.slot = HEX3Aanonymous_2852137224;
                        F.line = 129;
                        var data_comp69_2852137241 = render_1644175063(comp69_2852137223);
                        F.line = 129;
                        addArgIter_1694499355(data_comp69_2852137241, ([100,97,116,97,45] || []).concat(comp69_2852137223.uniqCompId || []));
                        F.line = 129;
                        window.addEventListener('beforeunload', data_comp69_2852137241.exited);
                        F.line = 129;
                        window.addEventListener('pagehide', data_comp69_2852137241.pageHide);
                        F.line = 129;
                        window.addEventListener('pageshow', data_comp69_2852137241.pageShow);
                        __r64_2852135320.push(tg2([100,105,118], [data_comp68_2852137121, data_comp69_2852137241], true));;
                        F.line = 125;
                        scopedCycleCounter_1644167270[0] = 0;
                        F.line = 245;
                        F.filename = "iterators.nim";
                        i_536881517 = addInt(i_536881517, 1);
                        if (!(((colontmp__536881516).length == L_536881518))) {
                        F.line = 246;
                        failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                F.line = 131;
                F.filename = "layout.nim";
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary9 = ([99,111,109,112,55,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                }
                else {
                Temporary9 = ([99,111,109,112,55,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp73_2852137366 = initProbGrid_2852128287(Temporary9, 2, 1.0, [], []);
                F.line = 131;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary10 = ([99,111,109,112,55,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                }
                else {
                Temporary10 = ([99,111,109,112,55,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp73_2852137367 = rgcmp(toJSStr(Temporary10), _comp73_2852137366);
                F.line = 132;
                comp73_2852137367.slot = HEX3Aanonymous_2852137368;
                F.line = 132;
                var data_comp73_2852139041 = render_1644175063(comp73_2852137367);
                F.line = 132;
                addArgIter_1694499355(data_comp73_2852139041, ([100,97,116,97,45] || []).concat(comp73_2852137367.uniqCompId || []));
                F.line = 132;
                window.addEventListener('beforeunload', data_comp73_2852139041.exited);
                F.line = 132;
                window.addEventListener('pagehide', data_comp73_2852139041.pageHide);
                F.line = 132;
                window.addEventListener('pageshow', data_comp73_2852139041.pageShow);
                Temporary1 = tg2([100,105,118], [tg2([100,105,118], __r64_2852135320, true), data_comp73_2852139041], true);
                }
                else {
                if (inCycle_2852135306) {
                F.line = 125;
                var c98_2852139064 = 0;
                F.line = 125;
                var __r98_2852139072 = newSeq_2818572815(0);
                Label11: {
                  F.line = 124;
                  var d_2852139095 = [];
                  F.line = 239;
                  F.filename = "iterators.nim";
                  var colontmp__536881537 = [];
                  F.line = 124;
                  F.filename = "layout.nim";
                  colontmp__536881537 = HEX5BHEX5D_2852135334(pack_2852135294, HEX2EHEX2E_956301416(0, 2));
                  F.line = 241;
                  F.filename = "iterators.nim";
                  var i_536881538 = 0;
                  F.line = 242;
                  var L_536881539 = (colontmp__536881537).length;
                  Label12: {
                    F.line = 243;
                      Label13: while (true) {
                      if (!(i_536881538 < L_536881539)) break Label13;
                        F.line = 124;
                        F.filename = "layout.nim";
                        d_2852139095 = colontmp__536881537[chckIndx(i_536881538, 0, (colontmp__536881537).length - 1)];
                        F.line = 124;
                        c98_2852139064 = addInt(c98_2852139064, 1);
                        F.line = 1418;
                        F.filename = "macro_utils.nim";
                        scopedCycleCounter_1644167270[0] = c98_2852139064;
                        F.line = 124;
                        F.filename = "layout.nim";
                        F.line = 126;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary14 = ([99,111,109,112,49,48,50] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary14 = ([99,111,109,112,49,48,50] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp102_2852139201 = initProbGrid_2852128287(Temporary14, 2, 1.0, [], []);
                        F.line = 126;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary15 = ([99,111,109,112,49,48,50] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary15 = ([99,111,109,112,49,48,50] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp102_2852139202 = rgcmp(toJSStr(Temporary15), _comp102_2852139201);
                        F.line = 127;
                        comp102_2852139202.slot = HEX3Aanonymous_2852139203;
                        F.line = 127;
                        var data_comp102_2852140856 = render_1644175063(comp102_2852139202);
                        F.line = 127;
                        addArgIter_1694499355(data_comp102_2852140856, ([100,97,116,97,45] || []).concat(comp102_2852139202.uniqCompId || []));
                        F.line = 127;
                        window.addEventListener('beforeunload', data_comp102_2852140856.exited);
                        F.line = 127;
                        window.addEventListener('pagehide', data_comp102_2852140856.pageHide);
                        F.line = 127;
                        window.addEventListener('pageshow', data_comp102_2852140856.pageShow);
                        F.line = 129;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary16 = ([99,111,109,112,49,48,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary16 = ([99,111,109,112,49,48,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp103_2852140957 = initPageCut_2852131547(Temporary16);
                        F.line = 129;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary17 = ([99,111,109,112,49,48,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary17 = ([99,111,109,112,49,48,51] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c98_2852139064) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp103_2852140958 = rgcmp(toJSStr(Temporary17), _comp103_2852140957);
                        F.line = 129;
                        comp103_2852140958.slot = HEX3Aanonymous_2852140959;
                        F.line = 129;
                        var data_comp103_2852140976 = render_1644175063(comp103_2852140958);
                        F.line = 129;
                        addArgIter_1694499355(data_comp103_2852140976, ([100,97,116,97,45] || []).concat(comp103_2852140958.uniqCompId || []));
                        F.line = 129;
                        window.addEventListener('beforeunload', data_comp103_2852140976.exited);
                        F.line = 129;
                        window.addEventListener('pagehide', data_comp103_2852140976.pageHide);
                        F.line = 129;
                        window.addEventListener('pageshow', data_comp103_2852140976.pageShow);
                        __r98_2852139072.push(tg2([100,105,118], [data_comp102_2852140856, data_comp103_2852140976], true));;
                        F.line = 125;
                        scopedCycleCounter_1644167270[0] = 0;
                        F.line = 245;
                        F.filename = "iterators.nim";
                        i_536881538 = addInt(i_536881538, 1);
                        if (!(((colontmp__536881537).length == L_536881539))) {
                        F.line = 246;
                        failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                F.line = 131;
                F.filename = "layout.nim";
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary18 = ([99,111,109,112,49,48,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                }
                else {
                Temporary18 = ([99,111,109,112,49,48,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp107_2852141101 = initProbGrid_2852128287(Temporary18, 2, 1.0, [], []);
                F.line = 131;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary19 = ([99,111,109,112,49,48,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                }
                else {
                Temporary19 = ([99,111,109,112,49,48,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp107_2852141102 = rgcmp(toJSStr(Temporary19), _comp107_2852141101);
                F.line = 132;
                comp107_2852141102.slot = HEX3Aanonymous_2852141103;
                F.line = 132;
                var data_comp107_2852142772 = render_1644175063(comp107_2852141102);
                F.line = 132;
                addArgIter_1694499355(data_comp107_2852142772, ([100,97,116,97,45] || []).concat(comp107_2852141102.uniqCompId || []));
                F.line = 132;
                window.addEventListener('beforeunload', data_comp107_2852142772.exited);
                F.line = 132;
                window.addEventListener('pagehide', data_comp107_2852142772.pageHide);
                F.line = 132;
                window.addEventListener('pageshow', data_comp107_2852142772.pageShow);
                Temporary1 = tg2([100,105,118], [tg2([100,105,118], __r98_2852139072, true), data_comp107_2852142772], true);
                }
                else {
                if (inComponent_2852135304) {
                F.line = 125;
                var c132_2852142795 = 0;
                F.line = 125;
                var __r132_2852142803 = newSeq_2818572815(0);
                Label20: {
                  F.line = 124;
                  var d_2852142826 = [];
                  F.line = 239;
                  F.filename = "iterators.nim";
                  var colontmp__536881558 = [];
                  F.line = 124;
                  F.filename = "layout.nim";
                  colontmp__536881558 = HEX5BHEX5D_2852135334(pack_2852135294, HEX2EHEX2E_956301416(0, 2));
                  F.line = 241;
                  F.filename = "iterators.nim";
                  var i_536881559 = 0;
                  F.line = 242;
                  var L_536881560 = (colontmp__536881558).length;
                  Label21: {
                    F.line = 243;
                      Label22: while (true) {
                      if (!(i_536881559 < L_536881560)) break Label22;
                        F.line = 124;
                        F.filename = "layout.nim";
                        d_2852142826 = colontmp__536881558[chckIndx(i_536881559, 0, (colontmp__536881558).length - 1)];
                        F.line = 124;
                        c132_2852142795 = addInt(c132_2852142795, 1);
                        F.line = 1418;
                        F.filename = "macro_utils.nim";
                        scopedCycleCounter_1644167270[0] = c132_2852142795;
                        F.line = 124;
                        F.filename = "layout.nim";
                        F.line = 126;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary23 = ([99,111,109,112,49,51,54] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary23 = ([99,111,109,112,49,51,54] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp136_2852142932 = initProbGrid_2852128287(Temporary23, 2, 1.0, [], []);
                        F.line = 126;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary24 = ([99,111,109,112,49,51,54] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary24 = ([99,111,109,112,49,51,54] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp136_2852142933 = rgcmp(toJSStr(Temporary24), _comp136_2852142932);
                        F.line = 127;
                        comp136_2852142933.slot = HEX3Aanonymous_2852142934;
                        F.line = 127;
                        var data_comp136_2852144587 = render_1644175063(comp136_2852142933);
                        F.line = 127;
                        addArgIter_1694499355(data_comp136_2852144587, ([100,97,116,97,45] || []).concat(comp136_2852142933.uniqCompId || []));
                        F.line = 127;
                        window.addEventListener('beforeunload', data_comp136_2852144587.exited);
                        F.line = 127;
                        window.addEventListener('pagehide', data_comp136_2852144587.pageHide);
                        F.line = 127;
                        window.addEventListener('pageshow', data_comp136_2852144587.pageShow);
                        F.line = 129;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary25 = ([99,111,109,112,49,51,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary25 = ([99,111,109,112,49,51,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var _comp137_2852144688 = initPageCut_2852131547(Temporary25);
                        F.line = 129;
                        if ((scopedCycleCounter_1644167270[0] == 0)) {
                        Temporary26 = ([99,111,109,112,49,51,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                        }
                        else {
                        Temporary26 = ([99,111,109,112,49,51,55] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c132_2852142795) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                        }
                        
                        var comp137_2852144689 = rgcmp(toJSStr(Temporary26), _comp137_2852144688);
                        F.line = 129;
                        comp137_2852144689.slot = HEX3Aanonymous_2852144690;
                        F.line = 129;
                        var data_comp137_2852144707 = render_1644175063(comp137_2852144689);
                        F.line = 129;
                        addArgIter_1694499355(data_comp137_2852144707, ([100,97,116,97,45] || []).concat(comp137_2852144689.uniqCompId || []));
                        F.line = 129;
                        window.addEventListener('beforeunload', data_comp137_2852144707.exited);
                        F.line = 129;
                        window.addEventListener('pagehide', data_comp137_2852144707.pageHide);
                        F.line = 129;
                        window.addEventListener('pageshow', data_comp137_2852144707.pageShow);
                        __r132_2852142803.push(tg2([100,105,118], [data_comp136_2852144587, data_comp137_2852144707], true));;
                        F.line = 125;
                        scopedCycleCounter_1644167270[0] = 0;
                        F.line = 245;
                        F.filename = "iterators.nim";
                        i_536881559 = addInt(i_536881559, 1);
                        if (!(((colontmp__536881558).length == L_536881560))) {
                        F.line = 246;
                        failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                F.line = 131;
                F.filename = "layout.nim";
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary27 = ([99,111,109,112,49,52,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                }
                else {
                Temporary27 = ([99,111,109,112,49,52,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp141_2852144832 = initProbGrid_2852128287(Temporary27, 2, 1.0, [], []);
                F.line = 131;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary28 = ([99,111,109,112,49,52,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                }
                else {
                Temporary28 = ([99,111,109,112,49,52,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp141_2852144833 = rgcmp(toJSStr(Temporary28), _comp141_2852144832);
                F.line = 132;
                comp141_2852144833.slot = HEX3Aanonymous_2852144834;
                F.line = 132;
                var data_comp141_2852146503 = render_1644175063(comp141_2852144833);
                F.line = 132;
                addArgIter_1694499355(data_comp141_2852146503, ([100,97,116,97,45] || []).concat(comp141_2852144833.uniqCompId || []));
                F.line = 132;
                window.addEventListener('beforeunload', data_comp141_2852146503.exited);
                F.line = 132;
                window.addEventListener('pagehide', data_comp141_2852146503.pageHide);
                F.line = 132;
                window.addEventListener('pageshow', data_comp141_2852146503.pageShow);
                Temporary1 = tg2([100,105,118], [tg2([100,105,118], __r132_2852142803, true), data_comp141_2852146503], true);
                }
                else {
                  F.line = 125;
                  var c166_2852146526 = 0;
                  F.line = 125;
                  var __r166_2852146534 = newSeq_2818572815(0);
                  Label29: {
                    F.line = 124;
                    var d_2852146557 = [];
                    F.line = 239;
                    F.filename = "iterators.nim";
                    var colontmp__536881579 = [];
                    F.line = 124;
                    F.filename = "layout.nim";
                    colontmp__536881579 = HEX5BHEX5D_2852135334(pack_2852135294, HEX2EHEX2E_956301416(0, 2));
                    F.line = 241;
                    F.filename = "iterators.nim";
                    var i_536881580 = 0;
                    F.line = 242;
                    var L_536881581 = (colontmp__536881579).length;
                    Label30: {
                      F.line = 243;
                        Label31: while (true) {
                        if (!(i_536881580 < L_536881581)) break Label31;
                          F.line = 124;
                          F.filename = "layout.nim";
                          d_2852146557 = colontmp__536881579[chckIndx(i_536881580, 0, (colontmp__536881579).length - 1)];
                          F.line = 124;
                          c166_2852146526 = addInt(c166_2852146526, 1);
                          F.line = 1418;
                          F.filename = "macro_utils.nim";
                          scopedCycleCounter_1644167270[0] = c166_2852146526;
                          F.line = 124;
                          F.filename = "layout.nim";
                          F.line = 126;
                          if ((scopedCycleCounter_1644167270[0] == 0)) {
                          Temporary32 = ([99,111,109,112,49,55,48] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                          }
                          else {
                          Temporary32 = ([99,111,109,112,49,55,48] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                          }
                          
                          var _comp170_2852146663 = initProbGrid_2852128287(Temporary32, 2, 1.0, [], []);
                          F.line = 126;
                          if ((scopedCycleCounter_1644167270[0] == 0)) {
                          Temporary33 = ([99,111,109,112,49,55,48] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                          }
                          else {
                          Temporary33 = ([99,111,109,112,49,55,48] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                          }
                          
                          var comp170_2852146664 = rgcmp(toJSStr(Temporary33), _comp170_2852146663);
                          F.line = 127;
                          comp170_2852146664.slot = HEX3Aanonymous_2852146665;
                          F.line = 127;
                          var data_comp170_2852148318 = render_1644175063(comp170_2852146664);
                          F.line = 127;
                          addArgIter_1694499355(data_comp170_2852148318, ([100,97,116,97,45] || []).concat(comp170_2852146664.uniqCompId || []));
                          F.line = 127;
                          window.addEventListener('beforeunload', data_comp170_2852148318.exited);
                          F.line = 127;
                          window.addEventListener('pagehide', data_comp170_2852148318.pageHide);
                          F.line = 127;
                          window.addEventListener('pageshow', data_comp170_2852148318.pageShow);
                          F.line = 129;
                          if ((scopedCycleCounter_1644167270[0] == 0)) {
                          Temporary34 = ([99,111,109,112,49,55,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                          }
                          else {
                          Temporary34 = ([99,111,109,112,49,55,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                          }
                          
                          var _comp171_2852148419 = initPageCut_2852131547(Temporary34);
                          F.line = 129;
                          if ((scopedCycleCounter_1644167270[0] == 0)) {
                          Temporary35 = ([99,111,109,112,49,55,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || []);
                          }
                          else {
                          Temporary35 = ([99,111,109,112,49,55,49] || []).concat(compCounter_2852135308 || [],[95,95] || [],HEX24_369098760(c166_2852146526) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852135307[cycleCounter_2852135307_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                          }
                          
                          var comp171_2852148420 = rgcmp(toJSStr(Temporary35), _comp171_2852148419);
                          F.line = 129;
                          comp171_2852148420.slot = HEX3Aanonymous_2852148421;
                          F.line = 129;
                          var data_comp171_2852148438 = render_1644175063(comp171_2852148420);
                          F.line = 129;
                          addArgIter_1694499355(data_comp171_2852148438, ([100,97,116,97,45] || []).concat(comp171_2852148420.uniqCompId || []));
                          F.line = 129;
                          window.addEventListener('beforeunload', data_comp171_2852148438.exited);
                          F.line = 129;
                          window.addEventListener('pagehide', data_comp171_2852148438.pageHide);
                          F.line = 129;
                          window.addEventListener('pageshow', data_comp171_2852148438.pageShow);
                          __r166_2852146534.push(tg2([100,105,118], [data_comp170_2852148318, data_comp171_2852148438], true));;
                          F.line = 125;
                          scopedCycleCounter_1644167270[0] = 0;
                          F.line = 245;
                          F.filename = "iterators.nim";
                          i_536881580 = addInt(i_536881580, 1);
                          if (!(((colontmp__536881579).length == L_536881581))) {
                          F.line = 246;
                          failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  F.line = 131;
                  F.filename = "layout.nim";
                  if ((scopedCycleCounter_1644167270[0] == 0)) {
                  Temporary36 = [99,111,109,112,49,55,53];
                  }
                  else {
                  Temporary36 = ([99,111,109,112,49,55,53] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                  }
                  
                  var _comp175_2852148563 = initProbGrid_2852128287(Temporary36, 2, 1.0, [], []);
                  F.line = 131;
                  if ((scopedCycleCounter_1644167270[0] == 0)) {
                  Temporary37 = [99,111,109,112,49,55,53];
                  }
                  else {
                  Temporary37 = ([99,111,109,112,49,55,53] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                  }
                  
                  var comp175_2852148564 = rgcmp(toJSStr(Temporary37), _comp175_2852148563);
                  F.line = 132;
                  comp175_2852148564.slot = HEX3Aanonymous_2852148565;
                  F.line = 132;
                  var data_comp175_2852150234 = render_1644175063(comp175_2852148564);
                  F.line = 132;
                  addArgIter_1694499355(data_comp175_2852150234, ([100,97,116,97,45] || []).concat(comp175_2852148564.uniqCompId || []));
                  F.line = 132;
                  window.addEventListener('beforeunload', data_comp175_2852150234.exited);
                  F.line = 132;
                  window.addEventListener('pagehide', data_comp175_2852150234.pageHide);
                  F.line = 132;
                  window.addEventListener('pageshow', data_comp175_2852150234.pageShow);
                Temporary1 = tg2([100,105,118], [tg2([100,105,118], __r166_2852146534, true), data_comp175_2852150234], true);
                }
                }}
                var _res_2852150255 = Temporary1;
                F.line = 293;
                F.filename = "macro_utils.nim";
                comp63_2852135301.slotData = _res_2852150255;
                result_2852135309 = _res_2852150255;
              framePtr = F.prev;

              return result_2852135309;

            }

  var result_2852135049 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 133;
    F.filename = "layout.nim";
    F.line = 117;
    var packs_2852135177 = packsOf_2852135057(self_2852135048.defines.val, self_2852135048.perPage.val, false);
    F.line = 118;
    var toFill_2852135209 = subInt(self_2852135048.perPage.val, ((Temporary1 = HEX5BHEX5D_2852135198(packs_2852135177, 1), Temporary1)[0][Temporary1[1]]).length);
    Label2: {
      F.line = 120;
      var i_2852135234 = 0;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881504 = 1;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536881504 <= toFill_2852135209)) break Label4;
            F.line = 120;
            F.filename = "layout.nim";
            i_2852135234 = res_536881504;
            F.line = 120;
            (Temporary5 = HEX5BHEX5D_2852135198(packs_2852135177, 1), Temporary5)[0][Temporary5[1]].push([]);;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881504 = addInt(res_536881504, 1);
          }
      };
    };
    F.line = 130;
    F.filename = "layout.nim";
    var c62_2852135263 = 0;
    F.line = 130;
    var __r62_2852135271 = newSeq_2818572815(0);
    Label6: {
      F.line = 122;
      var pack_2852135294 = [];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881591 = 0;
      F.line = 242;
      var L_536881592 = (packs_2852135177).length;
      Label7: {
        F.line = 243;
          Label8: while (true) {
          if (!(i_536881591 < L_536881592)) break Label8;
            F.line = 122;
            F.filename = "layout.nim";
            pack_2852135294 = packs_2852135177[chckIndx(i_536881591, 0, (packs_2852135177).length - 1)];
            F.line = 122;
            c62_2852135263 = addInt(c62_2852135263, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c62_2852135263;
            F.line = 122;
            F.filename = "layout.nim";
            F.line = 123;
            if ((scopedCycleCounter_1644167270[0] == 0)) {
            Temporary9 = ([99,111,109,112,54,51] || []).concat(self_2852135048.uniqCompId || [],[95,95] || [],HEX24_369098760(c62_2852135263) || []);
            }
            else {
            Temporary9 = ([99,111,109,112,54,51] || []).concat(self_2852135048.uniqCompId || [],[95,95] || [],HEX24_369098760(c62_2852135263) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
            }
            
            var _comp63_2852135300 = initPages_2852126867(Temporary9, 1, [], []);
            F.line = 123;
            if ((scopedCycleCounter_1644167270[0] == 0)) {
            Temporary10 = ([99,111,109,112,54,51] || []).concat(self_2852135048.uniqCompId || [],[95,95] || [],HEX24_369098760(c62_2852135263) || []);
            }
            else {
            Temporary10 = ([99,111,109,112,54,51] || []).concat(self_2852135048.uniqCompId || [],[95,95] || [],HEX24_369098760(c62_2852135263) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
            }
            
            var comp63_2852135301 = rgcmp(toJSStr(Temporary10), _comp63_2852135300);
            F.line = 130;
            comp63_2852135301.slot = HEX3Aanonymous_2852135302;
            F.line = 130;
            var data_comp63_2852150256 = render_1644175063(comp63_2852135301);
            F.line = 130;
            addArgIter_1694499355(data_comp63_2852150256, ([100,97,116,97,45] || []).concat(comp63_2852135301.uniqCompId || []));
            F.line = 130;
            window.addEventListener('beforeunload', data_comp63_2852150256.exited);
            F.line = 130;
            window.addEventListener('pagehide', data_comp63_2852150256.pageHide);
            F.line = 130;
            window.addEventListener('pageshow', data_comp63_2852150256.pageShow);
            __r62_2852135271.push(tg2([100,105,118], [data_comp63_2852150256], true));;
            F.line = 130;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881591 = addInt(i_536881591, 1);
            if (!(((packs_2852135177).length == L_536881592))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2852135049 = tg2([100,105,118], [tg2([100,105,118], [], true), tg2([100,105,118], [], true), tg2([100,105,118], [], true), tg2([100,105,118], __r62_2852135271, true)], true);
  framePtr = F.prev;

  return result_2852135049;

}

function style_2852135044(self_2852135045) {
  var result_2852135046 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 113;
    F.filename = "layout.nim";
    result_2852135046 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852135046;

}

function render_2852150332(self_2852150333) {
  var result_2852150334 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 113;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852150333);;
    F.line = 113;
    currentComponent_1644168809[0] = nimCopy(null, self_2852150333.uniqCompId, NTI33554449);
    F.line = 113;
    script_2852135042(self_2852150333);
    if ((self_2852150333.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852150333.created(self_2852150333, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852150333.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852150333.beforeUpdated(self_2852150333, null);
    F.line = 113;
    F.filename = "layout.nim";
    result_2852150334 = renderTag_2852135047(self_2852150333);
    F.line = 113;
    tgadd(result_2852150334, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852135044(self_2852150333))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852150333.rendered(self_2852150333, null);
    F.line = 113;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852150334;

}

function script_3019909329(self_3019909330) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019909334(self_3019909335) {
  var result_3019909336 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "base24.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3019909655 = [0];
    result_3019909336 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [119,105,100,116,104,58,32,49,48,48,118,119,59]}], 0), [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [99,108,97,115,115], Field1: [110,111,45,115,99,114,101,101,110]}, {Field0: [115,116,121,108,101], Field1: makeNimstrLit("position: absolute; right: 0.25in; border-style: inset; font-size: 70%; z-index: 2; background-color: var(--paper-color);")}], 0), [self_3019909335.slot(self_3019909335, true, [85,82,75,101,121], false, cclCounter_3019909655, 0, self_3019909335.uniqCompId)], false)], false)], true);
  framePtr = F.prev;

  return result_3019909336;

}

function style_3019909331(self_3019909332) {
  var result_3019909333 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 107;
    F.filename = "base24.nim";
    result_3019909333 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019909333;

}

function render_3019909718(self_3019909719) {
  var result_3019909720 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 107;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019909719);;
    F.line = 107;
    currentComponent_1644168809[0] = nimCopy(null, self_3019909719.uniqCompId, NTI33554449);
    F.line = 107;
    script_3019909329(self_3019909719);
    if ((self_3019909719.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019909719.created(self_3019909719, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019909719.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019909719.beforeUpdated(self_3019909719, null);
    F.line = 107;
    F.filename = "base24.nim";
    result_3019909720 = renderTag_3019909334(self_3019909719);
    F.line = 107;
    tgadd(result_3019909720, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019909331(self_3019909719))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019909719.rendered(self_3019909719, null);
    F.line = 107;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019909720;

}

function script_2852152505(self_2852152506) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function reset_2785017878(c_2785017879) {
  var F = {procname: "numbering.reset", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/numbering.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "numbering.nim";
    c_2785017879.prob = 0;
    F.line = 22;
    c_2785017879.part = 0;
    F.line = 23;
    c_2785017879.subpart = 0;
    F.line = 24;
    c_2785017879.answerchoice = 0;
  framePtr = F.prev;

  
}

function resetCounts_2785017948() {
  var F = {procname: "numbering.resetCounts", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/numbering.nim", line: 0};
  framePtr = F;
    F.line = 57;
    F.filename = "numbering.nim";
    reset_2785017878(pCount_2785017945[0]);
    F.line = 58;
    reset_2785017878(eCount_2785017946[0]);
    F.line = 59;
    reset_2785017878(sCount_2785017947[0]);
  framePtr = F.prev;

  
}

function printClass_2852131900(v_2852131901) {
  var result_2852131902 = [];

  var F = {procname: "layout.printClass", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 94;
    F.filename = "layout.nim";
    result_2852131902 = nimCopy(null, [110,111,45,115,99,114,101,101,110,45,114,101,110,100,101,114], NTI33554449);
    Label1: {
      F.line = 95;
      var i_2852131906 = 0;
      F.line = 13;
      F.filename = "iterators.nim";
      var i_536881619 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_536881619 < (v_2852131901).length)) break Label3;
            F.line = 95;
            F.filename = "layout.nim";
            i_2852131906 = v_2852131901[chckIndx(i_536881619, 0, (v_2852131901).length - 1)];
            if (!((i_2852131906 == 1))) {
            F.line = 97;
            break BeforeRet;
            }
            
            F.line = 16;
            F.filename = "iterators.nim";
            i_536881619 = addInt(i_536881619, 1);
          }
      };
    };
    F.line = 98;
    F.filename = "layout.nim";
    result_2852131902 = nimCopy(null, [], NTI33554449);
  };
  framePtr = F.prev;

  return result_2852131902;

}

function renderTag_2852152510(self_2852152511) {
            var Temporary4;
            var Temporary5;
            var Temporary6;
            
function HEX3Aanonymous_2852152863(scopeSelf_2852152864, inComponent_2852152865, compName_2852152866, inCycle_2852152867, cycleCounter_2852152868, cycleCounter_2852152868_Idx, compCounter_2852152869) {
                var Temporary1;

              var result_2852152870 = null;

              var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
              framePtr = F;
                F.line = 158;
                F.filename = "layout.nim";
                F.line = 158;
                if ((inCycle_2852152867 && inComponent_2852152865)) {
                Temporary1 = tg2([100,105,118], [], true);
                }
                else {
                if (inCycle_2852152867) {
                Temporary1 = tg2([100,105,118], [], true);
                }
                else {
                if (inComponent_2852152865) {
                Temporary1 = tg2([100,105,118], [], true);
                }
                else {
                Temporary1 = tg2([100,105,118], [], true);
                }
                }}
                var _res_2852152879 = Temporary1;
                F.line = 293;
                F.filename = "macro_utils.nim";
                comp218_2852152862.slotData = _res_2852152879;
                result_2852152870 = _res_2852152879;
              framePtr = F.prev;

              return result_2852152870;

            }

  var result_2852152512 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 160;
    F.filename = "layout.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_2852152611 = [0];
    F.line = 156;
    F.filename = "layout.nim";
    resetCounts_2785017948();
    F.line = 157;
    var c217_2852152632 = 0;
    F.line = 157;
    var __r217_2852152640 = newSeq_2818572815(0);
    Label1: {
      F.line = 157;
      var i_2852152645 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881615 = 0;
      F.line = 157;
      F.filename = "layout.nim";
      colontmp__536881615 = subInt(self_2852152511.n.val, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881616 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536881616 <= colontmp__536881615)) break Label3;
            F.line = 157;
            F.filename = "layout.nim";
            i_2852152645 = res_536881616;
            F.line = 157;
            c217_2852152632 = addInt(c217_2852152632, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c217_2852152632;
            F.line = 157;
            F.filename = "layout.nim";
            if (self_2852152511.withinPage.val) {
            F.line = 158;
            if ((scopedCycleCounter_1644167270[0] == 0)) {
            Temporary5 = ([99,111,109,112,50,49,56] || []).concat(self_2852152511.uniqCompId || [],[95,95] || [],HEX24_369098760(c217_2852152632) || []);
            }
            else {
            Temporary5 = ([99,111,109,112,50,49,56] || []).concat(self_2852152511.uniqCompId || [],[95,95] || [],HEX24_369098760(c217_2852152632) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
            }
            
            var _comp218_2852152861 = initPageCut_2852131547(Temporary5);
            F.line = 158;
            if ((scopedCycleCounter_1644167270[0] == 0)) {
            Temporary6 = ([99,111,109,112,50,49,56] || []).concat(self_2852152511.uniqCompId || [],[95,95] || [],HEX24_369098760(c217_2852152632) || []);
            }
            else {
            Temporary6 = ([99,111,109,112,50,49,56] || []).concat(self_2852152511.uniqCompId || [],[95,95] || [],HEX24_369098760(c217_2852152632) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
            }
            
            var comp218_2852152862 = rgcmp(toJSStr(Temporary6), _comp218_2852152861);
            F.line = 158;
            comp218_2852152862.slot = HEX3Aanonymous_2852152863;
            F.line = 158;
            var data_comp218_2852152880 = render_1644175063(comp218_2852152862);
            F.line = 158;
            addArgIter_1694499355(data_comp218_2852152880, ([100,97,116,97,45] || []).concat(comp218_2852152862.uniqCompId || []));
            F.line = 158;
            window.addEventListener('beforeunload', data_comp218_2852152880.exited);
            F.line = 158;
            window.addEventListener('pagehide', data_comp218_2852152880.pageHide);
            F.line = 158;
            window.addEventListener('pageshow', data_comp218_2852152880.pageShow);
            Temporary4 = tg2([100,105,118], [data_comp218_2852152880], true);
            }
            else {
            Temporary4 = null;
            }
            
            F.line = 574;
            F.filename = "components.nim";
            var cclCounter_2852152999 = [c217_2852152632];
            F.line = 160;
            F.filename = "layout.nim";
            resetCounts_2785017948();
            __r217_2852152640.push(tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: printClass_2852131900(new Int32Array([2]))}, NTI2852142378), nimCopy(null, {Field0: [115,116,121,108,101], Field1: [100,105,115,112,108,97,121,58,32,99,111,110,116,101,110,116,115,59]}, NTI2852142378)], 0), [Temporary4, self_2852152511.slot(self_2852152511, true, [67,111,112,105,101,115], true, cclCounter_2852152999, 0, self_2852152511.uniqCompId), tg2([100,105,118], [], true)], false)], true));;
            F.line = 157;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881616 = addInt(res_536881616, 1);
          }
      };
    };
    result_2852152512 = tg2([100,105,118], [self_2852152511.slot(self_2852152511, true, [67,111,112,105,101,115], false, cclCounter_2852152611, 0, self_2852152511.uniqCompId), tg2([100,105,118], [], true), tg2([100,105,118], __r217_2852152640, true)], true);
  framePtr = F.prev;

  return result_2852152512;

}

function style_2852152507(self_2852152508) {
  var result_2852152509 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 151;
    F.filename = "layout.nim";
    result_2852152509 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852152509;

}

function render_2852153103(self_2852153104) {
  var result_2852153105 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 151;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852153104);;
    F.line = 151;
    currentComponent_1644168809[0] = nimCopy(null, self_2852153104.uniqCompId, NTI33554449);
    F.line = 151;
    script_2852152505(self_2852153104);
    if ((self_2852153104.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852153104.created(self_2852153104, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852153104.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852153104.beforeUpdated(self_2852153104, null);
    F.line = 151;
    F.filename = "layout.nim";
    result_2852153105 = renderTag_2852152510(self_2852153104);
    F.line = 151;
    tgadd(result_2852153105, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852152507(self_2852153104))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852153104.rendered(self_2852153104, null);
    F.line = 151;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852153105;

}

function script_2852150635(self_2852150636) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_2852150640(self_2852150641) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_2852150745(scopeSelf_2852150746, inComponent_2852150747, compName_2852150748, inCycle_2852150749, cycleCounter_2852150750, cycleCounter_2852150750_Idx, compCounter_2852150751) {
        var Temporary1;

      var result_2852150752 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
        F.line = 144;
        F.filename = "layout.nim";
        F.line = 144;
        if ((inCycle_2852150749 && inComponent_2852150747)) {
        Label2: {
          F.line = 144;
          var fmtRes_2852150857 = [mnewString(0)];
          F.line = 144;
          fmtRes_2852150857[0].push.apply(fmtRes_2852150857[0], [102,108,101,120,58,32,49,32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,103,114,105,100,59,32,103,114,105,100,45,116,101,109,112,108,97,116,101,45,99,111,108,117,109,110,115,58,32,114,101,112,101,97,116,40]);;
          F.line = 144;
          formatValue_2852127860(fmtRes_2852150857, 0, self_2852150641.ncols, []);
          F.line = 144;
          fmtRes_2852150857[0].push.apply(fmtRes_2852150857[0], [44,32,49,102,114,41,59,32,103,114,105,100,45,103,97,112,58,32,48,37,59,32,103,114,105,100,45,97,117,116,111,45,114,111,119,115,58,32,97,117,116,111,59,32]);;
          F.line = 144;
          formatValue_2785020246(fmtRes_2852150857, 0, self_2852150641.css, []);
        };
        F.line = 146;
        var c204_2852150896 = 0;
        F.line = 146;
        var __r204_2852150904 = newSeq_2818572815(0);
        Label3: {
          F.line = 145;
          var tr_2852150908 = null;
          F.line = 241;
          F.filename = "iterators.nim";
          var i_536881624 = 0;
          F.line = 242;
          var L_536881625 = (self_2852150641.content.val).length;
          Label4: {
            F.line = 243;
              Label5: while (true) {
              if (!(i_536881624 < L_536881625)) break Label5;
                F.line = 145;
                F.filename = "layout.nim";
                tr_2852150908 = self_2852150641.content.val[chckIndx(i_536881624, 0, (self_2852150641.content.val).length - 1)];
                F.line = 145;
                c204_2852150896 = addInt(c204_2852150896, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c204_2852150896;
                F.line = 145;
                F.filename = "layout.nim";
                Label6: {
                  F.line = 146;
                  var fmtRes_2852151016 = [mnewString(0)];
                  F.line = 146;
                  fmtRes_2852151016[0].push.apply(fmtRes_2852151016[0], [100,105,115,112,108,97,121,58,32,102,108,101,120,58,32,102,108,101,120,45,100,105,114,101,99,116,105,111,110,58,32,99,111,108,117,109,110,59,32,112,97,100,100,105,110,103,58,32,49,101,109,59,32]);;
                  F.line = 146;
                  formatValue_704643243(fmtRes_2852151016, 0, [98,111,114,100,101,114,58,32,49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48,59], []);
                };
                __r204_2852150904.push(tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852151016[0], NTI33554449)}, NTI2852141287)], 0), [tr_2852150908], false)], true));;
                F.line = 146;
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 245;
                F.filename = "iterators.nim";
                i_536881624 = addInt(i_536881624, 1);
                if (!(((self_2852150641.content.val).length == L_536881625))) {
                F.line = 246;
                failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Temporary1 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852150857[0], NTI33554449)}, NTI2852141191)], 0), [tg2([100,105,118], __r204_2852150904, true)], false)], true);
        }
        else {
        if (inCycle_2852150749) {
        Label7: {
          F.line = 144;
          F.filename = "layout.nim";
          var fmtRes_2852151218 = [mnewString(0)];
          F.line = 144;
          fmtRes_2852151218[0].push.apply(fmtRes_2852151218[0], [102,108,101,120,58,32,49,32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,103,114,105,100,59,32,103,114,105,100,45,116,101,109,112,108,97,116,101,45,99,111,108,117,109,110,115,58,32,114,101,112,101,97,116,40]);;
          F.line = 144;
          formatValue_2852127860(fmtRes_2852151218, 0, self_2852150641.ncols, []);
          F.line = 144;
          fmtRes_2852151218[0].push.apply(fmtRes_2852151218[0], [44,32,49,102,114,41,59,32,103,114,105,100,45,103,97,112,58,32,48,37,59,32,103,114,105,100,45,97,117,116,111,45,114,111,119,115,58,32,97,117,116,111,59,32]);;
          F.line = 144;
          formatValue_2785020246(fmtRes_2852151218, 0, self_2852150641.css, []);
        };
        F.line = 146;
        var c207_2852151257 = 0;
        F.line = 146;
        var __r207_2852151265 = newSeq_2818572815(0);
        Label8: {
          F.line = 145;
          var tr_2852151269 = null;
          F.line = 241;
          F.filename = "iterators.nim";
          var i_536881630 = 0;
          F.line = 242;
          var L_536881631 = (self_2852150641.content.val).length;
          Label9: {
            F.line = 243;
              Label10: while (true) {
              if (!(i_536881630 < L_536881631)) break Label10;
                F.line = 145;
                F.filename = "layout.nim";
                tr_2852151269 = self_2852150641.content.val[chckIndx(i_536881630, 0, (self_2852150641.content.val).length - 1)];
                F.line = 145;
                c207_2852151257 = addInt(c207_2852151257, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c207_2852151257;
                F.line = 145;
                F.filename = "layout.nim";
                Label11: {
                  F.line = 146;
                  var fmtRes_2852151377 = [mnewString(0)];
                  F.line = 146;
                  fmtRes_2852151377[0].push.apply(fmtRes_2852151377[0], [100,105,115,112,108,97,121,58,32,102,108,101,120,58,32,102,108,101,120,45,100,105,114,101,99,116,105,111,110,58,32,99,111,108,117,109,110,59,32,112,97,100,100,105,110,103,58,32,49,101,109,59,32]);;
                  F.line = 146;
                  formatValue_704643243(fmtRes_2852151377, 0, [98,111,114,100,101,114,58,32,49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48,59], []);
                };
                __r207_2852151265.push(tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852151377[0], NTI33554449)}, NTI2852141517)], 0), [tr_2852151269], false)], true));;
                F.line = 146;
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 245;
                F.filename = "iterators.nim";
                i_536881630 = addInt(i_536881630, 1);
                if (!(((self_2852150641.content.val).length == L_536881631))) {
                F.line = 246;
                failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Temporary1 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852151218[0], NTI33554449)}, NTI2852141421)], 0), [tg2([100,105,118], __r207_2852151265, true)], false)], true);
        }
        else {
        if (inComponent_2852150747) {
        Label12: {
          F.line = 144;
          F.filename = "layout.nim";
          var fmtRes_2852151579 = [mnewString(0)];
          F.line = 144;
          fmtRes_2852151579[0].push.apply(fmtRes_2852151579[0], [102,108,101,120,58,32,49,32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,103,114,105,100,59,32,103,114,105,100,45,116,101,109,112,108,97,116,101,45,99,111,108,117,109,110,115,58,32,114,101,112,101,97,116,40]);;
          F.line = 144;
          formatValue_2852127860(fmtRes_2852151579, 0, self_2852150641.ncols, []);
          F.line = 144;
          fmtRes_2852151579[0].push.apply(fmtRes_2852151579[0], [44,32,49,102,114,41,59,32,103,114,105,100,45,103,97,112,58,32,48,37,59,32,103,114,105,100,45,97,117,116,111,45,114,111,119,115,58,32,97,117,116,111,59,32]);;
          F.line = 144;
          formatValue_2785020246(fmtRes_2852151579, 0, self_2852150641.css, []);
        };
        F.line = 146;
        var c210_2852151618 = 0;
        F.line = 146;
        var __r210_2852151626 = newSeq_2818572815(0);
        Label13: {
          F.line = 145;
          var tr_2852151630 = null;
          F.line = 241;
          F.filename = "iterators.nim";
          var i_536881636 = 0;
          F.line = 242;
          var L_536881637 = (self_2852150641.content.val).length;
          Label14: {
            F.line = 243;
              Label15: while (true) {
              if (!(i_536881636 < L_536881637)) break Label15;
                F.line = 145;
                F.filename = "layout.nim";
                tr_2852151630 = self_2852150641.content.val[chckIndx(i_536881636, 0, (self_2852150641.content.val).length - 1)];
                F.line = 145;
                c210_2852151618 = addInt(c210_2852151618, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c210_2852151618;
                F.line = 145;
                F.filename = "layout.nim";
                Label16: {
                  F.line = 146;
                  var fmtRes_2852151738 = [mnewString(0)];
                  F.line = 146;
                  fmtRes_2852151738[0].push.apply(fmtRes_2852151738[0], [100,105,115,112,108,97,121,58,32,102,108,101,120,58,32,102,108,101,120,45,100,105,114,101,99,116,105,111,110,58,32,99,111,108,117,109,110,59,32,112,97,100,100,105,110,103,58,32,49,101,109,59,32]);;
                  F.line = 146;
                  formatValue_704643243(fmtRes_2852151738, 0, [98,111,114,100,101,114,58,32,49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48,59], []);
                };
                __r210_2852151626.push(tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852151738[0], NTI33554449)}, NTI2852141747)], 0), [tr_2852151630], false)], true));;
                F.line = 146;
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 245;
                F.filename = "iterators.nim";
                i_536881636 = addInt(i_536881636, 1);
                if (!(((self_2852150641.content.val).length == L_536881637))) {
                F.line = 246;
                failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        Temporary1 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852151579[0], NTI33554449)}, NTI2852141651)], 0), [tg2([100,105,118], __r210_2852151626, true)], false)], true);
        }
        else {
          Label17: {
            F.line = 144;
            F.filename = "layout.nim";
            var fmtRes_2852151940 = [mnewString(0)];
            F.line = 144;
            fmtRes_2852151940[0].push.apply(fmtRes_2852151940[0], [102,108,101,120,58,32,49,32,48,32,48,59,32,100,105,115,112,108,97,121,58,32,103,114,105,100,59,32,103,114,105,100,45,116,101,109,112,108,97,116,101,45,99,111,108,117,109,110,115,58,32,114,101,112,101,97,116,40]);;
            F.line = 144;
            formatValue_2852127860(fmtRes_2852151940, 0, self_2852150641.ncols, []);
            F.line = 144;
            fmtRes_2852151940[0].push.apply(fmtRes_2852151940[0], [44,32,49,102,114,41,59,32,103,114,105,100,45,103,97,112,58,32,48,37,59,32,103,114,105,100,45,97,117,116,111,45,114,111,119,115,58,32,97,117,116,111,59,32]);;
            F.line = 144;
            formatValue_2785020246(fmtRes_2852151940, 0, self_2852150641.css, []);
          };
          F.line = 146;
          var c213_2852151979 = 0;
          F.line = 146;
          var __r213_2852151987 = newSeq_2818572815(0);
          Label18: {
            F.line = 145;
            var tr_2852151991 = null;
            F.line = 241;
            F.filename = "iterators.nim";
            var i_536881642 = 0;
            F.line = 242;
            var L_536881643 = (self_2852150641.content.val).length;
            Label19: {
              F.line = 243;
                Label20: while (true) {
                if (!(i_536881642 < L_536881643)) break Label20;
                  F.line = 145;
                  F.filename = "layout.nim";
                  tr_2852151991 = self_2852150641.content.val[chckIndx(i_536881642, 0, (self_2852150641.content.val).length - 1)];
                  F.line = 145;
                  c213_2852151979 = addInt(c213_2852151979, 1);
                  F.line = 1418;
                  F.filename = "macro_utils.nim";
                  scopedCycleCounter_1644167270[0] = c213_2852151979;
                  F.line = 145;
                  F.filename = "layout.nim";
                  Label21: {
                    F.line = 146;
                    var fmtRes_2852152099 = [mnewString(0)];
                    F.line = 146;
                    fmtRes_2852152099[0].push.apply(fmtRes_2852152099[0], [100,105,115,112,108,97,121,58,32,102,108,101,120,58,32,102,108,101,120,45,100,105,114,101,99,116,105,111,110,58,32,99,111,108,117,109,110,59,32,112,97,100,100,105,110,103,58,32,49,101,109,59,32]);;
                    F.line = 146;
                    formatValue_704643243(fmtRes_2852152099, 0, [98,111,114,100,101,114,58,32,49,112,120,32,100,97,115,104,101,100,32,35,48,48,48,48,48,48,59], []);
                  };
                  __r213_2852151987.push(tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852152099[0], NTI33554449)}, NTI2852141977)], 0), [tr_2852151991], false)], true));;
                  F.line = 146;
                  scopedCycleCounter_1644167270[0] = 0;
                  F.line = 245;
                  F.filename = "iterators.nim";
                  i_536881642 = addInt(i_536881642, 1);
                  if (!(((self_2852150641.content.val).length == L_536881643))) {
                  F.line = 246;
                  failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary1 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_2852151940[0], NTI33554449)}, NTI2852141881)], 0), [tg2([100,105,118], __r213_2852151987, true)], false)], true);
        }
        }}
        var _res_2852152197 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp203_2852150744.slotData = _res_2852152197;
        result_2852150752 = _res_2852152197;
      framePtr = F.prev;

      return result_2852150752;

    }

  var result_2852150642 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 147;
    F.filename = "layout.nim";
    F.line = 144;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,50,48,51] || []).concat(self_2852150641.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,50,48,51] || []).concat(self_2852150641.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp203_2852150743 = initPages_2852126867(Temporary1, 1, [], []);
    F.line = 144;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,50,48,51] || []).concat(self_2852150641.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,50,48,51] || []).concat(self_2852150641.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp203_2852150744 = rgcmp(toJSStr(Temporary2), _comp203_2852150743);
    F.line = 144;
    comp203_2852150744.slot = HEX3Aanonymous_2852150745;
    F.line = 144;
    var data_comp203_2852152198 = render_1644175063(comp203_2852150744);
    F.line = 144;
    addArgIter_1694499355(data_comp203_2852152198, ([100,97,116,97,45] || []).concat(comp203_2852150744.uniqCompId || []));
    F.line = 144;
    window.addEventListener('beforeunload', data_comp203_2852152198.exited);
    F.line = 144;
    window.addEventListener('pagehide', data_comp203_2852152198.pageHide);
    F.line = 144;
    window.addEventListener('pageshow', data_comp203_2852152198.pageShow);
    result_2852150642 = tg2([100,105,118], [data_comp203_2852152198], true);
  framePtr = F.prev;

  return result_2852150642;

}

function style_2852150637(self_2852150638) {
  var result_2852150639 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "layout.nim";
    result_2852150639 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852150639;

}

function render_2852152219(self_2852152220) {
  var result_2852152221 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 137;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852152220);;
    F.line = 137;
    currentComponent_1644168809[0] = nimCopy(null, self_2852152220.uniqCompId, NTI33554449);
    F.line = 137;
    script_2852150635(self_2852152220);
    if ((self_2852152220.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852152220.created(self_2852152220, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852152220.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852152220.beforeUpdated(self_2852152220, null);
    F.line = 137;
    F.filename = "layout.nim";
    result_2852152221 = renderTag_2852150640(self_2852152220);
    F.line = 137;
    tgadd(result_2852152221, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852150637(self_2852152220))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852152220.rendered(self_2852152220, null);
    F.line = 137;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852152221;

}

function script_3019899141(self_3019899142) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019899146(self_3019899147) {
  var result_3019899148 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 14;
    F.filename = "base24.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3019899855 = [0];
    result_3019899148 = tg2([100,105,118], [tg2([104,101,97,100,101,114], [tg2([104,49], [tg4(HEX24_2785019199(self_3019899147.title), true, [], false)], false), tg2([104,50], [tg2([115,116,114,111,110,103], [self_3019899147.slot(self_3019899147, true, [87,111,114,107,115,104,101,101,116,72,101,97,100,101,114], false, cclCounter_3019899855, 0, self_3019899147.uniqCompId)], false)], false)], false)], true);
  framePtr = F.prev;

  return result_3019899148;

}

function style_3019899143(self_3019899144) {
  var result_3019899145 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 9;
    F.filename = "base24.nim";
    result_3019899145 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019899145;

}

function render_3019899938(self_3019899939) {
  var result_3019899940 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 9;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019899939);;
    F.line = 9;
    currentComponent_1644168809[0] = nimCopy(null, self_3019899939.uniqCompId, NTI33554449);
    F.line = 9;
    script_3019899141(self_3019899939);
    if ((self_3019899939.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019899939.created(self_3019899939, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019899939.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019899939.beforeUpdated(self_3019899939, null);
    F.line = 9;
    F.filename = "base24.nim";
    result_3019899940 = renderTag_3019899146(self_3019899939);
    F.line = 9;
    tgadd(result_3019899940, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019899143(self_3019899939))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019899939.rendered(self_3019899939, null);
    F.line = 9;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019899940;

}

function script_3036677636(self_3036677637) {
  var F = {procname: "slides24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initIcon_2835349526(uniqCompId_2835349527, stem_2835349528, scale_2835349529, css_2835349530, class_2835349531) {
    
function HEX3Aanonymous_2835349564(self_2835349565, ev_2835349566) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2835349567(self_2835349568, ev_2835349569) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2835349570(self_2835349571, ev_2835349572) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2835349573(self_2835349574, ev_2835349575) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2835349576(self_2835349577, ev_2835349578) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2835349579(self_2835349580, ev_2835349581) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2835349582(self_2835349583, ev_2835349584) {
      var F = {procname: "initIcon.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/images.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2835349532 = null;

  var F = {procname: "images.initIcon", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 9;
    F.filename = "images.nim";
    var self_2835349563 = {uniqCompId: nimCopy(null, uniqCompId_2835349527, NTI33554449), stem: remember_2785019842(stem_2835349528), scale: remember_2835349536(scale_2835349529), css: remember_2785019842(css_2835349530), class: remember_2785019842(class_2835349531), m_type: NTI2835349510, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 13;
    self_2835349563.beforeUpdated = HEX3Aanonymous_2835349564;
    F.line = 13;
    self_2835349563.pageShow = HEX3Aanonymous_2835349567;
    F.line = 13;
    self_2835349563.pageHide = HEX3Aanonymous_2835349570;
    F.line = 13;
    self_2835349563.rendered = HEX3Aanonymous_2835349573;
    F.line = 13;
    self_2835349563.exited = HEX3Aanonymous_2835349576;
    F.line = 13;
    self_2835349563.created = HEX3Aanonymous_2835349579;
    F.line = 13;
    self_2835349563.updated = HEX3Aanonymous_2835349582;
    if ((scale_2835349529 == 1.0)) {
    F.line = 7;
    self_2835349563.scale = remember_2835349536(scale_2835349529);
    }
    
    if (eqStrings(css_2835349530, [])) {
    F.line = 8;
    self_2835349563.css = remember_2785019842(css_2835349530);
    }
    
    if (eqStrings(class_2835349531, [])) {
    F.line = 9;
    self_2835349563.class = remember_2785019842(class_2835349531);
    }
    
    F.line = 9;
    createdComponentsList_1644168819[0].push(self_2835349563);;
    F.line = 779;
    F.filename = "components.nim";
    result_2835349532 = self_2835349563;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2835349532;

}

function renderTag_3036677641(self_3036677642) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3036677965(scopeSelf_3036677966, inComponent_3036677967, compName_3036677968, inCycle_3036677969, cycleCounter_3036677970, cycleCounter_3036677970_Idx, compCounter_3036677971) {
        var Temporary1;

      var result_3036677972 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
        F.line = 29;
        F.filename = "slides24.nim";
        F.line = 29;
        if ((inCycle_3036677969 && inComponent_3036677967)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_3036677969) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_3036677967) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_3036677981 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp350_3036677964.slotData = _res_3036677981;
        result_3036677972 = _res_3036677981;
      framePtr = F.prev;

      return result_3036677972;

    }

  var result_3036677643 = null;

  var F = {procname: "slides24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "slides24.nim";
    F.line = 29;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,53,48] || []).concat(self_3036677642.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,53,48] || []).concat(self_3036677642.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp350_3036677963 = initIcon_2835349526(Temporary1, [99,114,111,115,98,121,72,105,103,104,47,115,117,99,99,101,115,115,67,114,105,116,101,114,105,97], 2.0, [], []);
    F.line = 29;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,53,48] || []).concat(self_3036677642.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,53,48] || []).concat(self_3036677642.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp350_3036677964 = rgcmp(toJSStr(Temporary2), _comp350_3036677963);
    F.line = 29;
    comp350_3036677964.slot = HEX3Aanonymous_3036677965;
    F.line = 29;
    var data_comp350_3036677982 = render_1644175063(comp350_3036677964);
    F.line = 29;
    addArgIter_1694499355(data_comp350_3036677982, ([100,97,116,97,45] || []).concat(comp350_3036677964.uniqCompId || []));
    F.line = 29;
    window.addEventListener('beforeunload', data_comp350_3036677982.exited);
    F.line = 29;
    window.addEventListener('pagehide', data_comp350_3036677982.pageHide);
    F.line = 29;
    window.addEventListener('pageshow', data_comp350_3036677982.pageShow);
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3036678101 = [0];
    result_3036677643 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("flex: 1 0 0; background-color: white; font-size: 1.5vw; padding: 1vw; border-radius: 4vw;")}], 0), [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [data_comp350_3036677982], false), self_3036677642.slot(self_3036677642, true, [83,108,105,100,101,67,114,105,116,101,114,105,97], false, cclCounter_3036678101, 0, self_3036677642.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_3036677643;

}

function style_3036677638(self_3036677639) {
  var result_3036677640 = [];

  var F = {procname: "slides24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 26;
    F.filename = "slides24.nim";
    result_3036677640 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036677640;

}

function render_3036678144(self_3036678145) {
  var result_3036678146 = null;

  var F = {procname: "slides24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 26;
    F.filename = "slides24.nim";
    currentComponentsList_1644168814[0].push(self_3036678145);;
    F.line = 26;
    currentComponent_1644168809[0] = nimCopy(null, self_3036678145.uniqCompId, NTI33554449);
    F.line = 26;
    script_3036677636(self_3036678145);
    if ((self_3036678145.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3036678145.created(self_3036678145, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3036678145.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3036678145.beforeUpdated(self_3036678145, null);
    F.line = 26;
    F.filename = "slides24.nim";
    result_3036678146 = renderTag_3036677641(self_3036678145);
    F.line = 26;
    tgadd(result_3036678146, [tg2([115,116,121,108,101], [textTag_1694499242(style_3036677638(self_3036678145))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3036678145.rendered(self_3036678145, null);
    F.line = 26;
    F.filename = "slides24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036678146;

}

function script_3036676862(self_3036676863) {
  var F = {procname: "slides24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3036676867(self_3036676868) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3036677191(scopeSelf_3036677192, inComponent_3036677193, compName_3036677194, inCycle_3036677195, cycleCounter_3036677196, cycleCounter_3036677196_Idx, compCounter_3036677197) {
        var Temporary1;

      var result_3036677198 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/slides24.nim", line: 0};
      framePtr = F;
        F.line = 23;
        F.filename = "slides24.nim";
        F.line = 23;
        if ((inCycle_3036677195 && inComponent_3036677193)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_3036677195) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_3036677193) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_3036677207 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp346_3036677190.slotData = _res_3036677207;
        result_3036677198 = _res_3036677207;
      framePtr = F.prev;

      return result_3036677198;

    }

  var result_3036676869 = null;

  var F = {procname: "slides24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 24;
    F.filename = "slides24.nim";
    F.line = 23;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,52,54] || []).concat(self_3036676868.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,52,54] || []).concat(self_3036676868.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp346_3036677189 = initIcon_2835349526(Temporary1, [99,114,111,115,98,121,72,105,103,104,47,108,101,97,114,110,105,110,103,84,97,114,103,101,116], 2.0, [], []);
    F.line = 23;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,52,54] || []).concat(self_3036676868.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,52,54] || []).concat(self_3036676868.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp346_3036677190 = rgcmp(toJSStr(Temporary2), _comp346_3036677189);
    F.line = 23;
    comp346_3036677190.slot = HEX3Aanonymous_3036677191;
    F.line = 23;
    var data_comp346_3036677208 = render_1644175063(comp346_3036677190);
    F.line = 23;
    addArgIter_1694499355(data_comp346_3036677208, ([100,97,116,97,45] || []).concat(comp346_3036677190.uniqCompId || []));
    F.line = 23;
    window.addEventListener('beforeunload', data_comp346_3036677208.exited);
    F.line = 23;
    window.addEventListener('pagehide', data_comp346_3036677208.pageHide);
    F.line = 23;
    window.addEventListener('pageshow', data_comp346_3036677208.pageShow);
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3036677327 = [0];
    result_3036676869 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("flex: 1 0 0; background-color: white; font-size: 1.5vw; padding: 1vw; border-radius: 4vw;")}], 0), [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59]}], 0), [data_comp346_3036677208], false), self_3036676868.slot(self_3036676868, true, [83,108,105,100,101,84,97,114,103,101,116], false, cclCounter_3036677327, 0, self_3036676868.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_3036676869;

}

function style_3036676864(self_3036676865) {
  var result_3036676866 = [];

  var F = {procname: "slides24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "slides24.nim";
    result_3036676866 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036676866;

}

function render_3036677370(self_3036677371) {
  var result_3036677372 = null;

  var F = {procname: "slides24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 20;
    F.filename = "slides24.nim";
    currentComponentsList_1644168814[0].push(self_3036677371);;
    F.line = 20;
    currentComponent_1644168809[0] = nimCopy(null, self_3036677371.uniqCompId, NTI33554449);
    F.line = 20;
    script_3036676862(self_3036677371);
    if ((self_3036677371.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3036677371.created(self_3036677371, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3036677371.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3036677371.beforeUpdated(self_3036677371, null);
    F.line = 20;
    F.filename = "slides24.nim";
    result_3036677372 = renderTag_3036676867(self_3036677371);
    F.line = 20;
    tgadd(result_3036677372, [tg2([115,116,121,108,101], [textTag_1694499242(style_3036676864(self_3036677371))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3036677371.rendered(self_3036677371, null);
    F.line = 20;
    F.filename = "slides24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036677372;

}

function script_3036676337(self_3036676338) {
  var F = {procname: "slides24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3036676342(self_3036676343) {
  var result_3036676344 = null;

  var F = {procname: "slides24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "slides24.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3036676553 = [0];
    result_3036676344 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: makeNimstrLit("height: 100vh; width: 20vw; background-color: #202CEF; display: flex; flex-direction: column; padding: 0.4em; gap: 2vh;")}], 0), [self_3036676343.slot(self_3036676343, true, [76,101,115,115,111,110,84,97,114,103,101,116,115], false, cclCounter_3036676553, 0, self_3036676343.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_3036676344;

}

function style_3036676339(self_3036676340) {
  var result_3036676341 = [];

  var F = {procname: "slides24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 15;
    F.filename = "slides24.nim";
    result_3036676341 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036676341;

}

function render_3036676596(self_3036676597) {
  var result_3036676598 = null;

  var F = {procname: "slides24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 15;
    F.filename = "slides24.nim";
    currentComponentsList_1644168814[0].push(self_3036676597);;
    F.line = 15;
    currentComponent_1644168809[0] = nimCopy(null, self_3036676597.uniqCompId, NTI33554449);
    F.line = 15;
    script_3036676337(self_3036676597);
    if ((self_3036676597.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3036676597.created(self_3036676597, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3036676597.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3036676597.beforeUpdated(self_3036676597, null);
    F.line = 15;
    F.filename = "slides24.nim";
    result_3036676598 = renderTag_3036676342(self_3036676597);
    F.line = 15;
    tgadd(result_3036676598, [tg2([115,116,121,108,101], [textTag_1694499242(style_3036676339(self_3036676597))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3036676597.rendered(self_3036676597, null);
    F.line = 15;
    F.filename = "slides24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036676598;

}

function script_3036678410(self_3036678411) {
  var F = {procname: "slides24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3036678415(self_3036678416) {
  var result_3036678417 = null;

  var F = {procname: "slides24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 35;
    F.filename = "slides24.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3036678626 = [0];
    result_3036678417 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [119,105,100,116,104,58,32,56,48,118,119,59,32,112,97,100,100,105,110,103,58,32,49,101,109,59]}], 0), [self_3036678416.slot(self_3036678416, true, [83,108,105,100,101,66,111,100,121], false, cclCounter_3036678626, 0, self_3036678416.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_3036678417;

}

function style_3036678412(self_3036678413) {
  var result_3036678414 = [];

  var F = {procname: "slides24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "slides24.nim";
    result_3036678414 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036678414;

}

function render_3036678669(self_3036678670) {
  var result_3036678671 = null;

  var F = {procname: "slides24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 32;
    F.filename = "slides24.nim";
    currentComponentsList_1644168814[0].push(self_3036678670);;
    F.line = 32;
    currentComponent_1644168809[0] = nimCopy(null, self_3036678670.uniqCompId, NTI33554449);
    F.line = 32;
    script_3036678410(self_3036678670);
    if ((self_3036678670.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3036678670.created(self_3036678670, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3036678670.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3036678670.beforeUpdated(self_3036678670, null);
    F.line = 32;
    F.filename = "slides24.nim";
    result_3036678671 = renderTag_3036678415(self_3036678670);
    F.line = 32;
    tgadd(result_3036678671, [tg2([115,116,121,108,101], [textTag_1694499242(style_3036678412(self_3036678670))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3036678670.rendered(self_3036678670, null);
    F.line = 32;
    F.filename = "slides24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3036678671;

}

function script_3170894340(self_3170894341) {
  var F = {procname: "jsxGraph.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3170894345(self_3170894346) {
  var result_3170894347 = null;

  var F = {procname: "jsxGraph.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 54;
    F.filename = "jsxGraph.nim";
    Label1: {
      F.line = 54;
      var fmtRes_3170894450 = [mnewString(0)];
      F.line = 54;
      fmtRes_3170894450[0].push.apply(fmtRes_3170894450[0], [32,119,105,100,116,104,58]);;
      F.line = 54;
      formatValue_2785020246(fmtRes_3170894450, 0, self_3170894346.boardWidth, []);
      F.line = 54;
      fmtRes_3170894450[0].push.apply(fmtRes_3170894450[0], [59,32,104,101,105,103,104,116,58]);;
      F.line = 54;
      formatValue_2785020246(fmtRes_3170894450, 0, self_3170894346.boardHeight, []);
      F.line = 54;
      fmtRes_3170894450[0].push.apply(fmtRes_3170894450[0], [59]);;
    };
    result_3170894347 = tg2([100,105,118], [tg1([100,105,118], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [105,100], Field1: cstrToNimstr(self_3170894346.id.val)}, NTI3170894195), nimCopy(null, {Field0: [99,108,97,115,115], Field1: [106,120,103,98,111,120]}, NTI3170894195), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_3170894450[0], NTI33554449)}, NTI3170894195)], 0), [], false)], true);
  framePtr = F.prev;

  return result_3170894347;

}

function style_3170894342(self_3170894343) {
  var result_3170894344 = [];

  var F = {procname: "jsxGraph.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "jsxGraph.nim";
    result_3170894344 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3170894344;

}

function render_3170894509(self_3170894510) {
  var result_3170894511 = null;

  var F = {procname: "jsxGraph.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "jsxGraph.nim";
    currentComponentsList_1644168814[0].push(self_3170894510);;
    F.line = 44;
    currentComponent_1644168809[0] = nimCopy(null, self_3170894510.uniqCompId, NTI33554449);
    F.line = 44;
    script_3170894340(self_3170894510);
    if ((self_3170894510.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3170894510.created(self_3170894510, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3170894510.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3170894510.beforeUpdated(self_3170894510, null);
    F.line = 44;
    F.filename = "jsxGraph.nim";
    result_3170894511 = renderTag_3170894345(self_3170894510);
    F.line = 44;
    tgadd(result_3170894511, [tg2([115,116,121,108,101], [textTag_1694499242(style_3170894342(self_3170894510))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3170894510.rendered(self_3170894510, null);
    F.line = 44;
    F.filename = "jsxGraph.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3170894511;

}

function script_3103786006(self_3103786007) {
  var F = {procname: "slides.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3103786011(self_3103786012) {
  var result_3103786013 = null;

  var F = {procname: "slides.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 66;
    F.filename = "slides.nim";
    Label1: {
      F.line = 65;
      var fmtRes_3103786116 = [mnewString(0)];
      F.line = 65;
      fmtRes_3103786116[0].push.apply(fmtRes_3103786116[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32]);;
      F.line = 65;
      formatValue_2785020246(fmtRes_3103786116, 0, self_3103786012.css, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3103786240 = [0];
    result_3103786013 = tg2([100,105,118], [tg1([104,52], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_3103786116[0], NTI33554449)}, NTI3103785629)], 0), [self_3103786012.slot(self_3103786012, true, [83,108,105,100,101,69,120,97,109,112,108,101], false, cclCounter_3103786240, 0, self_3103786012.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_3103786013;

}

function style_3103786008(self_3103786009) {
  var result_3103786010 = [];

  var F = {procname: "slides.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 62;
    F.filename = "slides.nim";
    result_3103786010 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3103786010;

}

function render_3103786283(self_3103786284) {
  var result_3103786285 = null;

  var F = {procname: "slides.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 62;
    F.filename = "slides.nim";
    currentComponentsList_1644168814[0].push(self_3103786284);;
    F.line = 62;
    currentComponent_1644168809[0] = nimCopy(null, self_3103786284.uniqCompId, NTI33554449);
    F.line = 62;
    script_3103786006(self_3103786284);
    if ((self_3103786284.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3103786284.created(self_3103786284, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3103786284.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3103786284.beforeUpdated(self_3103786284, null);
    F.line = 62;
    F.filename = "slides.nim";
    result_3103786285 = renderTag_3103786011(self_3103786284);
    F.line = 62;
    tgadd(result_3103786285, [tg2([115,116,121,108,101], [textTag_1694499242(style_3103786008(self_3103786284))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3103786284.rendered(self_3103786284, null);
    F.line = 62;
    F.filename = "slides.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3103786285;

}

function script_3103785333(self_3103785334) {
  var F = {procname: "slides.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3103785338(self_3103785339) {
    var Temporary2;
    var Temporary3;
    
function HEX3Aanonymous_3103785670(scopeSelf_3103785671, inComponent_3103785672, compName_3103785673, inCycle_3103785674, cycleCounter_3103785675, cycleCounter_3103785675_Idx, compCounter_3103785676) {
        var Temporary1;

      var result_3103785677 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/slides.nim", line: 0};
      framePtr = F;
        F.line = 60;
        F.filename = "slides.nim";
        F.line = 60;
        if ((inCycle_3103785674 && inComponent_3103785672)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_3103785674) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_3103785672) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_3103785686 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp357_3103785669.slotData = _res_3103785686;
        result_3103785677 = _res_3103785686;
      framePtr = F.prev;

      return result_3103785677;

    }

  var result_3103785340 = null;

  var F = {procname: "slides.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 60;
    F.filename = "slides.nim";
    Label1: {
      F.line = 58;
      var fmtRes_3103785443 = [mnewString(0)];
      F.line = 58;
      fmtRes_3103785443[0].push.apply(fmtRes_3103785443[0], [119,105,100,116,104,58,32,49,48,48,37,59,32,116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,32]);;
      F.line = 58;
      formatValue_2785020246(fmtRes_3103785443, 0, self_3103785339.css, []);
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3103785567 = [0];
    F.line = 60;
    F.filename = "slides.nim";
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,53,55] || []).concat(self_3103785339.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,53,55] || []).concat(self_3103785339.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp357_3103785668 = initStrut_2852130043(Temporary2, [49,101,109], [49,101,109], []);
    F.line = 60;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary3 = ([99,111,109,112,51,53,55] || []).concat(self_3103785339.uniqCompId || []);
    }
    else {
    Temporary3 = ([99,111,109,112,51,53,55] || []).concat(self_3103785339.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp357_3103785669 = rgcmp(toJSStr(Temporary3), _comp357_3103785668);
    F.line = 60;
    comp357_3103785669.slot = HEX3Aanonymous_3103785670;
    F.line = 60;
    var data_comp357_3103785687 = render_1644175063(comp357_3103785669);
    F.line = 60;
    addArgIter_1694499355(data_comp357_3103785687, ([100,97,116,97,45] || []).concat(comp357_3103785669.uniqCompId || []));
    F.line = 60;
    window.addEventListener('beforeunload', data_comp357_3103785687.exited);
    F.line = 60;
    window.addEventListener('pagehide', data_comp357_3103785687.pageHide);
    F.line = 60;
    window.addEventListener('pageshow', data_comp357_3103785687.pageShow);
    result_3103785340 = tg2([100,105,118], [tg1([104,51], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_3103785443[0], NTI33554449)}, NTI3103785246)], 0), [self_3103785339.slot(self_3103785339, true, [83,108,105,100,101,72,101,97,100,101,114], false, cclCounter_3103785567, 0, self_3103785339.uniqCompId), data_comp357_3103785687], false)], true);
  framePtr = F.prev;

  return result_3103785340;

}

function style_3103785335(self_3103785336) {
  var result_3103785337 = [];

  var F = {procname: "slides.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "slides.nim";
    result_3103785337 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3103785337;

}

function render_3103785730(self_3103785731) {
  var result_3103785732 = null;

  var F = {procname: "slides.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "slides.nim";
    currentComponentsList_1644168814[0].push(self_3103785731);;
    F.line = 55;
    currentComponent_1644168809[0] = nimCopy(null, self_3103785731.uniqCompId, NTI33554449);
    F.line = 55;
    script_3103785333(self_3103785731);
    if ((self_3103785731.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3103785731.created(self_3103785731, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3103785731.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3103785731.beforeUpdated(self_3103785731, null);
    F.line = 55;
    F.filename = "slides.nim";
    result_3103785732 = renderTag_3103785338(self_3103785731);
    F.line = 55;
    tgadd(result_3103785732, [tg2([115,116,121,108,101], [textTag_1694499242(style_3103785335(self_3103785731))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3103785731.rendered(self_3103785731, null);
    F.line = 55;
    F.filename = "slides.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3103785732;

}

function script_2852132189(self_2852132190) {
  var F = {procname: "layout.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initProbRow_2852128891(uniqCompId_2852128892, stretch_2852128893, css_2852128894, class_2852128895) {
    
function HEX3Aanonymous_2852128907(self_2852128908, ev_2852128909) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128910(self_2852128911, ev_2852128912) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128913(self_2852128914, ev_2852128915) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128916(self_2852128917, ev_2852128918) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128919(self_2852128920, ev_2852128921) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128922(self_2852128923, ev_2852128924) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_2852128925(self_2852128926, ev_2852128927) {
      var F = {procname: "initProbRow.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_2852128896 = null;

  var F = {procname: "layout.initProbRow", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 53;
    F.filename = "layout.nim";
    var self_2852128906 = {uniqCompId: nimCopy(null, uniqCompId_2852128892, NTI33554449), stretch: remember_2835349536(stretch_2852128893), css: remember_2785019842(css_2852128894), class: remember_2785019842(class_2852128895), m_type: NTI2852127959, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 56;
    self_2852128906.beforeUpdated = HEX3Aanonymous_2852128907;
    F.line = 56;
    self_2852128906.pageShow = HEX3Aanonymous_2852128910;
    F.line = 56;
    self_2852128906.pageHide = HEX3Aanonymous_2852128913;
    F.line = 56;
    self_2852128906.rendered = HEX3Aanonymous_2852128916;
    F.line = 56;
    self_2852128906.exited = HEX3Aanonymous_2852128919;
    F.line = 56;
    self_2852128906.created = HEX3Aanonymous_2852128922;
    F.line = 56;
    self_2852128906.updated = HEX3Aanonymous_2852128925;
    if ((stretch_2852128893 == 0.0)) {
    F.line = 51;
    self_2852128906.stretch = remember_2835349536(stretch_2852128893);
    }
    
    if (eqStrings(css_2852128894, [])) {
    F.line = 52;
    self_2852128906.css = remember_2785019842(css_2852128894);
    }
    
    if (eqStrings(class_2852128895, [])) {
    F.line = 53;
    self_2852128906.class = remember_2785019842(class_2852128895);
    }
    
    F.line = 53;
    createdComponentsList_1644168819[0].push(self_2852128906);;
    F.line = 779;
    F.filename = "components.nim";
    result_2852128896 = self_2852128906;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2852128896;

}

function renderTag_2852132194(self_2852132195) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_2852132323(scopeSelf_2852132324, inComponent_2852132325, compName_2852132326, inCycle_2852132327, cycleCounter_2852132328, cycleCounter_2852132328_Idx, compCounter_2852132329) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        
function HEX3Aanonymous_2852132435(scopeSelf_2852132436, inComponent_2852132437, compName_2852132438, inCycle_2852132439, cycleCounter_2852132440, cycleCounter_2852132440_Idx, compCounter_2852132441) {
            var Temporary1;

          var result_2852132442 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
          framePtr = F;
            F.line = 108;
            F.filename = "layout.nim";
            F.line = 108;
            if ((inCycle_2852132439 && inComponent_2852132437)) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            if (inCycle_2852132439) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            if (inComponent_2852132437) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            }}
            var _res_2852132535 = Temporary1;
            F.line = 293;
            F.filename = "macro_utils.nim";
            comp46_2852132434.slotData = _res_2852132535;
            result_2852132442 = _res_2852132535;
          framePtr = F.prev;

          return result_2852132442;

        }
                var Temporary7;
                var Temporary8;
                
function HEX3Aanonymous_2852132661(scopeSelf_2852132662, inComponent_2852132663, compName_2852132664, inCycle_2852132665, cycleCounter_2852132666, cycleCounter_2852132666_Idx, compCounter_2852132667) {
                    var Temporary1;

                  var result_2852132668 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 110;
                    F.filename = "layout.nim";
                    F.line = 110;
                    if ((inCycle_2852132665 && inComponent_2852132663)) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    if (inCycle_2852132665) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    if (inComponent_2852132663) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    }}
                    var _res_2852132677 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp48_2852132660.slotData = _res_2852132677;
                    result_2852132668 = _res_2852132677;
                  framePtr = F.prev;

                  return result_2852132668;

                }
                var Temporary9;
                var Temporary10;
                
function HEX3Aanonymous_2852132781(scopeSelf_2852132782, inComponent_2852132783, compName_2852132784, inCycle_2852132785, cycleCounter_2852132786, cycleCounter_2852132786_Idx, compCounter_2852132787) {
                    var Temporary1;

                  var result_2852132788 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 111;
                    F.filename = "layout.nim";
                    F.line = 111;
                    if ((inCycle_2852132785 && inComponent_2852132783)) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852132553, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    if (inCycle_2852132785) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852132553, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    if (inComponent_2852132783) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852132553, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852132553, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    }}
                    var _res_2852132881 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp49_2852132780.slotData = _res_2852132881;
                    result_2852132788 = _res_2852132881;
                  framePtr = F.prev;

                  return result_2852132788;

                }
        var Temporary11;
        var Temporary12;
        
function HEX3Aanonymous_2852133031(scopeSelf_2852133032, inComponent_2852133033, compName_2852133034, inCycle_2852133035, cycleCounter_2852133036, cycleCounter_2852133036_Idx, compCounter_2852133037) {
            var Temporary1;

          var result_2852133038 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
          framePtr = F;
            F.line = 108;
            F.filename = "layout.nim";
            F.line = 108;
            if ((inCycle_2852133035 && inComponent_2852133033)) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            if (inCycle_2852133035) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            if (inComponent_2852133033) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            }}
            var _res_2852133131 = Temporary1;
            F.line = 293;
            F.filename = "macro_utils.nim";
            comp50_2852133030.slotData = _res_2852133131;
            result_2852133038 = _res_2852133131;
          framePtr = F.prev;

          return result_2852133038;

        }
                var Temporary16;
                var Temporary17;
                
function HEX3Aanonymous_2852133257(scopeSelf_2852133258, inComponent_2852133259, compName_2852133260, inCycle_2852133261, cycleCounter_2852133262, cycleCounter_2852133262_Idx, compCounter_2852133263) {
                    var Temporary1;

                  var result_2852133264 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 110;
                    F.filename = "layout.nim";
                    F.line = 110;
                    if ((inCycle_2852133261 && inComponent_2852133259)) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    if (inCycle_2852133261) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    if (inComponent_2852133259) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    }}
                    var _res_2852133273 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp52_2852133256.slotData = _res_2852133273;
                    result_2852133264 = _res_2852133273;
                  framePtr = F.prev;

                  return result_2852133264;

                }
                var Temporary18;
                var Temporary19;
                
function HEX3Aanonymous_2852133377(scopeSelf_2852133378, inComponent_2852133379, compName_2852133380, inCycle_2852133381, cycleCounter_2852133382, cycleCounter_2852133382_Idx, compCounter_2852133383) {
                    var Temporary1;

                  var result_2852133384 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 111;
                    F.filename = "layout.nim";
                    F.line = 111;
                    if ((inCycle_2852133381 && inComponent_2852133379)) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133149, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    if (inCycle_2852133381) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133149, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    if (inComponent_2852133379) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133149, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133149, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    }}
                    var _res_2852133477 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp53_2852133376.slotData = _res_2852133477;
                    result_2852133384 = _res_2852133477;
                  framePtr = F.prev;

                  return result_2852133384;

                }
        var Temporary20;
        var Temporary21;
        
function HEX3Aanonymous_2852133627(scopeSelf_2852133628, inComponent_2852133629, compName_2852133630, inCycle_2852133631, cycleCounter_2852133632, cycleCounter_2852133632_Idx, compCounter_2852133633) {
            var Temporary1;

          var result_2852133634 = null;

          var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
          framePtr = F;
            F.line = 108;
            F.filename = "layout.nim";
            F.line = 108;
            if ((inCycle_2852133631 && inComponent_2852133629)) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            if (inCycle_2852133631) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            if (inComponent_2852133629) {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            else {
            Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
            }
            }}
            var _res_2852133727 = Temporary1;
            F.line = 293;
            F.filename = "macro_utils.nim";
            comp54_2852133626.slotData = _res_2852133727;
            result_2852133634 = _res_2852133727;
          framePtr = F.prev;

          return result_2852133634;

        }
                var Temporary25;
                var Temporary26;
                
function HEX3Aanonymous_2852133853(scopeSelf_2852133854, inComponent_2852133855, compName_2852133856, inCycle_2852133857, cycleCounter_2852133858, cycleCounter_2852133858_Idx, compCounter_2852133859) {
                    var Temporary1;

                  var result_2852133860 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 110;
                    F.filename = "layout.nim";
                    F.line = 110;
                    if ((inCycle_2852133857 && inComponent_2852133855)) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    if (inCycle_2852133857) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    if (inComponent_2852133855) {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    else {
                    Temporary1 = tg2([100,105,118], [], true);
                    }
                    }}
                    var _res_2852133869 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp56_2852133852.slotData = _res_2852133869;
                    result_2852133860 = _res_2852133869;
                  framePtr = F.prev;

                  return result_2852133860;

                }
                var Temporary27;
                var Temporary28;
                
function HEX3Aanonymous_2852133973(scopeSelf_2852133974, inComponent_2852133975, compName_2852133976, inCycle_2852133977, cycleCounter_2852133978, cycleCounter_2852133978_Idx, compCounter_2852133979) {
                    var Temporary1;

                  var result_2852133980 = null;

                  var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                  framePtr = F;
                    F.line = 111;
                    F.filename = "layout.nim";
                    F.line = 111;
                    if ((inCycle_2852133977 && inComponent_2852133975)) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133745, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    if (inCycle_2852133977) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133745, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    if (inComponent_2852133975) {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133745, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    else {
                    Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852133745, 0, (self_2852132195.content.val).length - 1)]], true);
                    }
                    }}
                    var _res_2852134073 = Temporary1;
                    F.line = 293;
                    F.filename = "macro_utils.nim";
                    comp57_2852133972.slotData = _res_2852134073;
                    result_2852133980 = _res_2852134073;
                  framePtr = F.prev;

                  return result_2852133980;

                }
          var Temporary29;
          var Temporary30;
          
function HEX3Aanonymous_2852134223(scopeSelf_2852134224, inComponent_2852134225, compName_2852134226, inCycle_2852134227, cycleCounter_2852134228, cycleCounter_2852134228_Idx, compCounter_2852134229) {
              var Temporary1;

            var result_2852134230 = null;

            var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
            framePtr = F;
              F.line = 108;
              F.filename = "layout.nim";
              F.line = 108;
              if ((inCycle_2852134227 && inComponent_2852134225)) {
              Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
              }
              else {
              if (inCycle_2852134227) {
              Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
              }
              else {
              if (inComponent_2852134225) {
              Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
              }
              else {
              Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(0, 0, (self_2852132195.content.val).length - 1)]], true);
              }
              }}
              var _res_2852134323 = Temporary1;
              F.line = 293;
              F.filename = "macro_utils.nim";
              comp58_2852134222.slotData = _res_2852134323;
              result_2852134230 = _res_2852134323;
            framePtr = F.prev;

            return result_2852134230;

          }
                  var Temporary34;
                  var Temporary35;
                  
function HEX3Aanonymous_2852134449(scopeSelf_2852134450, inComponent_2852134451, compName_2852134452, inCycle_2852134453, cycleCounter_2852134454, cycleCounter_2852134454_Idx, compCounter_2852134455) {
                      var Temporary1;

                    var result_2852134456 = null;

                    var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                    framePtr = F;
                      F.line = 110;
                      F.filename = "layout.nim";
                      F.line = 110;
                      if ((inCycle_2852134453 && inComponent_2852134451)) {
                      Temporary1 = tg2([100,105,118], [], true);
                      }
                      else {
                      if (inCycle_2852134453) {
                      Temporary1 = tg2([100,105,118], [], true);
                      }
                      else {
                      if (inComponent_2852134451) {
                      Temporary1 = tg2([100,105,118], [], true);
                      }
                      else {
                      Temporary1 = tg2([100,105,118], [], true);
                      }
                      }}
                      var _res_2852134465 = Temporary1;
                      F.line = 293;
                      F.filename = "macro_utils.nim";
                      comp60_2852134448.slotData = _res_2852134465;
                      result_2852134456 = _res_2852134465;
                    framePtr = F.prev;

                    return result_2852134456;

                  }
                  var Temporary36;
                  var Temporary37;
                  
function HEX3Aanonymous_2852134569(scopeSelf_2852134570, inComponent_2852134571, compName_2852134572, inCycle_2852134573, cycleCounter_2852134574, cycleCounter_2852134574_Idx, compCounter_2852134575) {
                      var Temporary1;

                    var result_2852134576 = null;

                    var F = {procname: ":anonymous.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
                    framePtr = F;
                      F.line = 111;
                      F.filename = "layout.nim";
                      F.line = 111;
                      if ((inCycle_2852134573 && inComponent_2852134571)) {
                      Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852134341, 0, (self_2852132195.content.val).length - 1)]], true);
                      }
                      else {
                      if (inCycle_2852134573) {
                      Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852134341, 0, (self_2852132195.content.val).length - 1)]], true);
                      }
                      else {
                      if (inComponent_2852134571) {
                      Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852134341, 0, (self_2852132195.content.val).length - 1)]], true);
                      }
                      else {
                      Temporary1 = tg2([100,105,118], [self_2852132195.content.val[chckIndx(i_2852134341, 0, (self_2852132195.content.val).length - 1)]], true);
                      }
                      }}
                      var _res_2852134669 = Temporary1;
                      F.line = 293;
                      F.filename = "macro_utils.nim";
                      comp61_2852134568.slotData = _res_2852134669;
                      result_2852134576 = _res_2852134669;
                    framePtr = F.prev;

                    return result_2852134576;

                  }

      var result_2852132330 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/hpxLP-0.1.0-ae0799f8d4d1023208bf6fe8561090dde22208f0/hpxLP/layout.nim", line: 0};
      framePtr = F;
        F.line = 109;
        F.filename = "layout.nim";
        F.line = 109;
        if ((inCycle_2852132327 && inComponent_2852132325)) {
        F.line = 108;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary2 = ([99,111,109,112,52,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
        }
        else {
        Temporary2 = ([99,111,109,112,52,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var _comp46_2852132433 = initProbRow_2852128891(Temporary2, 1.0, self_2852132195.css.val, []);
        F.line = 108;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary3 = ([99,111,109,112,52,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
        }
        else {
        Temporary3 = ([99,111,109,112,52,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var comp46_2852132434 = rgcmp(toJSStr(Temporary3), _comp46_2852132433);
        F.line = 108;
        comp46_2852132434.slot = HEX3Aanonymous_2852132435;
        F.line = 108;
        var data_comp46_2852132536 = render_1644175063(comp46_2852132434);
        F.line = 108;
        addArgIter_1694499355(data_comp46_2852132536, ([100,97,116,97,45] || []).concat(comp46_2852132434.uniqCompId || []));
        F.line = 108;
        window.addEventListener('beforeunload', data_comp46_2852132536.exited);
        F.line = 108;
        window.addEventListener('pagehide', data_comp46_2852132536.pageHide);
        F.line = 108;
        window.addEventListener('pageshow', data_comp46_2852132536.pageShow);
        F.line = 110;
        var c47_2852132537 = 0;
        F.line = 110;
        var __r47_2852132545 = newSeq_2818572815(0);
        Label4: {
          F.line = 109;
          var i_2852132553 = 0;
          F.line = 117;
          F.filename = "iterators_1.nim";
          var colontmp__536881649 = 0;
          F.line = 109;
          F.filename = "layout.nim";
          colontmp__536881649 = (self_2852132195.content.val).length;
          F.line = 119;
          F.filename = "iterators_1.nim";
          var i_536881650 = 1;
          Label5: {
            F.line = 120;
              Label6: while (true) {
              if (!(i_536881650 < colontmp__536881649)) break Label6;
                F.line = 109;
                F.filename = "layout.nim";
                i_2852132553 = i_536881650;
                F.line = 109;
                c47_2852132537 = addInt(c47_2852132537, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c47_2852132537;
                F.line = 109;
                F.filename = "layout.nim";
                F.line = 110;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary7 = ([99,111,109,112,52,56] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary7 = ([99,111,109,112,52,56] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp48_2852132659 = initPageCut_2852131547(Temporary7);
                F.line = 110;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary8 = ([99,111,109,112,52,56] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary8 = ([99,111,109,112,52,56] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp48_2852132660 = rgcmp(toJSStr(Temporary8), _comp48_2852132659);
                F.line = 110;
                comp48_2852132660.slot = HEX3Aanonymous_2852132661;
                F.line = 110;
                var data_comp48_2852132678 = render_1644175063(comp48_2852132660);
                F.line = 110;
                addArgIter_1694499355(data_comp48_2852132678, ([100,97,116,97,45] || []).concat(comp48_2852132660.uniqCompId || []));
                F.line = 110;
                window.addEventListener('beforeunload', data_comp48_2852132678.exited);
                F.line = 110;
                window.addEventListener('pagehide', data_comp48_2852132678.pageHide);
                F.line = 110;
                window.addEventListener('pageshow', data_comp48_2852132678.pageShow);
                F.line = 111;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary9 = ([99,111,109,112,52,57] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary9 = ([99,111,109,112,52,57] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp49_2852132779 = initProbRow_2852128891(Temporary9, 1.0, self_2852132195.css.val, []);
                F.line = 111;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary10 = ([99,111,109,112,52,57] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary10 = ([99,111,109,112,52,57] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c47_2852132537) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp49_2852132780 = rgcmp(toJSStr(Temporary10), _comp49_2852132779);
                F.line = 111;
                comp49_2852132780.slot = HEX3Aanonymous_2852132781;
                F.line = 111;
                var data_comp49_2852132882 = render_1644175063(comp49_2852132780);
                F.line = 111;
                addArgIter_1694499355(data_comp49_2852132882, ([100,97,116,97,45] || []).concat(comp49_2852132780.uniqCompId || []));
                F.line = 111;
                window.addEventListener('beforeunload', data_comp49_2852132882.exited);
                F.line = 111;
                window.addEventListener('pagehide', data_comp49_2852132882.pageHide);
                F.line = 111;
                window.addEventListener('pageshow', data_comp49_2852132882.pageShow);
                __r47_2852132545.push(tg2([100,105,118], [data_comp48_2852132678, data_comp49_2852132882], true));;
                F.line = 110;
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 122;
                F.filename = "iterators_1.nim";
                i_536881650 = addInt(i_536881650, 1);
              }
          };
        };
        Temporary1 = tg2([100,105,118], [data_comp46_2852132536, tg2([100,105,118], __r47_2852132545, true)], true);
        }
        else {
        if (inCycle_2852132327) {
        F.line = 108;
        F.filename = "layout.nim";
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary11 = ([99,111,109,112,53,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
        }
        else {
        Temporary11 = ([99,111,109,112,53,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var _comp50_2852133029 = initProbRow_2852128891(Temporary11, 1.0, self_2852132195.css.val, []);
        F.line = 108;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary12 = ([99,111,109,112,53,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
        }
        else {
        Temporary12 = ([99,111,109,112,53,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var comp50_2852133030 = rgcmp(toJSStr(Temporary12), _comp50_2852133029);
        F.line = 108;
        comp50_2852133030.slot = HEX3Aanonymous_2852133031;
        F.line = 108;
        var data_comp50_2852133132 = render_1644175063(comp50_2852133030);
        F.line = 108;
        addArgIter_1694499355(data_comp50_2852133132, ([100,97,116,97,45] || []).concat(comp50_2852133030.uniqCompId || []));
        F.line = 108;
        window.addEventListener('beforeunload', data_comp50_2852133132.exited);
        F.line = 108;
        window.addEventListener('pagehide', data_comp50_2852133132.pageHide);
        F.line = 108;
        window.addEventListener('pageshow', data_comp50_2852133132.pageShow);
        F.line = 110;
        var c51_2852133133 = 0;
        F.line = 110;
        var __r51_2852133141 = newSeq_2818572815(0);
        Label13: {
          F.line = 109;
          var i_2852133149 = 0;
          F.line = 117;
          F.filename = "iterators_1.nim";
          var colontmp__536881653 = 0;
          F.line = 109;
          F.filename = "layout.nim";
          colontmp__536881653 = (self_2852132195.content.val).length;
          F.line = 119;
          F.filename = "iterators_1.nim";
          var i_536881654 = 1;
          Label14: {
            F.line = 120;
              Label15: while (true) {
              if (!(i_536881654 < colontmp__536881653)) break Label15;
                F.line = 109;
                F.filename = "layout.nim";
                i_2852133149 = i_536881654;
                F.line = 109;
                c51_2852133133 = addInt(c51_2852133133, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c51_2852133133;
                F.line = 109;
                F.filename = "layout.nim";
                F.line = 110;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary16 = ([99,111,109,112,53,50] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary16 = ([99,111,109,112,53,50] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp52_2852133255 = initPageCut_2852131547(Temporary16);
                F.line = 110;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary17 = ([99,111,109,112,53,50] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary17 = ([99,111,109,112,53,50] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp52_2852133256 = rgcmp(toJSStr(Temporary17), _comp52_2852133255);
                F.line = 110;
                comp52_2852133256.slot = HEX3Aanonymous_2852133257;
                F.line = 110;
                var data_comp52_2852133274 = render_1644175063(comp52_2852133256);
                F.line = 110;
                addArgIter_1694499355(data_comp52_2852133274, ([100,97,116,97,45] || []).concat(comp52_2852133256.uniqCompId || []));
                F.line = 110;
                window.addEventListener('beforeunload', data_comp52_2852133274.exited);
                F.line = 110;
                window.addEventListener('pagehide', data_comp52_2852133274.pageHide);
                F.line = 110;
                window.addEventListener('pageshow', data_comp52_2852133274.pageShow);
                F.line = 111;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary18 = ([99,111,109,112,53,51] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary18 = ([99,111,109,112,53,51] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp53_2852133375 = initProbRow_2852128891(Temporary18, 1.0, self_2852132195.css.val, []);
                F.line = 111;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary19 = ([99,111,109,112,53,51] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary19 = ([99,111,109,112,53,51] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c51_2852133133) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp53_2852133376 = rgcmp(toJSStr(Temporary19), _comp53_2852133375);
                F.line = 111;
                comp53_2852133376.slot = HEX3Aanonymous_2852133377;
                F.line = 111;
                var data_comp53_2852133478 = render_1644175063(comp53_2852133376);
                F.line = 111;
                addArgIter_1694499355(data_comp53_2852133478, ([100,97,116,97,45] || []).concat(comp53_2852133376.uniqCompId || []));
                F.line = 111;
                window.addEventListener('beforeunload', data_comp53_2852133478.exited);
                F.line = 111;
                window.addEventListener('pagehide', data_comp53_2852133478.pageHide);
                F.line = 111;
                window.addEventListener('pageshow', data_comp53_2852133478.pageShow);
                __r51_2852133141.push(tg2([100,105,118], [data_comp52_2852133274, data_comp53_2852133478], true));;
                F.line = 110;
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 122;
                F.filename = "iterators_1.nim";
                i_536881654 = addInt(i_536881654, 1);
              }
          };
        };
        Temporary1 = tg2([100,105,118], [data_comp50_2852133132, tg2([100,105,118], __r51_2852133141, true)], true);
        }
        else {
        if (inComponent_2852132325) {
        F.line = 108;
        F.filename = "layout.nim";
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary20 = ([99,111,109,112,53,52] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
        }
        else {
        Temporary20 = ([99,111,109,112,53,52] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var _comp54_2852133625 = initProbRow_2852128891(Temporary20, 1.0, self_2852132195.css.val, []);
        F.line = 108;
        if ((scopedCycleCounter_1644167270[0] == 0)) {
        Temporary21 = ([99,111,109,112,53,52] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
        }
        else {
        Temporary21 = ([99,111,109,112,53,52] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
        }
        
        var comp54_2852133626 = rgcmp(toJSStr(Temporary21), _comp54_2852133625);
        F.line = 108;
        comp54_2852133626.slot = HEX3Aanonymous_2852133627;
        F.line = 108;
        var data_comp54_2852133728 = render_1644175063(comp54_2852133626);
        F.line = 108;
        addArgIter_1694499355(data_comp54_2852133728, ([100,97,116,97,45] || []).concat(comp54_2852133626.uniqCompId || []));
        F.line = 108;
        window.addEventListener('beforeunload', data_comp54_2852133728.exited);
        F.line = 108;
        window.addEventListener('pagehide', data_comp54_2852133728.pageHide);
        F.line = 108;
        window.addEventListener('pageshow', data_comp54_2852133728.pageShow);
        F.line = 110;
        var c55_2852133729 = 0;
        F.line = 110;
        var __r55_2852133737 = newSeq_2818572815(0);
        Label22: {
          F.line = 109;
          var i_2852133745 = 0;
          F.line = 117;
          F.filename = "iterators_1.nim";
          var colontmp__536881657 = 0;
          F.line = 109;
          F.filename = "layout.nim";
          colontmp__536881657 = (self_2852132195.content.val).length;
          F.line = 119;
          F.filename = "iterators_1.nim";
          var i_536881658 = 1;
          Label23: {
            F.line = 120;
              Label24: while (true) {
              if (!(i_536881658 < colontmp__536881657)) break Label24;
                F.line = 109;
                F.filename = "layout.nim";
                i_2852133745 = i_536881658;
                F.line = 109;
                c55_2852133729 = addInt(c55_2852133729, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c55_2852133729;
                F.line = 109;
                F.filename = "layout.nim";
                F.line = 110;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary25 = ([99,111,109,112,53,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary25 = ([99,111,109,112,53,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp56_2852133851 = initPageCut_2852131547(Temporary25);
                F.line = 110;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary26 = ([99,111,109,112,53,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary26 = ([99,111,109,112,53,54] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp56_2852133852 = rgcmp(toJSStr(Temporary26), _comp56_2852133851);
                F.line = 110;
                comp56_2852133852.slot = HEX3Aanonymous_2852133853;
                F.line = 110;
                var data_comp56_2852133870 = render_1644175063(comp56_2852133852);
                F.line = 110;
                addArgIter_1694499355(data_comp56_2852133870, ([100,97,116,97,45] || []).concat(comp56_2852133852.uniqCompId || []));
                F.line = 110;
                window.addEventListener('beforeunload', data_comp56_2852133870.exited);
                F.line = 110;
                window.addEventListener('pagehide', data_comp56_2852133870.pageHide);
                F.line = 110;
                window.addEventListener('pageshow', data_comp56_2852133870.pageShow);
                F.line = 111;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary27 = ([99,111,109,112,53,55] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary27 = ([99,111,109,112,53,55] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var _comp57_2852133971 = initProbRow_2852128891(Temporary27, 1.0, self_2852132195.css.val, []);
                F.line = 111;
                if ((scopedCycleCounter_1644167270[0] == 0)) {
                Temporary28 = ([99,111,109,112,53,55] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                }
                else {
                Temporary28 = ([99,111,109,112,53,55] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c55_2852133729) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                }
                
                var comp57_2852133972 = rgcmp(toJSStr(Temporary28), _comp57_2852133971);
                F.line = 111;
                comp57_2852133972.slot = HEX3Aanonymous_2852133973;
                F.line = 111;
                var data_comp57_2852134074 = render_1644175063(comp57_2852133972);
                F.line = 111;
                addArgIter_1694499355(data_comp57_2852134074, ([100,97,116,97,45] || []).concat(comp57_2852133972.uniqCompId || []));
                F.line = 111;
                window.addEventListener('beforeunload', data_comp57_2852134074.exited);
                F.line = 111;
                window.addEventListener('pagehide', data_comp57_2852134074.pageHide);
                F.line = 111;
                window.addEventListener('pageshow', data_comp57_2852134074.pageShow);
                __r55_2852133737.push(tg2([100,105,118], [data_comp56_2852133870, data_comp57_2852134074], true));;
                F.line = 110;
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 122;
                F.filename = "iterators_1.nim";
                i_536881658 = addInt(i_536881658, 1);
              }
          };
        };
        Temporary1 = tg2([100,105,118], [data_comp54_2852133728, tg2([100,105,118], __r55_2852133737, true)], true);
        }
        else {
          F.line = 108;
          F.filename = "layout.nim";
          if ((scopedCycleCounter_1644167270[0] == 0)) {
          Temporary29 = [99,111,109,112,53,56];
          }
          else {
          Temporary29 = ([99,111,109,112,53,56] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
          }
          
          var _comp58_2852134221 = initProbRow_2852128891(Temporary29, 1.0, self_2852132195.css.val, []);
          F.line = 108;
          if ((scopedCycleCounter_1644167270[0] == 0)) {
          Temporary30 = [99,111,109,112,53,56];
          }
          else {
          Temporary30 = ([99,111,109,112,53,56] || []).concat(HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
          }
          
          var comp58_2852134222 = rgcmp(toJSStr(Temporary30), _comp58_2852134221);
          F.line = 108;
          comp58_2852134222.slot = HEX3Aanonymous_2852134223;
          F.line = 108;
          var data_comp58_2852134324 = render_1644175063(comp58_2852134222);
          F.line = 108;
          addArgIter_1694499355(data_comp58_2852134324, ([100,97,116,97,45] || []).concat(comp58_2852134222.uniqCompId || []));
          F.line = 108;
          window.addEventListener('beforeunload', data_comp58_2852134324.exited);
          F.line = 108;
          window.addEventListener('pagehide', data_comp58_2852134324.pageHide);
          F.line = 108;
          window.addEventListener('pageshow', data_comp58_2852134324.pageShow);
          F.line = 110;
          var c59_2852134325 = 0;
          F.line = 110;
          var __r59_2852134333 = newSeq_2818572815(0);
          Label31: {
            F.line = 109;
            var i_2852134341 = 0;
            F.line = 117;
            F.filename = "iterators_1.nim";
            var colontmp__536881661 = 0;
            F.line = 109;
            F.filename = "layout.nim";
            colontmp__536881661 = (self_2852132195.content.val).length;
            F.line = 119;
            F.filename = "iterators_1.nim";
            var i_536881662 = 1;
            Label32: {
              F.line = 120;
                Label33: while (true) {
                if (!(i_536881662 < colontmp__536881661)) break Label33;
                  F.line = 109;
                  F.filename = "layout.nim";
                  i_2852134341 = i_536881662;
                  F.line = 109;
                  c59_2852134325 = addInt(c59_2852134325, 1);
                  F.line = 1418;
                  F.filename = "macro_utils.nim";
                  scopedCycleCounter_1644167270[0] = c59_2852134325;
                  F.line = 109;
                  F.filename = "layout.nim";
                  F.line = 110;
                  if ((scopedCycleCounter_1644167270[0] == 0)) {
                  Temporary34 = ([99,111,109,112,54,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                  }
                  else {
                  Temporary34 = ([99,111,109,112,54,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                  }
                  
                  var _comp60_2852134447 = initPageCut_2852131547(Temporary34);
                  F.line = 110;
                  if ((scopedCycleCounter_1644167270[0] == 0)) {
                  Temporary35 = ([99,111,109,112,54,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                  }
                  else {
                  Temporary35 = ([99,111,109,112,54,48] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                  }
                  
                  var comp60_2852134448 = rgcmp(toJSStr(Temporary35), _comp60_2852134447);
                  F.line = 110;
                  comp60_2852134448.slot = HEX3Aanonymous_2852134449;
                  F.line = 110;
                  var data_comp60_2852134466 = render_1644175063(comp60_2852134448);
                  F.line = 110;
                  addArgIter_1694499355(data_comp60_2852134466, ([100,97,116,97,45] || []).concat(comp60_2852134448.uniqCompId || []));
                  F.line = 110;
                  window.addEventListener('beforeunload', data_comp60_2852134466.exited);
                  F.line = 110;
                  window.addEventListener('pagehide', data_comp60_2852134466.pageHide);
                  F.line = 110;
                  window.addEventListener('pageshow', data_comp60_2852134466.pageShow);
                  F.line = 111;
                  if ((scopedCycleCounter_1644167270[0] == 0)) {
                  Temporary36 = ([99,111,109,112,54,49] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                  }
                  else {
                  Temporary36 = ([99,111,109,112,54,49] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                  }
                  
                  var _comp61_2852134567 = initProbRow_2852128891(Temporary36, 1.0, self_2852132195.css.val, []);
                  F.line = 111;
                  if ((scopedCycleCounter_1644167270[0] == 0)) {
                  Temporary37 = ([99,111,109,112,54,49] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || []);
                  }
                  else {
                  Temporary37 = ([99,111,109,112,54,49] || []).concat(compCounter_2852132329 || [],[95,95] || [],HEX24_369098760(c59_2852134325) || [],[95,95,95,95] || [],HEX24_369098760(cycleCounter_2852132328[cycleCounter_2852132328_Idx]) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
                  }
                  
                  var comp61_2852134568 = rgcmp(toJSStr(Temporary37), _comp61_2852134567);
                  F.line = 111;
                  comp61_2852134568.slot = HEX3Aanonymous_2852134569;
                  F.line = 111;
                  var data_comp61_2852134670 = render_1644175063(comp61_2852134568);
                  F.line = 111;
                  addArgIter_1694499355(data_comp61_2852134670, ([100,97,116,97,45] || []).concat(comp61_2852134568.uniqCompId || []));
                  F.line = 111;
                  window.addEventListener('beforeunload', data_comp61_2852134670.exited);
                  F.line = 111;
                  window.addEventListener('pagehide', data_comp61_2852134670.pageHide);
                  F.line = 111;
                  window.addEventListener('pageshow', data_comp61_2852134670.pageShow);
                  __r59_2852134333.push(tg2([100,105,118], [data_comp60_2852134466, data_comp61_2852134670], true));;
                  F.line = 110;
                  scopedCycleCounter_1644167270[0] = 0;
                  F.line = 122;
                  F.filename = "iterators_1.nim";
                  i_536881662 = addInt(i_536881662, 1);
                }
            };
          };
        Temporary1 = tg2([100,105,118], [data_comp58_2852134324, tg2([100,105,118], __r59_2852134333, true)], true);
        }
        }}
        var _res_2852134715 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp45_2852132322.slotData = _res_2852134715;
        result_2852132330 = _res_2852134715;
      framePtr = F.prev;

      return result_2852132330;

    }

  var result_2852132196 = null;

  var F = {procname: "layout.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "layout.nim";
    F.line = 106;
    var numPages_2852132200 = Math.ceil(((self_2852132195.content.val).length / self_2852132195.n.val));
    F.line = 108;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,52,53] || []).concat(self_2852132195.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,52,53] || []).concat(self_2852132195.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp45_2852132321 = initPages_2852126867(Temporary1, 1, [], []);
    F.line = 108;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,52,53] || []).concat(self_2852132195.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,52,53] || []).concat(self_2852132195.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp45_2852132322 = rgcmp(toJSStr(Temporary2), _comp45_2852132321);
    F.line = 109;
    comp45_2852132322.slot = HEX3Aanonymous_2852132323;
    F.line = 109;
    var data_comp45_2852134716 = render_1644175063(comp45_2852132322);
    F.line = 109;
    addArgIter_1694499355(data_comp45_2852134716, ([100,97,116,97,45] || []).concat(comp45_2852132322.uniqCompId || []));
    F.line = 109;
    window.addEventListener('beforeunload', data_comp45_2852134716.exited);
    F.line = 109;
    window.addEventListener('pagehide', data_comp45_2852134716.pageHide);
    F.line = 109;
    window.addEventListener('pageshow', data_comp45_2852134716.pageShow);
    result_2852132196 = tg2([100,105,118], [tg2([100,105,118], [], true), data_comp45_2852134716], true);
  framePtr = F.prev;

  return result_2852132196;

}

function style_2852132191(self_2852132192) {
  var result_2852132193 = [];

  var F = {procname: "layout.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 101;
    F.filename = "layout.nim";
    result_2852132193 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852132193;

}

function render_2852134737(self_2852134738) {
  var result_2852134739 = null;

  var F = {procname: "layout.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 101;
    F.filename = "layout.nim";
    currentComponentsList_1644168814[0].push(self_2852134738);;
    F.line = 101;
    currentComponent_1644168809[0] = nimCopy(null, self_2852134738.uniqCompId, NTI33554449);
    F.line = 101;
    script_2852132189(self_2852134738);
    if ((self_2852134738.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_2852134738.created(self_2852134738, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_2852134738.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_2852134738.beforeUpdated(self_2852134738, null);
    F.line = 101;
    F.filename = "layout.nim";
    result_2852134739 = renderTag_2852132194(self_2852134738);
    F.line = 101;
    tgadd(result_2852134739, [tg2([115,116,121,108,101], [textTag_1694499242(style_2852132191(self_2852134738))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_2852134738.rendered(self_2852134738, null);
    F.line = 101;
    F.filename = "layout.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_2852134739;

}

function script_3019908063(self_3019908064) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019908068(self_3019908069) {
  var result_3019908070 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 105;
    F.filename = "base24.nim";
    result_3019908070 = tg2([100,105,118], [tg1([115,116,114,111,110,103], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32,117,110,100,101,114,108,105,110,101]}], 0), [tg4([68,97,105,108,121,32,67,108,97,115,115,119,111,114,107,32,71,114,97,100,101,115], true, [], false)], false), tg2([117,108], [tg2([100,116], [tg4([116,111,32,103,101,116,32,97,116,32,108,101,97,115,116,32,55,48,37], true, [], false)], false), tg2([100,100], [tg4([99,111,109,112,108,101,116,101,32,108,101,118,101,108,115,32,49,32,97,110,100,32,50], true, [], false)], false), tg2([100,116], [tg4([116,111,32,103,101,116,32,97,116,32,108,101,97,115,116,32,53,48,37], true, [], false)], false), tg2([100,100], [tg4([99,111,109,112,108,101,116,101,32,97,110,121,32,115,116,97,116,105,111,110], true, [], false)], false), tg2([100,116], [tg4([116,111,32,103,101,116,32,104,105,103,104,101,114,32,103,114,97,100,101,115], true, [], false)], false), tg2([100,100], [tg4([99,111,109,112,108,101,116,101,32,109,111,114,101,32,115,116,97,116,105,111,110,115,33], true, [], false)], false)], false)], true);
  framePtr = F.prev;

  return result_3019908070;

}

function style_3019908065(self_3019908066) {
  var result_3019908067 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 96;
    F.filename = "base24.nim";
    result_3019908067 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019908067;

}

function render_3019909063(self_3019909064) {
  var result_3019909065 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 96;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019909064);;
    F.line = 96;
    currentComponent_1644168809[0] = nimCopy(null, self_3019909064.uniqCompId, NTI33554449);
    F.line = 96;
    script_3019908063(self_3019909064);
    if ((self_3019909064.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019909064.created(self_3019909064, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019909064.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019909064.beforeUpdated(self_3019909064, null);
    F.line = 96;
    F.filename = "base24.nim";
    result_3019909065 = renderTag_3019908068(self_3019909064);
    F.line = 96;
    tgadd(result_3019909065, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019908065(self_3019909064))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019909064.rendered(self_3019909064, null);
    F.line = 96;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019909065;

}

function script_3019907282(self_3019907283) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019907287(self_3019907288) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3019907392(scopeSelf_3019907393, inComponent_3019907394, compName_3019907395, inCycle_3019907396, cycleCounter_3019907397, cycleCounter_3019907397_Idx, compCounter_3019907398) {
        var Temporary1;

      var result_3019907399 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
        F.line = 90;
        F.filename = "base24.nim";
        F.line = 90;
        if ((inCycle_3019907396 && inComponent_3019907394)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_3019907396) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_3019907394) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_3019907408 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp323_3019907391.slotData = _res_3019907408;
        result_3019907399 = _res_3019907408;
      framePtr = F.prev;

      return result_3019907399;

    }

  var result_3019907289 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 94;
    F.filename = "base24.nim";
    F.line = 90;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,50,51] || []).concat(self_3019907288.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,50,51] || []).concat(self_3019907288.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp323_3019907390 = initStrut_2852130043(Temporary1, [49,101,109], [49,101,109], []);
    F.line = 90;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,50,51] || []).concat(self_3019907288.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,50,51] || []).concat(self_3019907288.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp323_3019907391 = rgcmp(toJSStr(Temporary2), _comp323_3019907390);
    F.line = 90;
    comp323_3019907391.slot = HEX3Aanonymous_3019907392;
    F.line = 90;
    var data_comp323_3019907409 = render_1644175063(comp323_3019907391);
    F.line = 90;
    addArgIter_1694499355(data_comp323_3019907409, ([100,97,116,97,45] || []).concat(comp323_3019907391.uniqCompId || []));
    F.line = 90;
    window.addEventListener('beforeunload', data_comp323_3019907409.exited);
    F.line = 90;
    window.addEventListener('pagehide', data_comp323_3019907409.pageHide);
    F.line = 90;
    window.addEventListener('pageshow', data_comp323_3019907409.pageShow);
    Label3: {
      F.line = 93;
      var fmtRes_3019907622 = [mnewString(0)];
      F.line = 93;
      fmtRes_3019907622[0].push.apply(fmtRes_3019907622[0], [76,101,118,101,108,32]);;
      F.line = 93;
      formatValue_2852127860(fmtRes_3019907622, 0, self_3019907288.n, []);
      F.line = 93;
      fmtRes_3019907622[0].push.apply(fmtRes_3019907622[0], [58,32]);;
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3019907734 = [0];
    result_3019907289 = tg2([100,105,118], [data_comp323_3019907409, tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [98,111,114,100,101,114,45,115,116,121,108,101,58,32,48,46,50,101,109,32,103,114,111,111,118,101,32,103,114,97,121,59]}], 0), [tg2([115,116,114,111,110,103], [tg4(fmtRes_3019907622[0], true, [], false), self_3019907288.slot(self_3019907288, true, [84,80,76,101,118,101,108], false, cclCounter_3019907734, 0, self_3019907288.uniqCompId)], false)], false)], true);
  framePtr = F.prev;

  return result_3019907289;

}

function style_3019907284(self_3019907285) {
  var result_3019907286 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "base24.nim";
    result_3019907286 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019907286;

}

function render_3019907797(self_3019907798) {
  var result_3019907799 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 87;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019907798);;
    F.line = 87;
    currentComponent_1644168809[0] = nimCopy(null, self_3019907798.uniqCompId, NTI33554449);
    F.line = 87;
    script_3019907282(self_3019907798);
    if ((self_3019907798.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019907798.created(self_3019907798, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019907798.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019907798.beforeUpdated(self_3019907798, null);
    F.line = 87;
    F.filename = "base24.nim";
    result_3019907799 = renderTag_3019907287(self_3019907798);
    F.line = 87;
    tgadd(result_3019907799, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019907284(self_3019907798))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019907798.rendered(self_3019907798, null);
    F.line = 87;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019907799;

}

function script_3019906781(self_3019906782) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initKeyNotice_3019905907(uniqCompId_3019905908) {
    
function HEX3Aanonymous_3019905911(self_3019905912, ev_3019905913) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019905914(self_3019905915, ev_3019905916) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019905917(self_3019905918, ev_3019905919) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019905920(self_3019905921, ev_3019905922) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019905923(self_3019905924, ev_3019905925) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019905926(self_3019905927, ev_3019905928) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019905929(self_3019905930, ev_3019905931) {
      var F = {procname: "initKeyNotice.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3019905909 = null;

  var F = {procname: "base24.initKeyNotice", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 78;
    F.filename = "base24.nim";
    var self_3019905910 = {uniqCompId: nimCopy(null, uniqCompId_3019905908, NTI33554449), m_type: NTI3019902813, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 80;
    self_3019905910.beforeUpdated = HEX3Aanonymous_3019905911;
    F.line = 80;
    self_3019905910.pageShow = HEX3Aanonymous_3019905914;
    F.line = 80;
    self_3019905910.pageHide = HEX3Aanonymous_3019905917;
    F.line = 80;
    self_3019905910.rendered = HEX3Aanonymous_3019905920;
    F.line = 80;
    self_3019905910.exited = HEX3Aanonymous_3019905923;
    F.line = 80;
    self_3019905910.created = HEX3Aanonymous_3019905926;
    F.line = 80;
    self_3019905910.updated = HEX3Aanonymous_3019905929;
    F.line = 78;
    createdComponentsList_1644168819[0].push(self_3019905910);;
    F.line = 779;
    F.filename = "components.nim";
    result_3019905909 = self_3019905910;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3019905909;

}

function renderTag_3019906786(self_3019906787) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3019906891(scopeSelf_3019906892, inComponent_3019906893, compName_3019906894, inCycle_3019906895, cycleCounter_3019906896, cycleCounter_3019906896_Idx, compCounter_3019906897) {
        var Temporary1;

      var result_3019906898 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/private/macro_utils.nim", line: 0};
      framePtr = F;
        F.line = 260;
        F.filename = "macro_utils.nim";
        F.line = 260;
        if ((inCycle_3019906895 && inComponent_3019906893)) {
        Temporary1 = tg2([100,105,118], [tg4([67,111,109,112,108,101,116,101,32,116,111,32,76,101,118,101,108,32,50], true, [], false)], true);
        }
        else {
        if (inCycle_3019906895) {
        Temporary1 = tg2([100,105,118], [tg4([67,111,109,112,108,101,116,101,32,116,111,32,76,101,118,101,108,32,50], true, [], false)], true);
        }
        else {
        if (inComponent_3019906893) {
        Temporary1 = tg2([100,105,118], [tg4([67,111,109,112,108,101,116,101,32,116,111,32,76,101,118,101,108,32,50], true, [], false)], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [tg4([67,111,109,112,108,101,116,101,32,116,111,32,76,101,118,101,108,32,50], true, [], false)], true);
        }
        }}
        var _res_3019906987 = Temporary1;
        F.line = 293;
        comp322_3019906890.slotData = _res_3019906987;
        result_3019906898 = _res_3019906987;
      framePtr = F.prev;

      return result_3019906898;

    }

  var result_3019906788 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 85;
    F.filename = "base24.nim";
    F.line = 85;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,50,50] || []).concat(self_3019906787.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,50,50] || []).concat(self_3019906787.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp322_3019906889 = initKeyNotice_3019905907(Temporary1);
    F.line = 85;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,50,50] || []).concat(self_3019906787.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,50,50] || []).concat(self_3019906787.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp322_3019906890 = rgcmp(toJSStr(Temporary2), _comp322_3019906889);
    F.line = 260;
    F.filename = "macro_utils.nim";
    comp322_3019906890.slot = HEX3Aanonymous_3019906891;
    F.line = 260;
    var data_comp322_3019906988 = render_1644175063(comp322_3019906890);
    F.line = 260;
    addArgIter_1694499355(data_comp322_3019906988, ([100,97,116,97,45] || []).concat(comp322_3019906890.uniqCompId || []));
    F.line = 260;
    window.addEventListener('beforeunload', data_comp322_3019906988.exited);
    F.line = 260;
    window.addEventListener('pagehide', data_comp322_3019906988.pageHide);
    F.line = 260;
    window.addEventListener('pageshow', data_comp322_3019906988.pageShow);
    result_3019906788 = tg2([100,105,118], [data_comp322_3019906988], true);
  framePtr = F.prev;

  return result_3019906788;

}

function style_3019906783(self_3019906784) {
  var result_3019906785 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 82;
    F.filename = "base24.nim";
    result_3019906785 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019906785;

}

function render_3019907009(self_3019907010) {
  var result_3019907011 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 82;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019907010);;
    F.line = 82;
    currentComponent_1644168809[0] = nimCopy(null, self_3019907010.uniqCompId, NTI33554449);
    F.line = 82;
    script_3019906781(self_3019907010);
    if ((self_3019907010.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019907010.created(self_3019907010, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019907010.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019907010.beforeUpdated(self_3019907010, null);
    F.line = 82;
    F.filename = "base24.nim";
    result_3019907011 = renderTag_3019906786(self_3019907010);
    F.line = 82;
    tgadd(result_3019907011, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019906783(self_3019907010))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019907010.rendered(self_3019907010, null);
    F.line = 82;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019907011;

}

function script_3003122226(self_3003122227) {
  var F = {procname: "mGrid.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3003122231(self_3003122232) {
                      var Temporary12;

  var result_3003122233 = null;

  var F = {procname: "mGrid.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 28;
    F.filename = "mGrid.nim";
    F.line = 736;
    F.filename = "macros.nim";
    var c273_3003122344 = 0;
    F.line = 736;
    var __r273_3003122352 = newSeq_2818572815(0);
    Label1: {
      F.line = 21;
      F.filename = "mGrid.nim";
      var i_3003122357 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881675 = 0;
      F.line = 21;
      F.filename = "mGrid.nim";
      colontmp__536881675 = ((self_3003122232.nx.val) | 0);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881676 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536881676 <= colontmp__536881675)) break Label3;
            F.line = 21;
            F.filename = "mGrid.nim";
            i_3003122357 = res_536881676;
            F.line = 21;
            c273_3003122344 = addInt(c273_3003122344, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c273_3003122344;
            F.line = 21;
            F.filename = "mGrid.nim";
            F.line = 23;
            var __r274_3003122370 = newSeq_2818572815(0);
            Label4: {
              F.line = 22;
              var j_3003122375 = 0;
              F.line = 75;
              F.filename = "iterators_1.nim";
              var colontmp__536881672 = 0;
              F.line = 22;
              F.filename = "mGrid.nim";
              colontmp__536881672 = ((self_3003122232.ny.val) | 0);
              F.line = 90;
              F.filename = "iterators_1.nim";
              var res_536881673 = 1;
              Label5: {
                F.line = 91;
                  Label6: while (true) {
                  if (!(res_536881673 <= colontmp__536881672)) break Label6;
                    F.line = 22;
                    F.filename = "mGrid.nim";
                    j_3003122375 = res_536881673;
                    F.line = 22;
                    c273_3003122344 = addInt(c273_3003122344, 1);
                    F.line = 1424;
                    F.filename = "macro_utils.nim";
                    scopedCycleCounter_1644167270[0] = c273_3003122344;
                    F.line = 22;
                    F.filename = "mGrid.nim";
                    Label7: {
                      F.line = 23;
                      var fmtRes_3003122483 = [mnewString(0)];
                      F.line = 23;
                      formatValue_2902459345(fmtRes_3003122483, 0, ((100.0 / self_3003122232.nx.val) * subInt(i_3003122357, 1)), []);
                      F.line = 23;
                      fmtRes_3003122483[0].push.apply(fmtRes_3003122483[0], [37]);;
                    };
                    Label8: {
                      F.line = 24;
                      var fmtRes_3003122493 = [mnewString(0)];
                      F.line = 24;
                      formatValue_2902459345(fmtRes_3003122493, 0, ((100.0 / self_3003122232.ny.val) * subInt(j_3003122375, 1)), []);
                      F.line = 24;
                      fmtRes_3003122493[0].push.apply(fmtRes_3003122493[0], [37]);;
                    };
                    Label9: {
                      F.line = 25;
                      var fmtRes_3003122503 = [mnewString(0)];
                      F.line = 25;
                      formatValue_2902459345(fmtRes_3003122503, 0, (100.0 / self_3003122232.nx.val), []);
                      F.line = 25;
                      fmtRes_3003122503[0].push.apply(fmtRes_3003122503[0], [37]);;
                    };
                    Label10: {
                      F.line = 26;
                      var fmtRes_3003122513 = [mnewString(0)];
                      F.line = 26;
                      formatValue_2902459345(fmtRes_3003122513, 0, (100.0 / self_3003122232.ny.val), []);
                      F.line = 26;
                      fmtRes_3003122513[0].push.apply(fmtRes_3003122513[0], [37]);;
                    };
                    Label11: {
                      F.line = 27;
                      var fmtRes_3003122523 = [mnewString(0)];
                      F.line = 27;
                      fmtRes_3003122523[0].push.apply(fmtRes_3003122523[0], [102,105,108,108,58,32]);;
                      F.line = 27;
                      formatValue_704643243(fmtRes_3003122523, 0, (Temporary12 = self_3003122232.fills.val[chckIndx(subInt(i_3003122357, 1), 0, (self_3003122232.fills.val).length - 1)], Temporary12)[chckIndx(subInt(j_3003122375, 1), 0, (Temporary12).length - 1)], []);
                      F.line = 27;
                      fmtRes_3003122523[0].push.apply(fmtRes_3003122523[0], [59,32,115,116,114,111,107,101,58,32]);;
                      F.line = 27;
                      formatValue_2785020246(fmtRes_3003122523, 0, self_3003122232.stroke, []);
                      F.line = 27;
                      fmtRes_3003122523[0].push.apply(fmtRes_3003122523[0], [59,32]);;
                      F.line = 27;
                      formatValue_2785020246(fmtRes_3003122523, 0, self_3003122232.css, []);
                    };
                    __r274_3003122370.push(tg2([100,105,118], [tg1([114,101,99,116], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [120], Field1: nimCopy(null, fmtRes_3003122483[0], NTI33554449)}, NTI3003122207), nimCopy(null, {Field0: [121], Field1: nimCopy(null, fmtRes_3003122493[0], NTI33554449)}, NTI3003122207), nimCopy(null, {Field0: [119,105,100,116,104], Field1: nimCopy(null, fmtRes_3003122503[0], NTI33554449)}, NTI3003122207), nimCopy(null, {Field0: [104,101,105,103,104,116], Field1: nimCopy(null, fmtRes_3003122513[0], NTI33554449)}, NTI3003122207), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_3003122523[0], NTI33554449)}, NTI3003122207)], 0), [], false)], true));;
                    F.line = 23;
                    scopedCycleCounter_1644167270[0] = 0;
                    F.line = 93;
                    F.filename = "iterators_1.nim";
                    res_536881673 = addInt(res_536881673, 1);
                  }
              };
            };
            __r273_3003122352.push(tg2([100,105,118], [tg2([100,105,118], __r274_3003122370, true)], true));;
            F.line = 736;
            F.filename = "macros.nim";
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881676 = addInt(res_536881676, 1);
          }
      };
    };
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3003122708 = [0];
    result_3003122233 = tg2([100,105,118], [tg1([115,118,103], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [119,105,100,116,104], Field1: nimCopy(null, self_3003122232.width.val, NTI33554449)}, NTI3003122116), nimCopy(null, {Field0: [104,101,105,103,104,116], Field1: nimCopy(null, self_3003122232.height.val, NTI33554449)}, NTI3003122116)], 0), [tg2([100,105,118], __r273_3003122352, true), self_3003122232.slot(self_3003122232, true, [109,71,114,105,100], false, cclCounter_3003122708, 0, self_3003122232.uniqCompId)], false)], true);
  framePtr = F.prev;

  return result_3003122233;

}

function style_3003122228(self_3003122229) {
  var result_3003122230 = [];

  var F = {procname: "mGrid.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 9;
    F.filename = "mGrid.nim";
    result_3003122230 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3003122230;

}

function render_3003122767(self_3003122768) {
  var result_3003122769 = null;

  var F = {procname: "mGrid.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 9;
    F.filename = "mGrid.nim";
    currentComponentsList_1644168814[0].push(self_3003122768);;
    F.line = 9;
    currentComponent_1644168809[0] = nimCopy(null, self_3003122768.uniqCompId, NTI33554449);
    F.line = 9;
    script_3003122226(self_3003122768);
    if ((self_3003122768.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3003122768.created(self_3003122768, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3003122768.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3003122768.beforeUpdated(self_3003122768, null);
    F.line = 9;
    F.filename = "mGrid.nim";
    result_3003122769 = renderTag_3003122231(self_3003122768);
    F.line = 9;
    tgadd(result_3003122769, [tg2([115,116,121,108,101], [textTag_1694499242(style_3003122228(self_3003122768))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3003122768.rendered(self_3003122768, null);
    F.line = 9;
    F.filename = "mGrid.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3003122769;

}

function script_3019900982(self_3019900983) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019900987(self_3019900988) {
    var Temporary1;

  var result_3019900989 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "base24.nim";
    if (!(eqStrings(self_3019900988.definition.val, []))) {
    Label2: {
      F.line = 30;
      var fmtRes_3019901516 = [mnewString(0)];
      F.line = 30;
      fmtRes_3019901516[0].push.apply(fmtRes_3019901516[0], [32,91]);;
      F.line = 30;
      formatValue_2785020246(fmtRes_3019901516, 0, self_3019900988.definition, []);
      F.line = 30;
      fmtRes_3019901516[0].push.apply(fmtRes_3019901516[0], [93]);;
    };
    Temporary1 = tg2([100,105,118], [tg2([115,112,97,110], [tg4(fmtRes_3019901516[0], true, [], false)], false)], true);
    }
    else {
    Temporary1 = null;
    }
    
    result_3019900989 = tg2([100,105,118], [tg2([115,112,97,110], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32,117,110,100,101,114,108,105,110,101]}], 0), [tg4(HEX24_2785020465(self_3019900988.word), true, [], false)], false), Temporary1], false)], true);
  framePtr = F.prev;

  return result_3019900989;

}

function style_3019900984(self_3019900985) {
  var result_3019900986 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 23;
    F.filename = "base24.nim";
    result_3019900986 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019900986;

}

function render_3019901610(self_3019901611) {
  var result_3019901612 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 23;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019901611);;
    F.line = 23;
    currentComponent_1644168809[0] = nimCopy(null, self_3019901611.uniqCompId, NTI33554449);
    F.line = 23;
    script_3019900982(self_3019901611);
    if ((self_3019901611.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019901611.created(self_3019901611, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019901611.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019901611.beforeUpdated(self_3019901611, null);
    F.line = 23;
    F.filename = "base24.nim";
    result_3019901612 = renderTag_3019900987(self_3019901611);
    F.line = 23;
    tgadd(result_3019901612, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019900984(self_3019901611))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019901611.rendered(self_3019901611, null);
    F.line = 23;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019901612;

}

function script_3019900204(self_3019900205) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019900209(self_3019900210) {
  var result_3019900211 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 21;
    F.filename = "base24.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3019900616 = [0];
    result_3019900211 = tg2([100,105,118], [tg2([104,53], [tg2([115,99], [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,111,110,116,45,118,97,114,105,97,110,116,58,115,109,97,108,108,45,99,97,112,115,59,99,111,108,111,114,58,32,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,109,117,116,101,100,41,59]}], 0), [self_3019900210.slot(self_3019900210, true, [84,97,115,107,68,101,115,99], false, cclCounter_3019900616, 0, self_3019900210.uniqCompId)], false)], false)], false)], true);
  framePtr = F.prev;

  return result_3019900211;

}

function style_3019900206(self_3019900207) {
  var result_3019900208 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "base24.nim";
    result_3019900208 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019900208;

}

function render_3019900699(self_3019900700) {
  var result_3019900701 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019900700);;
    F.line = 17;
    currentComponent_1644168809[0] = nimCopy(null, self_3019900700.uniqCompId, NTI33554449);
    F.line = 17;
    script_3019900204(self_3019900700);
    if ((self_3019900700.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019900700.created(self_3019900700, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019900700.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019900700.beforeUpdated(self_3019900700, null);
    F.line = 17;
    F.filename = "base24.nim";
    result_3019900701 = renderTag_3019900209(self_3019900700);
    F.line = 17;
    tgadd(result_3019900701, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019900206(self_3019900700))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019900700.rendered(self_3019900700, null);
    F.line = 17;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019900701;

}

function script_3019902455(self_3019902456) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019902460(self_3019902461) {
  var result_3019902462 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 50;
    F.filename = "base24.nim";
    result_3019902462 = tg2([100,105,118], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [100,105,115,112,108,97,121,58,32,102,108,101,120,59,32,119,105,100,116,104,58,32,49,48,48,37,59]}], 0), [tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,108,101,120,58,32,53,32,48,32,48,59]}], 0), [tg2([104,50], [tg4([78,97,109,101,58], true, [], false), tg2([104,114], [], false)], false)], false), tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,108,101,120,58,32,53,32,48,32,48,59]}], 0), [tg2([104,50], [tg4([83,117,98,106,101,99,116,58], true, [], false), tg2([104,114], [], false)], false)], false), tg1([100,105,118], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [102,108,101,120,58,32,52,32,48,32,48,59]}], 0), [tg2([104,50], [tg4([65,115,115,105,103,110,109,101,110,116,58], true, [], false), tg2([104,114], [], false)], false)], false)], false)], true);
  framePtr = F.prev;

  return result_3019902462;

}

function style_3019902457(self_3019902458) {
  var result_3019902459 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "base24.nim";
    result_3019902459 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019902459;

}

function render_3019903651(self_3019903652) {
  var result_3019903653 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019903652);;
    F.line = 39;
    currentComponent_1644168809[0] = nimCopy(null, self_3019903652.uniqCompId, NTI33554449);
    F.line = 39;
    script_3019902455(self_3019903652);
    if ((self_3019903652.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019903652.created(self_3019903652, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019903652.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019903652.beforeUpdated(self_3019903652, null);
    F.line = 39;
    F.filename = "base24.nim";
    result_3019903653 = renderTag_3019902460(self_3019903652);
    F.line = 39;
    tgadd(result_3019903653, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019902457(self_3019903652))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019903652.rendered(self_3019903652, null);
    F.line = 39;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019903653;

}

function script_3019901886(self_3019901887) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019901891(self_3019901892) {
  var result_3019901893 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 37;
    F.filename = "base24.nim";
    Label1: {
      F.line = 36;
      var fmtRes_3019902094 = [mnewString(0)];
      F.line = 36;
      fmtRes_3019902094[0].push.apply(fmtRes_3019902094[0], [98,111,114,100,101,114,45,98,111,116,116,111,109,58,32]);;
      F.line = 36;
      formatValue_704643243(fmtRes_3019902094, 0, [48,46,49,53,101,109,32,100,111,117,98,108,101,32,118,97,114,40,45,45,116,115,45,99,111,108,111,114,45,98,111,114,100,101,114,41], []);
      F.line = 36;
      fmtRes_3019902094[0].push.apply(fmtRes_3019902094[0], [59]);;
    };
    Label2: {
      F.line = 37;
      var fmtRes_3019902111 = [mnewString(0)];
      F.line = 37;
      formatValue_2785018980(fmtRes_3019902111, 0, self_3019901892.prompt, []);
      F.line = 37;
      fmtRes_3019902111[0].push.apply(fmtRes_3019902111[0], [58]);;
    };
    result_3019901893 = tg2([100,105,118], [tg2([100,105,118], [tg1([104,49], nstnewStringTableWithTableConstr([nimCopy(null, {Field0: [99,108,97,115,115], Field1: [110,111,45,115,99,114,101,101,110]}, NTI3019900628), nimCopy(null, {Field0: [115,116,121,108,101], Field1: nimCopy(null, fmtRes_3019902094[0], NTI33554449)}, NTI3019900628)], 0), [tg4(fmtRes_3019902111[0], true, [], false)], false)], false)], true);
  framePtr = F.prev;

  return result_3019901893;

}

function style_3019901888(self_3019901889) {
  var result_3019901890 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "base24.nim";
    result_3019901890 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019901890;

}

function render_3019902189(self_3019902190) {
  var result_3019902191 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019902190);;
    F.line = 33;
    currentComponent_1644168809[0] = nimCopy(null, self_3019902190.uniqCompId, NTI33554449);
    F.line = 33;
    script_3019901886(self_3019902190);
    if ((self_3019902190.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019902190.created(self_3019902190, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019902190.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019902190.beforeUpdated(self_3019902190, null);
    F.line = 33;
    F.filename = "base24.nim";
    result_3019902191 = renderTag_3019901891(self_3019902190);
    F.line = 33;
    tgadd(result_3019902191, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019901888(self_3019902190))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019902190.rendered(self_3019902190, null);
    F.line = 33;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019902191;

}

function script_3019904429(self_3019904430) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019904434(self_3019904435) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3019904539(scopeSelf_3019904540, inComponent_3019904541, compName_3019904542, inCycle_3019904543, cycleCounter_3019904544, cycleCounter_3019904544_Idx, compCounter_3019904545) {
        var Temporary1;

      var result_3019904546 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
        F.line = 67;
        F.filename = "base24.nim";
        F.line = 67;
        if ((inCycle_3019904543 && inComponent_3019904541)) {
        F.line = 66;
        var cclCounter_3019904647 = [cycleCounter_3019904544[cycleCounter_3019904544_Idx]];
        F.line = 736;
        F.filename = "macros.nim";
        var c309_3019904648 = 0;
        F.line = 736;
        var __r309_3019904656 = newSeq_2818572815(0);
        Label2: {
          F.line = 67;
          F.filename = "base24.nim";
          var i_3019904661 = 0;
          F.line = 75;
          F.filename = "iterators_1.nim";
          var colontmp__536881682 = 0;
          F.line = 67;
          F.filename = "base24.nim";
          colontmp__536881682 = mulInt(self_3019904435.ncols.val, self_3019904435.nrows.val);
          F.line = 90;
          F.filename = "iterators_1.nim";
          var res_536881683 = 1;
          Label3: {
            F.line = 91;
              Label4: while (true) {
              if (!(res_536881683 <= colontmp__536881682)) break Label4;
                F.line = 67;
                F.filename = "base24.nim";
                i_3019904661 = res_536881683;
                F.line = 67;
                c309_3019904648 = addInt(c309_3019904648, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c309_3019904648;
                F.line = 67;
                F.filename = "base24.nim";
                __r309_3019904656.push(tg2([100,105,118], [tg4([115,108,111,116], true, [], false)], true));;
                F.line = 736;
                F.filename = "macros.nim";
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 93;
                F.filename = "iterators_1.nim";
                res_536881683 = addInt(res_536881683, 1);
              }
          };
        };
        Temporary1 = tg2([100,105,118], [self_3019904435.slot(self_3019904435, true, [], true, cclCounter_3019904647, 0, compCounter_3019904545), tg2([100,105,118], __r309_3019904656, true)], true);
        }
        else {
        if (inCycle_3019904543) {
        F.line = 66;
        F.filename = "base24.nim";
        var cclCounter_3019904811 = [cycleCounter_3019904544[cycleCounter_3019904544_Idx]];
        F.line = 736;
        F.filename = "macros.nim";
        var c311_3019904812 = 0;
        F.line = 736;
        var __r311_3019904820 = newSeq_2818572815(0);
        Label5: {
          F.line = 67;
          F.filename = "base24.nim";
          var i_3019904825 = 0;
          F.line = 75;
          F.filename = "iterators_1.nim";
          var colontmp__536881686 = 0;
          F.line = 67;
          F.filename = "base24.nim";
          colontmp__536881686 = mulInt(self_3019904435.ncols.val, self_3019904435.nrows.val);
          F.line = 90;
          F.filename = "iterators_1.nim";
          var res_536881687 = 1;
          Label6: {
            F.line = 91;
              Label7: while (true) {
              if (!(res_536881687 <= colontmp__536881686)) break Label7;
                F.line = 67;
                F.filename = "base24.nim";
                i_3019904825 = res_536881687;
                F.line = 67;
                c311_3019904812 = addInt(c311_3019904812, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c311_3019904812;
                F.line = 67;
                F.filename = "base24.nim";
                __r311_3019904820.push(tg2([100,105,118], [tg4([115,108,111,116], true, [], false)], true));;
                F.line = 736;
                F.filename = "macros.nim";
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 93;
                F.filename = "iterators_1.nim";
                res_536881687 = addInt(res_536881687, 1);
              }
          };
        };
        Temporary1 = tg2([100,105,118], [self_3019904435.slot(self_3019904435, false, [], true, cclCounter_3019904811, 0, compCounter_3019904545), tg2([100,105,118], __r311_3019904820, true)], true);
        }
        else {
        if (inComponent_3019904541) {
        F.line = 66;
        F.filename = "base24.nim";
        var cclCounter_3019904975 = [cycleCounter_3019904544[cycleCounter_3019904544_Idx]];
        F.line = 736;
        F.filename = "macros.nim";
        var c313_3019904976 = 0;
        F.line = 736;
        var __r313_3019904984 = newSeq_2818572815(0);
        Label8: {
          F.line = 67;
          F.filename = "base24.nim";
          var i_3019904989 = 0;
          F.line = 75;
          F.filename = "iterators_1.nim";
          var colontmp__536881690 = 0;
          F.line = 67;
          F.filename = "base24.nim";
          colontmp__536881690 = mulInt(self_3019904435.ncols.val, self_3019904435.nrows.val);
          F.line = 90;
          F.filename = "iterators_1.nim";
          var res_536881691 = 1;
          Label9: {
            F.line = 91;
              Label10: while (true) {
              if (!(res_536881691 <= colontmp__536881690)) break Label10;
                F.line = 67;
                F.filename = "base24.nim";
                i_3019904989 = res_536881691;
                F.line = 67;
                c313_3019904976 = addInt(c313_3019904976, 1);
                F.line = 1418;
                F.filename = "macro_utils.nim";
                scopedCycleCounter_1644167270[0] = c313_3019904976;
                F.line = 67;
                F.filename = "base24.nim";
                __r313_3019904984.push(tg2([100,105,118], [tg4([115,108,111,116], true, [], false)], true));;
                F.line = 736;
                F.filename = "macros.nim";
                scopedCycleCounter_1644167270[0] = 0;
                F.line = 93;
                F.filename = "iterators_1.nim";
                res_536881691 = addInt(res_536881691, 1);
              }
          };
        };
        Temporary1 = tg2([100,105,118], [self_3019904435.slot(self_3019904435, true, [], false, cclCounter_3019904975, 0, compCounter_3019904545), tg2([100,105,118], __r313_3019904984, true)], true);
        }
        else {
          F.line = 66;
          F.filename = "base24.nim";
          var cclCounter_3019905139 = [cycleCounter_3019904544[cycleCounter_3019904544_Idx]];
          F.line = 736;
          F.filename = "macros.nim";
          var c315_3019905140 = 0;
          F.line = 736;
          var __r315_3019905148 = newSeq_2818572815(0);
          Label11: {
            F.line = 67;
            F.filename = "base24.nim";
            var i_3019905153 = 0;
            F.line = 75;
            F.filename = "iterators_1.nim";
            var colontmp__536881694 = 0;
            F.line = 67;
            F.filename = "base24.nim";
            colontmp__536881694 = mulInt(self_3019904435.ncols.val, self_3019904435.nrows.val);
            F.line = 90;
            F.filename = "iterators_1.nim";
            var res_536881695 = 1;
            Label12: {
              F.line = 91;
                Label13: while (true) {
                if (!(res_536881695 <= colontmp__536881694)) break Label13;
                  F.line = 67;
                  F.filename = "base24.nim";
                  i_3019905153 = res_536881695;
                  F.line = 67;
                  c315_3019905140 = addInt(c315_3019905140, 1);
                  F.line = 1418;
                  F.filename = "macro_utils.nim";
                  scopedCycleCounter_1644167270[0] = c315_3019905140;
                  F.line = 67;
                  F.filename = "base24.nim";
                  __r315_3019905148.push(tg2([100,105,118], [tg4([115,108,111,116], true, [], false)], true));;
                  F.line = 736;
                  F.filename = "macros.nim";
                  scopedCycleCounter_1644167270[0] = 0;
                  F.line = 93;
                  F.filename = "iterators_1.nim";
                  res_536881695 = addInt(res_536881695, 1);
                }
            };
          };
        Temporary1 = tg2([100,105,118], [self_3019904435.slot(self_3019904435, false, [], false, cclCounter_3019905139, 0, compCounter_3019904545), tg2([100,105,118], __r315_3019905148, true)], true);
        }
        }}
        var _res_3019905203 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp307_3019904538.slotData = _res_3019905203;
        result_3019904546 = _res_3019905203;
      framePtr = F.prev;

      return result_3019904546;

    }

  var result_3019904436 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 68;
    F.filename = "base24.nim";
    F.line = 66;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,48,55] || []).concat(self_3019904435.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,48,55] || []).concat(self_3019904435.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp307_3019904537 = initProbGrid_2852128287(Temporary1, self_3019904435.ncols.val, self_3019904435.stretch.val, [], []);
    F.line = 66;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,48,55] || []).concat(self_3019904435.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,48,55] || []).concat(self_3019904435.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp307_3019904538 = rgcmp(toJSStr(Temporary2), _comp307_3019904537);
    F.line = 67;
    comp307_3019904538.slot = HEX3Aanonymous_3019904539;
    F.line = 67;
    var data_comp307_3019905212 = render_1644175063(comp307_3019904538);
    F.line = 67;
    addArgIter_1694499355(data_comp307_3019905212, ([100,97,116,97,45] || []).concat(comp307_3019904538.uniqCompId || []));
    F.line = 67;
    window.addEventListener('beforeunload', data_comp307_3019905212.exited);
    F.line = 67;
    window.addEventListener('pagehide', data_comp307_3019905212.pageHide);
    F.line = 67;
    window.addEventListener('pageshow', data_comp307_3019905212.pageShow);
    result_3019904436 = tg2([100,105,118], [data_comp307_3019905212], true);
  framePtr = F.prev;

  return result_3019904436;

}

function style_3019904431(self_3019904432) {
  var result_3019904433 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 60;
    F.filename = "base24.nim";
    result_3019904433 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019904433;

}

function render_3019905233(self_3019905234) {
  var result_3019905235 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 60;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019905234);;
    F.line = 60;
    currentComponent_1644168809[0] = nimCopy(null, self_3019905234.uniqCompId, NTI33554449);
    F.line = 60;
    script_3019904429(self_3019905234);
    if ((self_3019905234.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019905234.created(self_3019905234, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019905234.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019905234.beforeUpdated(self_3019905234, null);
    F.line = 60;
    F.filename = "base24.nim";
    result_3019905235 = renderTag_3019904434(self_3019905234);
    F.line = 60;
    tgadd(result_3019905235, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019904431(self_3019905234))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019905234.rendered(self_3019905234, null);
    F.line = 60;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019905235;

}

function script_3019903924(self_3019903925) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019903929(self_3019903930) {
            var Temporary4;
            var Temporary5;
            
function HEX3Aanonymous_3019904051(scopeSelf_3019904052, inComponent_3019904053, compName_3019904054, inCycle_3019904055, cycleCounter_3019904056, cycleCounter_3019904056_Idx, compCounter_3019904057) {
                var Temporary1;

              var result_3019904058 = null;

              var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
              framePtr = F;
                F.line = 57;
                F.filename = "base24.nim";
                F.line = 57;
                if ((inCycle_3019904055 && inComponent_3019904053)) {
                Temporary1 = tg2([100,105,118], [], true);
                }
                else {
                if (inCycle_3019904055) {
                Temporary1 = tg2([100,105,118], [], true);
                }
                else {
                if (inComponent_3019904053) {
                Temporary1 = tg2([100,105,118], [], true);
                }
                else {
                Temporary1 = tg2([100,105,118], [], true);
                }
                }}
                var _res_3019904067 = Temporary1;
                F.line = 293;
                F.filename = "macro_utils.nim";
                comp303_3019904050.slotData = _res_3019904067;
                result_3019904058 = _res_3019904067;
              framePtr = F.prev;

              return result_3019904058;

            }

  var result_3019903931 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 57;
    F.filename = "base24.nim";
    F.line = 57;
    var c302_3019904030 = 0;
    F.line = 57;
    var __r302_3019904038 = newSeq_2818572815(0);
    Label1: {
      F.line = 56;
      var i_3019904043 = 0;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881698 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536881698 <= self_3019903930.n.val)) break Label3;
            F.line = 56;
            F.filename = "base24.nim";
            i_3019904043 = res_536881698;
            F.line = 56;
            c302_3019904030 = addInt(c302_3019904030, 1);
            F.line = 1418;
            F.filename = "macro_utils.nim";
            scopedCycleCounter_1644167270[0] = c302_3019904030;
            F.line = 56;
            F.filename = "base24.nim";
            F.line = 57;
            if ((scopedCycleCounter_1644167270[0] == 0)) {
            Temporary4 = ([99,111,109,112,51,48,51] || []).concat(self_3019903930.uniqCompId || [],[95,95] || [],HEX24_369098760(c302_3019904030) || []);
            }
            else {
            Temporary4 = ([99,111,109,112,51,48,51] || []).concat(self_3019903930.uniqCompId || [],[95,95] || [],HEX24_369098760(c302_3019904030) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
            }
            
            var _comp303_3019904049 = initIcon_2835349526(Temporary4, [97,110,105,109,97,108,115,47,115,99,111,114,112,105,111,110], 1.0, [], []);
            F.line = 57;
            if ((scopedCycleCounter_1644167270[0] == 0)) {
            Temporary5 = ([99,111,109,112,51,48,51] || []).concat(self_3019903930.uniqCompId || [],[95,95] || [],HEX24_369098760(c302_3019904030) || []);
            }
            else {
            Temporary5 = ([99,111,109,112,51,48,51] || []).concat(self_3019903930.uniqCompId || [],[95,95] || [],HEX24_369098760(c302_3019904030) || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
            }
            
            var comp303_3019904050 = rgcmp(toJSStr(Temporary5), _comp303_3019904049);
            F.line = 57;
            comp303_3019904050.slot = HEX3Aanonymous_3019904051;
            F.line = 57;
            var data_comp303_3019904068 = render_1644175063(comp303_3019904050);
            F.line = 57;
            addArgIter_1694499355(data_comp303_3019904068, ([100,97,116,97,45] || []).concat(comp303_3019904050.uniqCompId || []));
            F.line = 57;
            window.addEventListener('beforeunload', data_comp303_3019904068.exited);
            F.line = 57;
            window.addEventListener('pagehide', data_comp303_3019904068.pageHide);
            F.line = 57;
            window.addEventListener('pageshow', data_comp303_3019904068.pageShow);
            __r302_3019904038.push(tg2([100,105,118], [data_comp303_3019904068], true));;
            F.line = 57;
            scopedCycleCounter_1644167270[0] = 0;
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881698 = addInt(res_536881698, 1);
          }
      };
    };
    result_3019903931 = tg2([100,105,118], [tg2([115,112,97,110], [tg2([100,105,118], __r302_3019904038, true)], false)], true);
  framePtr = F.prev;

  return result_3019903931;

}

function style_3019903926(self_3019903927) {
  var result_3019903928 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "base24.nim";
    result_3019903928 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019903928;

}

function render_3019904133(self_3019904134) {
  var result_3019904135 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019904134);;
    F.line = 52;
    currentComponent_1644168809[0] = nimCopy(null, self_3019904134.uniqCompId, NTI33554449);
    F.line = 52;
    script_3019903924(self_3019904134);
    if ((self_3019904134.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019904134.created(self_3019904134, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019904134.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019904134.beforeUpdated(self_3019904134, null);
    F.line = 52;
    F.filename = "base24.nim";
    result_3019904135 = renderTag_3019903929(self_3019904134);
    F.line = 52;
    tgadd(result_3019904135, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019903926(self_3019904134))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019904134.rendered(self_3019904134, null);
    F.line = 52;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019904135;

}

function script_3019906138(self_3019906139) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function renderTag_3019906143(self_3019906144) {
  var result_3019906145 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 80;
    F.filename = "base24.nim";
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3019906452 = [0];
    result_3019906145 = tg2([100,105,118], [tg2([104,51], [tg1([115,112,97,110], nstnewStringTableWithTableConstr([{Field0: [115,116,121,108,101], Field1: [32,98,111,114,100,101,114,32,58,32,48,46,52,101,109,32,100,111,117,98,108,101,32,98,108,97,99,107,59]}], 0), [self_3019906144.slot(self_3019906144, true, [75,101,121,78,111,116,105,99,101], false, cclCounter_3019906452, 0, self_3019906144.uniqCompId)], false)], false)], true);
  framePtr = F.prev;

  return result_3019906145;

}

function style_3019906140(self_3019906141) {
  var result_3019906142 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 78;
    F.filename = "base24.nim";
    result_3019906142 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019906142;

}

function render_3019906515(self_3019906516) {
  var result_3019906517 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 78;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019906516);;
    F.line = 78;
    currentComponent_1644168809[0] = nimCopy(null, self_3019906516.uniqCompId, NTI33554449);
    F.line = 78;
    script_3019906138(self_3019906516);
    if ((self_3019906516.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019906516.created(self_3019906516, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019906516.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019906516.beforeUpdated(self_3019906516, null);
    F.line = 78;
    F.filename = "base24.nim";
    result_3019906517 = renderTag_3019906143(self_3019906516);
    F.line = 78;
    tgadd(result_3019906517, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019906140(self_3019906516))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019906516.rendered(self_3019906516, null);
    F.line = 78;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019906517;

}

function script_3019905506(self_3019905507) {
  var F = {procname: "base24.script", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function initScorpions_3019903688(uniqCompId_3019903689, n_3019903690) {
    
function HEX3Aanonymous_3019903696(self_3019903697, ev_3019903698) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019903699(self_3019903700, ev_3019903701) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019903702(self_3019903703, ev_3019903704) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019903705(self_3019903706, ev_3019903707) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019903708(self_3019903709, ev_3019903710) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019903711(self_3019903712, ev_3019903713) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }
    
function HEX3Aanonymous_3019903714(self_3019903715, ev_3019903716) {
      var F = {procname: "initScorpions.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
      framePtr = F.prev;

      
    }

  var result_3019903691 = null;

  var F = {procname: "base24.initScorpions", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 53;
    F.filename = "base24.nim";
    var self_3019903695 = {uniqCompId: nimCopy(null, uniqCompId_3019903689, NTI33554449), n: remember_2785018215(n_3019903690), m_type: NTI3019901520, isCreated: false, slot: null, slotData: null, created: null, exited: null, rendered: null, pageHide: null, pageShow: null, beforeUpdated: null, updated: null};
    F.line = 57;
    self_3019903695.beforeUpdated = HEX3Aanonymous_3019903696;
    F.line = 57;
    self_3019903695.pageShow = HEX3Aanonymous_3019903699;
    F.line = 57;
    self_3019903695.pageHide = HEX3Aanonymous_3019903702;
    F.line = 57;
    self_3019903695.rendered = HEX3Aanonymous_3019903705;
    F.line = 57;
    self_3019903695.exited = HEX3Aanonymous_3019903708;
    F.line = 57;
    self_3019903695.created = HEX3Aanonymous_3019903711;
    F.line = 57;
    self_3019903695.updated = HEX3Aanonymous_3019903714;
    F.line = 53;
    createdComponentsList_1644168819[0].push(self_3019903695);;
    F.line = 779;
    F.filename = "components.nim";
    result_3019903691 = self_3019903695;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_3019903691;

}

function renderTag_3019905511(self_3019905512) {
    var Temporary1;
    var Temporary2;
    
function HEX3Aanonymous_3019905713(scopeSelf_3019905714, inComponent_3019905715, compName_3019905716, inCycle_3019905717, cycleCounter_3019905718, cycleCounter_3019905718_Idx, compCounter_3019905719) {
        var Temporary1;

      var result_3019905720 = null;

      var F = {procname: "renderTag.:anonymous", prev: framePtr, filename: "/usr/share/class/bSync/web/wwwLP/components/layout/base24.nim", line: 0};
      framePtr = F;
        F.line = 74;
        F.filename = "base24.nim";
        F.line = 74;
        if ((inCycle_3019905717 && inComponent_3019905715)) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inCycle_3019905717) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        if (inComponent_3019905715) {
        Temporary1 = tg2([100,105,118], [], true);
        }
        else {
        Temporary1 = tg2([100,105,118], [], true);
        }
        }}
        var _res_3019905729 = Temporary1;
        F.line = 293;
        F.filename = "macro_utils.nim";
        comp316_3019905712.slotData = _res_3019905729;
        result_3019905720 = _res_3019905729;
      framePtr = F.prev;

      return result_3019905720;

    }

  var result_3019905513 = null;

  var F = {procname: "base24.renderTag", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 76;
    F.filename = "base24.nim";
    F.line = 74;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary1 = ([99,111,109,112,51,49,54] || []).concat(self_3019905512.uniqCompId || []);
    }
    else {
    Temporary1 = ([99,111,109,112,51,49,54] || []).concat(self_3019905512.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var _comp316_3019905711 = initScorpions_3019903688(Temporary1, self_3019905512.n.val);
    F.line = 74;
    if ((scopedCycleCounter_1644167270[0] == 0)) {
    Temporary2 = ([99,111,109,112,51,49,54] || []).concat(self_3019905512.uniqCompId || []);
    }
    else {
    Temporary2 = ([99,111,109,112,51,49,54] || []).concat(self_3019905512.uniqCompId || [],HEX24_369098760(scopedCycleCounter_1644167270[0]) || []);
    }
    
    var comp316_3019905712 = rgcmp(toJSStr(Temporary2), _comp316_3019905711);
    F.line = 74;
    comp316_3019905712.slot = HEX3Aanonymous_3019905713;
    F.line = 74;
    var data_comp316_3019905730 = render_1644175063(comp316_3019905712);
    F.line = 74;
    addArgIter_1694499355(data_comp316_3019905730, ([100,97,116,97,45] || []).concat(comp316_3019905712.uniqCompId || []));
    F.line = 74;
    window.addEventListener('beforeunload', data_comp316_3019905730.exited);
    F.line = 74;
    window.addEventListener('pagehide', data_comp316_3019905730.pageHide);
    F.line = 74;
    window.addEventListener('pageshow', data_comp316_3019905730.pageShow);
    F.line = 574;
    F.filename = "components.nim";
    var cclCounter_3019905829 = [0];
    result_3019905513 = tg2([100,105,118], [tg2([115,112,97,110], [data_comp316_3019905730, self_3019905512.slot(self_3019905512, true, [69,120,116,114,97,67,114,101,100,105,116], false, cclCounter_3019905829, 0, self_3019905512.uniqCompId), tg4([32,40,101,120,116,114,97,32,99,114,101,100,105,116,41], true, [], false)], false)], true);
  framePtr = F.prev;

  return result_3019905513;

}

function style_3019905508(self_3019905509) {
  var result_3019905510 = [];

  var F = {procname: "base24.style", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 70;
    F.filename = "base24.nim";
    result_3019905510 = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019905510;

}

function render_3019905872(self_3019905873) {
  var result_3019905874 = null;

  var F = {procname: "base24.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 70;
    F.filename = "base24.nim";
    currentComponentsList_1644168814[0].push(self_3019905873);;
    F.line = 70;
    currentComponent_1644168809[0] = nimCopy(null, self_3019905873.uniqCompId, NTI33554449);
    F.line = 70;
    script_3019905506(self_3019905873);
    if ((self_3019905873.isCreated == false)) {
    F.line = 779;
    F.filename = "components.nim";
    self_3019905873.created(self_3019905873, null);
    F.line = 796;
    F.filename = "macros.nim";
    self_3019905873.isCreated = true;
    }
    
    F.line = 779;
    F.filename = "components.nim";
    self_3019905873.beforeUpdated(self_3019905873, null);
    F.line = 70;
    F.filename = "base24.nim";
    result_3019905874 = renderTag_3019905511(self_3019905873);
    F.line = 70;
    tgadd(result_3019905874, [tg2([115,116,121,108,101], [textTag_1694499242(style_3019905508(self_3019905873))], false)]);
    F.line = 779;
    F.filename = "components.nim";
    self_3019905873.rendered(self_3019905873, null);
    F.line = 70;
    F.filename = "base24.nim";
    currentComponent_1644168809[0] = nimCopy(null, [], NTI33554449);
  framePtr = F.prev;

  return result_3019905874;

}

function render_1644175060(self_1644175061) {
  var result_1644175062 = null;

  var F = {procname: "renderer.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 368;
    F.filename = "renderer.nim";
    result_1644175062 = null;
  framePtr = F.prev;

  return result_1644175062;

}

function render_1644175063(self_1644175061) {
  var result_1644175064 = null;

  var F = {procname: "renderer.render", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1644175061);
    if (isObj(self_1644175061.m_type, NTI2835350314)) {
    F.line = 366;
    F.filename = "renderer.nim";
    result_1644175064 = render_2835351295(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852127608)) {
    F.line = 366;
    result_1644175064 = render_2852128850(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852127160)) {
    F.line = 366;
    result_1644175064 = render_2852128244(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852126796)) {
    F.line = 366;
    result_1644175064 = render_2852127435(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852127959)) {
    F.line = 366;
    result_1644175064 = render_2852129436(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852128905)) {
    F.line = 366;
    result_1644175064 = render_2852130935(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852128623)) {
    F.line = 366;
    result_1644175064 = render_2852130480(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852128299)) {
    F.line = 366;
    result_1644175064 = render_2852130002(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852129170)) {
    F.line = 366;
    result_1644175064 = render_2852131512(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2835349510)) {
    F.line = 366;
    result_1644175064 = render_2835350270(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2818572395)) {
    F.line = 366;
    result_1644175064 = render_2818573625(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852129501)) {
    F.line = 366;
    result_1644175064 = render_2852131867(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2835349978)) {
    F.line = 366;
    result_1644175064 = render_2835350802(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785017976)) {
    F.line = 366;
    result_1644175064 = render_2785019279(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2902458898)) {
    F.line = 366;
    result_1644175064 = render_2902460053(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2986344453)) {
    F.line = 366;
    result_1644175064 = render_2986345518(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785018683)) {
    F.line = 366;
    result_1644175064 = render_2785019775(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785019912)) {
    F.line = 366;
    result_1644175064 = render_2785022361(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785019395)) {
    F.line = 366;
    result_1644175064 = render_2785021443(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785018975)) {
    F.line = 366;
    result_1644175064 = render_2785020509(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785020420)) {
    F.line = 366;
    result_1644175064 = render_2785023627(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2919235587)) {
    F.line = 366;
    result_1644175064 = render_2919236347(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2801795108)) {
    F.line = 366;
    result_1644175064 = render_2801795369(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2785021112)) {
    F.line = 366;
    result_1644175064 = render_2785024123(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2919236031)) {
    F.line = 366;
    result_1644175064 = render_2919236861(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019904959)) {
    F.line = 366;
    result_1644175064 = render_3019910692(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2902458371)) {
    F.line = 366;
    result_1644175064 = render_2902459208(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2919236317)) {
    F.line = 366;
    result_1644175064 = render_2919237521(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2902459426)) {
    F.line = 366;
    result_1644175064 = render_2902460810(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2885682083)) {
    F.line = 366;
    result_1644175064 = render_2885683545(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2885681500)) {
    F.line = 366;
    result_1644175064 = render_2885682801(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2902459897)) {
    F.line = 366;
    result_1644175064 = render_2902461548(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2885682523)) {
    F.line = 366;
    result_1644175064 = render_2885684126(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2885684108)) {
    F.line = 366;
    result_1644175064 = render_2885687143(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2885683526)) {
    F.line = 366;
    result_1644175064 = render_2885686222(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2885682866)) {
    F.line = 366;
    result_1644175064 = render_2885685224(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852131519)) {
    F.line = 366;
    result_1644175064 = render_2852150332(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019904593)) {
    F.line = 366;
    result_1644175064 = render_3019909718(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852142104)) {
    F.line = 366;
    result_1644175064 = render_2852153103(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852140922)) {
    F.line = 366;
    result_1644175064 = render_2852152219(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019898883)) {
    F.line = 366;
    result_1644175064 = render_3019899938(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3036676831)) {
    F.line = 366;
    result_1644175064 = render_3036678144(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3036676404)) {
    F.line = 366;
    result_1644175064 = render_3036677370(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3036676108)) {
    F.line = 366;
    result_1644175064 = render_3036676596(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3036677258)) {
    F.line = 366;
    result_1644175064 = render_3036678669(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3170893888)) {
    F.line = 366;
    result_1644175064 = render_3170894509(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3103785444)) {
    F.line = 366;
    result_1644175064 = render_3103786283(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3103785060)) {
    F.line = 366;
    result_1644175064 = render_3103785730(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI2852129713)) {
    F.line = 366;
    result_1644175064 = render_2852134737(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019903908)) {
    F.line = 366;
    result_1644175064 = render_3019909063(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019903466)) {
    F.line = 366;
    result_1644175064 = render_3019907797(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019903169)) {
    F.line = 366;
    result_1644175064 = render_3019907009(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3003121668)) {
    F.line = 366;
    result_1644175064 = render_3003122767(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019899883)) {
    F.line = 366;
    result_1644175064 = render_3019901610(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019899464)) {
    F.line = 366;
    result_1644175064 = render_3019900699(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019900738)) {
    F.line = 366;
    result_1644175064 = render_3019903651(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019900397)) {
    F.line = 366;
    result_1644175064 = render_3019902189(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019901807)) {
    F.line = 366;
    result_1644175064 = render_3019905233(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019901520)) {
    F.line = 366;
    result_1644175064 = render_3019904133(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019902813)) {
    F.line = 366;
    result_1644175064 = render_3019906515(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI3019902462)) {
    F.line = 366;
    result_1644175064 = render_3019905872(self_1644175061);
    break BeforeRet;
    }
    else {
    if (isObj(self_1644175061.m_type, NTI1644167178)) {
    F.line = 366;
    result_1644175064 = render_1644175060(self_1644175061);
    break BeforeRet;
    }
    }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
  };
  framePtr = F.prev;

  return result_1644175064;

}

function del_2785018394(x_2785018396, x_2785018396_Idx, i_2785018397) {
  var F = {procname: "del.del", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1227;
    F.filename = "system.nim";
    var xl_2785018401 = subInt((x_2785018396[x_2785018396_Idx]).length, 1);
    F.line = 1228;
    x_2785018396[x_2785018396_Idx][chckIndx(i_2785018397, 0, (x_2785018396[x_2785018396_Idx]).length - 1)] = x_2785018396[x_2785018396_Idx][chckIndx(xl_2785018401, 0, (x_2785018396[x_2785018396_Idx]).length - 1)];
    F.line = 1229;
    if (x_2785018396[x_2785018396_Idx].length < chckRange(xl_2785018401, 0, 2147483647)) { for (var i = x_2785018396[x_2785018396_Idx].length ; i < chckRange(xl_2785018401, 0, 2147483647) ; ++i) x_2785018396[x_2785018396_Idx].push(null); }
               else { x_2785018396[x_2785018396_Idx].length = chckRange(xl_2785018401, 0, 2147483647); };
  framePtr = F.prev;

  
}

function find_2785018375(a_2785018378, item_2785018379) {
  var result_2785018380 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1665;
    F.filename = "system.nim";
    result_2785018380 = 0;
    Label1: {
      F.line = 1666;
      var i_2785018384 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881709 = 0;
      F.line = 242;
      var L_536881710 = (a_2785018378).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881709 < L_536881710)) break Label3;
            F.line = 1666;
            F.filename = "system.nim";
            i_2785018384 = a_2785018378[chckIndx(i_536881709, 0, (a_2785018378).length - 1)];
            if ((i_2785018384 == item_2785018379)) {
            F.line = 1667;
            break BeforeRet;
            }
            
            F.line = 1666;
            result_2785018380 = addInt(result_2785018380, 1);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881709 = addInt(i_536881709, 1);
            if (!(((a_2785018378).length == L_536881710))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 1669;
    F.filename = "system.nim";
    result_2785018380 = (-1);
  };
  framePtr = F.prev;

  return result_2785018380;

}

function newSeq_2785018407(len_2785018409) {
  var result_2785018410 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_2785018410 = new Array(len_2785018409); for (var i = 0 ; i < len_2785018409 ; ++i) { result_2785018410[i] = null; }  framePtr = F.prev;

  return result_2785018410;

}

function index_2466250824(el_2466250825) {
  var result_2466250826 = 0;

  var F = {procname: "components.index", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 68;
    F.filename = "components.nim";
    var children_2466250827 = nimCopy(null, el_2466250825.parentNode.childNodes, NTI1795162228);
    Label1: {
      F.line = 69;
      var i_2466250835 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536881713 = 0;
      F.line = 69;
      F.filename = "components.nim";
      colontmp__536881713 = subInt((children_2466250827).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536881714 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536881714 <= colontmp__536881713)) break Label3;
            F.line = 69;
            F.filename = "components.nim";
            i_2466250835 = res_536881714;
            if ((children_2466250827[chckIndx(i_2466250835, 0, (children_2466250827).length - 1)] == el_2466250825)) {
            F.line = 71;
            result_2466250826 = i_2466250835;
            break BeforeRet;
            }
            
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536881714 = addInt(res_536881714, 1);
          }
      };
    };
    F.line = 72;
    F.filename = "components.nim";
    result_2466250826 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_2466250826;

}

function reRender_2835350937(self_2835350938) {
  var F = {procname: "images.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym8_2835350953 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym8_2835350954 = render_1644175063(self_2835350938);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2835350938), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym8_2835350954, ([100,97,116,97,45] || []).concat(self_2835350938.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym8_2835350964 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2835350938.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym8_2835350968 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym8_2835350972 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881701 = 0;
      F.line = 242;
      var L_536881702 = (compTmpDataHEX60gensym8_2835350954.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881701 < L_536881702)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym8_2835350972 = compTmpDataHEX60gensym8_2835350954.childNodes[chckIndx(i_536881701, 0, (compTmpDataHEX60gensym8_2835350954.childNodes).length - 1)];
            if (!((currentHEX60gensym8_2835350964 == null))) {
            F.line = 88;
            elementsHEX60gensym8_2835350968.push(currentHEX60gensym8_2835350964);;
            F.line = 89;
            currentHEX60gensym8_2835350964 = currentHEX60gensym8_2835350964.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881701 = addInt(i_536881701, 1);
            if (!(((compTmpDataHEX60gensym8_2835350954.childNodes).length == L_536881702))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym8_2835350988 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881705 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881705 = subInt((elementsHEX60gensym8_2835350968).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881706 = colontmp__536881705;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881706)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym8_2835350988 = res_536881706;
            F.line = 93;
            var elemHEX60gensym8_2835350989 = elementsHEX60gensym8_2835350968[chckIndx(iHEX60gensym8_2835350988, 0, (elementsHEX60gensym8_2835350968).length - 1)];
            F.line = 94;
            var tagHEX60gensym8_2835350990 = compTmpDataHEX60gensym8_2835350954.childNodes[chckIndx(iHEX60gensym8_2835350988, 0, (compTmpDataHEX60gensym8_2835350954.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym8_2835350991 = elemHEX60gensym8_2835350989.parentElement;
            F.line = 96;
            var idxHEX60gensym8_2835350992 = index_2466250824(elemHEX60gensym8_2835350989);
            F.line = 97;
            var lengthHEX60gensym8_2835350996 = (parentHEX60gensym8_2835350991.childNodes).length;
            F.line = 91;
            elemHEX60gensym8_2835350989.remove();
            if ((subInt(lengthHEX60gensym8_2835350996, 1) == idxHEX60gensym8_2835350992)) {
            F.line = 101;
            parentHEX60gensym8_2835350991.appendChild(tagHEX60gensym8_2835350990);
            }
            else {
              F.line = 103;
            parentHEX60gensym8_2835350991.insertBefore(tagHEX60gensym8_2835350990, parentHEX60gensym8_2835350991.childNodes[chckIndx(idxHEX60gensym8_2835350992, 0, (parentHEX60gensym8_2835350991.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881706 = subInt(res_536881706, 1);
          }
      };
    };
    if (activeElementHEX60gensym8_2835350953.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym8_2835350997 = document.getElementById(activeElementHEX60gensym8_2835350953.id);
    if (!((actElemHEX60gensym8_2835350997 == null))) {
    F.line = 108;
    actElemHEX60gensym8_2835350997.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym8_2835350997.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym8_2835351099 = activeElementHEX60gensym8_2835350953;
    F.line = 112;
    var currentActiveElemHEX60gensym8_2835351100 = actElemHEX60gensym8_2835350997;
    F.line = 113;
    currentActiveElemHEX60gensym8_2835351100.setSelectionRange(oldActiveElemHEX60gensym8_2835351099.selectionStart, oldActiveElemHEX60gensym8_2835351099.selectionEnd, oldActiveElemHEX60gensym8_2835351099.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2835350938.updated(self_2835350938, null);
    F.line = 25;
    F.filename = "images.nim";
    self_2835350938.rendered(self_2835350938, null);
  framePtr = F.prev;

  
}

function reRender_2852128379(self_2852128380) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym10_2852128395 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym10_2852128396 = render_1644175063(self_2852128380);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852128380), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym10_2852128396, ([100,97,116,97,45] || []).concat(self_2852128380.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym10_2852128406 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852128380.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym10_2852128410 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym10_2852128414 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881717 = 0;
      F.line = 242;
      var L_536881718 = (compTmpDataHEX60gensym10_2852128396.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881717 < L_536881718)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym10_2852128414 = compTmpDataHEX60gensym10_2852128396.childNodes[chckIndx(i_536881717, 0, (compTmpDataHEX60gensym10_2852128396.childNodes).length - 1)];
            if (!((currentHEX60gensym10_2852128406 == null))) {
            F.line = 88;
            elementsHEX60gensym10_2852128410.push(currentHEX60gensym10_2852128406);;
            F.line = 89;
            currentHEX60gensym10_2852128406 = currentHEX60gensym10_2852128406.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881717 = addInt(i_536881717, 1);
            if (!(((compTmpDataHEX60gensym10_2852128396.childNodes).length == L_536881718))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym10_2852128430 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881721 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881721 = subInt((elementsHEX60gensym10_2852128410).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881722 = colontmp__536881721;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881722)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym10_2852128430 = res_536881722;
            F.line = 93;
            var elemHEX60gensym10_2852128431 = elementsHEX60gensym10_2852128410[chckIndx(iHEX60gensym10_2852128430, 0, (elementsHEX60gensym10_2852128410).length - 1)];
            F.line = 94;
            var tagHEX60gensym10_2852128432 = compTmpDataHEX60gensym10_2852128396.childNodes[chckIndx(iHEX60gensym10_2852128430, 0, (compTmpDataHEX60gensym10_2852128396.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym10_2852128433 = elemHEX60gensym10_2852128431.parentElement;
            F.line = 96;
            var idxHEX60gensym10_2852128434 = index_2466250824(elemHEX60gensym10_2852128431);
            F.line = 97;
            var lengthHEX60gensym10_2852128438 = (parentHEX60gensym10_2852128433.childNodes).length;
            F.line = 91;
            elemHEX60gensym10_2852128431.remove();
            if ((subInt(lengthHEX60gensym10_2852128438, 1) == idxHEX60gensym10_2852128434)) {
            F.line = 101;
            parentHEX60gensym10_2852128433.appendChild(tagHEX60gensym10_2852128432);
            }
            else {
              F.line = 103;
            parentHEX60gensym10_2852128433.insertBefore(tagHEX60gensym10_2852128432, parentHEX60gensym10_2852128433.childNodes[chckIndx(idxHEX60gensym10_2852128434, 0, (parentHEX60gensym10_2852128433.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881722 = subInt(res_536881722, 1);
          }
      };
    };
    if (activeElementHEX60gensym10_2852128395.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym10_2852128439 = document.getElementById(activeElementHEX60gensym10_2852128395.id);
    if (!((actElemHEX60gensym10_2852128439 == null))) {
    F.line = 108;
    actElemHEX60gensym10_2852128439.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym10_2852128439.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym10_2852128541 = activeElementHEX60gensym10_2852128395;
    F.line = 112;
    var currentActiveElemHEX60gensym10_2852128542 = actElemHEX60gensym10_2852128439;
    F.line = 113;
    currentActiveElemHEX60gensym10_2852128542.setSelectionRange(oldActiveElemHEX60gensym10_2852128541.selectionStart, oldActiveElemHEX60gensym10_2852128541.selectionEnd, oldActiveElemHEX60gensym10_2852128541.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852128380.updated(self_2852128380, null);
    F.line = 41;
    F.filename = "layout.nim";
    self_2852128380.rendered(self_2852128380, null);
  framePtr = F.prev;

  
}

function reRender_2852127560(self_2852127561) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym7_2852127576 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym7_2852127577 = render_1644175063(self_2852127561);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852127561), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym7_2852127577, ([100,97,116,97,45] || []).concat(self_2852127561.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym7_2852127587 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852127561.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym7_2852127591 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym7_2852127595 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881725 = 0;
      F.line = 242;
      var L_536881726 = (compTmpDataHEX60gensym7_2852127577.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881725 < L_536881726)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym7_2852127595 = compTmpDataHEX60gensym7_2852127577.childNodes[chckIndx(i_536881725, 0, (compTmpDataHEX60gensym7_2852127577.childNodes).length - 1)];
            if (!((currentHEX60gensym7_2852127587 == null))) {
            F.line = 88;
            elementsHEX60gensym7_2852127591.push(currentHEX60gensym7_2852127587);;
            F.line = 89;
            currentHEX60gensym7_2852127587 = currentHEX60gensym7_2852127587.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881725 = addInt(i_536881725, 1);
            if (!(((compTmpDataHEX60gensym7_2852127577.childNodes).length == L_536881726))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym7_2852127611 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881729 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881729 = subInt((elementsHEX60gensym7_2852127591).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881730 = colontmp__536881729;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881730)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym7_2852127611 = res_536881730;
            F.line = 93;
            var elemHEX60gensym7_2852127612 = elementsHEX60gensym7_2852127591[chckIndx(iHEX60gensym7_2852127611, 0, (elementsHEX60gensym7_2852127591).length - 1)];
            F.line = 94;
            var tagHEX60gensym7_2852127613 = compTmpDataHEX60gensym7_2852127577.childNodes[chckIndx(iHEX60gensym7_2852127611, 0, (compTmpDataHEX60gensym7_2852127577.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym7_2852127614 = elemHEX60gensym7_2852127612.parentElement;
            F.line = 96;
            var idxHEX60gensym7_2852127615 = index_2466250824(elemHEX60gensym7_2852127612);
            F.line = 97;
            var lengthHEX60gensym7_2852127619 = (parentHEX60gensym7_2852127614.childNodes).length;
            F.line = 91;
            elemHEX60gensym7_2852127612.remove();
            if ((subInt(lengthHEX60gensym7_2852127619, 1) == idxHEX60gensym7_2852127615)) {
            F.line = 101;
            parentHEX60gensym7_2852127614.appendChild(tagHEX60gensym7_2852127613);
            }
            else {
              F.line = 103;
            parentHEX60gensym7_2852127614.insertBefore(tagHEX60gensym7_2852127613, parentHEX60gensym7_2852127614.childNodes[chckIndx(idxHEX60gensym7_2852127615, 0, (parentHEX60gensym7_2852127614.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881730 = subInt(res_536881730, 1);
          }
      };
    };
    if (activeElementHEX60gensym7_2852127576.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym7_2852127620 = document.getElementById(activeElementHEX60gensym7_2852127576.id);
    if (!((actElemHEX60gensym7_2852127620 == null))) {
    F.line = 108;
    actElemHEX60gensym7_2852127620.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym7_2852127620.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym7_2852127722 = activeElementHEX60gensym7_2852127576;
    F.line = 112;
    var currentActiveElemHEX60gensym7_2852127723 = actElemHEX60gensym7_2852127620;
    F.line = 113;
    currentActiveElemHEX60gensym7_2852127723.setSelectionRange(oldActiveElemHEX60gensym7_2852127722.selectionStart, oldActiveElemHEX60gensym7_2852127722.selectionEnd, oldActiveElemHEX60gensym7_2852127722.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852127561.updated(self_2852127561, null);
    F.line = 33;
    F.filename = "layout.nim";
    self_2852127561.rendered(self_2852127561, null);
  framePtr = F.prev;

  
}

function reRender_2852126951(self_2852126952) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym3_2852126967 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym3_2852126968 = render_1644175063(self_2852126952);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852126952), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym3_2852126968, ([100,97,116,97,45] || []).concat(self_2852126952.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym3_2852126978 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852126952.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym3_2852126982 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym3_2852126986 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881733 = 0;
      F.line = 242;
      var L_536881734 = (compTmpDataHEX60gensym3_2852126968.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881733 < L_536881734)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym3_2852126986 = compTmpDataHEX60gensym3_2852126968.childNodes[chckIndx(i_536881733, 0, (compTmpDataHEX60gensym3_2852126968.childNodes).length - 1)];
            if (!((currentHEX60gensym3_2852126978 == null))) {
            F.line = 88;
            elementsHEX60gensym3_2852126982.push(currentHEX60gensym3_2852126978);;
            F.line = 89;
            currentHEX60gensym3_2852126978 = currentHEX60gensym3_2852126978.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881733 = addInt(i_536881733, 1);
            if (!(((compTmpDataHEX60gensym3_2852126968.childNodes).length == L_536881734))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym3_2852127002 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881737 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881737 = subInt((elementsHEX60gensym3_2852126982).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881738 = colontmp__536881737;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881738)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym3_2852127002 = res_536881738;
            F.line = 93;
            var elemHEX60gensym3_2852127003 = elementsHEX60gensym3_2852126982[chckIndx(iHEX60gensym3_2852127002, 0, (elementsHEX60gensym3_2852126982).length - 1)];
            F.line = 94;
            var tagHEX60gensym3_2852127004 = compTmpDataHEX60gensym3_2852126968.childNodes[chckIndx(iHEX60gensym3_2852127002, 0, (compTmpDataHEX60gensym3_2852126968.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym3_2852127005 = elemHEX60gensym3_2852127003.parentElement;
            F.line = 96;
            var idxHEX60gensym3_2852127006 = index_2466250824(elemHEX60gensym3_2852127003);
            F.line = 97;
            var lengthHEX60gensym3_2852127010 = (parentHEX60gensym3_2852127005.childNodes).length;
            F.line = 91;
            elemHEX60gensym3_2852127003.remove();
            if ((subInt(lengthHEX60gensym3_2852127010, 1) == idxHEX60gensym3_2852127006)) {
            F.line = 101;
            parentHEX60gensym3_2852127005.appendChild(tagHEX60gensym3_2852127004);
            }
            else {
              F.line = 103;
            parentHEX60gensym3_2852127005.insertBefore(tagHEX60gensym3_2852127004, parentHEX60gensym3_2852127005.childNodes[chckIndx(idxHEX60gensym3_2852127006, 0, (parentHEX60gensym3_2852127005.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881738 = subInt(res_536881738, 1);
          }
      };
    };
    if (activeElementHEX60gensym3_2852126967.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym3_2852127011 = document.getElementById(activeElementHEX60gensym3_2852126967.id);
    if (!((actElemHEX60gensym3_2852127011 == null))) {
    F.line = 108;
    actElemHEX60gensym3_2852127011.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym3_2852127011.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym3_2852127113 = activeElementHEX60gensym3_2852126967;
    F.line = 112;
    var currentActiveElemHEX60gensym3_2852127114 = actElemHEX60gensym3_2852127011;
    F.line = 113;
    currentActiveElemHEX60gensym3_2852127114.setSelectionRange(oldActiveElemHEX60gensym3_2852127113.selectionStart, oldActiveElemHEX60gensym3_2852127113.selectionEnd, oldActiveElemHEX60gensym3_2852127113.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852126952.updated(self_2852126952, null);
    F.line = 25;
    F.filename = "layout.nim";
    self_2852126952.rendered(self_2852126952, null);
  framePtr = F.prev;

  
}

function reRender_2852128978(self_2852128979) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym13_2852128994 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym13_2852128995 = render_1644175063(self_2852128979);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852128979), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym13_2852128995, ([100,97,116,97,45] || []).concat(self_2852128979.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym13_2852129005 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852128979.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym13_2852129009 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym13_2852129013 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881741 = 0;
      F.line = 242;
      var L_536881742 = (compTmpDataHEX60gensym13_2852128995.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881741 < L_536881742)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym13_2852129013 = compTmpDataHEX60gensym13_2852128995.childNodes[chckIndx(i_536881741, 0, (compTmpDataHEX60gensym13_2852128995.childNodes).length - 1)];
            if (!((currentHEX60gensym13_2852129005 == null))) {
            F.line = 88;
            elementsHEX60gensym13_2852129009.push(currentHEX60gensym13_2852129005);;
            F.line = 89;
            currentHEX60gensym13_2852129005 = currentHEX60gensym13_2852129005.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881741 = addInt(i_536881741, 1);
            if (!(((compTmpDataHEX60gensym13_2852128995.childNodes).length == L_536881742))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym13_2852129029 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881745 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881745 = subInt((elementsHEX60gensym13_2852129009).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881746 = colontmp__536881745;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881746)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym13_2852129029 = res_536881746;
            F.line = 93;
            var elemHEX60gensym13_2852129030 = elementsHEX60gensym13_2852129009[chckIndx(iHEX60gensym13_2852129029, 0, (elementsHEX60gensym13_2852129009).length - 1)];
            F.line = 94;
            var tagHEX60gensym13_2852129031 = compTmpDataHEX60gensym13_2852128995.childNodes[chckIndx(iHEX60gensym13_2852129029, 0, (compTmpDataHEX60gensym13_2852128995.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym13_2852129032 = elemHEX60gensym13_2852129030.parentElement;
            F.line = 96;
            var idxHEX60gensym13_2852129033 = index_2466250824(elemHEX60gensym13_2852129030);
            F.line = 97;
            var lengthHEX60gensym13_2852129037 = (parentHEX60gensym13_2852129032.childNodes).length;
            F.line = 91;
            elemHEX60gensym13_2852129030.remove();
            if ((subInt(lengthHEX60gensym13_2852129037, 1) == idxHEX60gensym13_2852129033)) {
            F.line = 101;
            parentHEX60gensym13_2852129032.appendChild(tagHEX60gensym13_2852129031);
            }
            else {
              F.line = 103;
            parentHEX60gensym13_2852129032.insertBefore(tagHEX60gensym13_2852129031, parentHEX60gensym13_2852129032.childNodes[chckIndx(idxHEX60gensym13_2852129033, 0, (parentHEX60gensym13_2852129032.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881746 = subInt(res_536881746, 1);
          }
      };
    };
    if (activeElementHEX60gensym13_2852128994.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym13_2852129038 = document.getElementById(activeElementHEX60gensym13_2852128994.id);
    if (!((actElemHEX60gensym13_2852129038 == null))) {
    F.line = 108;
    actElemHEX60gensym13_2852129038.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym13_2852129038.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym13_2852129140 = activeElementHEX60gensym13_2852128994;
    F.line = 112;
    var currentActiveElemHEX60gensym13_2852129141 = actElemHEX60gensym13_2852129038;
    F.line = 113;
    currentActiveElemHEX60gensym13_2852129141.setSelectionRange(oldActiveElemHEX60gensym13_2852129140.selectionStart, oldActiveElemHEX60gensym13_2852129140.selectionEnd, oldActiveElemHEX60gensym13_2852129140.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852128979.updated(self_2852128979, null);
    F.line = 50;
    F.filename = "layout.nim";
    self_2852128979.rendered(self_2852128979, null);
  framePtr = F.prev;

  
}

function reRender_2852130598(self_2852130599) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym22_2852130614 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym22_2852130615 = render_1644175063(self_2852130599);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852130599), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym22_2852130615, ([100,97,116,97,45] || []).concat(self_2852130599.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym22_2852130625 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852130599.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym22_2852130629 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym22_2852130633 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881749 = 0;
      F.line = 242;
      var L_536881750 = (compTmpDataHEX60gensym22_2852130615.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881749 < L_536881750)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym22_2852130633 = compTmpDataHEX60gensym22_2852130615.childNodes[chckIndx(i_536881749, 0, (compTmpDataHEX60gensym22_2852130615.childNodes).length - 1)];
            if (!((currentHEX60gensym22_2852130625 == null))) {
            F.line = 88;
            elementsHEX60gensym22_2852130629.push(currentHEX60gensym22_2852130625);;
            F.line = 89;
            currentHEX60gensym22_2852130625 = currentHEX60gensym22_2852130625.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881749 = addInt(i_536881749, 1);
            if (!(((compTmpDataHEX60gensym22_2852130615.childNodes).length == L_536881750))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym22_2852130649 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881753 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881753 = subInt((elementsHEX60gensym22_2852130629).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881754 = colontmp__536881753;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881754)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym22_2852130649 = res_536881754;
            F.line = 93;
            var elemHEX60gensym22_2852130650 = elementsHEX60gensym22_2852130629[chckIndx(iHEX60gensym22_2852130649, 0, (elementsHEX60gensym22_2852130629).length - 1)];
            F.line = 94;
            var tagHEX60gensym22_2852130651 = compTmpDataHEX60gensym22_2852130615.childNodes[chckIndx(iHEX60gensym22_2852130649, 0, (compTmpDataHEX60gensym22_2852130615.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym22_2852130652 = elemHEX60gensym22_2852130650.parentElement;
            F.line = 96;
            var idxHEX60gensym22_2852130653 = index_2466250824(elemHEX60gensym22_2852130650);
            F.line = 97;
            var lengthHEX60gensym22_2852130657 = (parentHEX60gensym22_2852130652.childNodes).length;
            F.line = 91;
            elemHEX60gensym22_2852130650.remove();
            if ((subInt(lengthHEX60gensym22_2852130657, 1) == idxHEX60gensym22_2852130653)) {
            F.line = 101;
            parentHEX60gensym22_2852130652.appendChild(tagHEX60gensym22_2852130651);
            }
            else {
              F.line = 103;
            parentHEX60gensym22_2852130652.insertBefore(tagHEX60gensym22_2852130651, parentHEX60gensym22_2852130652.childNodes[chckIndx(idxHEX60gensym22_2852130653, 0, (parentHEX60gensym22_2852130652.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881754 = subInt(res_536881754, 1);
          }
      };
    };
    if (activeElementHEX60gensym22_2852130614.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym22_2852130658 = document.getElementById(activeElementHEX60gensym22_2852130614.id);
    if (!((actElemHEX60gensym22_2852130658 == null))) {
    F.line = 108;
    actElemHEX60gensym22_2852130658.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym22_2852130658.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym22_2852130760 = activeElementHEX60gensym22_2852130614;
    F.line = 112;
    var currentActiveElemHEX60gensym22_2852130761 = actElemHEX60gensym22_2852130658;
    F.line = 113;
    currentActiveElemHEX60gensym22_2852130761.setSelectionRange(oldActiveElemHEX60gensym22_2852130760.selectionStart, oldActiveElemHEX60gensym22_2852130760.selectionEnd, oldActiveElemHEX60gensym22_2852130760.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852130599.updated(self_2852130599, null);
    F.line = 73;
    F.filename = "layout.nim";
    self_2852130599.rendered(self_2852130599, null);
  framePtr = F.prev;

  
}

function reRender_2852130130(self_2852130131) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym19_2852130146 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym19_2852130147 = render_1644175063(self_2852130131);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852130131), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym19_2852130147, ([100,97,116,97,45] || []).concat(self_2852130131.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym19_2852130157 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852130131.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym19_2852130161 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym19_2852130165 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881757 = 0;
      F.line = 242;
      var L_536881758 = (compTmpDataHEX60gensym19_2852130147.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881757 < L_536881758)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym19_2852130165 = compTmpDataHEX60gensym19_2852130147.childNodes[chckIndx(i_536881757, 0, (compTmpDataHEX60gensym19_2852130147.childNodes).length - 1)];
            if (!((currentHEX60gensym19_2852130157 == null))) {
            F.line = 88;
            elementsHEX60gensym19_2852130161.push(currentHEX60gensym19_2852130157);;
            F.line = 89;
            currentHEX60gensym19_2852130157 = currentHEX60gensym19_2852130157.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881757 = addInt(i_536881757, 1);
            if (!(((compTmpDataHEX60gensym19_2852130147.childNodes).length == L_536881758))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym19_2852130181 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881761 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881761 = subInt((elementsHEX60gensym19_2852130161).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881762 = colontmp__536881761;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881762)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym19_2852130181 = res_536881762;
            F.line = 93;
            var elemHEX60gensym19_2852130182 = elementsHEX60gensym19_2852130161[chckIndx(iHEX60gensym19_2852130181, 0, (elementsHEX60gensym19_2852130161).length - 1)];
            F.line = 94;
            var tagHEX60gensym19_2852130183 = compTmpDataHEX60gensym19_2852130147.childNodes[chckIndx(iHEX60gensym19_2852130181, 0, (compTmpDataHEX60gensym19_2852130147.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym19_2852130184 = elemHEX60gensym19_2852130182.parentElement;
            F.line = 96;
            var idxHEX60gensym19_2852130185 = index_2466250824(elemHEX60gensym19_2852130182);
            F.line = 97;
            var lengthHEX60gensym19_2852130189 = (parentHEX60gensym19_2852130184.childNodes).length;
            F.line = 91;
            elemHEX60gensym19_2852130182.remove();
            if ((subInt(lengthHEX60gensym19_2852130189, 1) == idxHEX60gensym19_2852130185)) {
            F.line = 101;
            parentHEX60gensym19_2852130184.appendChild(tagHEX60gensym19_2852130183);
            }
            else {
              F.line = 103;
            parentHEX60gensym19_2852130184.insertBefore(tagHEX60gensym19_2852130183, parentHEX60gensym19_2852130184.childNodes[chckIndx(idxHEX60gensym19_2852130185, 0, (parentHEX60gensym19_2852130184.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881762 = subInt(res_536881762, 1);
          }
      };
    };
    if (activeElementHEX60gensym19_2852130146.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym19_2852130190 = document.getElementById(activeElementHEX60gensym19_2852130146.id);
    if (!((actElemHEX60gensym19_2852130190 == null))) {
    F.line = 108;
    actElemHEX60gensym19_2852130190.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym19_2852130190.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym19_2852130292 = activeElementHEX60gensym19_2852130146;
    F.line = 112;
    var currentActiveElemHEX60gensym19_2852130293 = actElemHEX60gensym19_2852130190;
    F.line = 113;
    currentActiveElemHEX60gensym19_2852130293.setSelectionRange(oldActiveElemHEX60gensym19_2852130292.selectionStart, oldActiveElemHEX60gensym19_2852130292.selectionEnd, oldActiveElemHEX60gensym19_2852130292.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852130131.updated(self_2852130131, null);
    F.line = 65;
    F.filename = "layout.nim";
    self_2852130131.rendered(self_2852130131, null);
  framePtr = F.prev;

  
}

function reRender_2852129544(self_2852129545) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym16_2852129560 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym16_2852129561 = render_1644175063(self_2852129545);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852129545), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym16_2852129561, ([100,97,116,97,45] || []).concat(self_2852129545.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym16_2852129571 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852129545.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym16_2852129575 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym16_2852129579 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881765 = 0;
      F.line = 242;
      var L_536881766 = (compTmpDataHEX60gensym16_2852129561.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881765 < L_536881766)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym16_2852129579 = compTmpDataHEX60gensym16_2852129561.childNodes[chckIndx(i_536881765, 0, (compTmpDataHEX60gensym16_2852129561.childNodes).length - 1)];
            if (!((currentHEX60gensym16_2852129571 == null))) {
            F.line = 88;
            elementsHEX60gensym16_2852129575.push(currentHEX60gensym16_2852129571);;
            F.line = 89;
            currentHEX60gensym16_2852129571 = currentHEX60gensym16_2852129571.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881765 = addInt(i_536881765, 1);
            if (!(((compTmpDataHEX60gensym16_2852129561.childNodes).length == L_536881766))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym16_2852129595 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881769 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881769 = subInt((elementsHEX60gensym16_2852129575).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881770 = colontmp__536881769;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881770)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym16_2852129595 = res_536881770;
            F.line = 93;
            var elemHEX60gensym16_2852129596 = elementsHEX60gensym16_2852129575[chckIndx(iHEX60gensym16_2852129595, 0, (elementsHEX60gensym16_2852129575).length - 1)];
            F.line = 94;
            var tagHEX60gensym16_2852129597 = compTmpDataHEX60gensym16_2852129561.childNodes[chckIndx(iHEX60gensym16_2852129595, 0, (compTmpDataHEX60gensym16_2852129561.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym16_2852129598 = elemHEX60gensym16_2852129596.parentElement;
            F.line = 96;
            var idxHEX60gensym16_2852129599 = index_2466250824(elemHEX60gensym16_2852129596);
            F.line = 97;
            var lengthHEX60gensym16_2852129603 = (parentHEX60gensym16_2852129598.childNodes).length;
            F.line = 91;
            elemHEX60gensym16_2852129596.remove();
            if ((subInt(lengthHEX60gensym16_2852129603, 1) == idxHEX60gensym16_2852129599)) {
            F.line = 101;
            parentHEX60gensym16_2852129598.appendChild(tagHEX60gensym16_2852129597);
            }
            else {
              F.line = 103;
            parentHEX60gensym16_2852129598.insertBefore(tagHEX60gensym16_2852129597, parentHEX60gensym16_2852129598.childNodes[chckIndx(idxHEX60gensym16_2852129599, 0, (parentHEX60gensym16_2852129598.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881770 = subInt(res_536881770, 1);
          }
      };
    };
    if (activeElementHEX60gensym16_2852129560.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym16_2852129604 = document.getElementById(activeElementHEX60gensym16_2852129560.id);
    if (!((actElemHEX60gensym16_2852129604 == null))) {
    F.line = 108;
    actElemHEX60gensym16_2852129604.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym16_2852129604.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym16_2852129706 = activeElementHEX60gensym16_2852129560;
    F.line = 112;
    var currentActiveElemHEX60gensym16_2852129707 = actElemHEX60gensym16_2852129604;
    F.line = 113;
    currentActiveElemHEX60gensym16_2852129707.setSelectionRange(oldActiveElemHEX60gensym16_2852129706.selectionStart, oldActiveElemHEX60gensym16_2852129706.selectionEnd, oldActiveElemHEX60gensym16_2852129706.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852129545.updated(self_2852129545, null);
    F.line = 59;
    F.filename = "layout.nim";
    self_2852129545.rendered(self_2852129545, null);
  framePtr = F.prev;

  
}

function reRender_2852131040(self_2852131041) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym25_2852131056 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym25_2852131057 = render_1644175063(self_2852131041);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852131041), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym25_2852131057, ([100,97,116,97,45] || []).concat(self_2852131041.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym25_2852131067 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852131041.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym25_2852131071 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym25_2852131075 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881773 = 0;
      F.line = 242;
      var L_536881774 = (compTmpDataHEX60gensym25_2852131057.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881773 < L_536881774)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym25_2852131075 = compTmpDataHEX60gensym25_2852131057.childNodes[chckIndx(i_536881773, 0, (compTmpDataHEX60gensym25_2852131057.childNodes).length - 1)];
            if (!((currentHEX60gensym25_2852131067 == null))) {
            F.line = 88;
            elementsHEX60gensym25_2852131071.push(currentHEX60gensym25_2852131067);;
            F.line = 89;
            currentHEX60gensym25_2852131067 = currentHEX60gensym25_2852131067.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881773 = addInt(i_536881773, 1);
            if (!(((compTmpDataHEX60gensym25_2852131057.childNodes).length == L_536881774))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym25_2852131091 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881777 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881777 = subInt((elementsHEX60gensym25_2852131071).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881778 = colontmp__536881777;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881778)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym25_2852131091 = res_536881778;
            F.line = 93;
            var elemHEX60gensym25_2852131092 = elementsHEX60gensym25_2852131071[chckIndx(iHEX60gensym25_2852131091, 0, (elementsHEX60gensym25_2852131071).length - 1)];
            F.line = 94;
            var tagHEX60gensym25_2852131093 = compTmpDataHEX60gensym25_2852131057.childNodes[chckIndx(iHEX60gensym25_2852131091, 0, (compTmpDataHEX60gensym25_2852131057.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym25_2852131094 = elemHEX60gensym25_2852131092.parentElement;
            F.line = 96;
            var idxHEX60gensym25_2852131095 = index_2466250824(elemHEX60gensym25_2852131092);
            F.line = 97;
            var lengthHEX60gensym25_2852131099 = (parentHEX60gensym25_2852131094.childNodes).length;
            F.line = 91;
            elemHEX60gensym25_2852131092.remove();
            if ((subInt(lengthHEX60gensym25_2852131099, 1) == idxHEX60gensym25_2852131095)) {
            F.line = 101;
            parentHEX60gensym25_2852131094.appendChild(tagHEX60gensym25_2852131093);
            }
            else {
              F.line = 103;
            parentHEX60gensym25_2852131094.insertBefore(tagHEX60gensym25_2852131093, parentHEX60gensym25_2852131094.childNodes[chckIndx(idxHEX60gensym25_2852131095, 0, (parentHEX60gensym25_2852131094.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881778 = subInt(res_536881778, 1);
          }
      };
    };
    if (activeElementHEX60gensym25_2852131056.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym25_2852131100 = document.getElementById(activeElementHEX60gensym25_2852131056.id);
    if (!((actElemHEX60gensym25_2852131100 == null))) {
    F.line = 108;
    actElemHEX60gensym25_2852131100.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym25_2852131100.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym25_2852131202 = activeElementHEX60gensym25_2852131056;
    F.line = 112;
    var currentActiveElemHEX60gensym25_2852131203 = actElemHEX60gensym25_2852131100;
    F.line = 113;
    currentActiveElemHEX60gensym25_2852131203.setSelectionRange(oldActiveElemHEX60gensym25_2852131202.selectionStart, oldActiveElemHEX60gensym25_2852131202.selectionEnd, oldActiveElemHEX60gensym25_2852131202.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852131041.updated(self_2852131041, null);
    F.line = 79;
    F.filename = "layout.nim";
    self_2852131041.rendered(self_2852131041, null);
  framePtr = F.prev;

  
}

function reRender_2835349636(self_2835349637) {
  var F = {procname: "images.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_2835349652 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_2835349653 = render_1644175063(self_2835349637);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2835349637), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_2835349653, ([100,97,116,97,45] || []).concat(self_2835349637.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_2835349663 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2835349637.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_2835349667 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_2835349671 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881781 = 0;
      F.line = 242;
      var L_536881782 = (compTmpDataHEX60gensym0_2835349653.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881781 < L_536881782)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_2835349671 = compTmpDataHEX60gensym0_2835349653.childNodes[chckIndx(i_536881781, 0, (compTmpDataHEX60gensym0_2835349653.childNodes).length - 1)];
            if (!((currentHEX60gensym0_2835349663 == null))) {
            F.line = 88;
            elementsHEX60gensym0_2835349667.push(currentHEX60gensym0_2835349663);;
            F.line = 89;
            currentHEX60gensym0_2835349663 = currentHEX60gensym0_2835349663.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881781 = addInt(i_536881781, 1);
            if (!(((compTmpDataHEX60gensym0_2835349653.childNodes).length == L_536881782))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_2835349687 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881785 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881785 = subInt((elementsHEX60gensym0_2835349667).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881786 = colontmp__536881785;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881786)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_2835349687 = res_536881786;
            F.line = 93;
            var elemHEX60gensym0_2835349688 = elementsHEX60gensym0_2835349667[chckIndx(iHEX60gensym0_2835349687, 0, (elementsHEX60gensym0_2835349667).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_2835349689 = compTmpDataHEX60gensym0_2835349653.childNodes[chckIndx(iHEX60gensym0_2835349687, 0, (compTmpDataHEX60gensym0_2835349653.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_2835349690 = elemHEX60gensym0_2835349688.parentElement;
            F.line = 96;
            var idxHEX60gensym0_2835349691 = index_2466250824(elemHEX60gensym0_2835349688);
            F.line = 97;
            var lengthHEX60gensym0_2835349695 = (parentHEX60gensym0_2835349690.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_2835349688.remove();
            if ((subInt(lengthHEX60gensym0_2835349695, 1) == idxHEX60gensym0_2835349691)) {
            F.line = 101;
            parentHEX60gensym0_2835349690.appendChild(tagHEX60gensym0_2835349689);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_2835349690.insertBefore(tagHEX60gensym0_2835349689, parentHEX60gensym0_2835349690.childNodes[chckIndx(idxHEX60gensym0_2835349691, 0, (parentHEX60gensym0_2835349690.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881786 = subInt(res_536881786, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_2835349652.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_2835349696 = document.getElementById(activeElementHEX60gensym0_2835349652.id);
    if (!((actElemHEX60gensym0_2835349696 == null))) {
    F.line = 108;
    actElemHEX60gensym0_2835349696.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_2835349696.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_2835349798 = activeElementHEX60gensym0_2835349652;
    F.line = 112;
    var currentActiveElemHEX60gensym0_2835349799 = actElemHEX60gensym0_2835349696;
    F.line = 113;
    currentActiveElemHEX60gensym0_2835349799.setSelectionRange(oldActiveElemHEX60gensym0_2835349798.selectionStart, oldActiveElemHEX60gensym0_2835349798.selectionEnd, oldActiveElemHEX60gensym0_2835349798.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2835349637.updated(self_2835349637, null);
    F.line = 5;
    F.filename = "images.nim";
    self_2835349637.rendered(self_2835349637, null);
  framePtr = F.prev;

  
}

function reRender_2818572536(self_2818572537) {
  var F = {procname: "fonts.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym2_2818572552 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym2_2818572553 = render_1644175063(self_2818572537);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2818572537), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym2_2818572553, ([100,97,116,97,45] || []).concat(self_2818572537.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym2_2818572563 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2818572537.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym2_2818572567 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym2_2818572571 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881789 = 0;
      F.line = 242;
      var L_536881790 = (compTmpDataHEX60gensym2_2818572553.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881789 < L_536881790)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym2_2818572571 = compTmpDataHEX60gensym2_2818572553.childNodes[chckIndx(i_536881789, 0, (compTmpDataHEX60gensym2_2818572553.childNodes).length - 1)];
            if (!((currentHEX60gensym2_2818572563 == null))) {
            F.line = 88;
            elementsHEX60gensym2_2818572567.push(currentHEX60gensym2_2818572563);;
            F.line = 89;
            currentHEX60gensym2_2818572563 = currentHEX60gensym2_2818572563.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881789 = addInt(i_536881789, 1);
            if (!(((compTmpDataHEX60gensym2_2818572553.childNodes).length == L_536881790))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym2_2818572587 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881793 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881793 = subInt((elementsHEX60gensym2_2818572567).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881794 = colontmp__536881793;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881794)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym2_2818572587 = res_536881794;
            F.line = 93;
            var elemHEX60gensym2_2818572588 = elementsHEX60gensym2_2818572567[chckIndx(iHEX60gensym2_2818572587, 0, (elementsHEX60gensym2_2818572567).length - 1)];
            F.line = 94;
            var tagHEX60gensym2_2818572589 = compTmpDataHEX60gensym2_2818572553.childNodes[chckIndx(iHEX60gensym2_2818572587, 0, (compTmpDataHEX60gensym2_2818572553.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym2_2818572590 = elemHEX60gensym2_2818572588.parentElement;
            F.line = 96;
            var idxHEX60gensym2_2818572591 = index_2466250824(elemHEX60gensym2_2818572588);
            F.line = 97;
            var lengthHEX60gensym2_2818572595 = (parentHEX60gensym2_2818572590.childNodes).length;
            F.line = 91;
            elemHEX60gensym2_2818572588.remove();
            if ((subInt(lengthHEX60gensym2_2818572595, 1) == idxHEX60gensym2_2818572591)) {
            F.line = 101;
            parentHEX60gensym2_2818572590.appendChild(tagHEX60gensym2_2818572589);
            }
            else {
              F.line = 103;
            parentHEX60gensym2_2818572590.insertBefore(tagHEX60gensym2_2818572589, parentHEX60gensym2_2818572590.childNodes[chckIndx(idxHEX60gensym2_2818572591, 0, (parentHEX60gensym2_2818572590.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881794 = subInt(res_536881794, 1);
          }
      };
    };
    if (activeElementHEX60gensym2_2818572552.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym2_2818572596 = document.getElementById(activeElementHEX60gensym2_2818572552.id);
    if (!((actElemHEX60gensym2_2818572596 == null))) {
    F.line = 108;
    actElemHEX60gensym2_2818572596.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym2_2818572596.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym2_2818572698 = activeElementHEX60gensym2_2818572552;
    F.line = 112;
    var currentActiveElemHEX60gensym2_2818572699 = actElemHEX60gensym2_2818572596;
    F.line = 113;
    currentActiveElemHEX60gensym2_2818572699.setSelectionRange(oldActiveElemHEX60gensym2_2818572698.selectionStart, oldActiveElemHEX60gensym2_2818572698.selectionEnd, oldActiveElemHEX60gensym2_2818572698.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2818572537.updated(self_2818572537, null);
    F.line = 45;
    F.filename = "fonts.nim";
    self_2818572537.rendered(self_2818572537, null);
  framePtr = F.prev;

  
}

function reRender_2852131610(self_2852131611) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym27_2852131626 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym27_2852131627 = render_1644175063(self_2852131611);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852131611), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym27_2852131627, ([100,97,116,97,45] || []).concat(self_2852131611.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym27_2852131637 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852131611.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym27_2852131641 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym27_2852131645 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881797 = 0;
      F.line = 242;
      var L_536881798 = (compTmpDataHEX60gensym27_2852131627.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881797 < L_536881798)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym27_2852131645 = compTmpDataHEX60gensym27_2852131627.childNodes[chckIndx(i_536881797, 0, (compTmpDataHEX60gensym27_2852131627.childNodes).length - 1)];
            if (!((currentHEX60gensym27_2852131637 == null))) {
            F.line = 88;
            elementsHEX60gensym27_2852131641.push(currentHEX60gensym27_2852131637);;
            F.line = 89;
            currentHEX60gensym27_2852131637 = currentHEX60gensym27_2852131637.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881797 = addInt(i_536881797, 1);
            if (!(((compTmpDataHEX60gensym27_2852131627.childNodes).length == L_536881798))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym27_2852131661 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881801 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881801 = subInt((elementsHEX60gensym27_2852131641).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881802 = colontmp__536881801;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881802)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym27_2852131661 = res_536881802;
            F.line = 93;
            var elemHEX60gensym27_2852131662 = elementsHEX60gensym27_2852131641[chckIndx(iHEX60gensym27_2852131661, 0, (elementsHEX60gensym27_2852131641).length - 1)];
            F.line = 94;
            var tagHEX60gensym27_2852131663 = compTmpDataHEX60gensym27_2852131627.childNodes[chckIndx(iHEX60gensym27_2852131661, 0, (compTmpDataHEX60gensym27_2852131627.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym27_2852131664 = elemHEX60gensym27_2852131662.parentElement;
            F.line = 96;
            var idxHEX60gensym27_2852131665 = index_2466250824(elemHEX60gensym27_2852131662);
            F.line = 97;
            var lengthHEX60gensym27_2852131669 = (parentHEX60gensym27_2852131664.childNodes).length;
            F.line = 91;
            elemHEX60gensym27_2852131662.remove();
            if ((subInt(lengthHEX60gensym27_2852131669, 1) == idxHEX60gensym27_2852131665)) {
            F.line = 101;
            parentHEX60gensym27_2852131664.appendChild(tagHEX60gensym27_2852131663);
            }
            else {
              F.line = 103;
            parentHEX60gensym27_2852131664.insertBefore(tagHEX60gensym27_2852131663, parentHEX60gensym27_2852131664.childNodes[chckIndx(idxHEX60gensym27_2852131665, 0, (parentHEX60gensym27_2852131664.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881802 = subInt(res_536881802, 1);
          }
      };
    };
    if (activeElementHEX60gensym27_2852131626.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym27_2852131670 = document.getElementById(activeElementHEX60gensym27_2852131626.id);
    if (!((actElemHEX60gensym27_2852131670 == null))) {
    F.line = 108;
    actElemHEX60gensym27_2852131670.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym27_2852131670.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym27_2852131772 = activeElementHEX60gensym27_2852131626;
    F.line = 112;
    var currentActiveElemHEX60gensym27_2852131773 = actElemHEX60gensym27_2852131670;
    F.line = 113;
    currentActiveElemHEX60gensym27_2852131773.setSelectionRange(oldActiveElemHEX60gensym27_2852131772.selectionStart, oldActiveElemHEX60gensym27_2852131772.selectionEnd, oldActiveElemHEX60gensym27_2852131772.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852131611.updated(self_2852131611, null);
    F.line = 87;
    F.filename = "layout.nim";
    self_2852131611.rendered(self_2852131611, null);
  framePtr = F.prev;

  
}

function reRender_2835350405(self_2835350406) {
  var F = {procname: "images.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym4_2835350421 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym4_2835350422 = render_1644175063(self_2835350406);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2835350406), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym4_2835350422, ([100,97,116,97,45] || []).concat(self_2835350406.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym4_2835350432 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2835350406.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym4_2835350436 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym4_2835350440 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881805 = 0;
      F.line = 242;
      var L_536881806 = (compTmpDataHEX60gensym4_2835350422.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881805 < L_536881806)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym4_2835350440 = compTmpDataHEX60gensym4_2835350422.childNodes[chckIndx(i_536881805, 0, (compTmpDataHEX60gensym4_2835350422.childNodes).length - 1)];
            if (!((currentHEX60gensym4_2835350432 == null))) {
            F.line = 88;
            elementsHEX60gensym4_2835350436.push(currentHEX60gensym4_2835350432);;
            F.line = 89;
            currentHEX60gensym4_2835350432 = currentHEX60gensym4_2835350432.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881805 = addInt(i_536881805, 1);
            if (!(((compTmpDataHEX60gensym4_2835350422.childNodes).length == L_536881806))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym4_2835350456 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881809 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881809 = subInt((elementsHEX60gensym4_2835350436).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881810 = colontmp__536881809;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881810)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym4_2835350456 = res_536881810;
            F.line = 93;
            var elemHEX60gensym4_2835350457 = elementsHEX60gensym4_2835350436[chckIndx(iHEX60gensym4_2835350456, 0, (elementsHEX60gensym4_2835350436).length - 1)];
            F.line = 94;
            var tagHEX60gensym4_2835350458 = compTmpDataHEX60gensym4_2835350422.childNodes[chckIndx(iHEX60gensym4_2835350456, 0, (compTmpDataHEX60gensym4_2835350422.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym4_2835350459 = elemHEX60gensym4_2835350457.parentElement;
            F.line = 96;
            var idxHEX60gensym4_2835350460 = index_2466250824(elemHEX60gensym4_2835350457);
            F.line = 97;
            var lengthHEX60gensym4_2835350464 = (parentHEX60gensym4_2835350459.childNodes).length;
            F.line = 91;
            elemHEX60gensym4_2835350457.remove();
            if ((subInt(lengthHEX60gensym4_2835350464, 1) == idxHEX60gensym4_2835350460)) {
            F.line = 101;
            parentHEX60gensym4_2835350459.appendChild(tagHEX60gensym4_2835350458);
            }
            else {
              F.line = 103;
            parentHEX60gensym4_2835350459.insertBefore(tagHEX60gensym4_2835350458, parentHEX60gensym4_2835350459.childNodes[chckIndx(idxHEX60gensym4_2835350460, 0, (parentHEX60gensym4_2835350459.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881810 = subInt(res_536881810, 1);
          }
      };
    };
    if (activeElementHEX60gensym4_2835350421.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym4_2835350465 = document.getElementById(activeElementHEX60gensym4_2835350421.id);
    if (!((actElemHEX60gensym4_2835350465 == null))) {
    F.line = 108;
    actElemHEX60gensym4_2835350465.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym4_2835350465.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym4_2835350567 = activeElementHEX60gensym4_2835350421;
    F.line = 112;
    var currentActiveElemHEX60gensym4_2835350568 = actElemHEX60gensym4_2835350465;
    F.line = 113;
    currentActiveElemHEX60gensym4_2835350568.setSelectionRange(oldActiveElemHEX60gensym4_2835350567.selectionStart, oldActiveElemHEX60gensym4_2835350567.selectionEnd, oldActiveElemHEX60gensym4_2835350567.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2835350406.updated(self_2835350406, null);
    F.line = 15;
    F.filename = "images.nim";
    self_2835350406.rendered(self_2835350406, null);
  framePtr = F.prev;

  
}

function reRender_2785018357(self_2785018358) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_2785018373 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_2785018374 = render_1644175063(self_2785018358);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785018358), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_2785018374, ([100,97,116,97,45] || []).concat(self_2785018358.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_2785018406 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785018358.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_2785018431 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_2785018435 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881813 = 0;
      F.line = 242;
      var L_536881814 = (compTmpDataHEX60gensym0_2785018374.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881813 < L_536881814)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_2785018435 = compTmpDataHEX60gensym0_2785018374.childNodes[chckIndx(i_536881813, 0, (compTmpDataHEX60gensym0_2785018374.childNodes).length - 1)];
            if (!((currentHEX60gensym0_2785018406 == null))) {
            F.line = 88;
            elementsHEX60gensym0_2785018431.push(currentHEX60gensym0_2785018406);;
            F.line = 89;
            currentHEX60gensym0_2785018406 = currentHEX60gensym0_2785018406.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881813 = addInt(i_536881813, 1);
            if (!(((compTmpDataHEX60gensym0_2785018374.childNodes).length == L_536881814))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_2785018452 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881817 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881817 = subInt((elementsHEX60gensym0_2785018431).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881818 = colontmp__536881817;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881818)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_2785018452 = res_536881818;
            F.line = 93;
            var elemHEX60gensym0_2785018453 = elementsHEX60gensym0_2785018431[chckIndx(iHEX60gensym0_2785018452, 0, (elementsHEX60gensym0_2785018431).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_2785018454 = compTmpDataHEX60gensym0_2785018374.childNodes[chckIndx(iHEX60gensym0_2785018452, 0, (compTmpDataHEX60gensym0_2785018374.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_2785018455 = elemHEX60gensym0_2785018453.parentElement;
            F.line = 96;
            var idxHEX60gensym0_2785018456 = index_2466250824(elemHEX60gensym0_2785018453);
            F.line = 97;
            var lengthHEX60gensym0_2785018460 = (parentHEX60gensym0_2785018455.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_2785018453.remove();
            if ((subInt(lengthHEX60gensym0_2785018460, 1) == idxHEX60gensym0_2785018456)) {
            F.line = 101;
            parentHEX60gensym0_2785018455.appendChild(tagHEX60gensym0_2785018454);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_2785018455.insertBefore(tagHEX60gensym0_2785018454, parentHEX60gensym0_2785018455.childNodes[chckIndx(idxHEX60gensym0_2785018456, 0, (parentHEX60gensym0_2785018455.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881818 = subInt(res_536881818, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_2785018373.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_2785018461 = document.getElementById(activeElementHEX60gensym0_2785018373.id);
    if (!((actElemHEX60gensym0_2785018461 == null))) {
    F.line = 108;
    actElemHEX60gensym0_2785018461.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_2785018461.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_2785018563 = activeElementHEX60gensym0_2785018373;
    F.line = 112;
    var currentActiveElemHEX60gensym0_2785018564 = actElemHEX60gensym0_2785018461;
    F.line = 113;
    currentActiveElemHEX60gensym0_2785018564.setSelectionRange(oldActiveElemHEX60gensym0_2785018563.selectionStart, oldActiveElemHEX60gensym0_2785018563.selectionEnd, oldActiveElemHEX60gensym0_2785018563.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785018358.updated(self_2785018358, null);
    F.line = 62;
    F.filename = "numbering.nim";
    self_2785018358.rendered(self_2785018358, null);
  framePtr = F.prev;

  
}

function reRender_2902459491(self_2902459492) {
  var F = {procname: "paper.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym11_2902459507 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym11_2902459508 = render_1644175063(self_2902459492);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2902459492), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym11_2902459508, ([100,97,116,97,45] || []).concat(self_2902459492.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym11_2902459518 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2902459492.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym11_2902459522 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym11_2902459526 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881821 = 0;
      F.line = 242;
      var L_536881822 = (compTmpDataHEX60gensym11_2902459508.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881821 < L_536881822)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym11_2902459526 = compTmpDataHEX60gensym11_2902459508.childNodes[chckIndx(i_536881821, 0, (compTmpDataHEX60gensym11_2902459508.childNodes).length - 1)];
            if (!((currentHEX60gensym11_2902459518 == null))) {
            F.line = 88;
            elementsHEX60gensym11_2902459522.push(currentHEX60gensym11_2902459518);;
            F.line = 89;
            currentHEX60gensym11_2902459518 = currentHEX60gensym11_2902459518.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881821 = addInt(i_536881821, 1);
            if (!(((compTmpDataHEX60gensym11_2902459508.childNodes).length == L_536881822))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym11_2902459542 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881825 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881825 = subInt((elementsHEX60gensym11_2902459522).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881826 = colontmp__536881825;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881826)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym11_2902459542 = res_536881826;
            F.line = 93;
            var elemHEX60gensym11_2902459543 = elementsHEX60gensym11_2902459522[chckIndx(iHEX60gensym11_2902459542, 0, (elementsHEX60gensym11_2902459522).length - 1)];
            F.line = 94;
            var tagHEX60gensym11_2902459544 = compTmpDataHEX60gensym11_2902459508.childNodes[chckIndx(iHEX60gensym11_2902459542, 0, (compTmpDataHEX60gensym11_2902459508.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym11_2902459545 = elemHEX60gensym11_2902459543.parentElement;
            F.line = 96;
            var idxHEX60gensym11_2902459546 = index_2466250824(elemHEX60gensym11_2902459543);
            F.line = 97;
            var lengthHEX60gensym11_2902459550 = (parentHEX60gensym11_2902459545.childNodes).length;
            F.line = 91;
            elemHEX60gensym11_2902459543.remove();
            if ((subInt(lengthHEX60gensym11_2902459550, 1) == idxHEX60gensym11_2902459546)) {
            F.line = 101;
            parentHEX60gensym11_2902459545.appendChild(tagHEX60gensym11_2902459544);
            }
            else {
              F.line = 103;
            parentHEX60gensym11_2902459545.insertBefore(tagHEX60gensym11_2902459544, parentHEX60gensym11_2902459545.childNodes[chckIndx(idxHEX60gensym11_2902459546, 0, (parentHEX60gensym11_2902459545.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881826 = subInt(res_536881826, 1);
          }
      };
    };
    if (activeElementHEX60gensym11_2902459507.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym11_2902459551 = document.getElementById(activeElementHEX60gensym11_2902459507.id);
    if (!((actElemHEX60gensym11_2902459551 == null))) {
    F.line = 108;
    actElemHEX60gensym11_2902459551.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym11_2902459551.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym11_2902459653 = activeElementHEX60gensym11_2902459507;
    F.line = 112;
    var currentActiveElemHEX60gensym11_2902459654 = actElemHEX60gensym11_2902459551;
    F.line = 113;
    currentActiveElemHEX60gensym11_2902459654.setSelectionRange(oldActiveElemHEX60gensym11_2902459653.selectionStart, oldActiveElemHEX60gensym11_2902459653.selectionEnd, oldActiveElemHEX60gensym11_2902459653.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2902459492.updated(self_2902459492, null);
    F.line = 21;
    F.filename = "paper.nim";
    self_2902459492.rendered(self_2902459492, null);
  framePtr = F.prev;

  
}

function reRender_2986344610(self_2986344611) {
  var F = {procname: "mBlocks.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_2986344626 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_2986344627 = render_1644175063(self_2986344611);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2986344611), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_2986344627, ([100,97,116,97,45] || []).concat(self_2986344611.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_2986344637 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2986344611.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_2986344641 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_2986344645 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881829 = 0;
      F.line = 242;
      var L_536881830 = (compTmpDataHEX60gensym0_2986344627.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881829 < L_536881830)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_2986344645 = compTmpDataHEX60gensym0_2986344627.childNodes[chckIndx(i_536881829, 0, (compTmpDataHEX60gensym0_2986344627.childNodes).length - 1)];
            if (!((currentHEX60gensym0_2986344637 == null))) {
            F.line = 88;
            elementsHEX60gensym0_2986344641.push(currentHEX60gensym0_2986344637);;
            F.line = 89;
            currentHEX60gensym0_2986344637 = currentHEX60gensym0_2986344637.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881829 = addInt(i_536881829, 1);
            if (!(((compTmpDataHEX60gensym0_2986344627.childNodes).length == L_536881830))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_2986344661 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881833 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881833 = subInt((elementsHEX60gensym0_2986344641).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881834 = colontmp__536881833;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881834)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_2986344661 = res_536881834;
            F.line = 93;
            var elemHEX60gensym0_2986344662 = elementsHEX60gensym0_2986344641[chckIndx(iHEX60gensym0_2986344661, 0, (elementsHEX60gensym0_2986344641).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_2986344663 = compTmpDataHEX60gensym0_2986344627.childNodes[chckIndx(iHEX60gensym0_2986344661, 0, (compTmpDataHEX60gensym0_2986344627.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_2986344664 = elemHEX60gensym0_2986344662.parentElement;
            F.line = 96;
            var idxHEX60gensym0_2986344665 = index_2466250824(elemHEX60gensym0_2986344662);
            F.line = 97;
            var lengthHEX60gensym0_2986344669 = (parentHEX60gensym0_2986344664.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_2986344662.remove();
            if ((subInt(lengthHEX60gensym0_2986344669, 1) == idxHEX60gensym0_2986344665)) {
            F.line = 101;
            parentHEX60gensym0_2986344664.appendChild(tagHEX60gensym0_2986344663);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_2986344664.insertBefore(tagHEX60gensym0_2986344663, parentHEX60gensym0_2986344664.childNodes[chckIndx(idxHEX60gensym0_2986344665, 0, (parentHEX60gensym0_2986344664.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881834 = subInt(res_536881834, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_2986344626.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_2986344670 = document.getElementById(activeElementHEX60gensym0_2986344626.id);
    if (!((actElemHEX60gensym0_2986344670 == null))) {
    F.line = 108;
    actElemHEX60gensym0_2986344670.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_2986344670.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_2986344772 = activeElementHEX60gensym0_2986344626;
    F.line = 112;
    var currentActiveElemHEX60gensym0_2986344773 = actElemHEX60gensym0_2986344670;
    F.line = 113;
    currentActiveElemHEX60gensym0_2986344773.setSelectionRange(oldActiveElemHEX60gensym0_2986344772.selectionStart, oldActiveElemHEX60gensym0_2986344772.selectionEnd, oldActiveElemHEX60gensym0_2986344772.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2986344611.updated(self_2986344611, null);
    F.line = 8;
    F.filename = "mBlocks.nim";
    self_2986344611.rendered(self_2986344611, null);
  framePtr = F.prev;

  
}

function reRender_2785019427(self_2785019428) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym4_2785019443 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym4_2785019444 = render_1644175063(self_2785019428);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785019428), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym4_2785019444, ([100,97,116,97,45] || []).concat(self_2785019428.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym4_2785019454 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785019428.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym4_2785019458 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym4_2785019462 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881837 = 0;
      F.line = 242;
      var L_536881838 = (compTmpDataHEX60gensym4_2785019444.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881837 < L_536881838)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym4_2785019462 = compTmpDataHEX60gensym4_2785019444.childNodes[chckIndx(i_536881837, 0, (compTmpDataHEX60gensym4_2785019444.childNodes).length - 1)];
            if (!((currentHEX60gensym4_2785019454 == null))) {
            F.line = 88;
            elementsHEX60gensym4_2785019458.push(currentHEX60gensym4_2785019454);;
            F.line = 89;
            currentHEX60gensym4_2785019454 = currentHEX60gensym4_2785019454.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881837 = addInt(i_536881837, 1);
            if (!(((compTmpDataHEX60gensym4_2785019444.childNodes).length == L_536881838))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym4_2785019478 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881841 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881841 = subInt((elementsHEX60gensym4_2785019458).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881842 = colontmp__536881841;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881842)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym4_2785019478 = res_536881842;
            F.line = 93;
            var elemHEX60gensym4_2785019479 = elementsHEX60gensym4_2785019458[chckIndx(iHEX60gensym4_2785019478, 0, (elementsHEX60gensym4_2785019458).length - 1)];
            F.line = 94;
            var tagHEX60gensym4_2785019480 = compTmpDataHEX60gensym4_2785019444.childNodes[chckIndx(iHEX60gensym4_2785019478, 0, (compTmpDataHEX60gensym4_2785019444.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym4_2785019481 = elemHEX60gensym4_2785019479.parentElement;
            F.line = 96;
            var idxHEX60gensym4_2785019482 = index_2466250824(elemHEX60gensym4_2785019479);
            F.line = 97;
            var lengthHEX60gensym4_2785019486 = (parentHEX60gensym4_2785019481.childNodes).length;
            F.line = 91;
            elemHEX60gensym4_2785019479.remove();
            if ((subInt(lengthHEX60gensym4_2785019486, 1) == idxHEX60gensym4_2785019482)) {
            F.line = 101;
            parentHEX60gensym4_2785019481.appendChild(tagHEX60gensym4_2785019480);
            }
            else {
              F.line = 103;
            parentHEX60gensym4_2785019481.insertBefore(tagHEX60gensym4_2785019480, parentHEX60gensym4_2785019481.childNodes[chckIndx(idxHEX60gensym4_2785019482, 0, (parentHEX60gensym4_2785019481.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881842 = subInt(res_536881842, 1);
          }
      };
    };
    if (activeElementHEX60gensym4_2785019443.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym4_2785019487 = document.getElementById(activeElementHEX60gensym4_2785019443.id);
    if (!((actElemHEX60gensym4_2785019487 == null))) {
    F.line = 108;
    actElemHEX60gensym4_2785019487.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym4_2785019487.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym4_2785019589 = activeElementHEX60gensym4_2785019443;
    F.line = 112;
    var currentActiveElemHEX60gensym4_2785019590 = actElemHEX60gensym4_2785019487;
    F.line = 113;
    currentActiveElemHEX60gensym4_2785019590.setSelectionRange(oldActiveElemHEX60gensym4_2785019589.selectionStart, oldActiveElemHEX60gensym4_2785019589.selectionEnd, oldActiveElemHEX60gensym4_2785019589.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785019428.updated(self_2785019428, null);
    F.line = 71;
    F.filename = "numbering.nim";
    self_2785019428.rendered(self_2785019428, null);
  framePtr = F.prev;

  
}

function reRender_2785021591(self_2785021592) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym12_2785021607 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym12_2785021608 = render_1644175063(self_2785021592);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785021592), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym12_2785021608, ([100,97,116,97,45] || []).concat(self_2785021592.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym12_2785021618 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785021592.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym12_2785021622 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym12_2785021626 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881845 = 0;
      F.line = 242;
      var L_536881846 = (compTmpDataHEX60gensym12_2785021608.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881845 < L_536881846)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym12_2785021626 = compTmpDataHEX60gensym12_2785021608.childNodes[chckIndx(i_536881845, 0, (compTmpDataHEX60gensym12_2785021608.childNodes).length - 1)];
            if (!((currentHEX60gensym12_2785021618 == null))) {
            F.line = 88;
            elementsHEX60gensym12_2785021622.push(currentHEX60gensym12_2785021618);;
            F.line = 89;
            currentHEX60gensym12_2785021618 = currentHEX60gensym12_2785021618.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881845 = addInt(i_536881845, 1);
            if (!(((compTmpDataHEX60gensym12_2785021608.childNodes).length == L_536881846))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym12_2785021642 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881849 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881849 = subInt((elementsHEX60gensym12_2785021622).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881850 = colontmp__536881849;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881850)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym12_2785021642 = res_536881850;
            F.line = 93;
            var elemHEX60gensym12_2785021643 = elementsHEX60gensym12_2785021622[chckIndx(iHEX60gensym12_2785021642, 0, (elementsHEX60gensym12_2785021622).length - 1)];
            F.line = 94;
            var tagHEX60gensym12_2785021644 = compTmpDataHEX60gensym12_2785021608.childNodes[chckIndx(iHEX60gensym12_2785021642, 0, (compTmpDataHEX60gensym12_2785021608.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym12_2785021645 = elemHEX60gensym12_2785021643.parentElement;
            F.line = 96;
            var idxHEX60gensym12_2785021646 = index_2466250824(elemHEX60gensym12_2785021643);
            F.line = 97;
            var lengthHEX60gensym12_2785021650 = (parentHEX60gensym12_2785021645.childNodes).length;
            F.line = 91;
            elemHEX60gensym12_2785021643.remove();
            if ((subInt(lengthHEX60gensym12_2785021650, 1) == idxHEX60gensym12_2785021646)) {
            F.line = 101;
            parentHEX60gensym12_2785021645.appendChild(tagHEX60gensym12_2785021644);
            }
            else {
              F.line = 103;
            parentHEX60gensym12_2785021645.insertBefore(tagHEX60gensym12_2785021644, parentHEX60gensym12_2785021645.childNodes[chckIndx(idxHEX60gensym12_2785021646, 0, (parentHEX60gensym12_2785021645.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881850 = subInt(res_536881850, 1);
          }
      };
    };
    if (activeElementHEX60gensym12_2785021607.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym12_2785021651 = document.getElementById(activeElementHEX60gensym12_2785021607.id);
    if (!((actElemHEX60gensym12_2785021651 == null))) {
    F.line = 108;
    actElemHEX60gensym12_2785021651.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym12_2785021651.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym12_2785021753 = activeElementHEX60gensym12_2785021607;
    F.line = 112;
    var currentActiveElemHEX60gensym12_2785021754 = actElemHEX60gensym12_2785021651;
    F.line = 113;
    currentActiveElemHEX60gensym12_2785021754.setSelectionRange(oldActiveElemHEX60gensym12_2785021753.selectionStart, oldActiveElemHEX60gensym12_2785021753.selectionEnd, oldActiveElemHEX60gensym12_2785021753.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785021592.updated(self_2785021592, null);
    F.line = 98;
    F.filename = "numbering.nim";
    self_2785021592.rendered(self_2785021592, null);
  framePtr = F.prev;

  
}

function reRender_2785020657(self_2785020658) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym10_2785020673 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym10_2785020674 = render_1644175063(self_2785020658);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785020658), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym10_2785020674, ([100,97,116,97,45] || []).concat(self_2785020658.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym10_2785020684 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785020658.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym10_2785020688 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym10_2785020692 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881853 = 0;
      F.line = 242;
      var L_536881854 = (compTmpDataHEX60gensym10_2785020674.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881853 < L_536881854)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym10_2785020692 = compTmpDataHEX60gensym10_2785020674.childNodes[chckIndx(i_536881853, 0, (compTmpDataHEX60gensym10_2785020674.childNodes).length - 1)];
            if (!((currentHEX60gensym10_2785020684 == null))) {
            F.line = 88;
            elementsHEX60gensym10_2785020688.push(currentHEX60gensym10_2785020684);;
            F.line = 89;
            currentHEX60gensym10_2785020684 = currentHEX60gensym10_2785020684.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881853 = addInt(i_536881853, 1);
            if (!(((compTmpDataHEX60gensym10_2785020674.childNodes).length == L_536881854))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym10_2785020708 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881857 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881857 = subInt((elementsHEX60gensym10_2785020688).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881858 = colontmp__536881857;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881858)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym10_2785020708 = res_536881858;
            F.line = 93;
            var elemHEX60gensym10_2785020709 = elementsHEX60gensym10_2785020688[chckIndx(iHEX60gensym10_2785020708, 0, (elementsHEX60gensym10_2785020688).length - 1)];
            F.line = 94;
            var tagHEX60gensym10_2785020710 = compTmpDataHEX60gensym10_2785020674.childNodes[chckIndx(iHEX60gensym10_2785020708, 0, (compTmpDataHEX60gensym10_2785020674.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym10_2785020711 = elemHEX60gensym10_2785020709.parentElement;
            F.line = 96;
            var idxHEX60gensym10_2785020712 = index_2466250824(elemHEX60gensym10_2785020709);
            F.line = 97;
            var lengthHEX60gensym10_2785020716 = (parentHEX60gensym10_2785020711.childNodes).length;
            F.line = 91;
            elemHEX60gensym10_2785020709.remove();
            if ((subInt(lengthHEX60gensym10_2785020716, 1) == idxHEX60gensym10_2785020712)) {
            F.line = 101;
            parentHEX60gensym10_2785020711.appendChild(tagHEX60gensym10_2785020710);
            }
            else {
              F.line = 103;
            parentHEX60gensym10_2785020711.insertBefore(tagHEX60gensym10_2785020710, parentHEX60gensym10_2785020711.childNodes[chckIndx(idxHEX60gensym10_2785020712, 0, (parentHEX60gensym10_2785020711.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881858 = subInt(res_536881858, 1);
          }
      };
    };
    if (activeElementHEX60gensym10_2785020673.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym10_2785020717 = document.getElementById(activeElementHEX60gensym10_2785020673.id);
    if (!((actElemHEX60gensym10_2785020717 == null))) {
    F.line = 108;
    actElemHEX60gensym10_2785020717.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym10_2785020717.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym10_2785020819 = activeElementHEX60gensym10_2785020673;
    F.line = 112;
    var currentActiveElemHEX60gensym10_2785020820 = actElemHEX60gensym10_2785020717;
    F.line = 113;
    currentActiveElemHEX60gensym10_2785020820.setSelectionRange(oldActiveElemHEX60gensym10_2785020819.selectionStart, oldActiveElemHEX60gensym10_2785020819.selectionEnd, oldActiveElemHEX60gensym10_2785020819.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785020658.updated(self_2785020658, null);
    F.line = 87;
    F.filename = "numbering.nim";
    self_2785020658.rendered(self_2785020658, null);
  framePtr = F.prev;

  
}

function reRender_2785019947(self_2785019948) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym7_2785019963 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym7_2785019964 = render_1644175063(self_2785019948);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785019948), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym7_2785019964, ([100,97,116,97,45] || []).concat(self_2785019948.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym7_2785019974 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785019948.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym7_2785019978 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym7_2785019982 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881861 = 0;
      F.line = 242;
      var L_536881862 = (compTmpDataHEX60gensym7_2785019964.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881861 < L_536881862)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym7_2785019982 = compTmpDataHEX60gensym7_2785019964.childNodes[chckIndx(i_536881861, 0, (compTmpDataHEX60gensym7_2785019964.childNodes).length - 1)];
            if (!((currentHEX60gensym7_2785019974 == null))) {
            F.line = 88;
            elementsHEX60gensym7_2785019978.push(currentHEX60gensym7_2785019974);;
            F.line = 89;
            currentHEX60gensym7_2785019974 = currentHEX60gensym7_2785019974.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881861 = addInt(i_536881861, 1);
            if (!(((compTmpDataHEX60gensym7_2785019964.childNodes).length == L_536881862))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym7_2785019998 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881865 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881865 = subInt((elementsHEX60gensym7_2785019978).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881866 = colontmp__536881865;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881866)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym7_2785019998 = res_536881866;
            F.line = 93;
            var elemHEX60gensym7_2785019999 = elementsHEX60gensym7_2785019978[chckIndx(iHEX60gensym7_2785019998, 0, (elementsHEX60gensym7_2785019978).length - 1)];
            F.line = 94;
            var tagHEX60gensym7_2785020000 = compTmpDataHEX60gensym7_2785019964.childNodes[chckIndx(iHEX60gensym7_2785019998, 0, (compTmpDataHEX60gensym7_2785019964.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym7_2785020001 = elemHEX60gensym7_2785019999.parentElement;
            F.line = 96;
            var idxHEX60gensym7_2785020002 = index_2466250824(elemHEX60gensym7_2785019999);
            F.line = 97;
            var lengthHEX60gensym7_2785020006 = (parentHEX60gensym7_2785020001.childNodes).length;
            F.line = 91;
            elemHEX60gensym7_2785019999.remove();
            if ((subInt(lengthHEX60gensym7_2785020006, 1) == idxHEX60gensym7_2785020002)) {
            F.line = 101;
            parentHEX60gensym7_2785020001.appendChild(tagHEX60gensym7_2785020000);
            }
            else {
              F.line = 103;
            parentHEX60gensym7_2785020001.insertBefore(tagHEX60gensym7_2785020000, parentHEX60gensym7_2785020001.childNodes[chckIndx(idxHEX60gensym7_2785020002, 0, (parentHEX60gensym7_2785020001.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881866 = subInt(res_536881866, 1);
          }
      };
    };
    if (activeElementHEX60gensym7_2785019963.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym7_2785020007 = document.getElementById(activeElementHEX60gensym7_2785019963.id);
    if (!((actElemHEX60gensym7_2785020007 == null))) {
    F.line = 108;
    actElemHEX60gensym7_2785020007.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym7_2785020007.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym7_2785020109 = activeElementHEX60gensym7_2785019963;
    F.line = 112;
    var currentActiveElemHEX60gensym7_2785020110 = actElemHEX60gensym7_2785020007;
    F.line = 113;
    currentActiveElemHEX60gensym7_2785020110.setSelectionRange(oldActiveElemHEX60gensym7_2785020109.selectionStart, oldActiveElemHEX60gensym7_2785020109.selectionEnd, oldActiveElemHEX60gensym7_2785020109.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785019948.updated(self_2785019948, null);
    F.line = 79;
    F.filename = "numbering.nim";
    self_2785019948.rendered(self_2785019948, null);
  framePtr = F.prev;

  
}

function reRender_2785022699(self_2785022700) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym14_2785022715 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym14_2785022716 = render_1644175063(self_2785022700);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785022700), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym14_2785022716, ([100,97,116,97,45] || []).concat(self_2785022700.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym14_2785022726 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785022700.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym14_2785022730 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym14_2785022734 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881869 = 0;
      F.line = 242;
      var L_536881870 = (compTmpDataHEX60gensym14_2785022716.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881869 < L_536881870)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym14_2785022734 = compTmpDataHEX60gensym14_2785022716.childNodes[chckIndx(i_536881869, 0, (compTmpDataHEX60gensym14_2785022716.childNodes).length - 1)];
            if (!((currentHEX60gensym14_2785022726 == null))) {
            F.line = 88;
            elementsHEX60gensym14_2785022730.push(currentHEX60gensym14_2785022726);;
            F.line = 89;
            currentHEX60gensym14_2785022726 = currentHEX60gensym14_2785022726.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881869 = addInt(i_536881869, 1);
            if (!(((compTmpDataHEX60gensym14_2785022716.childNodes).length == L_536881870))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym14_2785022750 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881873 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881873 = subInt((elementsHEX60gensym14_2785022730).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881874 = colontmp__536881873;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881874)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym14_2785022750 = res_536881874;
            F.line = 93;
            var elemHEX60gensym14_2785022751 = elementsHEX60gensym14_2785022730[chckIndx(iHEX60gensym14_2785022750, 0, (elementsHEX60gensym14_2785022730).length - 1)];
            F.line = 94;
            var tagHEX60gensym14_2785022752 = compTmpDataHEX60gensym14_2785022716.childNodes[chckIndx(iHEX60gensym14_2785022750, 0, (compTmpDataHEX60gensym14_2785022716.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym14_2785022753 = elemHEX60gensym14_2785022751.parentElement;
            F.line = 96;
            var idxHEX60gensym14_2785022754 = index_2466250824(elemHEX60gensym14_2785022751);
            F.line = 97;
            var lengthHEX60gensym14_2785022758 = (parentHEX60gensym14_2785022753.childNodes).length;
            F.line = 91;
            elemHEX60gensym14_2785022751.remove();
            if ((subInt(lengthHEX60gensym14_2785022758, 1) == idxHEX60gensym14_2785022754)) {
            F.line = 101;
            parentHEX60gensym14_2785022753.appendChild(tagHEX60gensym14_2785022752);
            }
            else {
              F.line = 103;
            parentHEX60gensym14_2785022753.insertBefore(tagHEX60gensym14_2785022752, parentHEX60gensym14_2785022753.childNodes[chckIndx(idxHEX60gensym14_2785022754, 0, (parentHEX60gensym14_2785022753.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881874 = subInt(res_536881874, 1);
          }
      };
    };
    if (activeElementHEX60gensym14_2785022715.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym14_2785022759 = document.getElementById(activeElementHEX60gensym14_2785022715.id);
    if (!((actElemHEX60gensym14_2785022759 == null))) {
    F.line = 108;
    actElemHEX60gensym14_2785022759.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym14_2785022759.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym14_2785022861 = activeElementHEX60gensym14_2785022715;
    F.line = 112;
    var currentActiveElemHEX60gensym14_2785022862 = actElemHEX60gensym14_2785022759;
    F.line = 113;
    currentActiveElemHEX60gensym14_2785022862.setSelectionRange(oldActiveElemHEX60gensym14_2785022861.selectionStart, oldActiveElemHEX60gensym14_2785022861.selectionEnd, oldActiveElemHEX60gensym14_2785022861.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785022700.updated(self_2785022700, null);
    F.line = 109;
    F.filename = "numbering.nim";
    self_2785022700.rendered(self_2785022700, null);
  framePtr = F.prev;

  
}

function reRender_2919235679(self_2919235680) {
  var F = {procname: "videos.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_2919235695 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_2919235696 = render_1644175063(self_2919235680);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2919235680), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_2919235696, ([100,97,116,97,45] || []).concat(self_2919235680.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_2919235706 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2919235680.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_2919235710 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_2919235714 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881877 = 0;
      F.line = 242;
      var L_536881878 = (compTmpDataHEX60gensym0_2919235696.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881877 < L_536881878)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_2919235714 = compTmpDataHEX60gensym0_2919235696.childNodes[chckIndx(i_536881877, 0, (compTmpDataHEX60gensym0_2919235696.childNodes).length - 1)];
            if (!((currentHEX60gensym0_2919235706 == null))) {
            F.line = 88;
            elementsHEX60gensym0_2919235710.push(currentHEX60gensym0_2919235706);;
            F.line = 89;
            currentHEX60gensym0_2919235706 = currentHEX60gensym0_2919235706.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881877 = addInt(i_536881877, 1);
            if (!(((compTmpDataHEX60gensym0_2919235696.childNodes).length == L_536881878))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_2919235730 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881881 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881881 = subInt((elementsHEX60gensym0_2919235710).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881882 = colontmp__536881881;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881882)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_2919235730 = res_536881882;
            F.line = 93;
            var elemHEX60gensym0_2919235731 = elementsHEX60gensym0_2919235710[chckIndx(iHEX60gensym0_2919235730, 0, (elementsHEX60gensym0_2919235710).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_2919235732 = compTmpDataHEX60gensym0_2919235696.childNodes[chckIndx(iHEX60gensym0_2919235730, 0, (compTmpDataHEX60gensym0_2919235696.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_2919235733 = elemHEX60gensym0_2919235731.parentElement;
            F.line = 96;
            var idxHEX60gensym0_2919235734 = index_2466250824(elemHEX60gensym0_2919235731);
            F.line = 97;
            var lengthHEX60gensym0_2919235738 = (parentHEX60gensym0_2919235733.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_2919235731.remove();
            if ((subInt(lengthHEX60gensym0_2919235738, 1) == idxHEX60gensym0_2919235734)) {
            F.line = 101;
            parentHEX60gensym0_2919235733.appendChild(tagHEX60gensym0_2919235732);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_2919235733.insertBefore(tagHEX60gensym0_2919235732, parentHEX60gensym0_2919235733.childNodes[chckIndx(idxHEX60gensym0_2919235734, 0, (parentHEX60gensym0_2919235733.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881882 = subInt(res_536881882, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_2919235695.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_2919235739 = document.getElementById(activeElementHEX60gensym0_2919235695.id);
    if (!((actElemHEX60gensym0_2919235739 == null))) {
    F.line = 108;
    actElemHEX60gensym0_2919235739.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_2919235739.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_2919235841 = activeElementHEX60gensym0_2919235695;
    F.line = 112;
    var currentActiveElemHEX60gensym0_2919235842 = actElemHEX60gensym0_2919235739;
    F.line = 113;
    currentActiveElemHEX60gensym0_2919235842.setSelectionRange(oldActiveElemHEX60gensym0_2919235841.selectionStart, oldActiveElemHEX60gensym0_2919235841.selectionEnd, oldActiveElemHEX60gensym0_2919235841.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2919235680.updated(self_2919235680, null);
    F.line = 3;
    F.filename = "videos.nim";
    self_2919235680.rendered(self_2919235680, null);
  framePtr = F.prev;

  
}

function reRender_2801795193(self_2801795194) {
  var F = {procname: "eMathjax.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_2801795209 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_2801795210 = render_1644175063(self_2801795194);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2801795194), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_2801795210, ([100,97,116,97,45] || []).concat(self_2801795194.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_2801795220 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2801795194.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_2801795224 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_2801795228 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881885 = 0;
      F.line = 242;
      var L_536881886 = (compTmpDataHEX60gensym0_2801795210.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881885 < L_536881886)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_2801795228 = compTmpDataHEX60gensym0_2801795210.childNodes[chckIndx(i_536881885, 0, (compTmpDataHEX60gensym0_2801795210.childNodes).length - 1)];
            if (!((currentHEX60gensym0_2801795220 == null))) {
            F.line = 88;
            elementsHEX60gensym0_2801795224.push(currentHEX60gensym0_2801795220);;
            F.line = 89;
            currentHEX60gensym0_2801795220 = currentHEX60gensym0_2801795220.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881885 = addInt(i_536881885, 1);
            if (!(((compTmpDataHEX60gensym0_2801795210.childNodes).length == L_536881886))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_2801795244 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881889 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881889 = subInt((elementsHEX60gensym0_2801795224).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881890 = colontmp__536881889;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881890)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_2801795244 = res_536881890;
            F.line = 93;
            var elemHEX60gensym0_2801795245 = elementsHEX60gensym0_2801795224[chckIndx(iHEX60gensym0_2801795244, 0, (elementsHEX60gensym0_2801795224).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_2801795246 = compTmpDataHEX60gensym0_2801795210.childNodes[chckIndx(iHEX60gensym0_2801795244, 0, (compTmpDataHEX60gensym0_2801795210.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_2801795247 = elemHEX60gensym0_2801795245.parentElement;
            F.line = 96;
            var idxHEX60gensym0_2801795248 = index_2466250824(elemHEX60gensym0_2801795245);
            F.line = 97;
            var lengthHEX60gensym0_2801795252 = (parentHEX60gensym0_2801795247.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_2801795245.remove();
            if ((subInt(lengthHEX60gensym0_2801795252, 1) == idxHEX60gensym0_2801795248)) {
            F.line = 101;
            parentHEX60gensym0_2801795247.appendChild(tagHEX60gensym0_2801795246);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_2801795247.insertBefore(tagHEX60gensym0_2801795246, parentHEX60gensym0_2801795247.childNodes[chckIndx(idxHEX60gensym0_2801795248, 0, (parentHEX60gensym0_2801795247.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881890 = subInt(res_536881890, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_2801795209.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_2801795253 = document.getElementById(activeElementHEX60gensym0_2801795209.id);
    if (!((actElemHEX60gensym0_2801795253 == null))) {
    F.line = 108;
    actElemHEX60gensym0_2801795253.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_2801795253.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_2801795355 = activeElementHEX60gensym0_2801795209;
    F.line = 112;
    var currentActiveElemHEX60gensym0_2801795356 = actElemHEX60gensym0_2801795253;
    F.line = 113;
    currentActiveElemHEX60gensym0_2801795356.setSelectionRange(oldActiveElemHEX60gensym0_2801795355.selectionStart, oldActiveElemHEX60gensym0_2801795355.selectionEnd, oldActiveElemHEX60gensym0_2801795355.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2801795194.updated(self_2801795194, null);
    F.line = 12;
    F.filename = "eMathjax.nim";
    self_2801795194.rendered(self_2801795194, null);
  framePtr = F.prev;

  
}

function reRender_2785023775(self_2785023776) {
  var F = {procname: "numbering.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym16_2785023791 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym16_2785023792 = render_1644175063(self_2785023776);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2785023776), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym16_2785023792, ([100,97,116,97,45] || []).concat(self_2785023776.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym16_2785023802 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2785023776.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym16_2785023806 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym16_2785023810 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881893 = 0;
      F.line = 242;
      var L_536881894 = (compTmpDataHEX60gensym16_2785023792.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881893 < L_536881894)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym16_2785023810 = compTmpDataHEX60gensym16_2785023792.childNodes[chckIndx(i_536881893, 0, (compTmpDataHEX60gensym16_2785023792.childNodes).length - 1)];
            if (!((currentHEX60gensym16_2785023802 == null))) {
            F.line = 88;
            elementsHEX60gensym16_2785023806.push(currentHEX60gensym16_2785023802);;
            F.line = 89;
            currentHEX60gensym16_2785023802 = currentHEX60gensym16_2785023802.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881893 = addInt(i_536881893, 1);
            if (!(((compTmpDataHEX60gensym16_2785023792.childNodes).length == L_536881894))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym16_2785023826 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881897 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881897 = subInt((elementsHEX60gensym16_2785023806).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881898 = colontmp__536881897;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881898)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym16_2785023826 = res_536881898;
            F.line = 93;
            var elemHEX60gensym16_2785023827 = elementsHEX60gensym16_2785023806[chckIndx(iHEX60gensym16_2785023826, 0, (elementsHEX60gensym16_2785023806).length - 1)];
            F.line = 94;
            var tagHEX60gensym16_2785023828 = compTmpDataHEX60gensym16_2785023792.childNodes[chckIndx(iHEX60gensym16_2785023826, 0, (compTmpDataHEX60gensym16_2785023792.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym16_2785023829 = elemHEX60gensym16_2785023827.parentElement;
            F.line = 96;
            var idxHEX60gensym16_2785023830 = index_2466250824(elemHEX60gensym16_2785023827);
            F.line = 97;
            var lengthHEX60gensym16_2785023834 = (parentHEX60gensym16_2785023829.childNodes).length;
            F.line = 91;
            elemHEX60gensym16_2785023827.remove();
            if ((subInt(lengthHEX60gensym16_2785023834, 1) == idxHEX60gensym16_2785023830)) {
            F.line = 101;
            parentHEX60gensym16_2785023829.appendChild(tagHEX60gensym16_2785023828);
            }
            else {
              F.line = 103;
            parentHEX60gensym16_2785023829.insertBefore(tagHEX60gensym16_2785023828, parentHEX60gensym16_2785023829.childNodes[chckIndx(idxHEX60gensym16_2785023830, 0, (parentHEX60gensym16_2785023829.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881898 = subInt(res_536881898, 1);
          }
      };
    };
    if (activeElementHEX60gensym16_2785023791.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym16_2785023835 = document.getElementById(activeElementHEX60gensym16_2785023791.id);
    if (!((actElemHEX60gensym16_2785023835 == null))) {
    F.line = 108;
    actElemHEX60gensym16_2785023835.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym16_2785023835.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym16_2785023937 = activeElementHEX60gensym16_2785023791;
    F.line = 112;
    var currentActiveElemHEX60gensym16_2785023938 = actElemHEX60gensym16_2785023835;
    F.line = 113;
    currentActiveElemHEX60gensym16_2785023938.setSelectionRange(oldActiveElemHEX60gensym16_2785023937.selectionStart, oldActiveElemHEX60gensym16_2785023937.selectionEnd, oldActiveElemHEX60gensym16_2785023937.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2785023776.updated(self_2785023776, null);
    F.line = 122;
    F.filename = "numbering.nim";
    self_2785023776.rendered(self_2785023776, null);
  framePtr = F.prev;

  
}

function reRender_2919236452(self_2919236453) {
  var F = {procname: "videos.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym3_2919236468 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym3_2919236469 = render_1644175063(self_2919236453);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2919236453), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym3_2919236469, ([100,97,116,97,45] || []).concat(self_2919236453.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym3_2919236479 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2919236453.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym3_2919236483 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym3_2919236487 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881901 = 0;
      F.line = 242;
      var L_536881902 = (compTmpDataHEX60gensym3_2919236469.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881901 < L_536881902)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym3_2919236487 = compTmpDataHEX60gensym3_2919236469.childNodes[chckIndx(i_536881901, 0, (compTmpDataHEX60gensym3_2919236469.childNodes).length - 1)];
            if (!((currentHEX60gensym3_2919236479 == null))) {
            F.line = 88;
            elementsHEX60gensym3_2919236483.push(currentHEX60gensym3_2919236479);;
            F.line = 89;
            currentHEX60gensym3_2919236479 = currentHEX60gensym3_2919236479.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881901 = addInt(i_536881901, 1);
            if (!(((compTmpDataHEX60gensym3_2919236469.childNodes).length == L_536881902))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym3_2919236503 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881905 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881905 = subInt((elementsHEX60gensym3_2919236483).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881906 = colontmp__536881905;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881906)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym3_2919236503 = res_536881906;
            F.line = 93;
            var elemHEX60gensym3_2919236504 = elementsHEX60gensym3_2919236483[chckIndx(iHEX60gensym3_2919236503, 0, (elementsHEX60gensym3_2919236483).length - 1)];
            F.line = 94;
            var tagHEX60gensym3_2919236505 = compTmpDataHEX60gensym3_2919236469.childNodes[chckIndx(iHEX60gensym3_2919236503, 0, (compTmpDataHEX60gensym3_2919236469.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym3_2919236506 = elemHEX60gensym3_2919236504.parentElement;
            F.line = 96;
            var idxHEX60gensym3_2919236507 = index_2466250824(elemHEX60gensym3_2919236504);
            F.line = 97;
            var lengthHEX60gensym3_2919236511 = (parentHEX60gensym3_2919236506.childNodes).length;
            F.line = 91;
            elemHEX60gensym3_2919236504.remove();
            if ((subInt(lengthHEX60gensym3_2919236511, 1) == idxHEX60gensym3_2919236507)) {
            F.line = 101;
            parentHEX60gensym3_2919236506.appendChild(tagHEX60gensym3_2919236505);
            }
            else {
              F.line = 103;
            parentHEX60gensym3_2919236506.insertBefore(tagHEX60gensym3_2919236505, parentHEX60gensym3_2919236506.childNodes[chckIndx(idxHEX60gensym3_2919236507, 0, (parentHEX60gensym3_2919236506.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881906 = subInt(res_536881906, 1);
          }
      };
    };
    if (activeElementHEX60gensym3_2919236468.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym3_2919236512 = document.getElementById(activeElementHEX60gensym3_2919236468.id);
    if (!((actElemHEX60gensym3_2919236512 == null))) {
    F.line = 108;
    actElemHEX60gensym3_2919236512.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym3_2919236512.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym3_2919236614 = activeElementHEX60gensym3_2919236468;
    F.line = 112;
    var currentActiveElemHEX60gensym3_2919236615 = actElemHEX60gensym3_2919236512;
    F.line = 113;
    currentActiveElemHEX60gensym3_2919236615.setSelectionRange(oldActiveElemHEX60gensym3_2919236614.selectionStart, oldActiveElemHEX60gensym3_2919236614.selectionEnd, oldActiveElemHEX60gensym3_2919236614.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2919236453.updated(self_2919236453, null);
    F.line = 11;
    F.filename = "videos.nim";
    self_2919236453.rendered(self_2919236453, null);
  framePtr = F.prev;

  
}

function reRender_3019909816(self_3019909817) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym31_3019909832 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym31_3019909833 = render_1644175063(self_3019909817);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019909817), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym31_3019909833, ([100,97,116,97,45] || []).concat(self_3019909817.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym31_3019909843 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019909817.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym31_3019909847 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym31_3019909851 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881909 = 0;
      F.line = 242;
      var L_536881910 = (compTmpDataHEX60gensym31_3019909833.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881909 < L_536881910)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym31_3019909851 = compTmpDataHEX60gensym31_3019909833.childNodes[chckIndx(i_536881909, 0, (compTmpDataHEX60gensym31_3019909833.childNodes).length - 1)];
            if (!((currentHEX60gensym31_3019909843 == null))) {
            F.line = 88;
            elementsHEX60gensym31_3019909847.push(currentHEX60gensym31_3019909843);;
            F.line = 89;
            currentHEX60gensym31_3019909843 = currentHEX60gensym31_3019909843.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881909 = addInt(i_536881909, 1);
            if (!(((compTmpDataHEX60gensym31_3019909833.childNodes).length == L_536881910))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym31_3019909867 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881913 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881913 = subInt((elementsHEX60gensym31_3019909847).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881914 = colontmp__536881913;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881914)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym31_3019909867 = res_536881914;
            F.line = 93;
            var elemHEX60gensym31_3019909868 = elementsHEX60gensym31_3019909847[chckIndx(iHEX60gensym31_3019909867, 0, (elementsHEX60gensym31_3019909847).length - 1)];
            F.line = 94;
            var tagHEX60gensym31_3019909869 = compTmpDataHEX60gensym31_3019909833.childNodes[chckIndx(iHEX60gensym31_3019909867, 0, (compTmpDataHEX60gensym31_3019909833.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym31_3019909870 = elemHEX60gensym31_3019909868.parentElement;
            F.line = 96;
            var idxHEX60gensym31_3019909871 = index_2466250824(elemHEX60gensym31_3019909868);
            F.line = 97;
            var lengthHEX60gensym31_3019909875 = (parentHEX60gensym31_3019909870.childNodes).length;
            F.line = 91;
            elemHEX60gensym31_3019909868.remove();
            if ((subInt(lengthHEX60gensym31_3019909875, 1) == idxHEX60gensym31_3019909871)) {
            F.line = 101;
            parentHEX60gensym31_3019909870.appendChild(tagHEX60gensym31_3019909869);
            }
            else {
              F.line = 103;
            parentHEX60gensym31_3019909870.insertBefore(tagHEX60gensym31_3019909869, parentHEX60gensym31_3019909870.childNodes[chckIndx(idxHEX60gensym31_3019909871, 0, (parentHEX60gensym31_3019909870.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881914 = subInt(res_536881914, 1);
          }
      };
    };
    if (activeElementHEX60gensym31_3019909832.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym31_3019909876 = document.getElementById(activeElementHEX60gensym31_3019909832.id);
    if (!((actElemHEX60gensym31_3019909876 == null))) {
    F.line = 108;
    actElemHEX60gensym31_3019909876.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym31_3019909876.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym31_3019909978 = activeElementHEX60gensym31_3019909832;
    F.line = 112;
    var currentActiveElemHEX60gensym31_3019909979 = actElemHEX60gensym31_3019909876;
    F.line = 113;
    currentActiveElemHEX60gensym31_3019909979.setSelectionRange(oldActiveElemHEX60gensym31_3019909978.selectionStart, oldActiveElemHEX60gensym31_3019909978.selectionEnd, oldActiveElemHEX60gensym31_3019909978.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019909817.updated(self_3019909817, null);
    F.line = 113;
    F.filename = "base24.nim";
    self_3019909817.rendered(self_3019909817, null);
  framePtr = F.prev;

  
}

function reRender_2902458620(self_2902458621) {
  var F = {procname: "paper.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym2_2902458636 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym2_2902458637 = render_1644175063(self_2902458621);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2902458621), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym2_2902458637, ([100,97,116,97,45] || []).concat(self_2902458621.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym2_2902458647 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2902458621.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym2_2902458651 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym2_2902458655 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881917 = 0;
      F.line = 242;
      var L_536881918 = (compTmpDataHEX60gensym2_2902458637.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881917 < L_536881918)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym2_2902458655 = compTmpDataHEX60gensym2_2902458637.childNodes[chckIndx(i_536881917, 0, (compTmpDataHEX60gensym2_2902458637.childNodes).length - 1)];
            if (!((currentHEX60gensym2_2902458647 == null))) {
            F.line = 88;
            elementsHEX60gensym2_2902458651.push(currentHEX60gensym2_2902458647);;
            F.line = 89;
            currentHEX60gensym2_2902458647 = currentHEX60gensym2_2902458647.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881917 = addInt(i_536881917, 1);
            if (!(((compTmpDataHEX60gensym2_2902458637.childNodes).length == L_536881918))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym2_2902458671 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881921 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881921 = subInt((elementsHEX60gensym2_2902458651).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881922 = colontmp__536881921;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881922)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym2_2902458671 = res_536881922;
            F.line = 93;
            var elemHEX60gensym2_2902458672 = elementsHEX60gensym2_2902458651[chckIndx(iHEX60gensym2_2902458671, 0, (elementsHEX60gensym2_2902458651).length - 1)];
            F.line = 94;
            var tagHEX60gensym2_2902458673 = compTmpDataHEX60gensym2_2902458637.childNodes[chckIndx(iHEX60gensym2_2902458671, 0, (compTmpDataHEX60gensym2_2902458637.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym2_2902458674 = elemHEX60gensym2_2902458672.parentElement;
            F.line = 96;
            var idxHEX60gensym2_2902458675 = index_2466250824(elemHEX60gensym2_2902458672);
            F.line = 97;
            var lengthHEX60gensym2_2902458679 = (parentHEX60gensym2_2902458674.childNodes).length;
            F.line = 91;
            elemHEX60gensym2_2902458672.remove();
            if ((subInt(lengthHEX60gensym2_2902458679, 1) == idxHEX60gensym2_2902458675)) {
            F.line = 101;
            parentHEX60gensym2_2902458674.appendChild(tagHEX60gensym2_2902458673);
            }
            else {
              F.line = 103;
            parentHEX60gensym2_2902458674.insertBefore(tagHEX60gensym2_2902458673, parentHEX60gensym2_2902458674.childNodes[chckIndx(idxHEX60gensym2_2902458675, 0, (parentHEX60gensym2_2902458674.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881922 = subInt(res_536881922, 1);
          }
      };
    };
    if (activeElementHEX60gensym2_2902458636.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym2_2902458680 = document.getElementById(activeElementHEX60gensym2_2902458636.id);
    if (!((actElemHEX60gensym2_2902458680 == null))) {
    F.line = 108;
    actElemHEX60gensym2_2902458680.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym2_2902458680.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym2_2902458782 = activeElementHEX60gensym2_2902458636;
    F.line = 112;
    var currentActiveElemHEX60gensym2_2902458783 = actElemHEX60gensym2_2902458680;
    F.line = 113;
    currentActiveElemHEX60gensym2_2902458783.setSelectionRange(oldActiveElemHEX60gensym2_2902458782.selectionStart, oldActiveElemHEX60gensym2_2902458782.selectionEnd, oldActiveElemHEX60gensym2_2902458782.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2902458621.updated(self_2902458621, null);
    F.line = 3;
    F.filename = "paper.nim";
    self_2902458621.rendered(self_2902458621, null);
  framePtr = F.prev;

  
}

function reRender_2919237046(self_2919237047) {
  var F = {procname: "videos.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym5_2919237062 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym5_2919237063 = render_1644175063(self_2919237047);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2919237047), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym5_2919237063, ([100,97,116,97,45] || []).concat(self_2919237047.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym5_2919237073 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2919237047.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym5_2919237077 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym5_2919237081 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881925 = 0;
      F.line = 242;
      var L_536881926 = (compTmpDataHEX60gensym5_2919237063.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881925 < L_536881926)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym5_2919237081 = compTmpDataHEX60gensym5_2919237063.childNodes[chckIndx(i_536881925, 0, (compTmpDataHEX60gensym5_2919237063.childNodes).length - 1)];
            if (!((currentHEX60gensym5_2919237073 == null))) {
            F.line = 88;
            elementsHEX60gensym5_2919237077.push(currentHEX60gensym5_2919237073);;
            F.line = 89;
            currentHEX60gensym5_2919237073 = currentHEX60gensym5_2919237073.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881925 = addInt(i_536881925, 1);
            if (!(((compTmpDataHEX60gensym5_2919237063.childNodes).length == L_536881926))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym5_2919237097 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881929 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881929 = subInt((elementsHEX60gensym5_2919237077).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881930 = colontmp__536881929;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881930)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym5_2919237097 = res_536881930;
            F.line = 93;
            var elemHEX60gensym5_2919237098 = elementsHEX60gensym5_2919237077[chckIndx(iHEX60gensym5_2919237097, 0, (elementsHEX60gensym5_2919237077).length - 1)];
            F.line = 94;
            var tagHEX60gensym5_2919237099 = compTmpDataHEX60gensym5_2919237063.childNodes[chckIndx(iHEX60gensym5_2919237097, 0, (compTmpDataHEX60gensym5_2919237063.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym5_2919237100 = elemHEX60gensym5_2919237098.parentElement;
            F.line = 96;
            var idxHEX60gensym5_2919237101 = index_2466250824(elemHEX60gensym5_2919237098);
            F.line = 97;
            var lengthHEX60gensym5_2919237105 = (parentHEX60gensym5_2919237100.childNodes).length;
            F.line = 91;
            elemHEX60gensym5_2919237098.remove();
            if ((subInt(lengthHEX60gensym5_2919237105, 1) == idxHEX60gensym5_2919237101)) {
            F.line = 101;
            parentHEX60gensym5_2919237100.appendChild(tagHEX60gensym5_2919237099);
            }
            else {
              F.line = 103;
            parentHEX60gensym5_2919237100.insertBefore(tagHEX60gensym5_2919237099, parentHEX60gensym5_2919237100.childNodes[chckIndx(idxHEX60gensym5_2919237101, 0, (parentHEX60gensym5_2919237100.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881930 = subInt(res_536881930, 1);
          }
      };
    };
    if (activeElementHEX60gensym5_2919237062.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym5_2919237106 = document.getElementById(activeElementHEX60gensym5_2919237062.id);
    if (!((actElemHEX60gensym5_2919237106 == null))) {
    F.line = 108;
    actElemHEX60gensym5_2919237106.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym5_2919237106.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym5_2919237208 = activeElementHEX60gensym5_2919237062;
    F.line = 112;
    var currentActiveElemHEX60gensym5_2919237209 = actElemHEX60gensym5_2919237106;
    F.line = 113;
    currentActiveElemHEX60gensym5_2919237209.setSelectionRange(oldActiveElemHEX60gensym5_2919237208.selectionStart, oldActiveElemHEX60gensym5_2919237208.selectionEnd, oldActiveElemHEX60gensym5_2919237208.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2919237047.updated(self_2919237047, null);
    F.line = 20;
    F.filename = "videos.nim";
    self_2919237047.rendered(self_2919237047, null);
  framePtr = F.prev;

  
}

function reRender_2902460248(self_2902460249) {
  var F = {procname: "paper.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym17_2902460264 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym17_2902460265 = render_1644175063(self_2902460249);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2902460249), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym17_2902460265, ([100,97,116,97,45] || []).concat(self_2902460249.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym17_2902460275 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2902460249.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym17_2902460279 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym17_2902460283 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881933 = 0;
      F.line = 242;
      var L_536881934 = (compTmpDataHEX60gensym17_2902460265.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881933 < L_536881934)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym17_2902460283 = compTmpDataHEX60gensym17_2902460265.childNodes[chckIndx(i_536881933, 0, (compTmpDataHEX60gensym17_2902460265.childNodes).length - 1)];
            if (!((currentHEX60gensym17_2902460275 == null))) {
            F.line = 88;
            elementsHEX60gensym17_2902460279.push(currentHEX60gensym17_2902460275);;
            F.line = 89;
            currentHEX60gensym17_2902460275 = currentHEX60gensym17_2902460275.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881933 = addInt(i_536881933, 1);
            if (!(((compTmpDataHEX60gensym17_2902460265.childNodes).length == L_536881934))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym17_2902460299 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881937 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881937 = subInt((elementsHEX60gensym17_2902460279).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881938 = colontmp__536881937;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881938)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym17_2902460299 = res_536881938;
            F.line = 93;
            var elemHEX60gensym17_2902460300 = elementsHEX60gensym17_2902460279[chckIndx(iHEX60gensym17_2902460299, 0, (elementsHEX60gensym17_2902460279).length - 1)];
            F.line = 94;
            var tagHEX60gensym17_2902460301 = compTmpDataHEX60gensym17_2902460265.childNodes[chckIndx(iHEX60gensym17_2902460299, 0, (compTmpDataHEX60gensym17_2902460265.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym17_2902460302 = elemHEX60gensym17_2902460300.parentElement;
            F.line = 96;
            var idxHEX60gensym17_2902460303 = index_2466250824(elemHEX60gensym17_2902460300);
            F.line = 97;
            var lengthHEX60gensym17_2902460307 = (parentHEX60gensym17_2902460302.childNodes).length;
            F.line = 91;
            elemHEX60gensym17_2902460300.remove();
            if ((subInt(lengthHEX60gensym17_2902460307, 1) == idxHEX60gensym17_2902460303)) {
            F.line = 101;
            parentHEX60gensym17_2902460302.appendChild(tagHEX60gensym17_2902460301);
            }
            else {
              F.line = 103;
            parentHEX60gensym17_2902460302.insertBefore(tagHEX60gensym17_2902460301, parentHEX60gensym17_2902460302.childNodes[chckIndx(idxHEX60gensym17_2902460303, 0, (parentHEX60gensym17_2902460302.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881938 = subInt(res_536881938, 1);
          }
      };
    };
    if (activeElementHEX60gensym17_2902460264.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym17_2902460308 = document.getElementById(activeElementHEX60gensym17_2902460264.id);
    if (!((actElemHEX60gensym17_2902460308 == null))) {
    F.line = 108;
    actElemHEX60gensym17_2902460308.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym17_2902460308.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym17_2902460410 = activeElementHEX60gensym17_2902460264;
    F.line = 112;
    var currentActiveElemHEX60gensym17_2902460411 = actElemHEX60gensym17_2902460308;
    F.line = 113;
    currentActiveElemHEX60gensym17_2902460411.setSelectionRange(oldActiveElemHEX60gensym17_2902460410.selectionStart, oldActiveElemHEX60gensym17_2902460410.selectionEnd, oldActiveElemHEX60gensym17_2902460410.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2902460249.updated(self_2902460249, null);
    F.line = 40;
    F.filename = "paper.nim";
    self_2902460249.rendered(self_2902460249, null);
  framePtr = F.prev;

  
}

function reRender_2885682939(self_2885682940) {
  var F = {procname: "markup.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym13_2885682955 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym13_2885682956 = render_1644175063(self_2885682940);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2885682940), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym13_2885682956, ([100,97,116,97,45] || []).concat(self_2885682940.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym13_2885682966 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2885682940.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym13_2885682970 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym13_2885682974 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881941 = 0;
      F.line = 242;
      var L_536881942 = (compTmpDataHEX60gensym13_2885682956.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881941 < L_536881942)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym13_2885682974 = compTmpDataHEX60gensym13_2885682956.childNodes[chckIndx(i_536881941, 0, (compTmpDataHEX60gensym13_2885682956.childNodes).length - 1)];
            if (!((currentHEX60gensym13_2885682966 == null))) {
            F.line = 88;
            elementsHEX60gensym13_2885682970.push(currentHEX60gensym13_2885682966);;
            F.line = 89;
            currentHEX60gensym13_2885682966 = currentHEX60gensym13_2885682966.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881941 = addInt(i_536881941, 1);
            if (!(((compTmpDataHEX60gensym13_2885682956.childNodes).length == L_536881942))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym13_2885682990 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881945 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881945 = subInt((elementsHEX60gensym13_2885682970).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881946 = colontmp__536881945;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881946)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym13_2885682990 = res_536881946;
            F.line = 93;
            var elemHEX60gensym13_2885682991 = elementsHEX60gensym13_2885682970[chckIndx(iHEX60gensym13_2885682990, 0, (elementsHEX60gensym13_2885682970).length - 1)];
            F.line = 94;
            var tagHEX60gensym13_2885682992 = compTmpDataHEX60gensym13_2885682956.childNodes[chckIndx(iHEX60gensym13_2885682990, 0, (compTmpDataHEX60gensym13_2885682956.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym13_2885682993 = elemHEX60gensym13_2885682991.parentElement;
            F.line = 96;
            var idxHEX60gensym13_2885682994 = index_2466250824(elemHEX60gensym13_2885682991);
            F.line = 97;
            var lengthHEX60gensym13_2885682998 = (parentHEX60gensym13_2885682993.childNodes).length;
            F.line = 91;
            elemHEX60gensym13_2885682991.remove();
            if ((subInt(lengthHEX60gensym13_2885682998, 1) == idxHEX60gensym13_2885682994)) {
            F.line = 101;
            parentHEX60gensym13_2885682993.appendChild(tagHEX60gensym13_2885682992);
            }
            else {
              F.line = 103;
            parentHEX60gensym13_2885682993.insertBefore(tagHEX60gensym13_2885682992, parentHEX60gensym13_2885682993.childNodes[chckIndx(idxHEX60gensym13_2885682994, 0, (parentHEX60gensym13_2885682993.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881946 = subInt(res_536881946, 1);
          }
      };
    };
    if (activeElementHEX60gensym13_2885682955.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym13_2885682999 = document.getElementById(activeElementHEX60gensym13_2885682955.id);
    if (!((actElemHEX60gensym13_2885682999 == null))) {
    F.line = 108;
    actElemHEX60gensym13_2885682999.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym13_2885682999.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym13_2885683101 = activeElementHEX60gensym13_2885682955;
    F.line = 112;
    var currentActiveElemHEX60gensym13_2885683102 = actElemHEX60gensym13_2885682999;
    F.line = 113;
    currentActiveElemHEX60gensym13_2885683102.setSelectionRange(oldActiveElemHEX60gensym13_2885683101.selectionStart, oldActiveElemHEX60gensym13_2885683101.selectionEnd, oldActiveElemHEX60gensym13_2885683101.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2885682940.updated(self_2885682940, null);
    F.line = 32;
    F.filename = "markup.nim";
    self_2885682940.rendered(self_2885682940, null);
  framePtr = F.prev;

  
}

function reRender_2885681967(self_2885681968) {
  var F = {procname: "markup.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym7_2885681983 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym7_2885681984 = render_1644175063(self_2885681968);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2885681968), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym7_2885681984, ([100,97,116,97,45] || []).concat(self_2885681968.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym7_2885681994 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2885681968.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym7_2885681998 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym7_2885682002 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881949 = 0;
      F.line = 242;
      var L_536881950 = (compTmpDataHEX60gensym7_2885681984.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881949 < L_536881950)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym7_2885682002 = compTmpDataHEX60gensym7_2885681984.childNodes[chckIndx(i_536881949, 0, (compTmpDataHEX60gensym7_2885681984.childNodes).length - 1)];
            if (!((currentHEX60gensym7_2885681994 == null))) {
            F.line = 88;
            elementsHEX60gensym7_2885681998.push(currentHEX60gensym7_2885681994);;
            F.line = 89;
            currentHEX60gensym7_2885681994 = currentHEX60gensym7_2885681994.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881949 = addInt(i_536881949, 1);
            if (!(((compTmpDataHEX60gensym7_2885681984.childNodes).length == L_536881950))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym7_2885682018 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881953 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881953 = subInt((elementsHEX60gensym7_2885681998).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881954 = colontmp__536881953;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881954)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym7_2885682018 = res_536881954;
            F.line = 93;
            var elemHEX60gensym7_2885682019 = elementsHEX60gensym7_2885681998[chckIndx(iHEX60gensym7_2885682018, 0, (elementsHEX60gensym7_2885681998).length - 1)];
            F.line = 94;
            var tagHEX60gensym7_2885682020 = compTmpDataHEX60gensym7_2885681984.childNodes[chckIndx(iHEX60gensym7_2885682018, 0, (compTmpDataHEX60gensym7_2885681984.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym7_2885682021 = elemHEX60gensym7_2885682019.parentElement;
            F.line = 96;
            var idxHEX60gensym7_2885682022 = index_2466250824(elemHEX60gensym7_2885682019);
            F.line = 97;
            var lengthHEX60gensym7_2885682026 = (parentHEX60gensym7_2885682021.childNodes).length;
            F.line = 91;
            elemHEX60gensym7_2885682019.remove();
            if ((subInt(lengthHEX60gensym7_2885682026, 1) == idxHEX60gensym7_2885682022)) {
            F.line = 101;
            parentHEX60gensym7_2885682021.appendChild(tagHEX60gensym7_2885682020);
            }
            else {
              F.line = 103;
            parentHEX60gensym7_2885682021.insertBefore(tagHEX60gensym7_2885682020, parentHEX60gensym7_2885682021.childNodes[chckIndx(idxHEX60gensym7_2885682022, 0, (parentHEX60gensym7_2885682021.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881954 = subInt(res_536881954, 1);
          }
      };
    };
    if (activeElementHEX60gensym7_2885681983.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym7_2885682027 = document.getElementById(activeElementHEX60gensym7_2885681983.id);
    if (!((actElemHEX60gensym7_2885682027 == null))) {
    F.line = 108;
    actElemHEX60gensym7_2885682027.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym7_2885682027.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym7_2885682129 = activeElementHEX60gensym7_2885681983;
    F.line = 112;
    var currentActiveElemHEX60gensym7_2885682130 = actElemHEX60gensym7_2885682027;
    F.line = 113;
    currentActiveElemHEX60gensym7_2885682130.setSelectionRange(oldActiveElemHEX60gensym7_2885682129.selectionStart, oldActiveElemHEX60gensym7_2885682129.selectionEnd, oldActiveElemHEX60gensym7_2885682129.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2885681968.updated(self_2885681968, null);
    F.line = 19;
    F.filename = "markup.nim";
    self_2885681968.rendered(self_2885681968, null);
  framePtr = F.prev;

  
}

function reRender_2902460986(self_2902460987) {
  var F = {procname: "paper.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym23_2902461002 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym23_2902461003 = render_1644175063(self_2902460987);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2902460987), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym23_2902461003, ([100,97,116,97,45] || []).concat(self_2902460987.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym23_2902461013 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2902460987.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym23_2902461017 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym23_2902461021 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881957 = 0;
      F.line = 242;
      var L_536881958 = (compTmpDataHEX60gensym23_2902461003.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881957 < L_536881958)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym23_2902461021 = compTmpDataHEX60gensym23_2902461003.childNodes[chckIndx(i_536881957, 0, (compTmpDataHEX60gensym23_2902461003.childNodes).length - 1)];
            if (!((currentHEX60gensym23_2902461013 == null))) {
            F.line = 88;
            elementsHEX60gensym23_2902461017.push(currentHEX60gensym23_2902461013);;
            F.line = 89;
            currentHEX60gensym23_2902461013 = currentHEX60gensym23_2902461013.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881957 = addInt(i_536881957, 1);
            if (!(((compTmpDataHEX60gensym23_2902461003.childNodes).length == L_536881958))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym23_2902461037 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881961 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881961 = subInt((elementsHEX60gensym23_2902461017).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881962 = colontmp__536881961;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881962)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym23_2902461037 = res_536881962;
            F.line = 93;
            var elemHEX60gensym23_2902461038 = elementsHEX60gensym23_2902461017[chckIndx(iHEX60gensym23_2902461037, 0, (elementsHEX60gensym23_2902461017).length - 1)];
            F.line = 94;
            var tagHEX60gensym23_2902461039 = compTmpDataHEX60gensym23_2902461003.childNodes[chckIndx(iHEX60gensym23_2902461037, 0, (compTmpDataHEX60gensym23_2902461003.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym23_2902461040 = elemHEX60gensym23_2902461038.parentElement;
            F.line = 96;
            var idxHEX60gensym23_2902461041 = index_2466250824(elemHEX60gensym23_2902461038);
            F.line = 97;
            var lengthHEX60gensym23_2902461045 = (parentHEX60gensym23_2902461040.childNodes).length;
            F.line = 91;
            elemHEX60gensym23_2902461038.remove();
            if ((subInt(lengthHEX60gensym23_2902461045, 1) == idxHEX60gensym23_2902461041)) {
            F.line = 101;
            parentHEX60gensym23_2902461040.appendChild(tagHEX60gensym23_2902461039);
            }
            else {
              F.line = 103;
            parentHEX60gensym23_2902461040.insertBefore(tagHEX60gensym23_2902461039, parentHEX60gensym23_2902461040.childNodes[chckIndx(idxHEX60gensym23_2902461041, 0, (parentHEX60gensym23_2902461040.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881962 = subInt(res_536881962, 1);
          }
      };
    };
    if (activeElementHEX60gensym23_2902461002.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym23_2902461046 = document.getElementById(activeElementHEX60gensym23_2902461002.id);
    if (!((actElemHEX60gensym23_2902461046 == null))) {
    F.line = 108;
    actElemHEX60gensym23_2902461046.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym23_2902461046.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym23_2902461148 = activeElementHEX60gensym23_2902461002;
    F.line = 112;
    var currentActiveElemHEX60gensym23_2902461149 = actElemHEX60gensym23_2902461046;
    F.line = 113;
    currentActiveElemHEX60gensym23_2902461149.setSelectionRange(oldActiveElemHEX60gensym23_2902461148.selectionStart, oldActiveElemHEX60gensym23_2902461148.selectionEnd, oldActiveElemHEX60gensym23_2902461148.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2902460987.updated(self_2902460987, null);
    F.line = 57;
    F.filename = "paper.nim";
    self_2902460987.rendered(self_2902460987, null);
  framePtr = F.prev;

  
}

function reRender_2885683663(self_2885683664) {
  var F = {procname: "markup.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym17_2885683679 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym17_2885683680 = render_1644175063(self_2885683664);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2885683664), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym17_2885683680, ([100,97,116,97,45] || []).concat(self_2885683664.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym17_2885683690 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2885683664.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym17_2885683694 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym17_2885683698 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881965 = 0;
      F.line = 242;
      var L_536881966 = (compTmpDataHEX60gensym17_2885683680.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881965 < L_536881966)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym17_2885683698 = compTmpDataHEX60gensym17_2885683680.childNodes[chckIndx(i_536881965, 0, (compTmpDataHEX60gensym17_2885683680.childNodes).length - 1)];
            if (!((currentHEX60gensym17_2885683690 == null))) {
            F.line = 88;
            elementsHEX60gensym17_2885683694.push(currentHEX60gensym17_2885683690);;
            F.line = 89;
            currentHEX60gensym17_2885683690 = currentHEX60gensym17_2885683690.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881965 = addInt(i_536881965, 1);
            if (!(((compTmpDataHEX60gensym17_2885683680.childNodes).length == L_536881966))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym17_2885683714 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881969 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881969 = subInt((elementsHEX60gensym17_2885683694).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881970 = colontmp__536881969;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881970)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym17_2885683714 = res_536881970;
            F.line = 93;
            var elemHEX60gensym17_2885683715 = elementsHEX60gensym17_2885683694[chckIndx(iHEX60gensym17_2885683714, 0, (elementsHEX60gensym17_2885683694).length - 1)];
            F.line = 94;
            var tagHEX60gensym17_2885683716 = compTmpDataHEX60gensym17_2885683680.childNodes[chckIndx(iHEX60gensym17_2885683714, 0, (compTmpDataHEX60gensym17_2885683680.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym17_2885683717 = elemHEX60gensym17_2885683715.parentElement;
            F.line = 96;
            var idxHEX60gensym17_2885683718 = index_2466250824(elemHEX60gensym17_2885683715);
            F.line = 97;
            var lengthHEX60gensym17_2885683722 = (parentHEX60gensym17_2885683717.childNodes).length;
            F.line = 91;
            elemHEX60gensym17_2885683715.remove();
            if ((subInt(lengthHEX60gensym17_2885683722, 1) == idxHEX60gensym17_2885683718)) {
            F.line = 101;
            parentHEX60gensym17_2885683717.appendChild(tagHEX60gensym17_2885683716);
            }
            else {
              F.line = 103;
            parentHEX60gensym17_2885683717.insertBefore(tagHEX60gensym17_2885683716, parentHEX60gensym17_2885683717.childNodes[chckIndx(idxHEX60gensym17_2885683718, 0, (parentHEX60gensym17_2885683717.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881970 = subInt(res_536881970, 1);
          }
      };
    };
    if (activeElementHEX60gensym17_2885683679.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym17_2885683723 = document.getElementById(activeElementHEX60gensym17_2885683679.id);
    if (!((actElemHEX60gensym17_2885683723 == null))) {
    F.line = 108;
    actElemHEX60gensym17_2885683723.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym17_2885683723.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym17_2885683825 = activeElementHEX60gensym17_2885683679;
    F.line = 112;
    var currentActiveElemHEX60gensym17_2885683826 = actElemHEX60gensym17_2885683723;
    F.line = 113;
    currentActiveElemHEX60gensym17_2885683826.setSelectionRange(oldActiveElemHEX60gensym17_2885683825.selectionStart, oldActiveElemHEX60gensym17_2885683825.selectionEnd, oldActiveElemHEX60gensym17_2885683825.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2885683664.updated(self_2885683664, null);
    F.line = 42;
    F.filename = "markup.nim";
    self_2885683664.rendered(self_2885683664, null);
  framePtr = F.prev;

  
}

function reRender_2885686378(self_2885686379) {
  var F = {procname: "markup.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym34_2885686394 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym34_2885686395 = render_1644175063(self_2885686379);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2885686379), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym34_2885686395, ([100,97,116,97,45] || []).concat(self_2885686379.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym34_2885686405 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2885686379.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym34_2885686409 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym34_2885686413 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881973 = 0;
      F.line = 242;
      var L_536881974 = (compTmpDataHEX60gensym34_2885686395.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881973 < L_536881974)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym34_2885686413 = compTmpDataHEX60gensym34_2885686395.childNodes[chckIndx(i_536881973, 0, (compTmpDataHEX60gensym34_2885686395.childNodes).length - 1)];
            if (!((currentHEX60gensym34_2885686405 == null))) {
            F.line = 88;
            elementsHEX60gensym34_2885686409.push(currentHEX60gensym34_2885686405);;
            F.line = 89;
            currentHEX60gensym34_2885686405 = currentHEX60gensym34_2885686405.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881973 = addInt(i_536881973, 1);
            if (!(((compTmpDataHEX60gensym34_2885686395.childNodes).length == L_536881974))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym34_2885686429 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881977 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881977 = subInt((elementsHEX60gensym34_2885686409).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881978 = colontmp__536881977;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881978)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym34_2885686429 = res_536881978;
            F.line = 93;
            var elemHEX60gensym34_2885686430 = elementsHEX60gensym34_2885686409[chckIndx(iHEX60gensym34_2885686429, 0, (elementsHEX60gensym34_2885686409).length - 1)];
            F.line = 94;
            var tagHEX60gensym34_2885686431 = compTmpDataHEX60gensym34_2885686395.childNodes[chckIndx(iHEX60gensym34_2885686429, 0, (compTmpDataHEX60gensym34_2885686395.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym34_2885686432 = elemHEX60gensym34_2885686430.parentElement;
            F.line = 96;
            var idxHEX60gensym34_2885686433 = index_2466250824(elemHEX60gensym34_2885686430);
            F.line = 97;
            var lengthHEX60gensym34_2885686437 = (parentHEX60gensym34_2885686432.childNodes).length;
            F.line = 91;
            elemHEX60gensym34_2885686430.remove();
            if ((subInt(lengthHEX60gensym34_2885686437, 1) == idxHEX60gensym34_2885686433)) {
            F.line = 101;
            parentHEX60gensym34_2885686432.appendChild(tagHEX60gensym34_2885686431);
            }
            else {
              F.line = 103;
            parentHEX60gensym34_2885686432.insertBefore(tagHEX60gensym34_2885686431, parentHEX60gensym34_2885686432.childNodes[chckIndx(idxHEX60gensym34_2885686433, 0, (parentHEX60gensym34_2885686432.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881978 = subInt(res_536881978, 1);
          }
      };
    };
    if (activeElementHEX60gensym34_2885686394.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym34_2885686438 = document.getElementById(activeElementHEX60gensym34_2885686394.id);
    if (!((actElemHEX60gensym34_2885686438 == null))) {
    F.line = 108;
    actElemHEX60gensym34_2885686438.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym34_2885686438.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym34_2885686540 = activeElementHEX60gensym34_2885686394;
    F.line = 112;
    var currentActiveElemHEX60gensym34_2885686541 = actElemHEX60gensym34_2885686438;
    F.line = 113;
    currentActiveElemHEX60gensym34_2885686541.setSelectionRange(oldActiveElemHEX60gensym34_2885686540.selectionStart, oldActiveElemHEX60gensym34_2885686540.selectionEnd, oldActiveElemHEX60gensym34_2885686540.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2885686379.updated(self_2885686379, null);
    F.line = 76;
    F.filename = "markup.nim";
    self_2885686379.rendered(self_2885686379, null);
  framePtr = F.prev;

  
}

function reRender_2885685349(self_2885685350) {
  var F = {procname: "markup.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym29_2885685365 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym29_2885685366 = render_1644175063(self_2885685350);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2885685350), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym29_2885685366, ([100,97,116,97,45] || []).concat(self_2885685350.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym29_2885685376 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2885685350.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym29_2885685380 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym29_2885685384 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881981 = 0;
      F.line = 242;
      var L_536881982 = (compTmpDataHEX60gensym29_2885685366.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881981 < L_536881982)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym29_2885685384 = compTmpDataHEX60gensym29_2885685366.childNodes[chckIndx(i_536881981, 0, (compTmpDataHEX60gensym29_2885685366.childNodes).length - 1)];
            if (!((currentHEX60gensym29_2885685376 == null))) {
            F.line = 88;
            elementsHEX60gensym29_2885685380.push(currentHEX60gensym29_2885685376);;
            F.line = 89;
            currentHEX60gensym29_2885685376 = currentHEX60gensym29_2885685376.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881981 = addInt(i_536881981, 1);
            if (!(((compTmpDataHEX60gensym29_2885685366.childNodes).length == L_536881982))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym29_2885685400 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881985 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881985 = subInt((elementsHEX60gensym29_2885685380).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881986 = colontmp__536881985;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881986)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym29_2885685400 = res_536881986;
            F.line = 93;
            var elemHEX60gensym29_2885685401 = elementsHEX60gensym29_2885685380[chckIndx(iHEX60gensym29_2885685400, 0, (elementsHEX60gensym29_2885685380).length - 1)];
            F.line = 94;
            var tagHEX60gensym29_2885685402 = compTmpDataHEX60gensym29_2885685366.childNodes[chckIndx(iHEX60gensym29_2885685400, 0, (compTmpDataHEX60gensym29_2885685366.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym29_2885685403 = elemHEX60gensym29_2885685401.parentElement;
            F.line = 96;
            var idxHEX60gensym29_2885685404 = index_2466250824(elemHEX60gensym29_2885685401);
            F.line = 97;
            var lengthHEX60gensym29_2885685408 = (parentHEX60gensym29_2885685403.childNodes).length;
            F.line = 91;
            elemHEX60gensym29_2885685401.remove();
            if ((subInt(lengthHEX60gensym29_2885685408, 1) == idxHEX60gensym29_2885685404)) {
            F.line = 101;
            parentHEX60gensym29_2885685403.appendChild(tagHEX60gensym29_2885685402);
            }
            else {
              F.line = 103;
            parentHEX60gensym29_2885685403.insertBefore(tagHEX60gensym29_2885685402, parentHEX60gensym29_2885685403.childNodes[chckIndx(idxHEX60gensym29_2885685404, 0, (parentHEX60gensym29_2885685403.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881986 = subInt(res_536881986, 1);
          }
      };
    };
    if (activeElementHEX60gensym29_2885685365.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym29_2885685409 = document.getElementById(activeElementHEX60gensym29_2885685365.id);
    if (!((actElemHEX60gensym29_2885685409 == null))) {
    F.line = 108;
    actElemHEX60gensym29_2885685409.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym29_2885685409.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym29_2885685511 = activeElementHEX60gensym29_2885685365;
    F.line = 112;
    var currentActiveElemHEX60gensym29_2885685512 = actElemHEX60gensym29_2885685409;
    F.line = 113;
    currentActiveElemHEX60gensym29_2885685512.setSelectionRange(oldActiveElemHEX60gensym29_2885685511.selectionStart, oldActiveElemHEX60gensym29_2885685511.selectionEnd, oldActiveElemHEX60gensym29_2885685511.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2885685350.updated(self_2885685350, null);
    F.line = 67;
    F.filename = "markup.nim";
    self_2885685350.rendered(self_2885685350, null);
  framePtr = F.prev;

  
}

function reRender_2885684261(self_2885684262) {
  var F = {procname: "markup.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym21_2885684277 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym21_2885684278 = render_1644175063(self_2885684262);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2885684262), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym21_2885684278, ([100,97,116,97,45] || []).concat(self_2885684262.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym21_2885684288 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2885684262.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym21_2885684292 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym21_2885684296 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881989 = 0;
      F.line = 242;
      var L_536881990 = (compTmpDataHEX60gensym21_2885684278.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881989 < L_536881990)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym21_2885684296 = compTmpDataHEX60gensym21_2885684278.childNodes[chckIndx(i_536881989, 0, (compTmpDataHEX60gensym21_2885684278.childNodes).length - 1)];
            if (!((currentHEX60gensym21_2885684288 == null))) {
            F.line = 88;
            elementsHEX60gensym21_2885684292.push(currentHEX60gensym21_2885684288);;
            F.line = 89;
            currentHEX60gensym21_2885684288 = currentHEX60gensym21_2885684288.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881989 = addInt(i_536881989, 1);
            if (!(((compTmpDataHEX60gensym21_2885684278.childNodes).length == L_536881990))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym21_2885684312 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536881993 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536881993 = subInt((elementsHEX60gensym21_2885684292).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536881994 = colontmp__536881993;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536881994)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym21_2885684312 = res_536881994;
            F.line = 93;
            var elemHEX60gensym21_2885684313 = elementsHEX60gensym21_2885684292[chckIndx(iHEX60gensym21_2885684312, 0, (elementsHEX60gensym21_2885684292).length - 1)];
            F.line = 94;
            var tagHEX60gensym21_2885684314 = compTmpDataHEX60gensym21_2885684278.childNodes[chckIndx(iHEX60gensym21_2885684312, 0, (compTmpDataHEX60gensym21_2885684278.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym21_2885684315 = elemHEX60gensym21_2885684313.parentElement;
            F.line = 96;
            var idxHEX60gensym21_2885684316 = index_2466250824(elemHEX60gensym21_2885684313);
            F.line = 97;
            var lengthHEX60gensym21_2885684320 = (parentHEX60gensym21_2885684315.childNodes).length;
            F.line = 91;
            elemHEX60gensym21_2885684313.remove();
            if ((subInt(lengthHEX60gensym21_2885684320, 1) == idxHEX60gensym21_2885684316)) {
            F.line = 101;
            parentHEX60gensym21_2885684315.appendChild(tagHEX60gensym21_2885684314);
            }
            else {
              F.line = 103;
            parentHEX60gensym21_2885684315.insertBefore(tagHEX60gensym21_2885684314, parentHEX60gensym21_2885684315.childNodes[chckIndx(idxHEX60gensym21_2885684316, 0, (parentHEX60gensym21_2885684315.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536881994 = subInt(res_536881994, 1);
          }
      };
    };
    if (activeElementHEX60gensym21_2885684277.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym21_2885684321 = document.getElementById(activeElementHEX60gensym21_2885684277.id);
    if (!((actElemHEX60gensym21_2885684321 == null))) {
    F.line = 108;
    actElemHEX60gensym21_2885684321.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym21_2885684321.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym21_2885684423 = activeElementHEX60gensym21_2885684277;
    F.line = 112;
    var currentActiveElemHEX60gensym21_2885684424 = actElemHEX60gensym21_2885684321;
    F.line = 113;
    currentActiveElemHEX60gensym21_2885684424.setSelectionRange(oldActiveElemHEX60gensym21_2885684423.selectionStart, oldActiveElemHEX60gensym21_2885684423.selectionEnd, oldActiveElemHEX60gensym21_2885684423.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2885684262.updated(self_2885684262, null);
    F.line = 50;
    F.filename = "markup.nim";
    self_2885684262.rendered(self_2885684262, null);
  framePtr = F.prev;

  
}

function reRender_2852134874(self_2852134875) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym32_2852134890 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym32_2852134891 = render_1644175063(self_2852134875);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852134875), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym32_2852134891, ([100,97,116,97,45] || []).concat(self_2852134875.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym32_2852134901 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852134875.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym32_2852134905 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym32_2852134909 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536881997 = 0;
      F.line = 242;
      var L_536881998 = (compTmpDataHEX60gensym32_2852134891.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536881997 < L_536881998)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym32_2852134909 = compTmpDataHEX60gensym32_2852134891.childNodes[chckIndx(i_536881997, 0, (compTmpDataHEX60gensym32_2852134891.childNodes).length - 1)];
            if (!((currentHEX60gensym32_2852134901 == null))) {
            F.line = 88;
            elementsHEX60gensym32_2852134905.push(currentHEX60gensym32_2852134901);;
            F.line = 89;
            currentHEX60gensym32_2852134901 = currentHEX60gensym32_2852134901.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536881997 = addInt(i_536881997, 1);
            if (!(((compTmpDataHEX60gensym32_2852134891.childNodes).length == L_536881998))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym32_2852134925 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882001 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882001 = subInt((elementsHEX60gensym32_2852134905).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882002 = colontmp__536882001;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882002)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym32_2852134925 = res_536882002;
            F.line = 93;
            var elemHEX60gensym32_2852134926 = elementsHEX60gensym32_2852134905[chckIndx(iHEX60gensym32_2852134925, 0, (elementsHEX60gensym32_2852134905).length - 1)];
            F.line = 94;
            var tagHEX60gensym32_2852134927 = compTmpDataHEX60gensym32_2852134891.childNodes[chckIndx(iHEX60gensym32_2852134925, 0, (compTmpDataHEX60gensym32_2852134891.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym32_2852134928 = elemHEX60gensym32_2852134926.parentElement;
            F.line = 96;
            var idxHEX60gensym32_2852134929 = index_2466250824(elemHEX60gensym32_2852134926);
            F.line = 97;
            var lengthHEX60gensym32_2852134933 = (parentHEX60gensym32_2852134928.childNodes).length;
            F.line = 91;
            elemHEX60gensym32_2852134926.remove();
            if ((subInt(lengthHEX60gensym32_2852134933, 1) == idxHEX60gensym32_2852134929)) {
            F.line = 101;
            parentHEX60gensym32_2852134928.appendChild(tagHEX60gensym32_2852134927);
            }
            else {
              F.line = 103;
            parentHEX60gensym32_2852134928.insertBefore(tagHEX60gensym32_2852134927, parentHEX60gensym32_2852134928.childNodes[chckIndx(idxHEX60gensym32_2852134929, 0, (parentHEX60gensym32_2852134928.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882002 = subInt(res_536882002, 1);
          }
      };
    };
    if (activeElementHEX60gensym32_2852134890.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym32_2852134934 = document.getElementById(activeElementHEX60gensym32_2852134890.id);
    if (!((actElemHEX60gensym32_2852134934 == null))) {
    F.line = 108;
    actElemHEX60gensym32_2852134934.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym32_2852134934.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym32_2852135036 = activeElementHEX60gensym32_2852134890;
    F.line = 112;
    var currentActiveElemHEX60gensym32_2852135037 = actElemHEX60gensym32_2852134934;
    F.line = 113;
    currentActiveElemHEX60gensym32_2852135037.setSelectionRange(oldActiveElemHEX60gensym32_2852135036.selectionStart, oldActiveElemHEX60gensym32_2852135036.selectionEnd, oldActiveElemHEX60gensym32_2852135036.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852134875.updated(self_2852134875, null);
    F.line = 113;
    F.filename = "layout.nim";
    self_2852134875.rendered(self_2852134875, null);
  framePtr = F.prev;

  
}

function reRender_3019909161(self_3019909162) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym29_3019909177 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym29_3019909178 = render_1644175063(self_3019909162);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019909162), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym29_3019909178, ([100,97,116,97,45] || []).concat(self_3019909162.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym29_3019909188 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019909162.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym29_3019909192 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym29_3019909196 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882005 = 0;
      F.line = 242;
      var L_536882006 = (compTmpDataHEX60gensym29_3019909178.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882005 < L_536882006)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym29_3019909196 = compTmpDataHEX60gensym29_3019909178.childNodes[chckIndx(i_536882005, 0, (compTmpDataHEX60gensym29_3019909178.childNodes).length - 1)];
            if (!((currentHEX60gensym29_3019909188 == null))) {
            F.line = 88;
            elementsHEX60gensym29_3019909192.push(currentHEX60gensym29_3019909188);;
            F.line = 89;
            currentHEX60gensym29_3019909188 = currentHEX60gensym29_3019909188.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882005 = addInt(i_536882005, 1);
            if (!(((compTmpDataHEX60gensym29_3019909178.childNodes).length == L_536882006))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym29_3019909212 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882009 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882009 = subInt((elementsHEX60gensym29_3019909192).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882010 = colontmp__536882009;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882010)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym29_3019909212 = res_536882010;
            F.line = 93;
            var elemHEX60gensym29_3019909213 = elementsHEX60gensym29_3019909192[chckIndx(iHEX60gensym29_3019909212, 0, (elementsHEX60gensym29_3019909192).length - 1)];
            F.line = 94;
            var tagHEX60gensym29_3019909214 = compTmpDataHEX60gensym29_3019909178.childNodes[chckIndx(iHEX60gensym29_3019909212, 0, (compTmpDataHEX60gensym29_3019909178.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym29_3019909215 = elemHEX60gensym29_3019909213.parentElement;
            F.line = 96;
            var idxHEX60gensym29_3019909216 = index_2466250824(elemHEX60gensym29_3019909213);
            F.line = 97;
            var lengthHEX60gensym29_3019909220 = (parentHEX60gensym29_3019909215.childNodes).length;
            F.line = 91;
            elemHEX60gensym29_3019909213.remove();
            if ((subInt(lengthHEX60gensym29_3019909220, 1) == idxHEX60gensym29_3019909216)) {
            F.line = 101;
            parentHEX60gensym29_3019909215.appendChild(tagHEX60gensym29_3019909214);
            }
            else {
              F.line = 103;
            parentHEX60gensym29_3019909215.insertBefore(tagHEX60gensym29_3019909214, parentHEX60gensym29_3019909215.childNodes[chckIndx(idxHEX60gensym29_3019909216, 0, (parentHEX60gensym29_3019909215.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882010 = subInt(res_536882010, 1);
          }
      };
    };
    if (activeElementHEX60gensym29_3019909177.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym29_3019909221 = document.getElementById(activeElementHEX60gensym29_3019909177.id);
    if (!((actElemHEX60gensym29_3019909221 == null))) {
    F.line = 108;
    actElemHEX60gensym29_3019909221.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym29_3019909221.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym29_3019909323 = activeElementHEX60gensym29_3019909177;
    F.line = 112;
    var currentActiveElemHEX60gensym29_3019909324 = actElemHEX60gensym29_3019909221;
    F.line = 113;
    currentActiveElemHEX60gensym29_3019909324.setSelectionRange(oldActiveElemHEX60gensym29_3019909323.selectionStart, oldActiveElemHEX60gensym29_3019909323.selectionEnd, oldActiveElemHEX60gensym29_3019909323.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019909162.updated(self_3019909162, null);
    F.line = 107;
    F.filename = "base24.nim";
    self_3019909162.rendered(self_3019909162, null);
  framePtr = F.prev;

  
}

function reRender_2852152337(self_2852152338) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym132_2852152353 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym132_2852152354 = render_1644175063(self_2852152338);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852152338), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym132_2852152354, ([100,97,116,97,45] || []).concat(self_2852152338.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym132_2852152364 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852152338.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym132_2852152368 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym132_2852152372 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882013 = 0;
      F.line = 242;
      var L_536882014 = (compTmpDataHEX60gensym132_2852152354.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882013 < L_536882014)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym132_2852152372 = compTmpDataHEX60gensym132_2852152354.childNodes[chckIndx(i_536882013, 0, (compTmpDataHEX60gensym132_2852152354.childNodes).length - 1)];
            if (!((currentHEX60gensym132_2852152364 == null))) {
            F.line = 88;
            elementsHEX60gensym132_2852152368.push(currentHEX60gensym132_2852152364);;
            F.line = 89;
            currentHEX60gensym132_2852152364 = currentHEX60gensym132_2852152364.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882013 = addInt(i_536882013, 1);
            if (!(((compTmpDataHEX60gensym132_2852152354.childNodes).length == L_536882014))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym132_2852152388 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882017 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882017 = subInt((elementsHEX60gensym132_2852152368).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882018 = colontmp__536882017;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882018)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym132_2852152388 = res_536882018;
            F.line = 93;
            var elemHEX60gensym132_2852152389 = elementsHEX60gensym132_2852152368[chckIndx(iHEX60gensym132_2852152388, 0, (elementsHEX60gensym132_2852152368).length - 1)];
            F.line = 94;
            var tagHEX60gensym132_2852152390 = compTmpDataHEX60gensym132_2852152354.childNodes[chckIndx(iHEX60gensym132_2852152388, 0, (compTmpDataHEX60gensym132_2852152354.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym132_2852152391 = elemHEX60gensym132_2852152389.parentElement;
            F.line = 96;
            var idxHEX60gensym132_2852152392 = index_2466250824(elemHEX60gensym132_2852152389);
            F.line = 97;
            var lengthHEX60gensym132_2852152396 = (parentHEX60gensym132_2852152391.childNodes).length;
            F.line = 91;
            elemHEX60gensym132_2852152389.remove();
            if ((subInt(lengthHEX60gensym132_2852152396, 1) == idxHEX60gensym132_2852152392)) {
            F.line = 101;
            parentHEX60gensym132_2852152391.appendChild(tagHEX60gensym132_2852152390);
            }
            else {
              F.line = 103;
            parentHEX60gensym132_2852152391.insertBefore(tagHEX60gensym132_2852152390, parentHEX60gensym132_2852152391.childNodes[chckIndx(idxHEX60gensym132_2852152392, 0, (parentHEX60gensym132_2852152391.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882018 = subInt(res_536882018, 1);
          }
      };
    };
    if (activeElementHEX60gensym132_2852152353.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym132_2852152397 = document.getElementById(activeElementHEX60gensym132_2852152353.id);
    if (!((actElemHEX60gensym132_2852152397 == null))) {
    F.line = 108;
    actElemHEX60gensym132_2852152397.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym132_2852152397.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym132_2852152499 = activeElementHEX60gensym132_2852152353;
    F.line = 112;
    var currentActiveElemHEX60gensym132_2852152500 = actElemHEX60gensym132_2852152397;
    F.line = 113;
    currentActiveElemHEX60gensym132_2852152500.setSelectionRange(oldActiveElemHEX60gensym132_2852152499.selectionStart, oldActiveElemHEX60gensym132_2852152499.selectionEnd, oldActiveElemHEX60gensym132_2852152499.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852152338.updated(self_2852152338, null);
    F.line = 151;
    F.filename = "layout.nim";
    self_2852152338.rendered(self_2852152338, null);
  framePtr = F.prev;

  
}

function reRender_2852150467(self_2852150468) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym122_2852150483 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym122_2852150484 = render_1644175063(self_2852150468);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852150468), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym122_2852150484, ([100,97,116,97,45] || []).concat(self_2852150468.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym122_2852150494 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852150468.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym122_2852150498 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym122_2852150502 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882021 = 0;
      F.line = 242;
      var L_536882022 = (compTmpDataHEX60gensym122_2852150484.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882021 < L_536882022)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym122_2852150502 = compTmpDataHEX60gensym122_2852150484.childNodes[chckIndx(i_536882021, 0, (compTmpDataHEX60gensym122_2852150484.childNodes).length - 1)];
            if (!((currentHEX60gensym122_2852150494 == null))) {
            F.line = 88;
            elementsHEX60gensym122_2852150498.push(currentHEX60gensym122_2852150494);;
            F.line = 89;
            currentHEX60gensym122_2852150494 = currentHEX60gensym122_2852150494.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882021 = addInt(i_536882021, 1);
            if (!(((compTmpDataHEX60gensym122_2852150484.childNodes).length == L_536882022))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym122_2852150518 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882025 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882025 = subInt((elementsHEX60gensym122_2852150498).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882026 = colontmp__536882025;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882026)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym122_2852150518 = res_536882026;
            F.line = 93;
            var elemHEX60gensym122_2852150519 = elementsHEX60gensym122_2852150498[chckIndx(iHEX60gensym122_2852150518, 0, (elementsHEX60gensym122_2852150498).length - 1)];
            F.line = 94;
            var tagHEX60gensym122_2852150520 = compTmpDataHEX60gensym122_2852150484.childNodes[chckIndx(iHEX60gensym122_2852150518, 0, (compTmpDataHEX60gensym122_2852150484.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym122_2852150521 = elemHEX60gensym122_2852150519.parentElement;
            F.line = 96;
            var idxHEX60gensym122_2852150522 = index_2466250824(elemHEX60gensym122_2852150519);
            F.line = 97;
            var lengthHEX60gensym122_2852150526 = (parentHEX60gensym122_2852150521.childNodes).length;
            F.line = 91;
            elemHEX60gensym122_2852150519.remove();
            if ((subInt(lengthHEX60gensym122_2852150526, 1) == idxHEX60gensym122_2852150522)) {
            F.line = 101;
            parentHEX60gensym122_2852150521.appendChild(tagHEX60gensym122_2852150520);
            }
            else {
              F.line = 103;
            parentHEX60gensym122_2852150521.insertBefore(tagHEX60gensym122_2852150520, parentHEX60gensym122_2852150521.childNodes[chckIndx(idxHEX60gensym122_2852150522, 0, (parentHEX60gensym122_2852150521.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882026 = subInt(res_536882026, 1);
          }
      };
    };
    if (activeElementHEX60gensym122_2852150483.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym122_2852150527 = document.getElementById(activeElementHEX60gensym122_2852150483.id);
    if (!((actElemHEX60gensym122_2852150527 == null))) {
    F.line = 108;
    actElemHEX60gensym122_2852150527.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym122_2852150527.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym122_2852150629 = activeElementHEX60gensym122_2852150483;
    F.line = 112;
    var currentActiveElemHEX60gensym122_2852150630 = actElemHEX60gensym122_2852150527;
    F.line = 113;
    currentActiveElemHEX60gensym122_2852150630.setSelectionRange(oldActiveElemHEX60gensym122_2852150629.selectionStart, oldActiveElemHEX60gensym122_2852150629.selectionEnd, oldActiveElemHEX60gensym122_2852150629.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852150468.updated(self_2852150468, null);
    F.line = 137;
    F.filename = "layout.nim";
    self_2852150468.rendered(self_2852150468, null);
  framePtr = F.prev;

  
}

function reRender_3019898973(self_3019898974) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_3019898989 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_3019898990 = render_1644175063(self_3019898974);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019898974), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_3019898990, ([100,97,116,97,45] || []).concat(self_3019898974.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_3019899000 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019898974.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_3019899004 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_3019899008 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882029 = 0;
      F.line = 242;
      var L_536882030 = (compTmpDataHEX60gensym0_3019898990.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882029 < L_536882030)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_3019899008 = compTmpDataHEX60gensym0_3019898990.childNodes[chckIndx(i_536882029, 0, (compTmpDataHEX60gensym0_3019898990.childNodes).length - 1)];
            if (!((currentHEX60gensym0_3019899000 == null))) {
            F.line = 88;
            elementsHEX60gensym0_3019899004.push(currentHEX60gensym0_3019899000);;
            F.line = 89;
            currentHEX60gensym0_3019899000 = currentHEX60gensym0_3019899000.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882029 = addInt(i_536882029, 1);
            if (!(((compTmpDataHEX60gensym0_3019898990.childNodes).length == L_536882030))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_3019899024 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882033 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882033 = subInt((elementsHEX60gensym0_3019899004).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882034 = colontmp__536882033;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882034)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_3019899024 = res_536882034;
            F.line = 93;
            var elemHEX60gensym0_3019899025 = elementsHEX60gensym0_3019899004[chckIndx(iHEX60gensym0_3019899024, 0, (elementsHEX60gensym0_3019899004).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_3019899026 = compTmpDataHEX60gensym0_3019898990.childNodes[chckIndx(iHEX60gensym0_3019899024, 0, (compTmpDataHEX60gensym0_3019898990.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_3019899027 = elemHEX60gensym0_3019899025.parentElement;
            F.line = 96;
            var idxHEX60gensym0_3019899028 = index_2466250824(elemHEX60gensym0_3019899025);
            F.line = 97;
            var lengthHEX60gensym0_3019899032 = (parentHEX60gensym0_3019899027.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_3019899025.remove();
            if ((subInt(lengthHEX60gensym0_3019899032, 1) == idxHEX60gensym0_3019899028)) {
            F.line = 101;
            parentHEX60gensym0_3019899027.appendChild(tagHEX60gensym0_3019899026);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_3019899027.insertBefore(tagHEX60gensym0_3019899026, parentHEX60gensym0_3019899027.childNodes[chckIndx(idxHEX60gensym0_3019899028, 0, (parentHEX60gensym0_3019899027.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882034 = subInt(res_536882034, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_3019898989.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_3019899033 = document.getElementById(activeElementHEX60gensym0_3019898989.id);
    if (!((actElemHEX60gensym0_3019899033 == null))) {
    F.line = 108;
    actElemHEX60gensym0_3019899033.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_3019899033.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_3019899135 = activeElementHEX60gensym0_3019898989;
    F.line = 112;
    var currentActiveElemHEX60gensym0_3019899136 = actElemHEX60gensym0_3019899033;
    F.line = 113;
    currentActiveElemHEX60gensym0_3019899136.setSelectionRange(oldActiveElemHEX60gensym0_3019899135.selectionStart, oldActiveElemHEX60gensym0_3019899135.selectionEnd, oldActiveElemHEX60gensym0_3019899135.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019898974.updated(self_3019898974, null);
    F.line = 9;
    F.filename = "base24.nim";
    self_3019898974.rendered(self_3019898974, null);
  framePtr = F.prev;

  
}

function reRender_3036677468(self_3036677469) {
  var F = {procname: "slides24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym4_3036677484 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym4_3036677485 = render_1644175063(self_3036677469);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3036677469), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym4_3036677485, ([100,97,116,97,45] || []).concat(self_3036677469.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym4_3036677495 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3036677469.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym4_3036677499 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym4_3036677503 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882037 = 0;
      F.line = 242;
      var L_536882038 = (compTmpDataHEX60gensym4_3036677485.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882037 < L_536882038)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym4_3036677503 = compTmpDataHEX60gensym4_3036677485.childNodes[chckIndx(i_536882037, 0, (compTmpDataHEX60gensym4_3036677485.childNodes).length - 1)];
            if (!((currentHEX60gensym4_3036677495 == null))) {
            F.line = 88;
            elementsHEX60gensym4_3036677499.push(currentHEX60gensym4_3036677495);;
            F.line = 89;
            currentHEX60gensym4_3036677495 = currentHEX60gensym4_3036677495.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882037 = addInt(i_536882037, 1);
            if (!(((compTmpDataHEX60gensym4_3036677485.childNodes).length == L_536882038))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym4_3036677519 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882041 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882041 = subInt((elementsHEX60gensym4_3036677499).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882042 = colontmp__536882041;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882042)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym4_3036677519 = res_536882042;
            F.line = 93;
            var elemHEX60gensym4_3036677520 = elementsHEX60gensym4_3036677499[chckIndx(iHEX60gensym4_3036677519, 0, (elementsHEX60gensym4_3036677499).length - 1)];
            F.line = 94;
            var tagHEX60gensym4_3036677521 = compTmpDataHEX60gensym4_3036677485.childNodes[chckIndx(iHEX60gensym4_3036677519, 0, (compTmpDataHEX60gensym4_3036677485.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym4_3036677522 = elemHEX60gensym4_3036677520.parentElement;
            F.line = 96;
            var idxHEX60gensym4_3036677523 = index_2466250824(elemHEX60gensym4_3036677520);
            F.line = 97;
            var lengthHEX60gensym4_3036677527 = (parentHEX60gensym4_3036677522.childNodes).length;
            F.line = 91;
            elemHEX60gensym4_3036677520.remove();
            if ((subInt(lengthHEX60gensym4_3036677527, 1) == idxHEX60gensym4_3036677523)) {
            F.line = 101;
            parentHEX60gensym4_3036677522.appendChild(tagHEX60gensym4_3036677521);
            }
            else {
              F.line = 103;
            parentHEX60gensym4_3036677522.insertBefore(tagHEX60gensym4_3036677521, parentHEX60gensym4_3036677522.childNodes[chckIndx(idxHEX60gensym4_3036677523, 0, (parentHEX60gensym4_3036677522.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882042 = subInt(res_536882042, 1);
          }
      };
    };
    if (activeElementHEX60gensym4_3036677484.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym4_3036677528 = document.getElementById(activeElementHEX60gensym4_3036677484.id);
    if (!((actElemHEX60gensym4_3036677528 == null))) {
    F.line = 108;
    actElemHEX60gensym4_3036677528.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym4_3036677528.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym4_3036677630 = activeElementHEX60gensym4_3036677484;
    F.line = 112;
    var currentActiveElemHEX60gensym4_3036677631 = actElemHEX60gensym4_3036677528;
    F.line = 113;
    currentActiveElemHEX60gensym4_3036677631.setSelectionRange(oldActiveElemHEX60gensym4_3036677630.selectionStart, oldActiveElemHEX60gensym4_3036677630.selectionEnd, oldActiveElemHEX60gensym4_3036677630.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3036677469.updated(self_3036677469, null);
    F.line = 26;
    F.filename = "slides24.nim";
    self_3036677469.rendered(self_3036677469, null);
  framePtr = F.prev;

  
}

function reRender_3036676694(self_3036676695) {
  var F = {procname: "slides24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym2_3036676710 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym2_3036676711 = render_1644175063(self_3036676695);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3036676695), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym2_3036676711, ([100,97,116,97,45] || []).concat(self_3036676695.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym2_3036676721 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3036676695.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym2_3036676725 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym2_3036676729 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882045 = 0;
      F.line = 242;
      var L_536882046 = (compTmpDataHEX60gensym2_3036676711.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882045 < L_536882046)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym2_3036676729 = compTmpDataHEX60gensym2_3036676711.childNodes[chckIndx(i_536882045, 0, (compTmpDataHEX60gensym2_3036676711.childNodes).length - 1)];
            if (!((currentHEX60gensym2_3036676721 == null))) {
            F.line = 88;
            elementsHEX60gensym2_3036676725.push(currentHEX60gensym2_3036676721);;
            F.line = 89;
            currentHEX60gensym2_3036676721 = currentHEX60gensym2_3036676721.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882045 = addInt(i_536882045, 1);
            if (!(((compTmpDataHEX60gensym2_3036676711.childNodes).length == L_536882046))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym2_3036676745 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882049 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882049 = subInt((elementsHEX60gensym2_3036676725).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882050 = colontmp__536882049;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882050)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym2_3036676745 = res_536882050;
            F.line = 93;
            var elemHEX60gensym2_3036676746 = elementsHEX60gensym2_3036676725[chckIndx(iHEX60gensym2_3036676745, 0, (elementsHEX60gensym2_3036676725).length - 1)];
            F.line = 94;
            var tagHEX60gensym2_3036676747 = compTmpDataHEX60gensym2_3036676711.childNodes[chckIndx(iHEX60gensym2_3036676745, 0, (compTmpDataHEX60gensym2_3036676711.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym2_3036676748 = elemHEX60gensym2_3036676746.parentElement;
            F.line = 96;
            var idxHEX60gensym2_3036676749 = index_2466250824(elemHEX60gensym2_3036676746);
            F.line = 97;
            var lengthHEX60gensym2_3036676753 = (parentHEX60gensym2_3036676748.childNodes).length;
            F.line = 91;
            elemHEX60gensym2_3036676746.remove();
            if ((subInt(lengthHEX60gensym2_3036676753, 1) == idxHEX60gensym2_3036676749)) {
            F.line = 101;
            parentHEX60gensym2_3036676748.appendChild(tagHEX60gensym2_3036676747);
            }
            else {
              F.line = 103;
            parentHEX60gensym2_3036676748.insertBefore(tagHEX60gensym2_3036676747, parentHEX60gensym2_3036676748.childNodes[chckIndx(idxHEX60gensym2_3036676749, 0, (parentHEX60gensym2_3036676748.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882050 = subInt(res_536882050, 1);
          }
      };
    };
    if (activeElementHEX60gensym2_3036676710.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym2_3036676754 = document.getElementById(activeElementHEX60gensym2_3036676710.id);
    if (!((actElemHEX60gensym2_3036676754 == null))) {
    F.line = 108;
    actElemHEX60gensym2_3036676754.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym2_3036676754.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym2_3036676856 = activeElementHEX60gensym2_3036676710;
    F.line = 112;
    var currentActiveElemHEX60gensym2_3036676857 = actElemHEX60gensym2_3036676754;
    F.line = 113;
    currentActiveElemHEX60gensym2_3036676857.setSelectionRange(oldActiveElemHEX60gensym2_3036676856.selectionStart, oldActiveElemHEX60gensym2_3036676856.selectionEnd, oldActiveElemHEX60gensym2_3036676856.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3036676695.updated(self_3036676695, null);
    F.line = 20;
    F.filename = "slides24.nim";
    self_3036676695.rendered(self_3036676695, null);
  framePtr = F.prev;

  
}

function reRender_3036676169(self_3036676170) {
  var F = {procname: "slides24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym0_3036676185 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym0_3036676186 = render_1644175063(self_3036676170);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3036676170), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym0_3036676186, ([100,97,116,97,45] || []).concat(self_3036676170.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym0_3036676196 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3036676170.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym0_3036676200 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym0_3036676204 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882053 = 0;
      F.line = 242;
      var L_536882054 = (compTmpDataHEX60gensym0_3036676186.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882053 < L_536882054)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym0_3036676204 = compTmpDataHEX60gensym0_3036676186.childNodes[chckIndx(i_536882053, 0, (compTmpDataHEX60gensym0_3036676186.childNodes).length - 1)];
            if (!((currentHEX60gensym0_3036676196 == null))) {
            F.line = 88;
            elementsHEX60gensym0_3036676200.push(currentHEX60gensym0_3036676196);;
            F.line = 89;
            currentHEX60gensym0_3036676196 = currentHEX60gensym0_3036676196.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882053 = addInt(i_536882053, 1);
            if (!(((compTmpDataHEX60gensym0_3036676186.childNodes).length == L_536882054))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym0_3036676220 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882057 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882057 = subInt((elementsHEX60gensym0_3036676200).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882058 = colontmp__536882057;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882058)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym0_3036676220 = res_536882058;
            F.line = 93;
            var elemHEX60gensym0_3036676221 = elementsHEX60gensym0_3036676200[chckIndx(iHEX60gensym0_3036676220, 0, (elementsHEX60gensym0_3036676200).length - 1)];
            F.line = 94;
            var tagHEX60gensym0_3036676222 = compTmpDataHEX60gensym0_3036676186.childNodes[chckIndx(iHEX60gensym0_3036676220, 0, (compTmpDataHEX60gensym0_3036676186.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym0_3036676223 = elemHEX60gensym0_3036676221.parentElement;
            F.line = 96;
            var idxHEX60gensym0_3036676224 = index_2466250824(elemHEX60gensym0_3036676221);
            F.line = 97;
            var lengthHEX60gensym0_3036676228 = (parentHEX60gensym0_3036676223.childNodes).length;
            F.line = 91;
            elemHEX60gensym0_3036676221.remove();
            if ((subInt(lengthHEX60gensym0_3036676228, 1) == idxHEX60gensym0_3036676224)) {
            F.line = 101;
            parentHEX60gensym0_3036676223.appendChild(tagHEX60gensym0_3036676222);
            }
            else {
              F.line = 103;
            parentHEX60gensym0_3036676223.insertBefore(tagHEX60gensym0_3036676222, parentHEX60gensym0_3036676223.childNodes[chckIndx(idxHEX60gensym0_3036676224, 0, (parentHEX60gensym0_3036676223.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882058 = subInt(res_536882058, 1);
          }
      };
    };
    if (activeElementHEX60gensym0_3036676185.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym0_3036676229 = document.getElementById(activeElementHEX60gensym0_3036676185.id);
    if (!((actElemHEX60gensym0_3036676229 == null))) {
    F.line = 108;
    actElemHEX60gensym0_3036676229.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym0_3036676229.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym0_3036676331 = activeElementHEX60gensym0_3036676185;
    F.line = 112;
    var currentActiveElemHEX60gensym0_3036676332 = actElemHEX60gensym0_3036676229;
    F.line = 113;
    currentActiveElemHEX60gensym0_3036676332.setSelectionRange(oldActiveElemHEX60gensym0_3036676331.selectionStart, oldActiveElemHEX60gensym0_3036676331.selectionEnd, oldActiveElemHEX60gensym0_3036676331.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3036676170.updated(self_3036676170, null);
    F.line = 15;
    F.filename = "slides24.nim";
    self_3036676170.rendered(self_3036676170, null);
  framePtr = F.prev;

  
}

function reRender_3036678242(self_3036678243) {
  var F = {procname: "slides24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym6_3036678258 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym6_3036678259 = render_1644175063(self_3036678243);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3036678243), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym6_3036678259, ([100,97,116,97,45] || []).concat(self_3036678243.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym6_3036678269 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3036678243.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym6_3036678273 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym6_3036678277 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882061 = 0;
      F.line = 242;
      var L_536882062 = (compTmpDataHEX60gensym6_3036678259.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882061 < L_536882062)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym6_3036678277 = compTmpDataHEX60gensym6_3036678259.childNodes[chckIndx(i_536882061, 0, (compTmpDataHEX60gensym6_3036678259.childNodes).length - 1)];
            if (!((currentHEX60gensym6_3036678269 == null))) {
            F.line = 88;
            elementsHEX60gensym6_3036678273.push(currentHEX60gensym6_3036678269);;
            F.line = 89;
            currentHEX60gensym6_3036678269 = currentHEX60gensym6_3036678269.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882061 = addInt(i_536882061, 1);
            if (!(((compTmpDataHEX60gensym6_3036678259.childNodes).length == L_536882062))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym6_3036678293 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882065 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882065 = subInt((elementsHEX60gensym6_3036678273).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882066 = colontmp__536882065;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882066)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym6_3036678293 = res_536882066;
            F.line = 93;
            var elemHEX60gensym6_3036678294 = elementsHEX60gensym6_3036678273[chckIndx(iHEX60gensym6_3036678293, 0, (elementsHEX60gensym6_3036678273).length - 1)];
            F.line = 94;
            var tagHEX60gensym6_3036678295 = compTmpDataHEX60gensym6_3036678259.childNodes[chckIndx(iHEX60gensym6_3036678293, 0, (compTmpDataHEX60gensym6_3036678259.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym6_3036678296 = elemHEX60gensym6_3036678294.parentElement;
            F.line = 96;
            var idxHEX60gensym6_3036678297 = index_2466250824(elemHEX60gensym6_3036678294);
            F.line = 97;
            var lengthHEX60gensym6_3036678301 = (parentHEX60gensym6_3036678296.childNodes).length;
            F.line = 91;
            elemHEX60gensym6_3036678294.remove();
            if ((subInt(lengthHEX60gensym6_3036678301, 1) == idxHEX60gensym6_3036678297)) {
            F.line = 101;
            parentHEX60gensym6_3036678296.appendChild(tagHEX60gensym6_3036678295);
            }
            else {
              F.line = 103;
            parentHEX60gensym6_3036678296.insertBefore(tagHEX60gensym6_3036678295, parentHEX60gensym6_3036678296.childNodes[chckIndx(idxHEX60gensym6_3036678297, 0, (parentHEX60gensym6_3036678296.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882066 = subInt(res_536882066, 1);
          }
      };
    };
    if (activeElementHEX60gensym6_3036678258.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym6_3036678302 = document.getElementById(activeElementHEX60gensym6_3036678258.id);
    if (!((actElemHEX60gensym6_3036678302 == null))) {
    F.line = 108;
    actElemHEX60gensym6_3036678302.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym6_3036678302.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym6_3036678404 = activeElementHEX60gensym6_3036678258;
    F.line = 112;
    var currentActiveElemHEX60gensym6_3036678405 = actElemHEX60gensym6_3036678302;
    F.line = 113;
    currentActiveElemHEX60gensym6_3036678405.setSelectionRange(oldActiveElemHEX60gensym6_3036678404.selectionStart, oldActiveElemHEX60gensym6_3036678404.selectionEnd, oldActiveElemHEX60gensym6_3036678404.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3036678243.updated(self_3036678243, null);
    F.line = 32;
    F.filename = "slides24.nim";
    self_3036678243.rendered(self_3036678243, null);
  framePtr = F.prev;

  
}

function reRender_3170894172(self_3170894173) {
  var F = {procname: "jsxGraph.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym4_3170894188 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym4_3170894189 = render_1644175063(self_3170894173);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3170894173), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym4_3170894189, ([100,97,116,97,45] || []).concat(self_3170894173.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym4_3170894199 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3170894173.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym4_3170894203 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym4_3170894207 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882069 = 0;
      F.line = 242;
      var L_536882070 = (compTmpDataHEX60gensym4_3170894189.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882069 < L_536882070)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym4_3170894207 = compTmpDataHEX60gensym4_3170894189.childNodes[chckIndx(i_536882069, 0, (compTmpDataHEX60gensym4_3170894189.childNodes).length - 1)];
            if (!((currentHEX60gensym4_3170894199 == null))) {
            F.line = 88;
            elementsHEX60gensym4_3170894203.push(currentHEX60gensym4_3170894199);;
            F.line = 89;
            currentHEX60gensym4_3170894199 = currentHEX60gensym4_3170894199.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882069 = addInt(i_536882069, 1);
            if (!(((compTmpDataHEX60gensym4_3170894189.childNodes).length == L_536882070))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym4_3170894223 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882073 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882073 = subInt((elementsHEX60gensym4_3170894203).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882074 = colontmp__536882073;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882074)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym4_3170894223 = res_536882074;
            F.line = 93;
            var elemHEX60gensym4_3170894224 = elementsHEX60gensym4_3170894203[chckIndx(iHEX60gensym4_3170894223, 0, (elementsHEX60gensym4_3170894203).length - 1)];
            F.line = 94;
            var tagHEX60gensym4_3170894225 = compTmpDataHEX60gensym4_3170894189.childNodes[chckIndx(iHEX60gensym4_3170894223, 0, (compTmpDataHEX60gensym4_3170894189.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym4_3170894226 = elemHEX60gensym4_3170894224.parentElement;
            F.line = 96;
            var idxHEX60gensym4_3170894227 = index_2466250824(elemHEX60gensym4_3170894224);
            F.line = 97;
            var lengthHEX60gensym4_3170894231 = (parentHEX60gensym4_3170894226.childNodes).length;
            F.line = 91;
            elemHEX60gensym4_3170894224.remove();
            if ((subInt(lengthHEX60gensym4_3170894231, 1) == idxHEX60gensym4_3170894227)) {
            F.line = 101;
            parentHEX60gensym4_3170894226.appendChild(tagHEX60gensym4_3170894225);
            }
            else {
              F.line = 103;
            parentHEX60gensym4_3170894226.insertBefore(tagHEX60gensym4_3170894225, parentHEX60gensym4_3170894226.childNodes[chckIndx(idxHEX60gensym4_3170894227, 0, (parentHEX60gensym4_3170894226.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882074 = subInt(res_536882074, 1);
          }
      };
    };
    if (activeElementHEX60gensym4_3170894188.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym4_3170894232 = document.getElementById(activeElementHEX60gensym4_3170894188.id);
    if (!((actElemHEX60gensym4_3170894232 == null))) {
    F.line = 108;
    actElemHEX60gensym4_3170894232.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym4_3170894232.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym4_3170894334 = activeElementHEX60gensym4_3170894188;
    F.line = 112;
    var currentActiveElemHEX60gensym4_3170894335 = actElemHEX60gensym4_3170894232;
    F.line = 113;
    currentActiveElemHEX60gensym4_3170894335.setSelectionRange(oldActiveElemHEX60gensym4_3170894334.selectionStart, oldActiveElemHEX60gensym4_3170894334.selectionEnd, oldActiveElemHEX60gensym4_3170894334.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3170894173.updated(self_3170894173, null);
    F.line = 44;
    F.filename = "jsxGraph.nim";
    self_3170894173.rendered(self_3170894173, null);
  framePtr = F.prev;

  
}

function reRender_3103785838(self_3103785839) {
  var F = {procname: "slides.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym9_3103785854 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym9_3103785855 = render_1644175063(self_3103785839);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3103785839), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym9_3103785855, ([100,97,116,97,45] || []).concat(self_3103785839.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym9_3103785865 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3103785839.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym9_3103785869 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym9_3103785873 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882077 = 0;
      F.line = 242;
      var L_536882078 = (compTmpDataHEX60gensym9_3103785855.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882077 < L_536882078)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym9_3103785873 = compTmpDataHEX60gensym9_3103785855.childNodes[chckIndx(i_536882077, 0, (compTmpDataHEX60gensym9_3103785855.childNodes).length - 1)];
            if (!((currentHEX60gensym9_3103785865 == null))) {
            F.line = 88;
            elementsHEX60gensym9_3103785869.push(currentHEX60gensym9_3103785865);;
            F.line = 89;
            currentHEX60gensym9_3103785865 = currentHEX60gensym9_3103785865.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882077 = addInt(i_536882077, 1);
            if (!(((compTmpDataHEX60gensym9_3103785855.childNodes).length == L_536882078))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym9_3103785889 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882081 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882081 = subInt((elementsHEX60gensym9_3103785869).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882082 = colontmp__536882081;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882082)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym9_3103785889 = res_536882082;
            F.line = 93;
            var elemHEX60gensym9_3103785890 = elementsHEX60gensym9_3103785869[chckIndx(iHEX60gensym9_3103785889, 0, (elementsHEX60gensym9_3103785869).length - 1)];
            F.line = 94;
            var tagHEX60gensym9_3103785891 = compTmpDataHEX60gensym9_3103785855.childNodes[chckIndx(iHEX60gensym9_3103785889, 0, (compTmpDataHEX60gensym9_3103785855.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym9_3103785892 = elemHEX60gensym9_3103785890.parentElement;
            F.line = 96;
            var idxHEX60gensym9_3103785893 = index_2466250824(elemHEX60gensym9_3103785890);
            F.line = 97;
            var lengthHEX60gensym9_3103785897 = (parentHEX60gensym9_3103785892.childNodes).length;
            F.line = 91;
            elemHEX60gensym9_3103785890.remove();
            if ((subInt(lengthHEX60gensym9_3103785897, 1) == idxHEX60gensym9_3103785893)) {
            F.line = 101;
            parentHEX60gensym9_3103785892.appendChild(tagHEX60gensym9_3103785891);
            }
            else {
              F.line = 103;
            parentHEX60gensym9_3103785892.insertBefore(tagHEX60gensym9_3103785891, parentHEX60gensym9_3103785892.childNodes[chckIndx(idxHEX60gensym9_3103785893, 0, (parentHEX60gensym9_3103785892.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882082 = subInt(res_536882082, 1);
          }
      };
    };
    if (activeElementHEX60gensym9_3103785854.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym9_3103785898 = document.getElementById(activeElementHEX60gensym9_3103785854.id);
    if (!((actElemHEX60gensym9_3103785898 == null))) {
    F.line = 108;
    actElemHEX60gensym9_3103785898.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym9_3103785898.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym9_3103786000 = activeElementHEX60gensym9_3103785854;
    F.line = 112;
    var currentActiveElemHEX60gensym9_3103786001 = actElemHEX60gensym9_3103785898;
    F.line = 113;
    currentActiveElemHEX60gensym9_3103786001.setSelectionRange(oldActiveElemHEX60gensym9_3103786000.selectionStart, oldActiveElemHEX60gensym9_3103786000.selectionEnd, oldActiveElemHEX60gensym9_3103786000.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3103785839.updated(self_3103785839, null);
    F.line = 62;
    F.filename = "slides.nim";
    self_3103785839.rendered(self_3103785839, null);
  framePtr = F.prev;

  
}

function reRender_3103785165(self_3103785166) {
  var F = {procname: "slides.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym6_3103785181 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym6_3103785182 = render_1644175063(self_3103785166);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3103785166), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym6_3103785182, ([100,97,116,97,45] || []).concat(self_3103785166.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym6_3103785192 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3103785166.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym6_3103785196 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym6_3103785200 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882085 = 0;
      F.line = 242;
      var L_536882086 = (compTmpDataHEX60gensym6_3103785182.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882085 < L_536882086)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym6_3103785200 = compTmpDataHEX60gensym6_3103785182.childNodes[chckIndx(i_536882085, 0, (compTmpDataHEX60gensym6_3103785182.childNodes).length - 1)];
            if (!((currentHEX60gensym6_3103785192 == null))) {
            F.line = 88;
            elementsHEX60gensym6_3103785196.push(currentHEX60gensym6_3103785192);;
            F.line = 89;
            currentHEX60gensym6_3103785192 = currentHEX60gensym6_3103785192.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882085 = addInt(i_536882085, 1);
            if (!(((compTmpDataHEX60gensym6_3103785182.childNodes).length == L_536882086))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym6_3103785216 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882089 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882089 = subInt((elementsHEX60gensym6_3103785196).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882090 = colontmp__536882089;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882090)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym6_3103785216 = res_536882090;
            F.line = 93;
            var elemHEX60gensym6_3103785217 = elementsHEX60gensym6_3103785196[chckIndx(iHEX60gensym6_3103785216, 0, (elementsHEX60gensym6_3103785196).length - 1)];
            F.line = 94;
            var tagHEX60gensym6_3103785218 = compTmpDataHEX60gensym6_3103785182.childNodes[chckIndx(iHEX60gensym6_3103785216, 0, (compTmpDataHEX60gensym6_3103785182.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym6_3103785219 = elemHEX60gensym6_3103785217.parentElement;
            F.line = 96;
            var idxHEX60gensym6_3103785220 = index_2466250824(elemHEX60gensym6_3103785217);
            F.line = 97;
            var lengthHEX60gensym6_3103785224 = (parentHEX60gensym6_3103785219.childNodes).length;
            F.line = 91;
            elemHEX60gensym6_3103785217.remove();
            if ((subInt(lengthHEX60gensym6_3103785224, 1) == idxHEX60gensym6_3103785220)) {
            F.line = 101;
            parentHEX60gensym6_3103785219.appendChild(tagHEX60gensym6_3103785218);
            }
            else {
              F.line = 103;
            parentHEX60gensym6_3103785219.insertBefore(tagHEX60gensym6_3103785218, parentHEX60gensym6_3103785219.childNodes[chckIndx(idxHEX60gensym6_3103785220, 0, (parentHEX60gensym6_3103785219.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882090 = subInt(res_536882090, 1);
          }
      };
    };
    if (activeElementHEX60gensym6_3103785181.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym6_3103785225 = document.getElementById(activeElementHEX60gensym6_3103785181.id);
    if (!((actElemHEX60gensym6_3103785225 == null))) {
    F.line = 108;
    actElemHEX60gensym6_3103785225.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym6_3103785225.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym6_3103785327 = activeElementHEX60gensym6_3103785181;
    F.line = 112;
    var currentActiveElemHEX60gensym6_3103785328 = actElemHEX60gensym6_3103785225;
    F.line = 113;
    currentActiveElemHEX60gensym6_3103785328.setSelectionRange(oldActiveElemHEX60gensym6_3103785327.selectionStart, oldActiveElemHEX60gensym6_3103785327.selectionEnd, oldActiveElemHEX60gensym6_3103785327.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3103785166.updated(self_3103785166, null);
    F.line = 55;
    F.filename = "slides.nim";
    self_3103785166.rendered(self_3103785166, null);
  framePtr = F.prev;

  
}

function reRender_2852132021(self_2852132022) {
  var F = {procname: "layout.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym30_2852132037 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym30_2852132038 = render_1644175063(self_2852132022);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_2852132022), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym30_2852132038, ([100,97,116,97,45] || []).concat(self_2852132022.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym30_2852132048 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_2852132022.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym30_2852132052 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym30_2852132056 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882093 = 0;
      F.line = 242;
      var L_536882094 = (compTmpDataHEX60gensym30_2852132038.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882093 < L_536882094)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym30_2852132056 = compTmpDataHEX60gensym30_2852132038.childNodes[chckIndx(i_536882093, 0, (compTmpDataHEX60gensym30_2852132038.childNodes).length - 1)];
            if (!((currentHEX60gensym30_2852132048 == null))) {
            F.line = 88;
            elementsHEX60gensym30_2852132052.push(currentHEX60gensym30_2852132048);;
            F.line = 89;
            currentHEX60gensym30_2852132048 = currentHEX60gensym30_2852132048.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882093 = addInt(i_536882093, 1);
            if (!(((compTmpDataHEX60gensym30_2852132038.childNodes).length == L_536882094))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym30_2852132072 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882097 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882097 = subInt((elementsHEX60gensym30_2852132052).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882098 = colontmp__536882097;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882098)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym30_2852132072 = res_536882098;
            F.line = 93;
            var elemHEX60gensym30_2852132073 = elementsHEX60gensym30_2852132052[chckIndx(iHEX60gensym30_2852132072, 0, (elementsHEX60gensym30_2852132052).length - 1)];
            F.line = 94;
            var tagHEX60gensym30_2852132074 = compTmpDataHEX60gensym30_2852132038.childNodes[chckIndx(iHEX60gensym30_2852132072, 0, (compTmpDataHEX60gensym30_2852132038.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym30_2852132075 = elemHEX60gensym30_2852132073.parentElement;
            F.line = 96;
            var idxHEX60gensym30_2852132076 = index_2466250824(elemHEX60gensym30_2852132073);
            F.line = 97;
            var lengthHEX60gensym30_2852132080 = (parentHEX60gensym30_2852132075.childNodes).length;
            F.line = 91;
            elemHEX60gensym30_2852132073.remove();
            if ((subInt(lengthHEX60gensym30_2852132080, 1) == idxHEX60gensym30_2852132076)) {
            F.line = 101;
            parentHEX60gensym30_2852132075.appendChild(tagHEX60gensym30_2852132074);
            }
            else {
              F.line = 103;
            parentHEX60gensym30_2852132075.insertBefore(tagHEX60gensym30_2852132074, parentHEX60gensym30_2852132075.childNodes[chckIndx(idxHEX60gensym30_2852132076, 0, (parentHEX60gensym30_2852132075.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882098 = subInt(res_536882098, 1);
          }
      };
    };
    if (activeElementHEX60gensym30_2852132037.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym30_2852132081 = document.getElementById(activeElementHEX60gensym30_2852132037.id);
    if (!((actElemHEX60gensym30_2852132081 == null))) {
    F.line = 108;
    actElemHEX60gensym30_2852132081.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym30_2852132081.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym30_2852132183 = activeElementHEX60gensym30_2852132037;
    F.line = 112;
    var currentActiveElemHEX60gensym30_2852132184 = actElemHEX60gensym30_2852132081;
    F.line = 113;
    currentActiveElemHEX60gensym30_2852132184.setSelectionRange(oldActiveElemHEX60gensym30_2852132183.selectionStart, oldActiveElemHEX60gensym30_2852132183.selectionEnd, oldActiveElemHEX60gensym30_2852132183.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_2852132022.updated(self_2852132022, null);
    F.line = 101;
    F.filename = "layout.nim";
    self_2852132022.rendered(self_2852132022, null);
  framePtr = F.prev;

  
}

function reRender_3019907895(self_3019907896) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym27_3019907911 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym27_3019907912 = render_1644175063(self_3019907896);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019907896), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym27_3019907912, ([100,97,116,97,45] || []).concat(self_3019907896.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym27_3019907922 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019907896.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym27_3019907926 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym27_3019907930 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882101 = 0;
      F.line = 242;
      var L_536882102 = (compTmpDataHEX60gensym27_3019907912.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882101 < L_536882102)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym27_3019907930 = compTmpDataHEX60gensym27_3019907912.childNodes[chckIndx(i_536882101, 0, (compTmpDataHEX60gensym27_3019907912.childNodes).length - 1)];
            if (!((currentHEX60gensym27_3019907922 == null))) {
            F.line = 88;
            elementsHEX60gensym27_3019907926.push(currentHEX60gensym27_3019907922);;
            F.line = 89;
            currentHEX60gensym27_3019907922 = currentHEX60gensym27_3019907922.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882101 = addInt(i_536882101, 1);
            if (!(((compTmpDataHEX60gensym27_3019907912.childNodes).length == L_536882102))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym27_3019907946 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882105 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882105 = subInt((elementsHEX60gensym27_3019907926).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882106 = colontmp__536882105;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882106)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym27_3019907946 = res_536882106;
            F.line = 93;
            var elemHEX60gensym27_3019907947 = elementsHEX60gensym27_3019907926[chckIndx(iHEX60gensym27_3019907946, 0, (elementsHEX60gensym27_3019907926).length - 1)];
            F.line = 94;
            var tagHEX60gensym27_3019907948 = compTmpDataHEX60gensym27_3019907912.childNodes[chckIndx(iHEX60gensym27_3019907946, 0, (compTmpDataHEX60gensym27_3019907912.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym27_3019907949 = elemHEX60gensym27_3019907947.parentElement;
            F.line = 96;
            var idxHEX60gensym27_3019907950 = index_2466250824(elemHEX60gensym27_3019907947);
            F.line = 97;
            var lengthHEX60gensym27_3019907954 = (parentHEX60gensym27_3019907949.childNodes).length;
            F.line = 91;
            elemHEX60gensym27_3019907947.remove();
            if ((subInt(lengthHEX60gensym27_3019907954, 1) == idxHEX60gensym27_3019907950)) {
            F.line = 101;
            parentHEX60gensym27_3019907949.appendChild(tagHEX60gensym27_3019907948);
            }
            else {
              F.line = 103;
            parentHEX60gensym27_3019907949.insertBefore(tagHEX60gensym27_3019907948, parentHEX60gensym27_3019907949.childNodes[chckIndx(idxHEX60gensym27_3019907950, 0, (parentHEX60gensym27_3019907949.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882106 = subInt(res_536882106, 1);
          }
      };
    };
    if (activeElementHEX60gensym27_3019907911.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym27_3019907955 = document.getElementById(activeElementHEX60gensym27_3019907911.id);
    if (!((actElemHEX60gensym27_3019907955 == null))) {
    F.line = 108;
    actElemHEX60gensym27_3019907955.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym27_3019907955.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym27_3019908057 = activeElementHEX60gensym27_3019907911;
    F.line = 112;
    var currentActiveElemHEX60gensym27_3019908058 = actElemHEX60gensym27_3019907955;
    F.line = 113;
    currentActiveElemHEX60gensym27_3019908058.setSelectionRange(oldActiveElemHEX60gensym27_3019908057.selectionStart, oldActiveElemHEX60gensym27_3019908057.selectionEnd, oldActiveElemHEX60gensym27_3019908057.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019907896.updated(self_3019907896, null);
    F.line = 96;
    F.filename = "base24.nim";
    self_3019907896.rendered(self_3019907896, null);
  framePtr = F.prev;

  
}

function reRender_3019907114(self_3019907115) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym24_3019907130 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym24_3019907131 = render_1644175063(self_3019907115);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019907115), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym24_3019907131, ([100,97,116,97,45] || []).concat(self_3019907115.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym24_3019907141 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019907115.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym24_3019907145 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym24_3019907149 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882109 = 0;
      F.line = 242;
      var L_536882110 = (compTmpDataHEX60gensym24_3019907131.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882109 < L_536882110)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym24_3019907149 = compTmpDataHEX60gensym24_3019907131.childNodes[chckIndx(i_536882109, 0, (compTmpDataHEX60gensym24_3019907131.childNodes).length - 1)];
            if (!((currentHEX60gensym24_3019907141 == null))) {
            F.line = 88;
            elementsHEX60gensym24_3019907145.push(currentHEX60gensym24_3019907141);;
            F.line = 89;
            currentHEX60gensym24_3019907141 = currentHEX60gensym24_3019907141.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882109 = addInt(i_536882109, 1);
            if (!(((compTmpDataHEX60gensym24_3019907131.childNodes).length == L_536882110))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym24_3019907165 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882113 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882113 = subInt((elementsHEX60gensym24_3019907145).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882114 = colontmp__536882113;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882114)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym24_3019907165 = res_536882114;
            F.line = 93;
            var elemHEX60gensym24_3019907166 = elementsHEX60gensym24_3019907145[chckIndx(iHEX60gensym24_3019907165, 0, (elementsHEX60gensym24_3019907145).length - 1)];
            F.line = 94;
            var tagHEX60gensym24_3019907167 = compTmpDataHEX60gensym24_3019907131.childNodes[chckIndx(iHEX60gensym24_3019907165, 0, (compTmpDataHEX60gensym24_3019907131.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym24_3019907168 = elemHEX60gensym24_3019907166.parentElement;
            F.line = 96;
            var idxHEX60gensym24_3019907169 = index_2466250824(elemHEX60gensym24_3019907166);
            F.line = 97;
            var lengthHEX60gensym24_3019907173 = (parentHEX60gensym24_3019907168.childNodes).length;
            F.line = 91;
            elemHEX60gensym24_3019907166.remove();
            if ((subInt(lengthHEX60gensym24_3019907173, 1) == idxHEX60gensym24_3019907169)) {
            F.line = 101;
            parentHEX60gensym24_3019907168.appendChild(tagHEX60gensym24_3019907167);
            }
            else {
              F.line = 103;
            parentHEX60gensym24_3019907168.insertBefore(tagHEX60gensym24_3019907167, parentHEX60gensym24_3019907168.childNodes[chckIndx(idxHEX60gensym24_3019907169, 0, (parentHEX60gensym24_3019907168.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882114 = subInt(res_536882114, 1);
          }
      };
    };
    if (activeElementHEX60gensym24_3019907130.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym24_3019907174 = document.getElementById(activeElementHEX60gensym24_3019907130.id);
    if (!((actElemHEX60gensym24_3019907174 == null))) {
    F.line = 108;
    actElemHEX60gensym24_3019907174.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym24_3019907174.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym24_3019907276 = activeElementHEX60gensym24_3019907130;
    F.line = 112;
    var currentActiveElemHEX60gensym24_3019907277 = actElemHEX60gensym24_3019907174;
    F.line = 113;
    currentActiveElemHEX60gensym24_3019907277.setSelectionRange(oldActiveElemHEX60gensym24_3019907276.selectionStart, oldActiveElemHEX60gensym24_3019907276.selectionEnd, oldActiveElemHEX60gensym24_3019907276.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019907115.updated(self_3019907115, null);
    F.line = 87;
    F.filename = "base24.nim";
    self_3019907115.rendered(self_3019907115, null);
  framePtr = F.prev;

  
}

function reRender_3019906613(self_3019906614) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym22_3019906629 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym22_3019906630 = render_1644175063(self_3019906614);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019906614), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym22_3019906630, ([100,97,116,97,45] || []).concat(self_3019906614.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym22_3019906640 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019906614.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym22_3019906644 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym22_3019906648 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882117 = 0;
      F.line = 242;
      var L_536882118 = (compTmpDataHEX60gensym22_3019906630.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882117 < L_536882118)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym22_3019906648 = compTmpDataHEX60gensym22_3019906630.childNodes[chckIndx(i_536882117, 0, (compTmpDataHEX60gensym22_3019906630.childNodes).length - 1)];
            if (!((currentHEX60gensym22_3019906640 == null))) {
            F.line = 88;
            elementsHEX60gensym22_3019906644.push(currentHEX60gensym22_3019906640);;
            F.line = 89;
            currentHEX60gensym22_3019906640 = currentHEX60gensym22_3019906640.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882117 = addInt(i_536882117, 1);
            if (!(((compTmpDataHEX60gensym22_3019906630.childNodes).length == L_536882118))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym22_3019906664 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882121 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882121 = subInt((elementsHEX60gensym22_3019906644).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882122 = colontmp__536882121;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882122)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym22_3019906664 = res_536882122;
            F.line = 93;
            var elemHEX60gensym22_3019906665 = elementsHEX60gensym22_3019906644[chckIndx(iHEX60gensym22_3019906664, 0, (elementsHEX60gensym22_3019906644).length - 1)];
            F.line = 94;
            var tagHEX60gensym22_3019906666 = compTmpDataHEX60gensym22_3019906630.childNodes[chckIndx(iHEX60gensym22_3019906664, 0, (compTmpDataHEX60gensym22_3019906630.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym22_3019906667 = elemHEX60gensym22_3019906665.parentElement;
            F.line = 96;
            var idxHEX60gensym22_3019906668 = index_2466250824(elemHEX60gensym22_3019906665);
            F.line = 97;
            var lengthHEX60gensym22_3019906672 = (parentHEX60gensym22_3019906667.childNodes).length;
            F.line = 91;
            elemHEX60gensym22_3019906665.remove();
            if ((subInt(lengthHEX60gensym22_3019906672, 1) == idxHEX60gensym22_3019906668)) {
            F.line = 101;
            parentHEX60gensym22_3019906667.appendChild(tagHEX60gensym22_3019906666);
            }
            else {
              F.line = 103;
            parentHEX60gensym22_3019906667.insertBefore(tagHEX60gensym22_3019906666, parentHEX60gensym22_3019906667.childNodes[chckIndx(idxHEX60gensym22_3019906668, 0, (parentHEX60gensym22_3019906667.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882122 = subInt(res_536882122, 1);
          }
      };
    };
    if (activeElementHEX60gensym22_3019906629.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym22_3019906673 = document.getElementById(activeElementHEX60gensym22_3019906629.id);
    if (!((actElemHEX60gensym22_3019906673 == null))) {
    F.line = 108;
    actElemHEX60gensym22_3019906673.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym22_3019906673.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym22_3019906775 = activeElementHEX60gensym22_3019906629;
    F.line = 112;
    var currentActiveElemHEX60gensym22_3019906776 = actElemHEX60gensym22_3019906673;
    F.line = 113;
    currentActiveElemHEX60gensym22_3019906776.setSelectionRange(oldActiveElemHEX60gensym22_3019906775.selectionStart, oldActiveElemHEX60gensym22_3019906775.selectionEnd, oldActiveElemHEX60gensym22_3019906775.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019906614.updated(self_3019906614, null);
    F.line = 82;
    F.filename = "base24.nim";
    self_3019906614.rendered(self_3019906614, null);
  framePtr = F.prev;

  
}

function reRender_3003122058(self_3003122059) {
  var F = {procname: "mGrid.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym2_3003122074 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym2_3003122075 = render_1644175063(self_3003122059);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3003122059), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym2_3003122075, ([100,97,116,97,45] || []).concat(self_3003122059.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym2_3003122085 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3003122059.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym2_3003122089 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym2_3003122093 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882125 = 0;
      F.line = 242;
      var L_536882126 = (compTmpDataHEX60gensym2_3003122075.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882125 < L_536882126)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym2_3003122093 = compTmpDataHEX60gensym2_3003122075.childNodes[chckIndx(i_536882125, 0, (compTmpDataHEX60gensym2_3003122075.childNodes).length - 1)];
            if (!((currentHEX60gensym2_3003122085 == null))) {
            F.line = 88;
            elementsHEX60gensym2_3003122089.push(currentHEX60gensym2_3003122085);;
            F.line = 89;
            currentHEX60gensym2_3003122085 = currentHEX60gensym2_3003122085.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882125 = addInt(i_536882125, 1);
            if (!(((compTmpDataHEX60gensym2_3003122075.childNodes).length == L_536882126))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym2_3003122109 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882129 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882129 = subInt((elementsHEX60gensym2_3003122089).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882130 = colontmp__536882129;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882130)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym2_3003122109 = res_536882130;
            F.line = 93;
            var elemHEX60gensym2_3003122110 = elementsHEX60gensym2_3003122089[chckIndx(iHEX60gensym2_3003122109, 0, (elementsHEX60gensym2_3003122089).length - 1)];
            F.line = 94;
            var tagHEX60gensym2_3003122111 = compTmpDataHEX60gensym2_3003122075.childNodes[chckIndx(iHEX60gensym2_3003122109, 0, (compTmpDataHEX60gensym2_3003122075.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym2_3003122112 = elemHEX60gensym2_3003122110.parentElement;
            F.line = 96;
            var idxHEX60gensym2_3003122113 = index_2466250824(elemHEX60gensym2_3003122110);
            F.line = 97;
            var lengthHEX60gensym2_3003122117 = (parentHEX60gensym2_3003122112.childNodes).length;
            F.line = 91;
            elemHEX60gensym2_3003122110.remove();
            if ((subInt(lengthHEX60gensym2_3003122117, 1) == idxHEX60gensym2_3003122113)) {
            F.line = 101;
            parentHEX60gensym2_3003122112.appendChild(tagHEX60gensym2_3003122111);
            }
            else {
              F.line = 103;
            parentHEX60gensym2_3003122112.insertBefore(tagHEX60gensym2_3003122111, parentHEX60gensym2_3003122112.childNodes[chckIndx(idxHEX60gensym2_3003122113, 0, (parentHEX60gensym2_3003122112.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882130 = subInt(res_536882130, 1);
          }
      };
    };
    if (activeElementHEX60gensym2_3003122074.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym2_3003122118 = document.getElementById(activeElementHEX60gensym2_3003122074.id);
    if (!((actElemHEX60gensym2_3003122118 == null))) {
    F.line = 108;
    actElemHEX60gensym2_3003122118.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym2_3003122118.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym2_3003122220 = activeElementHEX60gensym2_3003122074;
    F.line = 112;
    var currentActiveElemHEX60gensym2_3003122221 = actElemHEX60gensym2_3003122118;
    F.line = 113;
    currentActiveElemHEX60gensym2_3003122221.setSelectionRange(oldActiveElemHEX60gensym2_3003122220.selectionStart, oldActiveElemHEX60gensym2_3003122220.selectionEnd, oldActiveElemHEX60gensym2_3003122220.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3003122059.updated(self_3003122059, null);
    F.line = 9;
    F.filename = "mGrid.nim";
    self_3003122059.rendered(self_3003122059, null);
  framePtr = F.prev;

  
}

function reRender_3019900814(self_3019900815) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym4_3019900830 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym4_3019900831 = render_1644175063(self_3019900815);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019900815), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym4_3019900831, ([100,97,116,97,45] || []).concat(self_3019900815.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym4_3019900841 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019900815.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym4_3019900845 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym4_3019900849 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882133 = 0;
      F.line = 242;
      var L_536882134 = (compTmpDataHEX60gensym4_3019900831.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882133 < L_536882134)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym4_3019900849 = compTmpDataHEX60gensym4_3019900831.childNodes[chckIndx(i_536882133, 0, (compTmpDataHEX60gensym4_3019900831.childNodes).length - 1)];
            if (!((currentHEX60gensym4_3019900841 == null))) {
            F.line = 88;
            elementsHEX60gensym4_3019900845.push(currentHEX60gensym4_3019900841);;
            F.line = 89;
            currentHEX60gensym4_3019900841 = currentHEX60gensym4_3019900841.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882133 = addInt(i_536882133, 1);
            if (!(((compTmpDataHEX60gensym4_3019900831.childNodes).length == L_536882134))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym4_3019900865 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882137 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882137 = subInt((elementsHEX60gensym4_3019900845).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882138 = colontmp__536882137;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882138)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym4_3019900865 = res_536882138;
            F.line = 93;
            var elemHEX60gensym4_3019900866 = elementsHEX60gensym4_3019900845[chckIndx(iHEX60gensym4_3019900865, 0, (elementsHEX60gensym4_3019900845).length - 1)];
            F.line = 94;
            var tagHEX60gensym4_3019900867 = compTmpDataHEX60gensym4_3019900831.childNodes[chckIndx(iHEX60gensym4_3019900865, 0, (compTmpDataHEX60gensym4_3019900831.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym4_3019900868 = elemHEX60gensym4_3019900866.parentElement;
            F.line = 96;
            var idxHEX60gensym4_3019900869 = index_2466250824(elemHEX60gensym4_3019900866);
            F.line = 97;
            var lengthHEX60gensym4_3019900873 = (parentHEX60gensym4_3019900868.childNodes).length;
            F.line = 91;
            elemHEX60gensym4_3019900866.remove();
            if ((subInt(lengthHEX60gensym4_3019900873, 1) == idxHEX60gensym4_3019900869)) {
            F.line = 101;
            parentHEX60gensym4_3019900868.appendChild(tagHEX60gensym4_3019900867);
            }
            else {
              F.line = 103;
            parentHEX60gensym4_3019900868.insertBefore(tagHEX60gensym4_3019900867, parentHEX60gensym4_3019900868.childNodes[chckIndx(idxHEX60gensym4_3019900869, 0, (parentHEX60gensym4_3019900868.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882138 = subInt(res_536882138, 1);
          }
      };
    };
    if (activeElementHEX60gensym4_3019900830.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym4_3019900874 = document.getElementById(activeElementHEX60gensym4_3019900830.id);
    if (!((actElemHEX60gensym4_3019900874 == null))) {
    F.line = 108;
    actElemHEX60gensym4_3019900874.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym4_3019900874.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym4_3019900976 = activeElementHEX60gensym4_3019900830;
    F.line = 112;
    var currentActiveElemHEX60gensym4_3019900977 = actElemHEX60gensym4_3019900874;
    F.line = 113;
    currentActiveElemHEX60gensym4_3019900977.setSelectionRange(oldActiveElemHEX60gensym4_3019900976.selectionStart, oldActiveElemHEX60gensym4_3019900976.selectionEnd, oldActiveElemHEX60gensym4_3019900976.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019900815.updated(self_3019900815, null);
    F.line = 23;
    F.filename = "base24.nim";
    self_3019900815.rendered(self_3019900815, null);
  framePtr = F.prev;

  
}

function reRender_3019900036(self_3019900037) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym2_3019900052 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym2_3019900053 = render_1644175063(self_3019900037);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019900037), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym2_3019900053, ([100,97,116,97,45] || []).concat(self_3019900037.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym2_3019900063 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019900037.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym2_3019900067 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym2_3019900071 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882141 = 0;
      F.line = 242;
      var L_536882142 = (compTmpDataHEX60gensym2_3019900053.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882141 < L_536882142)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym2_3019900071 = compTmpDataHEX60gensym2_3019900053.childNodes[chckIndx(i_536882141, 0, (compTmpDataHEX60gensym2_3019900053.childNodes).length - 1)];
            if (!((currentHEX60gensym2_3019900063 == null))) {
            F.line = 88;
            elementsHEX60gensym2_3019900067.push(currentHEX60gensym2_3019900063);;
            F.line = 89;
            currentHEX60gensym2_3019900063 = currentHEX60gensym2_3019900063.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882141 = addInt(i_536882141, 1);
            if (!(((compTmpDataHEX60gensym2_3019900053.childNodes).length == L_536882142))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym2_3019900087 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882145 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882145 = subInt((elementsHEX60gensym2_3019900067).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882146 = colontmp__536882145;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882146)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym2_3019900087 = res_536882146;
            F.line = 93;
            var elemHEX60gensym2_3019900088 = elementsHEX60gensym2_3019900067[chckIndx(iHEX60gensym2_3019900087, 0, (elementsHEX60gensym2_3019900067).length - 1)];
            F.line = 94;
            var tagHEX60gensym2_3019900089 = compTmpDataHEX60gensym2_3019900053.childNodes[chckIndx(iHEX60gensym2_3019900087, 0, (compTmpDataHEX60gensym2_3019900053.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym2_3019900090 = elemHEX60gensym2_3019900088.parentElement;
            F.line = 96;
            var idxHEX60gensym2_3019900091 = index_2466250824(elemHEX60gensym2_3019900088);
            F.line = 97;
            var lengthHEX60gensym2_3019900095 = (parentHEX60gensym2_3019900090.childNodes).length;
            F.line = 91;
            elemHEX60gensym2_3019900088.remove();
            if ((subInt(lengthHEX60gensym2_3019900095, 1) == idxHEX60gensym2_3019900091)) {
            F.line = 101;
            parentHEX60gensym2_3019900090.appendChild(tagHEX60gensym2_3019900089);
            }
            else {
              F.line = 103;
            parentHEX60gensym2_3019900090.insertBefore(tagHEX60gensym2_3019900089, parentHEX60gensym2_3019900090.childNodes[chckIndx(idxHEX60gensym2_3019900091, 0, (parentHEX60gensym2_3019900090.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882146 = subInt(res_536882146, 1);
          }
      };
    };
    if (activeElementHEX60gensym2_3019900052.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym2_3019900096 = document.getElementById(activeElementHEX60gensym2_3019900052.id);
    if (!((actElemHEX60gensym2_3019900096 == null))) {
    F.line = 108;
    actElemHEX60gensym2_3019900096.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym2_3019900096.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym2_3019900198 = activeElementHEX60gensym2_3019900052;
    F.line = 112;
    var currentActiveElemHEX60gensym2_3019900199 = actElemHEX60gensym2_3019900096;
    F.line = 113;
    currentActiveElemHEX60gensym2_3019900199.setSelectionRange(oldActiveElemHEX60gensym2_3019900198.selectionStart, oldActiveElemHEX60gensym2_3019900198.selectionEnd, oldActiveElemHEX60gensym2_3019900198.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019900037.updated(self_3019900037, null);
    F.line = 17;
    F.filename = "base24.nim";
    self_3019900037.rendered(self_3019900037, null);
  framePtr = F.prev;

  
}

function reRender_3019902287(self_3019902288) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym12_3019902303 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym12_3019902304 = render_1644175063(self_3019902288);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019902288), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym12_3019902304, ([100,97,116,97,45] || []).concat(self_3019902288.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym12_3019902314 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019902288.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym12_3019902318 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym12_3019902322 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882149 = 0;
      F.line = 242;
      var L_536882150 = (compTmpDataHEX60gensym12_3019902304.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882149 < L_536882150)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym12_3019902322 = compTmpDataHEX60gensym12_3019902304.childNodes[chckIndx(i_536882149, 0, (compTmpDataHEX60gensym12_3019902304.childNodes).length - 1)];
            if (!((currentHEX60gensym12_3019902314 == null))) {
            F.line = 88;
            elementsHEX60gensym12_3019902318.push(currentHEX60gensym12_3019902314);;
            F.line = 89;
            currentHEX60gensym12_3019902314 = currentHEX60gensym12_3019902314.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882149 = addInt(i_536882149, 1);
            if (!(((compTmpDataHEX60gensym12_3019902304.childNodes).length == L_536882150))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym12_3019902338 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882153 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882153 = subInt((elementsHEX60gensym12_3019902318).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882154 = colontmp__536882153;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882154)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym12_3019902338 = res_536882154;
            F.line = 93;
            var elemHEX60gensym12_3019902339 = elementsHEX60gensym12_3019902318[chckIndx(iHEX60gensym12_3019902338, 0, (elementsHEX60gensym12_3019902318).length - 1)];
            F.line = 94;
            var tagHEX60gensym12_3019902340 = compTmpDataHEX60gensym12_3019902304.childNodes[chckIndx(iHEX60gensym12_3019902338, 0, (compTmpDataHEX60gensym12_3019902304.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym12_3019902341 = elemHEX60gensym12_3019902339.parentElement;
            F.line = 96;
            var idxHEX60gensym12_3019902342 = index_2466250824(elemHEX60gensym12_3019902339);
            F.line = 97;
            var lengthHEX60gensym12_3019902346 = (parentHEX60gensym12_3019902341.childNodes).length;
            F.line = 91;
            elemHEX60gensym12_3019902339.remove();
            if ((subInt(lengthHEX60gensym12_3019902346, 1) == idxHEX60gensym12_3019902342)) {
            F.line = 101;
            parentHEX60gensym12_3019902341.appendChild(tagHEX60gensym12_3019902340);
            }
            else {
              F.line = 103;
            parentHEX60gensym12_3019902341.insertBefore(tagHEX60gensym12_3019902340, parentHEX60gensym12_3019902341.childNodes[chckIndx(idxHEX60gensym12_3019902342, 0, (parentHEX60gensym12_3019902341.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882154 = subInt(res_536882154, 1);
          }
      };
    };
    if (activeElementHEX60gensym12_3019902303.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym12_3019902347 = document.getElementById(activeElementHEX60gensym12_3019902303.id);
    if (!((actElemHEX60gensym12_3019902347 == null))) {
    F.line = 108;
    actElemHEX60gensym12_3019902347.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym12_3019902347.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym12_3019902449 = activeElementHEX60gensym12_3019902303;
    F.line = 112;
    var currentActiveElemHEX60gensym12_3019902450 = actElemHEX60gensym12_3019902347;
    F.line = 113;
    currentActiveElemHEX60gensym12_3019902450.setSelectionRange(oldActiveElemHEX60gensym12_3019902449.selectionStart, oldActiveElemHEX60gensym12_3019902449.selectionEnd, oldActiveElemHEX60gensym12_3019902449.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019902288.updated(self_3019902288, null);
    F.line = 39;
    F.filename = "base24.nim";
    self_3019902288.rendered(self_3019902288, null);
  framePtr = F.prev;

  
}

function reRender_3019901718(self_3019901719) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym8_3019901734 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym8_3019901735 = render_1644175063(self_3019901719);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019901719), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym8_3019901735, ([100,97,116,97,45] || []).concat(self_3019901719.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym8_3019901745 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019901719.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym8_3019901749 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym8_3019901753 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882157 = 0;
      F.line = 242;
      var L_536882158 = (compTmpDataHEX60gensym8_3019901735.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882157 < L_536882158)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym8_3019901753 = compTmpDataHEX60gensym8_3019901735.childNodes[chckIndx(i_536882157, 0, (compTmpDataHEX60gensym8_3019901735.childNodes).length - 1)];
            if (!((currentHEX60gensym8_3019901745 == null))) {
            F.line = 88;
            elementsHEX60gensym8_3019901749.push(currentHEX60gensym8_3019901745);;
            F.line = 89;
            currentHEX60gensym8_3019901745 = currentHEX60gensym8_3019901745.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882157 = addInt(i_536882157, 1);
            if (!(((compTmpDataHEX60gensym8_3019901735.childNodes).length == L_536882158))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym8_3019901769 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882161 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882161 = subInt((elementsHEX60gensym8_3019901749).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882162 = colontmp__536882161;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882162)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym8_3019901769 = res_536882162;
            F.line = 93;
            var elemHEX60gensym8_3019901770 = elementsHEX60gensym8_3019901749[chckIndx(iHEX60gensym8_3019901769, 0, (elementsHEX60gensym8_3019901749).length - 1)];
            F.line = 94;
            var tagHEX60gensym8_3019901771 = compTmpDataHEX60gensym8_3019901735.childNodes[chckIndx(iHEX60gensym8_3019901769, 0, (compTmpDataHEX60gensym8_3019901735.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym8_3019901772 = elemHEX60gensym8_3019901770.parentElement;
            F.line = 96;
            var idxHEX60gensym8_3019901773 = index_2466250824(elemHEX60gensym8_3019901770);
            F.line = 97;
            var lengthHEX60gensym8_3019901777 = (parentHEX60gensym8_3019901772.childNodes).length;
            F.line = 91;
            elemHEX60gensym8_3019901770.remove();
            if ((subInt(lengthHEX60gensym8_3019901777, 1) == idxHEX60gensym8_3019901773)) {
            F.line = 101;
            parentHEX60gensym8_3019901772.appendChild(tagHEX60gensym8_3019901771);
            }
            else {
              F.line = 103;
            parentHEX60gensym8_3019901772.insertBefore(tagHEX60gensym8_3019901771, parentHEX60gensym8_3019901772.childNodes[chckIndx(idxHEX60gensym8_3019901773, 0, (parentHEX60gensym8_3019901772.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882162 = subInt(res_536882162, 1);
          }
      };
    };
    if (activeElementHEX60gensym8_3019901734.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym8_3019901778 = document.getElementById(activeElementHEX60gensym8_3019901734.id);
    if (!((actElemHEX60gensym8_3019901778 == null))) {
    F.line = 108;
    actElemHEX60gensym8_3019901778.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym8_3019901778.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym8_3019901880 = activeElementHEX60gensym8_3019901734;
    F.line = 112;
    var currentActiveElemHEX60gensym8_3019901881 = actElemHEX60gensym8_3019901778;
    F.line = 113;
    currentActiveElemHEX60gensym8_3019901881.setSelectionRange(oldActiveElemHEX60gensym8_3019901880.selectionStart, oldActiveElemHEX60gensym8_3019901880.selectionEnd, oldActiveElemHEX60gensym8_3019901880.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019901719.updated(self_3019901719, null);
    F.line = 33;
    F.filename = "base24.nim";
    self_3019901719.rendered(self_3019901719, null);
  framePtr = F.prev;

  
}

function reRender_3019904261(self_3019904262) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym16_3019904277 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym16_3019904278 = render_1644175063(self_3019904262);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019904262), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym16_3019904278, ([100,97,116,97,45] || []).concat(self_3019904262.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym16_3019904288 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019904262.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym16_3019904292 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym16_3019904296 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882165 = 0;
      F.line = 242;
      var L_536882166 = (compTmpDataHEX60gensym16_3019904278.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882165 < L_536882166)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym16_3019904296 = compTmpDataHEX60gensym16_3019904278.childNodes[chckIndx(i_536882165, 0, (compTmpDataHEX60gensym16_3019904278.childNodes).length - 1)];
            if (!((currentHEX60gensym16_3019904288 == null))) {
            F.line = 88;
            elementsHEX60gensym16_3019904292.push(currentHEX60gensym16_3019904288);;
            F.line = 89;
            currentHEX60gensym16_3019904288 = currentHEX60gensym16_3019904288.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882165 = addInt(i_536882165, 1);
            if (!(((compTmpDataHEX60gensym16_3019904278.childNodes).length == L_536882166))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym16_3019904312 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882169 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882169 = subInt((elementsHEX60gensym16_3019904292).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882170 = colontmp__536882169;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882170)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym16_3019904312 = res_536882170;
            F.line = 93;
            var elemHEX60gensym16_3019904313 = elementsHEX60gensym16_3019904292[chckIndx(iHEX60gensym16_3019904312, 0, (elementsHEX60gensym16_3019904292).length - 1)];
            F.line = 94;
            var tagHEX60gensym16_3019904314 = compTmpDataHEX60gensym16_3019904278.childNodes[chckIndx(iHEX60gensym16_3019904312, 0, (compTmpDataHEX60gensym16_3019904278.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym16_3019904315 = elemHEX60gensym16_3019904313.parentElement;
            F.line = 96;
            var idxHEX60gensym16_3019904316 = index_2466250824(elemHEX60gensym16_3019904313);
            F.line = 97;
            var lengthHEX60gensym16_3019904320 = (parentHEX60gensym16_3019904315.childNodes).length;
            F.line = 91;
            elemHEX60gensym16_3019904313.remove();
            if ((subInt(lengthHEX60gensym16_3019904320, 1) == idxHEX60gensym16_3019904316)) {
            F.line = 101;
            parentHEX60gensym16_3019904315.appendChild(tagHEX60gensym16_3019904314);
            }
            else {
              F.line = 103;
            parentHEX60gensym16_3019904315.insertBefore(tagHEX60gensym16_3019904314, parentHEX60gensym16_3019904315.childNodes[chckIndx(idxHEX60gensym16_3019904316, 0, (parentHEX60gensym16_3019904315.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882170 = subInt(res_536882170, 1);
          }
      };
    };
    if (activeElementHEX60gensym16_3019904277.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym16_3019904321 = document.getElementById(activeElementHEX60gensym16_3019904277.id);
    if (!((actElemHEX60gensym16_3019904321 == null))) {
    F.line = 108;
    actElemHEX60gensym16_3019904321.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym16_3019904321.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym16_3019904423 = activeElementHEX60gensym16_3019904277;
    F.line = 112;
    var currentActiveElemHEX60gensym16_3019904424 = actElemHEX60gensym16_3019904321;
    F.line = 113;
    currentActiveElemHEX60gensym16_3019904424.setSelectionRange(oldActiveElemHEX60gensym16_3019904423.selectionStart, oldActiveElemHEX60gensym16_3019904423.selectionEnd, oldActiveElemHEX60gensym16_3019904423.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019904262.updated(self_3019904262, null);
    F.line = 60;
    F.filename = "base24.nim";
    self_3019904262.rendered(self_3019904262, null);
  framePtr = F.prev;

  
}

function reRender_3019903756(self_3019903757) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym14_3019903772 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym14_3019903773 = render_1644175063(self_3019903757);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019903757), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym14_3019903773, ([100,97,116,97,45] || []).concat(self_3019903757.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym14_3019903783 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019903757.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym14_3019903787 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym14_3019903791 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882173 = 0;
      F.line = 242;
      var L_536882174 = (compTmpDataHEX60gensym14_3019903773.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882173 < L_536882174)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym14_3019903791 = compTmpDataHEX60gensym14_3019903773.childNodes[chckIndx(i_536882173, 0, (compTmpDataHEX60gensym14_3019903773.childNodes).length - 1)];
            if (!((currentHEX60gensym14_3019903783 == null))) {
            F.line = 88;
            elementsHEX60gensym14_3019903787.push(currentHEX60gensym14_3019903783);;
            F.line = 89;
            currentHEX60gensym14_3019903783 = currentHEX60gensym14_3019903783.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882173 = addInt(i_536882173, 1);
            if (!(((compTmpDataHEX60gensym14_3019903773.childNodes).length == L_536882174))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym14_3019903807 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882177 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882177 = subInt((elementsHEX60gensym14_3019903787).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882178 = colontmp__536882177;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882178)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym14_3019903807 = res_536882178;
            F.line = 93;
            var elemHEX60gensym14_3019903808 = elementsHEX60gensym14_3019903787[chckIndx(iHEX60gensym14_3019903807, 0, (elementsHEX60gensym14_3019903787).length - 1)];
            F.line = 94;
            var tagHEX60gensym14_3019903809 = compTmpDataHEX60gensym14_3019903773.childNodes[chckIndx(iHEX60gensym14_3019903807, 0, (compTmpDataHEX60gensym14_3019903773.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym14_3019903810 = elemHEX60gensym14_3019903808.parentElement;
            F.line = 96;
            var idxHEX60gensym14_3019903811 = index_2466250824(elemHEX60gensym14_3019903808);
            F.line = 97;
            var lengthHEX60gensym14_3019903815 = (parentHEX60gensym14_3019903810.childNodes).length;
            F.line = 91;
            elemHEX60gensym14_3019903808.remove();
            if ((subInt(lengthHEX60gensym14_3019903815, 1) == idxHEX60gensym14_3019903811)) {
            F.line = 101;
            parentHEX60gensym14_3019903810.appendChild(tagHEX60gensym14_3019903809);
            }
            else {
              F.line = 103;
            parentHEX60gensym14_3019903810.insertBefore(tagHEX60gensym14_3019903809, parentHEX60gensym14_3019903810.childNodes[chckIndx(idxHEX60gensym14_3019903811, 0, (parentHEX60gensym14_3019903810.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882178 = subInt(res_536882178, 1);
          }
      };
    };
    if (activeElementHEX60gensym14_3019903772.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym14_3019903816 = document.getElementById(activeElementHEX60gensym14_3019903772.id);
    if (!((actElemHEX60gensym14_3019903816 == null))) {
    F.line = 108;
    actElemHEX60gensym14_3019903816.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym14_3019903816.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym14_3019903918 = activeElementHEX60gensym14_3019903772;
    F.line = 112;
    var currentActiveElemHEX60gensym14_3019903919 = actElemHEX60gensym14_3019903816;
    F.line = 113;
    currentActiveElemHEX60gensym14_3019903919.setSelectionRange(oldActiveElemHEX60gensym14_3019903918.selectionStart, oldActiveElemHEX60gensym14_3019903918.selectionEnd, oldActiveElemHEX60gensym14_3019903918.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019903757.updated(self_3019903757, null);
    F.line = 52;
    F.filename = "base24.nim";
    self_3019903757.rendered(self_3019903757, null);
  framePtr = F.prev;

  
}

function reRender_3019905970(self_3019905971) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym20_3019905986 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym20_3019905987 = render_1644175063(self_3019905971);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019905971), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym20_3019905987, ([100,97,116,97,45] || []).concat(self_3019905971.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym20_3019905997 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019905971.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym20_3019906001 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym20_3019906005 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882181 = 0;
      F.line = 242;
      var L_536882182 = (compTmpDataHEX60gensym20_3019905987.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882181 < L_536882182)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym20_3019906005 = compTmpDataHEX60gensym20_3019905987.childNodes[chckIndx(i_536882181, 0, (compTmpDataHEX60gensym20_3019905987.childNodes).length - 1)];
            if (!((currentHEX60gensym20_3019905997 == null))) {
            F.line = 88;
            elementsHEX60gensym20_3019906001.push(currentHEX60gensym20_3019905997);;
            F.line = 89;
            currentHEX60gensym20_3019905997 = currentHEX60gensym20_3019905997.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882181 = addInt(i_536882181, 1);
            if (!(((compTmpDataHEX60gensym20_3019905987.childNodes).length == L_536882182))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym20_3019906021 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882185 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882185 = subInt((elementsHEX60gensym20_3019906001).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882186 = colontmp__536882185;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882186)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym20_3019906021 = res_536882186;
            F.line = 93;
            var elemHEX60gensym20_3019906022 = elementsHEX60gensym20_3019906001[chckIndx(iHEX60gensym20_3019906021, 0, (elementsHEX60gensym20_3019906001).length - 1)];
            F.line = 94;
            var tagHEX60gensym20_3019906023 = compTmpDataHEX60gensym20_3019905987.childNodes[chckIndx(iHEX60gensym20_3019906021, 0, (compTmpDataHEX60gensym20_3019905987.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym20_3019906024 = elemHEX60gensym20_3019906022.parentElement;
            F.line = 96;
            var idxHEX60gensym20_3019906025 = index_2466250824(elemHEX60gensym20_3019906022);
            F.line = 97;
            var lengthHEX60gensym20_3019906029 = (parentHEX60gensym20_3019906024.childNodes).length;
            F.line = 91;
            elemHEX60gensym20_3019906022.remove();
            if ((subInt(lengthHEX60gensym20_3019906029, 1) == idxHEX60gensym20_3019906025)) {
            F.line = 101;
            parentHEX60gensym20_3019906024.appendChild(tagHEX60gensym20_3019906023);
            }
            else {
              F.line = 103;
            parentHEX60gensym20_3019906024.insertBefore(tagHEX60gensym20_3019906023, parentHEX60gensym20_3019906024.childNodes[chckIndx(idxHEX60gensym20_3019906025, 0, (parentHEX60gensym20_3019906024.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882186 = subInt(res_536882186, 1);
          }
      };
    };
    if (activeElementHEX60gensym20_3019905986.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym20_3019906030 = document.getElementById(activeElementHEX60gensym20_3019905986.id);
    if (!((actElemHEX60gensym20_3019906030 == null))) {
    F.line = 108;
    actElemHEX60gensym20_3019906030.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym20_3019906030.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym20_3019906132 = activeElementHEX60gensym20_3019905986;
    F.line = 112;
    var currentActiveElemHEX60gensym20_3019906133 = actElemHEX60gensym20_3019906030;
    F.line = 113;
    currentActiveElemHEX60gensym20_3019906133.setSelectionRange(oldActiveElemHEX60gensym20_3019906132.selectionStart, oldActiveElemHEX60gensym20_3019906132.selectionEnd, oldActiveElemHEX60gensym20_3019906132.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019905971.updated(self_3019905971, null);
    F.line = 78;
    F.filename = "base24.nim";
    self_3019905971.rendered(self_3019905971, null);
  framePtr = F.prev;

  
}

function reRender_3019905338(self_3019905339) {
  var F = {procname: "base24.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/components.nim", line: 0};
  framePtr = F;
    F.line = 77;
    F.filename = "components.nim";
    var activeElementHEX60gensym18_3019905354 = document.activeElement;
    F.line = 78;
    var compTmpDataHEX60gensym18_3019905355 = render_1644175063(self_3019905339);
    F.line = 79;
    del_2785018394(currentComponentsList_1644168814, 0, chckRange(find_2785018375(currentComponentsList_1644168814[0], self_3019905339), 0, 2147483647));
    F.line = 80;
    addArgIter_1694499355(compTmpDataHEX60gensym18_3019905355, ([100,97,116,97,45] || []).concat(self_3019905339.uniqCompId || []));
    F.line = 84;
    var currentHEX60gensym18_3019905365 = document.querySelector(toJSStr(([91,100,97,116,97,45] || []).concat(self_3019905339.uniqCompId || [],[93] || [])));
    F.line = 85;
    var elementsHEX60gensym18_3019905369 = newSeq_2785018407(0);
    Label1: {
      F.line = 86;
      var tagHEX60gensym18_3019905373 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536882189 = 0;
      F.line = 242;
      var L_536882190 = (compTmpDataHEX60gensym18_3019905355.childNodes).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536882189 < L_536882190)) break Label3;
            F.line = 86;
            F.filename = "components.nim";
            tagHEX60gensym18_3019905373 = compTmpDataHEX60gensym18_3019905355.childNodes[chckIndx(i_536882189, 0, (compTmpDataHEX60gensym18_3019905355.childNodes).length - 1)];
            if (!((currentHEX60gensym18_3019905365 == null))) {
            F.line = 88;
            elementsHEX60gensym18_3019905369.push(currentHEX60gensym18_3019905365);;
            F.line = 89;
            currentHEX60gensym18_3019905365 = currentHEX60gensym18_3019905365.nextSibling;
            }
            
            F.line = 245;
            F.filename = "iterators.nim";
            i_536882189 = addInt(i_536882189, 1);
            if (!(((compTmpDataHEX60gensym18_3019905355.childNodes).length == L_536882190))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/home/taq/.choosenim/toolchains/nim-2.0.2/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      F.line = 91;
      F.filename = "components.nim";
      var iHEX60gensym18_3019905389 = 0;
      F.line = 6;
      F.filename = "iterators_1.nim";
      var colontmp__536882193 = 0;
      F.line = 91;
      F.filename = "components.nim";
      colontmp__536882193 = subInt((elementsHEX60gensym18_3019905369).length, 1);
      F.line = 33;
      F.filename = "iterators_1.nim";
      var res_536882194 = colontmp__536882193;
      Label5: {
        F.line = 34;
          Label6: while (true) {
          if (!(0 <= res_536882194)) break Label6;
            F.line = 91;
            F.filename = "components.nim";
            iHEX60gensym18_3019905389 = res_536882194;
            F.line = 93;
            var elemHEX60gensym18_3019905390 = elementsHEX60gensym18_3019905369[chckIndx(iHEX60gensym18_3019905389, 0, (elementsHEX60gensym18_3019905369).length - 1)];
            F.line = 94;
            var tagHEX60gensym18_3019905391 = compTmpDataHEX60gensym18_3019905355.childNodes[chckIndx(iHEX60gensym18_3019905389, 0, (compTmpDataHEX60gensym18_3019905355.childNodes).length - 1)];
            F.line = 95;
            var parentHEX60gensym18_3019905392 = elemHEX60gensym18_3019905390.parentElement;
            F.line = 96;
            var idxHEX60gensym18_3019905393 = index_2466250824(elemHEX60gensym18_3019905390);
            F.line = 97;
            var lengthHEX60gensym18_3019905397 = (parentHEX60gensym18_3019905392.childNodes).length;
            F.line = 91;
            elemHEX60gensym18_3019905390.remove();
            if ((subInt(lengthHEX60gensym18_3019905397, 1) == idxHEX60gensym18_3019905393)) {
            F.line = 101;
            parentHEX60gensym18_3019905392.appendChild(tagHEX60gensym18_3019905391);
            }
            else {
              F.line = 103;
            parentHEX60gensym18_3019905392.insertBefore(tagHEX60gensym18_3019905391, parentHEX60gensym18_3019905392.childNodes[chckIndx(idxHEX60gensym18_3019905393, 0, (parentHEX60gensym18_3019905392.childNodes).length - 1)]);
            }
            
            F.line = 36;
            F.filename = "iterators_1.nim";
            res_536882194 = subInt(res_536882194, 1);
          }
      };
    };
    if (activeElementHEX60gensym18_3019905354.hasAttribute("id")) {
    F.line = 106;
    F.filename = "components.nim";
    var actElemHEX60gensym18_3019905398 = document.getElementById(activeElementHEX60gensym18_3019905354.id);
    if (!((actElemHEX60gensym18_3019905398 == null))) {
    F.line = 108;
    actElemHEX60gensym18_3019905398.focus();
    if (contains_1644174954(["INPUT", "TEXTAREA"], actElemHEX60gensym18_3019905398.nodeName)) {
    F.line = 111;
    var oldActiveElemHEX60gensym18_3019905500 = activeElementHEX60gensym18_3019905354;
    F.line = 112;
    var currentActiveElemHEX60gensym18_3019905501 = actElemHEX60gensym18_3019905398;
    F.line = 113;
    currentActiveElemHEX60gensym18_3019905501.setSelectionRange(oldActiveElemHEX60gensym18_3019905500.selectionStart, oldActiveElemHEX60gensym18_3019905500.selectionEnd, oldActiveElemHEX60gensym18_3019905500.selectionDirection);
    }
    
    }
    
    }
    
    F.line = 122;
    self_3019905339.updated(self_3019905339, null);
    F.line = 70;
    F.filename = "base24.nim";
    self_3019905339.rendered(self_3019905339, null);
  framePtr = F.prev;

  
}

function reRender_1644175065(self_1644175066) {
  var F = {procname: "renderer.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function reRender_1644175067(self_1644175066) {
  var F = {procname: "renderer.reRender", prev: framePtr, filename: "/home/taq/.nimble/pkgs2/happyx-4.4.2-22ee082546d5dcb63b330a5a4457e375a9c6fdba/happyx/spa/renderer.nim", line: 0};
  framePtr = F;
    F.line = 511;
    F.filename = "jssys.nim";
    chckNilDisp(self_1644175066);
    if (isObj(self_1644175066.m_type, NTI2835350314)) {
    F.line = 371;
    F.filename = "renderer.nim";
    reRender_2835350937(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852127608)) {
    F.line = 371;
    reRender_2852128379(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852127160)) {
    F.line = 371;
    reRender_2852127560(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852126796)) {
    F.line = 371;
    reRender_2852126951(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852127959)) {
    F.line = 371;
    reRender_2852128978(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852128905)) {
    F.line = 371;
    reRender_2852130598(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852128623)) {
    F.line = 371;
    reRender_2852130130(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852128299)) {
    F.line = 371;
    reRender_2852129544(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852129170)) {
    F.line = 371;
    reRender_2852131040(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2835349510)) {
    F.line = 371;
    reRender_2835349636(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2818572395)) {
    F.line = 371;
    reRender_2818572536(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852129501)) {
    F.line = 371;
    reRender_2852131610(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2835349978)) {
    F.line = 371;
    reRender_2835350405(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785017976)) {
    F.line = 371;
    reRender_2785018357(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2902458898)) {
    F.line = 371;
    reRender_2902459491(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2986344453)) {
    F.line = 371;
    reRender_2986344610(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785018683)) {
    F.line = 371;
    reRender_2785019427(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785019912)) {
    F.line = 371;
    reRender_2785021591(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785019395)) {
    F.line = 371;
    reRender_2785020657(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785018975)) {
    F.line = 371;
    reRender_2785019947(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785020420)) {
    F.line = 371;
    reRender_2785022699(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2919235587)) {
    F.line = 371;
    reRender_2919235679(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2801795108)) {
    F.line = 371;
    reRender_2801795193(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2785021112)) {
    F.line = 371;
    reRender_2785023775(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2919236031)) {
    F.line = 371;
    reRender_2919236452(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019904959)) {
    F.line = 371;
    reRender_3019909816(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2902458371)) {
    F.line = 371;
    reRender_2902458620(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2919236317)) {
    F.line = 371;
    reRender_2919237046(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2902459426)) {
    F.line = 371;
    reRender_2902460248(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2885682083)) {
    F.line = 371;
    reRender_2885682939(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2885681500)) {
    F.line = 371;
    reRender_2885681967(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2902459897)) {
    F.line = 371;
    reRender_2902460986(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2885682523)) {
    F.line = 371;
    reRender_2885683663(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2885684108)) {
    F.line = 371;
    reRender_2885686378(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2885683526)) {
    F.line = 371;
    reRender_2885685349(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2885682866)) {
    F.line = 371;
    reRender_2885684261(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852131519)) {
    F.line = 371;
    reRender_2852134874(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019904593)) {
    F.line = 371;
    reRender_3019909161(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852142104)) {
    F.line = 371;
    reRender_2852152337(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852140922)) {
    F.line = 371;
    reRender_2852150467(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019898883)) {
    F.line = 371;
    reRender_3019898973(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3036676831)) {
    F.line = 371;
    reRender_3036677468(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3036676404)) {
    F.line = 371;
    reRender_3036676694(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3036676108)) {
    F.line = 371;
    reRender_3036676169(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3036677258)) {
    F.line = 371;
    reRender_3036678242(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3170893888)) {
    F.line = 371;
    reRender_3170894172(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3103785444)) {
    F.line = 371;
    reRender_3103785838(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3103785060)) {
    F.line = 371;
    reRender_3103785165(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI2852129713)) {
    F.line = 371;
    reRender_2852132021(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019903908)) {
    F.line = 371;
    reRender_3019907895(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019903466)) {
    F.line = 371;
    reRender_3019907114(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019903169)) {
    F.line = 371;
    reRender_3019906613(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3003121668)) {
    F.line = 371;
    reRender_3003122058(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019899883)) {
    F.line = 371;
    reRender_3019900814(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019899464)) {
    F.line = 371;
    reRender_3019900036(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019900738)) {
    F.line = 371;
    reRender_3019902287(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019900397)) {
    F.line = 371;
    reRender_3019901718(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019901807)) {
    F.line = 371;
    reRender_3019904261(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019901520)) {
    F.line = 371;
    reRender_3019903756(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019902813)) {
    F.line = 371;
    reRender_3019905970(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI3019902462)) {
    F.line = 371;
    reRender_3019905338(self_1644175066);
    }
    else {
    if (isObj(self_1644175066.m_type, NTI1644167178)) {
    F.line = 371;
    reRender_1644175065(self_1644175066);
    }
    }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
  framePtr = F.prev;

  
}
